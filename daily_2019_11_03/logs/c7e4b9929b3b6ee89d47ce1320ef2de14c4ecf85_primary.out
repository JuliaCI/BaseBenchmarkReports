cset: moving following pidspec: 29236
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348310865 seconds)
loading group "string"... done (took 0.538264749 seconds)
loading group "linalg"... done (took 7.093149011 seconds)
loading group "parallel"... done (took 0.166896546 seconds)
loading group "find"... done (took 1.115572239 seconds)
loading group "tuple"... done (took 1.840652226 seconds)
loading group "dates"... done (took 1.206186385 seconds)
loading group "micro"... done (took 0.219197349 seconds)
loading group "io"... done (took 0.920947971 seconds)
loading group "scalar"... done (took 36.317703004 seconds)
loading group "sparse"... done (took 11.457108542 seconds)
loading group "broadcast"... done (took 0.91080889 seconds)
loading group "union"... done (took 11.944349848 seconds)
loading group "simd"... done (took 4.278369428 seconds)
loading group "random"... done (took 8.405157852 seconds)
loading group "problem"... done (took 1.879890012 seconds)
loading group "array"... done (took 19.873947264 seconds)
loading group "misc"... done (took 1.629217194 seconds)
loading group "sort"... done (took 3.20226335 seconds)
loading group "collection"... done (took 16.337837162 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483270265 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123214282 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11368916 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118338694 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144585633 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114680459 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122856679 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083305343 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.789673586 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148588869 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118799562 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418060135 seconds)
done (took 5.089990292 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173954053 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0829163 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081749285 seconds)
  done (took 1.309226794 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065244114 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121300336 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066141238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066716743 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067041232 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066222688 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065805276 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066126991 seconds)
  done (took 1.665147073 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07400451 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069525958 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068583606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067993928 seconds)
  done (took 1.42389521 seconds)
done (took 5.79260297 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.772286042 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203506263 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18339943 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398822574 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129448839 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15530232 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63877557 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324517345 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184402092 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081612946 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105051755 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317722243 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108405405 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650699365 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07769871 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092632525 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138816511 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412226059 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067695697 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082648546 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089211315 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128547767 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088628394 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075265392 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145445591 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068435657 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135170449 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080729575 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067139531 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208189854 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172965838 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661345434 seconds)
  done (took 10.228335636 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097598449 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101540658 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069124048 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13716525 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097037197 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070145755 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071478576 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06740591 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08759305 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128398207 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090282375 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101683649 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065570966 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069104061 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084890674 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205421722 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082464069 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081533941 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070709084 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075317982 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119613094 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078852413 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078314492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078131241 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12867484 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180571555 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099940338 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099646534 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069491481 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083662996 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115762751 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126237395 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06627036 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066399019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124783964 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094773276 seconds)
  done (took 4.64850434 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.303410097 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140924697 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090939735 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133090626 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065365006 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107229757 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065424649 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081161425 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202138523 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362050806 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.580535074 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111454194 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10473679 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068246513 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069270649 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066993666 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.363545169 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109302121 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105220894 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081445314 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071325314 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069483688 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342960802 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068240627 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064159607 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068791555 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058324526 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124979012 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068569406 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.927349038 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125166867 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066610679 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1002724 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161592668 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108407346 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086486841 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141122353 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066969134 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063463574 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147807961 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.068514345 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064827551 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082355618 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102512604 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110749268 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064230123 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065726046 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159160766 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063406814 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077423395 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.969268659 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151246903 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077244313 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063841903 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063234477 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.236794104 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082872268 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067019228 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062683536 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178749267 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13201318 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065200144 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064594125 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065863625 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067283835 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349283126 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065491108 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.709708172 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067650564 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074006058 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065929529 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066455595 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06977545 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071699654 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08059527 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.063338405 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061410595 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071961423 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062522488 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062578085 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063360577 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081694621 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.340811833 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06385016 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065709258 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062123163 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082863595 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09411546 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065522012 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06262828 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097324055 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.28005473 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067485569 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108127059 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068741406 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086188081 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071162481 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114286936 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067551913 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.097105442 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068048641 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101938131 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071061912 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100066381 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082199535 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068805994 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397426703 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064632479 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06582975 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065049762 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069547631 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065411137 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068068556 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066922254 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079934401 seconds)
  done (took 20.793220098 seconds)
done (took 38.115958843 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.23746329 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076859001 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076705806 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076900848 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076574217 seconds)
  done (took 1.811644946 seconds)
done (took 3.073897004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120902446 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099733193 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065140699 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096481136 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064811192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100879259 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100396232 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082220144 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100320498 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065142292 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097318305 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064988805 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064940413 seconds)
  done (took 2.390264144 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083254547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084226033 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070138845 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083441848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065026732 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08319456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081875442 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089019653 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081753951 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072976626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0645444 seconds)
  done (took 2.101378022 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082625057 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084556653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070794558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082066157 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066852833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082333791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081574112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086738317 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082470354 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074217231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064628803 seconds)
  done (took 2.096559429 seconds)
done (took 7.82355082 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07876772 seconds)
  done (took 1.30844291 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.601339095 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.177260898 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083084449 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114220569 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186252796 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122032311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.284929073 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088675222 seconds)
  done (took 9.069369657 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102441593 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073203849 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071070651 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070491425 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07185394 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069894947 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069220741 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069512935 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069961348 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073049272 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071656827 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069630625 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073239156 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072916649 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069356707 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072003323 seconds)
  done (took 2.469368583 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093176627 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091845954 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074297527 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075719538 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073185533 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073084832 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075625992 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07472372 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071984742 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073167262 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076144774 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074951438 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072733781 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066020741 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075493277 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076773421 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071842899 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075333084 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07609464 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07568703 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075498061 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065649522 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072768741 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075359364 seconds)
  done (took 3.145147801 seconds)
done (took 17.231228508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116594217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072154686 seconds)
  done (took 1.427455116 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08265109 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08506366 seconds)
  done (took 1.414099517 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086192078 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066851067 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094740843 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080461359 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067097253 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067024799 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091769626 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067256766 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06671444 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067421512 seconds)
  done (took 2.00229406 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07014207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07961503 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072351712 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082774665 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075572068 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065498476 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074583481 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06914591 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079967696 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064577398 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073030658 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084585222 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073212296 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086462597 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074636781 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070744522 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073269917 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069428744 seconds)
  done (took 2.587709793 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06711866 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068010957 seconds)
  done (took 1.386583252 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068728384 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064817321 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068583812 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067992721 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065254103 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064026023 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064951442 seconds)
  done (took 1.71209249 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386424233 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111994323 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.302307351 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071859154 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083893723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254926628 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067339673 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072094253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071591045 seconds)
  done (took 2.713560424 seconds)
done (took 14.496375705 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080160427 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086653708 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09603845 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368911279 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092898244 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066820139 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117221873 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19854525 seconds)
done (took 2.367593622 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218448546 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.627471331 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.393825314 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.200056938 seconds)
  done (took 2.475367414 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333423741 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087647313 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059482434 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068154366 seconds)
  done (took 1.812457185 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066535004 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069414094 seconds)
  done (took 1.397610886 seconds)
done (took 7.165668079 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06740787 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066696677 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064753668 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066505393 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064990162 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064148946 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0835346 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064019602 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06672036 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066732997 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069444267 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067245381 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067185686 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066825578 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064509341 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064292891 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067068133 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06717555 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064275879 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064470978 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0641377 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066716157 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064363412 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064417894 seconds)
  done (took 2.894028955 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084953756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067289972 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072622784 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072645145 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07137953 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072078755 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075773809 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06724755 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072495835 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069279995 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070759261 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070966104 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06854408 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071154348 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068978244 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07143312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072288841 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067387068 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069732385 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071364274 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072002343 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067312984 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071029922 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072123222 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070837151 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0724897 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069101025 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067309593 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072349451 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071291973 seconds)
  done (took 3.406079131 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070945493 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06407605 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065161314 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072009079 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065243047 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065736527 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064651312 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064772697 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065212554 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064154136 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065862198 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064551474 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064281404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065187018 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065310921 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068148481 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079822837 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064669406 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06444588 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065220814 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067876179 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064426715 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064233578 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064228456 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06415213 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064182889 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064724704 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064099347 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065052212 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06451245 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.181056452 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067666641 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064168923 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070944375 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067542432 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064002694 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068234262 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064094425 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065265246 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063957305 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063806781 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064515795 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064456986 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070909242 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064182492 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065940301 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064178593 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065799778 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06498712 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067402132 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063477786 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064294818 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06637304 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065110766 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068372808 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063709329 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064937333 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063667348 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065245507 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063899229 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063526613 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063845141 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066419348 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064796396 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078607539 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070702754 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063730086 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066143835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065001996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066238167 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065817651 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077324435 seconds)
  done (took 6.142781236 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093404383 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088957666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066650205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066297458 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062793251 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065633576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068600513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064917016 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066438721 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07095718 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065096759 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066231225 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0663295 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077748823 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065083896 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06625257 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070947874 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063139755 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064784078 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068382146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065377263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068063255 seconds)
  done (took 2.806112718 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157566537 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070804118 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106768181 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074402928 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069011801 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073861002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070940764 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070881063 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071579166 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069383556 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068907961 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071053534 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06897211 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06927307 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069495434 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069178201 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071315531 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069629227 seconds)
  done (took 2.67106001 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078126218 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066760554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087113097 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067133047 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066658064 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068983261 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072080109 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07536472 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069499048 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066867923 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075557126 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069253288 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069183935 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06672731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06902006 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066921722 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069291572 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06678573 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07525622 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072058459 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071664273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075468078 seconds)
  done (took 2.843073081 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081061295 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06860672 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083862981 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069926366 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063424399 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065177242 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070910084 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067015243 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070961275 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06876908 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066946921 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06511494 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070511196 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066876694 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070208038 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066967738 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06868477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06693221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068351585 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062888641 seconds)
  done (took 2.663815196 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087943218 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069163967 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069287801 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077283371 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068504576 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068747224 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076883177 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068079537 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068178495 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088557219 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067981721 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068125848 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076168265 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073518863 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067950756 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076163365 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076557523 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076141893 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068177187 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067815439 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088044418 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068234714 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076352517 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068470059 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06819688 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067863393 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067951236 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073188196 seconds)
  done (took 3.322173774 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068462022 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06686 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064365598 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065300582 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064958463 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064847692 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064443708 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064516577 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066619565 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064570021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066888896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066866353 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066783536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067263828 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066763355 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066806826 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066830245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064218294 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064347913 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064467596 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066490606 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066596163 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066787183 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064216806 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064314542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06655561 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064199193 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06412662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066756568 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064064479 seconds)
  done (took 3.256304136 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076594732 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073747796 seconds)
  done (took 1.437488975 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06456776 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081796826 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064559728 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071296894 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071549066 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067221543 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074776881 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071203101 seconds)
  done (took 1.849498381 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083225455 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079327962 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068886395 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082414303 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077669667 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083900908 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133625106 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068239565 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073814029 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065450179 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081025585 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06686379 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073208539 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067970773 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073276528 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073650893 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065047866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073529477 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069359635 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065834708 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068583399 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076268927 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069399482 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062548217 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068308545 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088601792 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07802811 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066899735 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069653291 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074261498 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07253461 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061191692 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066806607 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068112077 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064764254 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076590245 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082145626 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069826392 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075273116 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068373697 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078118585 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062655413 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071619178 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073249155 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077057882 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06745192 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068085885 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062186749 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064638061 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069641569 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06240997 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067420228 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061722136 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076419033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070742739 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077702509 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065653685 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06855884 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069802495 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070150486 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074317133 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069125291 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069503504 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06657125 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07669543 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070986767 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076144318 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062169995 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060997593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064929309 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075997001 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088892051 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073095511 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067425639 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067585848 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064056877 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069573533 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067547555 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071960055 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072791733 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066491296 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072410954 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073876826 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066561663 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069208481 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075161137 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064943187 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069592996 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064358411 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083101806 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06514237 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064998873 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064543009 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077080491 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070281739 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066589721 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064990957 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07454356 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061309188 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067381933 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067744977 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067432472 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076826878 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071489518 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072342955 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074924204 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073645356 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066555212 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069134632 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062976597 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067365145 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065413204 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073247085 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060664254 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069730072 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066931872 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066717943 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202333685 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066006933 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067968921 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075090347 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073292398 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066934681 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064191581 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070612783 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067580699 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071726763 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075641095 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066488821 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063437381 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062676138 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070746249 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067485648 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071650657 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073055396 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070898865 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062024063 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065796832 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073609985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076899678 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068416342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068661004 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073565471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068608035 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067145612 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073977566 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069863459 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067002835 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073013147 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068514749 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063139631 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071168668 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069933918 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066399477 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071046074 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071092653 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069493334 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068477996 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066213214 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075388734 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068456994 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06638801 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067678942 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066815019 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07764769 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070020932 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06343834 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064421481 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077031586 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065717035 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067176585 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066500336 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069667952 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068175377 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066071099 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067537119 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069537438 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078725607 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072318333 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06813764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072822813 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078385397 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067324663 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069562361 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067029992 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068330717 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068198816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075739722 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07216628 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072019916 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069448751 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063500077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072305334 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074187679 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065774793 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064725082 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06557369 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070983854 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072238836 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07125082 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06728073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064476949 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067075711 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069878772 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068871486 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066333505 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065477633 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073580531 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064920167 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074197221 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06779785 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07675419 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069786869 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061652668 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069996682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064569093 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072732234 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061835974 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064560134 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065927614 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067771235 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065835079 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068939534 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060916774 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073314709 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074274859 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066946509 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066127713 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066825912 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073381755 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068557635 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070224435 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069504679 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072346621 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076579984 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065428058 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069587817 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.205485313 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067975867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061341549 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072746094 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066431339 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066445916 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066272353 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065334587 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070461719 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077676432 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074384443 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061677164 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070585753 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065751277 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066554506 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063054255 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07242641 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070445913 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068962302 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074697641 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069015026 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068426608 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071522032 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067223565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068631834 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068704206 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071178399 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067862953 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069350388 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06639584 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070500827 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066486908 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064758714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068721387 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067048038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067986966 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072913287 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067130128 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067674634 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069540785 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06872499 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06819168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068051736 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066209842 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070186098 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068331548 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067949115 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069975739 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062571181 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074479601 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066546956 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075005322 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067642335 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064070154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075315453 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069477303 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073786579 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068431442 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068339217 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068980109 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066891648 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06992973 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07415468 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064981867 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07841174 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075284969 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068213058 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069906195 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067286003 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068700938 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065541023 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067887595 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067815144 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06739762 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066479307 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071670738 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069254114 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067042029 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068790944 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067799391 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067031598 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068096359 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061233492 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066102722 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066655315 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066694329 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077478044 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067532574 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066548543 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066113676 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067666688 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065669146 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063522563 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075036348 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076213508 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067500159 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073889319 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065794597 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068592117 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077018392 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060755318 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065197905 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064363933 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064581958 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073912722 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067268562 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076350416 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066547567 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065478435 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063451614 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06736908 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065227574 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061212208 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063963058 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069663378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065284023 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065295065 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067281707 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068958375 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067735125 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076134126 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065652678 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067226636 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06649883 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.19590161 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067133545 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066626811 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070720192 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068519998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065907684 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064502416 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066583571 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067838069 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068645312 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067230909 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06905115 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077364101 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067391392 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07091612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071325938 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062374334 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071426712 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067771009 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067497619 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066548277 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071489726 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070836864 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068533729 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076211556 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068091904 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068108587 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068427544 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065120767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067610111 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067130973 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068011487 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066216181 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06827836 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075374399 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065520569 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070295309 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067529526 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067850172 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074071891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067967629 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07046529 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074520554 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067662606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068676608 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074636786 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07260517 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069973334 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068312156 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068471755 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073220712 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065972852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074789748 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068014705 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068796246 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069080323 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065128559 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067160943 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067573478 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066708381 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074426222 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068275207 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06644523 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066813682 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065545591 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068840339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07119442 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074724433 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069617827 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070187449 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062355322 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063970036 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068471587 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064531259 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068699508 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069462864 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072159626 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069060889 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066700703 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065664829 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075493917 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072177321 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070166785 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064392783 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070049413 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067731472 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068974055 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067995791 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067002035 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068364832 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070703286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068469072 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066193222 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07396235 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070311747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067985154 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068422603 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067981032 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067203866 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062689182 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06761347 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068993258 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072130676 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069326307 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067339 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077738339 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064972379 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067052894 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070243046 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065932846 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070776994 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061641637 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067723313 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067557108 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067264833 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061551613 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065735547 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064191919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0687206 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065950578 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061738673 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076477991 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075049365 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06871545 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064931278 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.198052336 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063179233 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062521023 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067159822 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068726284 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068677361 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077563718 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06586539 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066249204 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062590205 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067446836 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07072547 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071324517 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064985139 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062866848 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066670346 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070645254 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072478734 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066530325 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067886138 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070848268 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069776999 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06584906 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071870338 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06426173 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070922837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080815321 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06848641 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068350483 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074164673 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075438795 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068451118 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062709619 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068182952 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070368671 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067970469 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06855735 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068904932 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082841492 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070413088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06686661 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066153149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069412745 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066403154 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075969215 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068761605 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067853117 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071337483 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068360515 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078151398 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06972553 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074628412 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070304436 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070337357 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067346371 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068326707 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06507878 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066742337 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068318411 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068314713 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073827114 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076555678 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066814325 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078250442 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076422737 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069089776 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063856741 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067472693 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06659934 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062641106 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068016318 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065118153 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065160995 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065643021 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065580242 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068106233 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071866806 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067528625 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068115038 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066510249 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060861701 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068752536 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068836328 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067318522 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063377061 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066669651 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067009089 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070372321 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06998973 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064554856 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068808155 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067989842 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067185749 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062089099 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073234828 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065779125 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068612484 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066079403 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067330575 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068130623 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070668412 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072253763 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067932135 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068980348 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07066949 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069213435 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064222077 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064228544 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071677668 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064454852 seconds)
  done (took 43.064988892 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101425629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064261143 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062126468 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062809921 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075518913 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063692903 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062054665 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064045705 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063653542 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066010062 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062457487 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062403258 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072299518 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079131491 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075400803 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067688476 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062548915 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063733478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062837111 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063625546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07185996 seconds)
  done (took 2.805573912 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074150826 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071463648 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074210314 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076672837 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067784436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071688795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073663102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0715438 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076938817 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068072661 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077161314 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07210816 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068272902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067810355 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067907263 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071788804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07716642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068006799 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071472915 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073706489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071845062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073465222 seconds)
  done (took 2.9392863 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067699255 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066517932 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068646161 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062347011 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066720035 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062301912 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07906058 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064314836 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070148748 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065316635 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065309418 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065342653 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068337918 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061691942 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066485018 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064077547 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109817675 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069979335 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066382227 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067038411 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061783575 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067870045 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062210198 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063109776 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065237573 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070327331 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067765366 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064468561 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066148717 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06573896 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066582252 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064375263 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067744683 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066757275 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065280925 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06547572 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066742023 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066300678 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0617978 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064319177 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067000926 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062570551 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066400149 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067496643 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064527718 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063936819 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067930747 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066057072 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061480187 seconds)
  done (took 4.63032189 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081117085 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110391424 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067731681 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089318071 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081383325 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076031008 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069929652 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089698491 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063833331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065023666 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082585364 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080847911 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066722952 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07099864 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069696997 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066496521 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067826679 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066022341 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070295449 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066004225 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070541886 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072873548 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081419883 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079996296 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070812655 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065830092 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065801357 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070844419 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079355809 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07149943 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071008719 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072006906 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081442834 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071547367 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065251556 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068585035 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082376217 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066414044 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068429877 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063566743 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068215402 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070499094 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072368418 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082421213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066285328 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071270622 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065895947 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0630766 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078833109 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068182295 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07426305 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081055175 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069801152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066214396 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070341828 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081235232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065771748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06462197 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06896589 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078507244 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063649764 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06958719 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079712502 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067655331 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073425277 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080513126 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071446918 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070234802 seconds)
  done (took 6.438153951 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075634734 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073406188 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081823766 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08191856 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072958142 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072994782 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072852022 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072648236 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07274167 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07766436 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073025155 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094147578 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068013258 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075949004 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072880898 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073188757 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073341081 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073044923 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073127039 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072921146 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073327939 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08120286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073203057 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081260853 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099424635 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068159187 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072554227 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073049732 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081521413 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073125309 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080096595 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072995515 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073191442 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081579133 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080692928 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072965124 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065703424 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073138774 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073255664 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072912931 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068218474 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081290334 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072968784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067850265 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073100922 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072906832 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081437236 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08040264 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076027896 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077943036 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073032748 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081394781 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072755223 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073194853 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081324764 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106440334 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081128327 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081308111 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073278914 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081250378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081496387 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08800842 seconds)
  done (took 6.131076637 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086085279 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07637675 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077158213 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0623577 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064588391 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070939837 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065090225 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064595587 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075501212 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075639131 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078100639 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070527399 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074282826 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078194949 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070503883 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073730871 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071177019 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070442301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075669814 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070737241 seconds)
  done (took 2.829249558 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074842046 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084525323 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067417382 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073841278 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069292125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072407717 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069295522 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070019602 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067177086 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069759909 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077025559 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076908834 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067650139 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072966492 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077042909 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072432559 seconds)
  done (took 2.531987127 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076574686 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073472056 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081253648 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066756277 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064690969 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063111572 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066400989 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062202942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062900847 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079137915 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066489962 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069419919 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067131297 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065226815 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064021001 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069536214 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063252508 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064540711 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066464672 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079011554 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077454239 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065277788 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067919289 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066492832 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067004696 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071709678 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065922402 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06426376 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063760299 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066780233 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066863381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070267471 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063724963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064192152 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065168271 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063775429 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066296807 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066513547 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069200549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06603215 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064271375 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065950908 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066004998 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067188007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062440856 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066708197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063237422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068471535 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064102214 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066779227 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065802067 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068638401 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06672311 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073028603 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069274044 seconds)
  done (took 5.07997702 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079168857 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069770639 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062335823 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065569056 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070227206 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068343074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070256272 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068180172 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068302838 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064587683 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068346568 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069061078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06805728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069946741 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068420931 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070062896 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062275566 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068158731 seconds)
  done (took 2.612808041 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07199026 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066547746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073208194 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066953014 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066077408 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068871035 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062431452 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06523472 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064974211 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06647668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066177582 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069010497 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065225222 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068588834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066501732 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066353402 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06920318 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065089555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066173394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062739726 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068666228 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065318351 seconds)
  done (took 2.8464251 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093062393 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082159928 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139962769 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079950045 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083645688 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072110673 seconds)
  done (took 1.927734502 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092594492 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079800896 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067728287 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08879257 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074697288 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068041273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068133483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068235414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076892436 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077636791 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06833486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077080193 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07680623 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076571858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074161509 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073721337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068212488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067763267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066704891 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085119554 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068259955 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076608177 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068360101 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068184798 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068545904 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076326472 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076930867 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077107196 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067904213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076852177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074304917 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06821202 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077070819 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076919108 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070027805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077472955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068548496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085682835 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074781815 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076506082 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069882984 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074307806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077333787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073195777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076903533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068476674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073360388 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068036915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068302184 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087083248 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07423038 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076382095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074358835 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07702423 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076699757 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086930341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077059448 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07647699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074181692 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079170338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076917955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074097604 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075968271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076873676 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074391333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076847988 seconds)
  done (took 6.317001016 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083443851 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086405941 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068878552 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077210985 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076619101 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068472412 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068362633 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068308235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068452828 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068193855 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108572913 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068633083 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076554497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077472322 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068897815 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06824771 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068942949 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076707266 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067849799 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087306518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068467272 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076816176 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076848076 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076422902 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077151495 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074250907 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068257083 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068687397 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068252116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068281557 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07344208 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068858947 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076914853 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06773766 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07682039 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068653567 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068719566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07369683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068636522 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074283476 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07668264 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085392522 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068481634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0683608 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077253606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068198653 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068096523 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067684497 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068075301 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067397518 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076827325 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07670982 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076998219 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076326357 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068256533 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068431843 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068179335 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068170955 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068406836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073941822 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076179593 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068077185 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087803096 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06841444 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067859152 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076497035 seconds)
  done (took 6.22437962 seconds)
done (took 130.930313922 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182833129 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165975198 seconds)
  done (took 1.723835874 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069257475 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098948253 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078443229 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129644382 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067507537 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100672557 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099635298 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07839816 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067061048 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066843575 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066621515 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068982174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132072295 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066862801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066449654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069658508 seconds)
  done (took 2.714497552 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097758084 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158783533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101209931 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065543986 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098155752 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074036183 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065437435 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075727229 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07151072 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065460548 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073571426 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071183927 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065175309 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07097347 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071433074 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073489242 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065714551 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073267593 seconds)
  done (took 2.828558092 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102196414 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092527272 seconds)
  done (took 1.587215724 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160888854 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.112926501 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151986505 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349136084 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.170530696 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.23123254 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12863388 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130013454 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121160296 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125781194 seconds)
  done (took 3.071106416 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097945901 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153477523 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256302901 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115458302 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072896306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096256437 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117175433 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078515856 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081838024 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081459249 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081526459 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076943352 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099525178 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074130308 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073896186 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077231226 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102899744 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072950118 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074609773 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07761463 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099590545 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066486815 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074621907 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072831326 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07831848 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07809804 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065888918 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065638901 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077359616 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07466749 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077439637 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094914643 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077708578 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108712247 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07043955 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109811636 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076998846 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074504329 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074511096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074849723 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079506275 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079357224 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07238233 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076518774 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065795095 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076872082 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065712535 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065834878 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079226652 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067211901 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079249738 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077604629 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108862963 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067042278 seconds)
  done (took 6.036054689 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103382461 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104184136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072178922 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111973095 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100907777 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073020749 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102046342 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093910268 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104220578 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070433701 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06928793 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071186441 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083395399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083973094 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113547812 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105110341 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074268175 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07166644 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104374754 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103583172 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068839102 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0951743 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090278686 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102219471 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068178154 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070838429 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06881264 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070648375 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078125425 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079839724 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070276825 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081499081 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085921246 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079471682 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067700157 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068391607 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068890563 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080890566 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080465652 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080232974 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07881862 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068139509 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068525359 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069961185 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070539636 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068146207 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079956661 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082423387 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079828107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069944308 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070735402 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068894082 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070226419 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08314439 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078769768 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082040094 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08111401 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068673452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068880549 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073094547 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081827157 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080492171 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080297835 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070372812 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079976324 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06903347 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081357129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085981705 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068958293 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070805321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06875144 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069732145 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070269506 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078976691 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079090482 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070272336 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069971425 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068800866 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080910874 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079376166 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068557435 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0779855 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067598255 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068822996 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070334336 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070419255 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078753836 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081340251 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070638069 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068918025 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070046298 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069367222 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067781825 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077688551 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081140797 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079951771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079732809 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069763409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079834482 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079599797 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070161071 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079420592 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067926131 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199214201 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071717949 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081609009 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079374688 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081233454 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070484102 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069103445 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080577028 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082672822 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06965944 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080457934 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082484579 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081526481 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069204036 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082700852 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069868577 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08187098 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070471437 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08119928 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069776912 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081917985 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069849048 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069106068 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070087555 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080796885 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071725128 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069283736 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072088541 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07095597 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081306381 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084660864 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071841365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083589627 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080236274 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070844585 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080225267 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069652905 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080729297 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070519936 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070560565 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068206303 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083890528 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069706375 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069611958 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070274276 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081684913 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06971307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081349394 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079905192 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068810638 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082909334 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082611117 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079807908 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082710908 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071591712 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069671542 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069239697 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070164127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079153385 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081780245 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071509092 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069433988 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079312468 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080852962 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067985479 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079851421 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079673826 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079990024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069028227 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069957253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081775049 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081963509 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07949563 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07933433 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079640978 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069300922 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078757037 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079619535 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068994889 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085946744 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068824695 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084146458 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080676186 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078227667 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079860385 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08194209 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081259958 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081175475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084364513 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068567125 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068416697 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080975465 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068972039 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069641614 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079310697 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069748227 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069729597 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084433611 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069068853 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080846986 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068320016 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079849972 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067236274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069719449 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083333896 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067624332 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202115987 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082829734 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07082827 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08005262 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082555739 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081414554 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069389379 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071984667 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08190275 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081242722 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06952586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069721622 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071440514 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080021613 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079029156 seconds)
  done (took 18.914211662 seconds)
done (took 38.274537309 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211064469 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154402777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.201256801 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120060033 seconds)
  done (took 2.176987464 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124063893 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102567162 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096502347 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065522294 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103691648 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065596958 seconds)
  done (took 1.985914356 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316343315 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213489004 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184477898 seconds)
  done (took 2.137683116 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200999275 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189796663 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395236727 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256871201 seconds)
  done (took 2.57316255 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14571127 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090956374 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067446519 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083303152 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137291378 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163087301 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103095908 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128746273 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078389594 seconds)
  done (took 2.474146366 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14935437 seconds)
done (took 12.921615861 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161733651 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.23534727 seconds)
    (3/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177489806 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.207367853 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225289546 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102900903 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19876896 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062440056 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074803703 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113964653 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08098237 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169956423 seconds)
    (13/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107828127 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.200214741 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071649631 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078011058 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105450659 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.111888515 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074001766 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140317129 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073811034 seconds)
    (22/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081250884 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092485085 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072111126 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11213132 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.149147522 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088974173 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.141286877 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196358585 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089018823 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076970755 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08930639 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.171865925 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.20382486 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.148479758 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075113017 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120732043 seconds)
    (38/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.109838864 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091417419 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079518129 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149630697 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071503809 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088435522 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100559746 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 0.140132847 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120328496 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091296002 seconds)
    (48/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147348847 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159009089 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068012084 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.175873605 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090605739 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087712425 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094186885 seconds)
    (55/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109558586 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069479181 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081935392 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072943348 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086177632 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173353295 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.15862077 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067369185 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07291277 seconds)
    (64/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068137985 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093542545 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067387521 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130542843 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090286924 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06680085 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090274394 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079536939 seconds)
    (72/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196029308 seconds)
    (73/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062445066 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051274981 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077177642 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072293391 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076321458 seconds)
    (78/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075747555 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075563565 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077993812 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071784113 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 0.12719433 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150901977 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050939089 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.066548182 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.25781734 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090695082 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091481617 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.1592331 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.150245559 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.0993034 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.314913264 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074095865 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.221076878 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074755363 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.073592758 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073646113 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051436428 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051912376 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051988827 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080777818 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174879767 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071431844 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068546804 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066401534 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149748335 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114979571 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133380976 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121065391 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07143079 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073323448 seconds)
    (112/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053077203 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053044552 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.151625855 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067402082 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135816732 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051654199 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088835887 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 0.125867575 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198852922 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052531388 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076136268 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066414879 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.135169683 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074122248 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052845519 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072881527 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068018664 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075978195 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071009905 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072853115 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066663325 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051731963 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191717788 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099305785 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065323232 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.153126998 seconds)
    (138/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071469984 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072803189 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109509268 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052486028 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134018514 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065510178 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073260588 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15015812 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094819117 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072734669 seconds)
    (148/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051761557 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065830222 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07435166 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065929896 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149180294 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055068827 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073697811 seconds)
    (155/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061139906 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.136616512 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052097904 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051258988 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.141366015 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.173757898 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094660318 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076003723 seconds)
    (163/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071712956 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052464041 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051076906 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107577154 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074730399 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104054294 seconds)
    (169/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0774329 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065016133 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052340326 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060636327 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149770693 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123386345 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051553506 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.1499393 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067506804 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051226774 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052289276 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100841113 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184151149 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065186529 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096222645 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196415522 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092931906 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071527277 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050947611 seconds)
    (188/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051845309 seconds)
    (189/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069890743 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064758378 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073732558 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089166209 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065277164 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087519077 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.223017762 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067715919 seconds)
    (197/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083207312 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053797383 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05294589 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073949007 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066898706 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078722723 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07727542 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065498176 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086497089 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07290812 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06559598 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111694839 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062208426 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148537737 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089547097 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073572747 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091780795 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075570943 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073122065 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052626547 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069650905 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051853282 seconds)
    (219/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051939533 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0737082 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066264343 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052428738 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052959653 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079964296 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165978974 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.15917133 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06643364 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187278654 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071392081 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05326855 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05372772 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176586234 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074198932 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064614656 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066305589 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071847152 seconds)
    (237/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.0705849 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132863398 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05250059 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067407195 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164901095 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06820198 seconds)
    (243/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052736835 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053596047 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067221021 seconds)
    (246/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088703579 seconds)
    (247/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06188496 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065767502 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16827647 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173827707 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062106076 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065324727 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136666054 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054441348 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072426979 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051643776 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068551272 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102263058 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073143169 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052540757 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051331256 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071967005 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065190145 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066734311 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081339585 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124824761 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065529871 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072862041 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074624099 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065300996 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051830471 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131647524 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06447157 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0715136 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089306263 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067172673 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052244345 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087657078 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073688832 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135351092 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064267153 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051290936 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08038588 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065448796 seconds)
    (285/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051702458 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06410041 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052481347 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065351427 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070759272 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076560197 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072743066 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072102481 seconds)
    (293/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062972081 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065790565 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07317548 seconds)
    (296/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051924321 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071135521 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091448837 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053921017 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069260178 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052075199 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065654886 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051518419 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07073252 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06107213 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066943795 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062526432 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086659593 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066419807 seconds)
  done (took 30.607927408 seconds)
done (took 32.044119875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083498339 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092539143 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074489599 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093142463 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080715681 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076483455 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072666359 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077967829 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079838685 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081799552 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07824532 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054683108 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074022559 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073788541 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074544364 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091184124 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077917288 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072701863 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073145654 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065082789 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072954054 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065701449 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067834245 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054958796 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077945395 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072299164 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072683289 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07435739 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065626876 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065886494 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069502618 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073649128 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065835699 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078583201 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072082842 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073481106 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075006479 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076634215 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067532499 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066636382 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07449325 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065832701 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072572443 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07335199 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071627151 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071568738 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073150952 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078071489 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091712583 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068697376 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074471789 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075843687 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07645181 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072449474 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069404945 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073148608 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070632335 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091795636 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073089603 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068016265 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073906349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073786685 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070935625 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072779061 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072846508 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0751058 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075037357 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07121248 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074522534 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070935978 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065583447 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072958165 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068937237 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06560129 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075937276 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076756487 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064863242 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071613396 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0728156 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071539546 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064870957 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067448757 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067256068 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071207202 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067628565 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054407332 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068938547 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071154493 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064395792 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072799883 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071255723 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071899146 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066864439 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07527345 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064647265 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07058644 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065574272 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065526801 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066914111 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069053292 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065234319 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067342551 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074414183 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067151361 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07102253 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078878892 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065223837 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071501138 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064353729 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065077624 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078984176 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07424036 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065441873 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067642613 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064048459 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071726051 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064375461 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064979026 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064942856 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065192067 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070922021 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06519071 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067345685 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0725849 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077600057 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065104265 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068582618 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067231808 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065350083 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070127283 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064844184 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199259253 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068075724 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062500419 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06843665 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065983499 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072954176 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067934059 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073825554 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06779974 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073648326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07033401 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071339723 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070386357 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065104483 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059011639 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068512575 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06827641 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068647036 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066659326 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06750222 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065701151 seconds)
done (took 12.480744998 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066912286 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145437074 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100802632 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09637873 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086866398 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066738845 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076617358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102824892 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068008461 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103496887 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088255982 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085344051 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113509789 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064920858 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06603439 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069785537 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067501278 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082307829 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101485089 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087050728 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117524753 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066009453 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095292831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090620666 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087999824 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102048785 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066991432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070218801 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069682152 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091948301 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08707594 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069950867 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066527376 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101988877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093489975 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08391073 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066261561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082829419 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066965538 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06622115 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067744775 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098954927 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080323 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081279602 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070037514 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069292045 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06731964 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08469848 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08949098 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07919767 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087313511 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103832843 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069008689 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065901665 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064826841 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086040298 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065504143 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069030741 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066077014 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068127809 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066280382 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069254533 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081580963 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082383385 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069821641 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080873305 seconds)
  done (took 6.863843208 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083406715 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089900458 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083996424 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084051375 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066243693 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066641633 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066767128 seconds)
  done (took 2.068368018 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066899891 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089184334 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089576924 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08992777 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085699461 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087407971 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075966256 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066751774 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081521073 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067913124 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087836812 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102411627 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067487663 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072927288 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091133877 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066649559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090394813 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066501141 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069872212 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090439613 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068785776 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082232685 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07027826 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067192491 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081182528 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06751447 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114077787 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070848643 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068718023 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069516374 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064702347 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107521908 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080254013 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075516955 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066512509 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080914177 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081069355 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065326028 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083553505 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071969977 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080668018 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06753377 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067937516 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065309101 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071054494 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07752551 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06789175 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067418842 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069216616 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086089065 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067605066 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080205255 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06984096 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069053048 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068154502 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070947555 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076384322 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067703267 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086067936 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067982983 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083331344 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083310119 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08020033 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083218579 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068901949 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080498969 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080266125 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069093734 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068458672 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06975173 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082914097 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065184027 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067988658 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077533951 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068434098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089844233 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089533909 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068213432 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076359589 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066864509 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066736465 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066779057 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08923681 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069359255 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066508347 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070667766 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06930485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065144911 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065569067 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070009484 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064916082 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068104967 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06964202 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069430315 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069358623 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082869135 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068882968 seconds)
  done (took 8.816501792 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069433487 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068056987 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069393518 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067702032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068206287 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06815606 seconds)
  done (took 1.962167824 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094741149 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069849901 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081013998 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073221894 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104657367 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087081335 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087536683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079536524 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084417708 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079632932 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087430257 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089088162 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093764342 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073386603 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087437205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072693702 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087675458 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076793554 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078991403 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073547234 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087167963 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07348641 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073541019 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082345334 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076043279 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072762876 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067619969 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079365496 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079096259 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079593115 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073167004 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076116945 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071439761 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079170445 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087225216 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071286169 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072922803 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077820483 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073018804 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07579066 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088896352 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073515289 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074952602 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078034037 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079642264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071763403 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077641048 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076914589 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086967187 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077400965 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077408045 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072065637 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075610826 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077697464 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07096623 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078754502 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077875552 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086894279 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072972749 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071181797 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069557052 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076235122 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07839548 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075639933 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079359018 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077013249 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070789601 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072668125 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073045817 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072107279 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077087288 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069171952 seconds)
  done (took 7.158838487 seconds)
done (took 28.386424807 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543434759 seconds)
  done (took 2.062290204 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60689489 seconds)
  done (took 2.148183828 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.557604927 seconds)
  done (took 8.094012453 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396249486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483449708 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697871943 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131215938 seconds)
  done (took 3.285810186 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.67197084 seconds)
  done (took 2.220922156 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210692987 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196409352 seconds)
  done (took 1.964179299 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377525554 seconds)
  done (took 1.915532151 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110627502 seconds)
  done (took 2.650617729 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265671053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164984795 seconds)
  done (took 1.974066785 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461313678 seconds)
  done (took 2.001526014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.868729426 seconds)
  done (took 6.41268118 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206704767 seconds)
  done (took 1.791971566 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241938404 seconds)
  done (took 1.787449311 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.683932822 seconds)
  done (took 3.229372814 seconds)
done (took 43.086246123 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079802501 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081389856 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081590129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078244528 seconds)
  done (took 1.854073047 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076824628 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073247327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076735174 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073028875 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077187855 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072621314 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074452713 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077099366 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072684478 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073443274 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07254591 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072293352 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074736117 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074726451 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071038939 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075452472 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075967572 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072294934 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075633089 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072544282 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070884723 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074786042 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074852121 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0717025 seconds)
  done (took 3.324726517 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077748032 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072905551 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07480883 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071932291 seconds)
  done (took 1.851291619 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077360164 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092268411 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089359821 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077554579 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092993527 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086470664 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069259754 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068810319 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073098685 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076829319 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067963734 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096348012 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087909878 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07699512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079056391 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066101109 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068451403 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087090641 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076975209 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077684404 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069869278 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076871517 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067985515 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088213301 seconds)
  done (took 3.442542883 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077853392 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103454317 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078191874 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088136591 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090053428 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065780174 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074699698 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.0893138 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122869635 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065590411 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070404975 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065566331 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072792548 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065137156 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076723862 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104741941 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108170312 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068401547 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095865473 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065342937 seconds)
  done (took 3.208196124 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073416578 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069908763 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065856055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06823452 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077807171 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072714191 seconds)
  done (took 1.988022193 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068244804 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067635153 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067595658 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06683328 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07189086 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067563806 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065852421 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067303333 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068044872 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066661868 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066595783 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065843149 seconds)
  done (took 2.367066999 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.179935663 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068860481 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068963905 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06622343 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071125502 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066488441 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079724149 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06838377 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090399754 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066143921 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066482279 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068562545 seconds)
  done (took 2.519919047 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208799012 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076456917 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240301982 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13855066 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112544468 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116450772 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104412595 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114785305 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145167596 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103338425 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16984748 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167686379 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107993144 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138377974 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089252394 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098202188 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157498509 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16485765 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104118368 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16695266 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145539495 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124945914 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147609702 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1014436 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106928138 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122953954 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070977699 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080354141 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173055083 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132681304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148594127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111937 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094131395 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178023444 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172643071 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143519076 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134772402 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083962168 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102597447 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133672202 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200589019 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088215706 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164477283 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246179531 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081410484 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135760596 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120594744 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121336162 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108633063 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090270446 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148493519 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185508727 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14057761 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088049058 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113246715 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117143327 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118134788 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104328007 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185548818 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162549756 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129192688 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071501246 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099254121 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154894955 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133673799 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110572538 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128029701 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094959836 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134685103 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155403112 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119976987 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146053441 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129877284 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089054795 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119768305 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141530688 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129501499 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171643787 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125568932 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072600197 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126461405 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10392592 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081324238 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141267361 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07561354 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175799654 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098471222 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107264366 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113470218 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10921885 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109437301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164397889 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287310645 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104382666 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065822075 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104727807 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121594016 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15096742 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08790784 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110406481 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117640331 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078900649 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142381435 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075317004 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124270564 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075214547 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126043621 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135005992 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075730955 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123006256 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100765215 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10080371 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135480645 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162191729 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089870248 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082278442 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167352935 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122626573 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106076439 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144794919 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15743489 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099477769 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103361524 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150862309 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18264088 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089930542 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164381889 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108100332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084374805 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087663676 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124761978 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113129387 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123196717 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082453439 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119909138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169734155 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074853863 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095425764 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134449993 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079282671 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080395848 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104094166 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101045468 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094717948 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100446345 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105208285 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138233007 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124526096 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246756258 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128827395 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099394034 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172535984 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089457353 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101347986 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104330444 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069606624 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139103996 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159037896 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079488684 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167507645 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126054071 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105909512 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119199372 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084280608 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141845482 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079023495 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070400859 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147134601 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110734467 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111122277 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152241769 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105801638 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128800623 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120958617 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137463817 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134837941 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128598398 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105531362 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088089816 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111791815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126594765 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073013326 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091955623 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080582247 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104269308 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096229494 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083883976 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144021717 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126158236 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101071778 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112014176 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097010335 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148024182 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076695952 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130410098 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119580915 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094711746 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152758627 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152919697 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132872551 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09936111 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145580984 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070206542 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073508362 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233893928 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125758886 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083899361 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084750397 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119163859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148943607 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130834412 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140800116 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113151319 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123426995 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156610777 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069445117 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115622932 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149795134 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123058346 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105145394 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090459653 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099569434 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142968608 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10991555 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185351518 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115114228 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127610041 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153420035 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099800079 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080114641 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103449305 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137095758 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105746823 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146726049 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10033688 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088853939 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11121693 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074464802 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101110444 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128451295 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121089194 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136161472 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120285311 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13424588 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076988752 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117771427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121162145 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123249001 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06408593 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120261642 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162820023 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093838598 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119257285 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154903579 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079680703 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124618052 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32339367 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149104979 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084551465 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112207205 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118773258 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129544637 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121642432 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142036934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109189928 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137137243 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110390942 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086494343 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087856208 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097659963 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105942853 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095204195 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109815601 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114654805 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094876663 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134268546 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104290805 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110049129 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11883336 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097196705 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089713031 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09698467 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175869293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120486769 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173732823 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099759312 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148121602 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166081599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07458378 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079644324 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078475507 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141003601 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083868537 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132529551 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098490935 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106661577 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125669692 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14376069 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095634083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068797661 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109751061 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136131996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112617071 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098203083 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104769738 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163412557 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100361675 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079229125 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114051256 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105007845 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102822238 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319281512 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062030779 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098928505 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076013368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082055671 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12993153 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155671688 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080842248 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103792943 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120560757 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112583809 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12930029 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10367604 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100280964 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115736432 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151616066 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130995648 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091206092 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11411896 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131181372 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159072702 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105841226 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095971641 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174791187 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1534327 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162978061 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089708222 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115004575 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11549118 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108468076 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140690768 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083756943 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165500995 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082202044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137980764 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1048861 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091160383 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131703839 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116101836 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088645167 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149587331 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11869195 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082949024 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078056253 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119076762 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120787165 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106808924 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074976483 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140379985 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072760914 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133021662 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169624394 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081358219 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104452555 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095573074 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079060724 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106527666 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100966078 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088222642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097661416 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169998949 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087038789 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147309008 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138676962 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111708155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134732522 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098212733 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63356031 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076448716 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148958696 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11390258 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17039075 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096094909 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116304465 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107334081 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12123035 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141210094 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10322941 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172448167 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129647314 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114139816 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081145167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100813509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09811622 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085221969 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10101539 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110454073 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111899786 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090478831 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111378184 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11769255 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079575456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09225697 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149161981 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111674263 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138582799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134722664 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08204551 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112973229 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131827353 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078075075 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117495158 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144887024 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102725298 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.35229674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082695348 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106422765 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174210281 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074515143 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1657477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121954998 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111150075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114936686 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116711567 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133419204 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109359598 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123291203 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095031095 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112487525 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113663035 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083165134 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077936051 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106708228 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113601791 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098598169 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099762286 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098891748 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15340153 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072153051 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096987776 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104787363 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147605243 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177559181 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088673331 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083153273 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119905383 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113676224 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114527392 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122051566 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079844384 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08306914 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082842578 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077032703 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109270205 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112560708 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105104217 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112174412 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165930573 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082711675 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220647869 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095445199 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105043157 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069645288 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079196454 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096454837 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098136528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109022926 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09975647 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169641409 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094467066 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090209252 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09353745 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.222219314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082927115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129669486 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112335423 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120935992 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098347405 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062987071 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110143025 seconds)
  done (took 59.161440313 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109524607 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082466316 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096960279 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150152354 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122840916 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212993682 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157514762 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209204969 seconds)
  done (took 2.831873879 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068643787 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094052665 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100159589 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082375683 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066347888 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068616115 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226384286 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080219493 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066471132 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088367863 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078784472 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068565234 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421132034 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066056669 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067167578 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061927408 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067304752 seconds)
  done (took 3.455271096 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370406716 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602740089 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373143963 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073031902 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.919262219 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092731469 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.06765425 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130977398 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074035052 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537103394 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.695973223 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128174242 seconds)
  done (took 18.757764365 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077409385 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071809305 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085599162 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085076349 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074458112 seconds)
  done (took 2.150912236 seconds)
done (took 108.490706388 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081574344 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409867442 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054552315 seconds)
  done (took 2.181905375 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083991291 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085893511 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086897451 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083911456 seconds)
  done (took 2.039131492 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075139242 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077410836 seconds)
  done (took 1.844408615 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227608198 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160485467 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088052636 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083178598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079591366 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079910431 seconds)
  done (took 1.938758599 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07258935 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075950294 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073930299 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077315846 seconds)
  done (took 1.991136212 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076298983 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053454982 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055865991 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056672478 seconds)
  done (took 1.935083527 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087025889 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079642164 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079392394 seconds)
  done (took 1.939428706 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101376482 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085735733 seconds)
  done (took 1.880007521 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083149149 seconds)
  done (took 1.779717211 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09968407 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115264398 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132837663 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111881456 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140159865 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110870547 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087169133 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088450126 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078522083 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08920678 seconds)
  done (took 2.750840774 seconds)
done (took 22.524714287 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078917572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367226865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361914459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08990497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670326361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357150853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990630076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093206129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114942093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068494671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084906334 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651395444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983292445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32474127 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965213284 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323860816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650285305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069187795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068404713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068698156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977057903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068525499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068838681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069074451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649608047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37418409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068957928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324754876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069240084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07069327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35610907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069379442 seconds)
  done (took 16.232157065 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071622958 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118624186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073896853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084814221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071382408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071085877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072233042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069607323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121099417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068895353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085239901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068639278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07250753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069190159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088119608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068838123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069607755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06912516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068810613 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068972291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087842305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069010466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069482907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069196826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069142329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08066292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069566596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069125934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069386406 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070817087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071752915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069997134 seconds)
  done (took 4.129005753 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11532995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127302606 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075019338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104380572 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114095846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071113104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144763191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094438088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129292329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068644723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085821417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068705342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102143476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070026695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088737342 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06951343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069975533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069563899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069288506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069669256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088394114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069019477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069261978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069952725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069706013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082453084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069568998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069572836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069719804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071378958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072496511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069809094 seconds)
  done (took 4.39090606 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073702176 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076291182 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084067687 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084706271 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070395247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073229728 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073542452 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070548097 seconds)
  done (took 2.32067104 seconds)
done (took 28.774247845 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079873299 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070594326 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073591379 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082119022 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074497397 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079937284 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067916171 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075425235 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073233952 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073383221 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075673536 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068454353 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071698986 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068325713 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074380809 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068844014 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080275049 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072714695 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080060493 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080015657 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070429479 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073946519 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075454387 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079994082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080016062 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080104164 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078438915 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073726039 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069909633 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071364563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077603111 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08505067 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069433251 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080401647 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068748374 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06891548 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072146094 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068478325 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080238924 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078415017 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070586988 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077369561 seconds)
  done (took 4.835471597 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08843213 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094855755 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087188363 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063630082 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068012061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06539038 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090214106 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060502249 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060318956 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089028903 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056960804 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060082428 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063515762 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054696054 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060134292 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057260579 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06206297 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05657973 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060083021 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060292092 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089374462 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054792528 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078089498 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063440235 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059770393 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062494548 seconds)
  done (took 3.487400316 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07479583 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085101641 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100478136 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127671198 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104318706 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077611574 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080234188 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093125626 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086203266 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067492128 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071729869 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09432346 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088399103 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074798916 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068335758 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085270188 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082672602 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069997988 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.0748059 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09329694 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086311091 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085468203 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093833883 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082034208 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067786181 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070638522 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072092209 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081979961 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072848762 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077009969 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072677528 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071775081 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070389987 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079894668 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072388738 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070084349 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091090902 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078163523 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07881504 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069202287 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071468909 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069433483 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092145416 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127304954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068477944 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075094336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075982614 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077779859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068456554 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086906139 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079358315 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067803504 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071538713 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068121384 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068216572 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081475836 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070519813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070562719 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077240589 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071332043 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090497434 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072466453 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083840798 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067858649 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075906469 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067813657 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069280656 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067663987 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09363175 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070515609 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109699547 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069616491 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06958624 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077513821 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076255517 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074611031 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069011756 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083920046 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079227673 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071899838 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07763897 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072206987 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071400126 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088756132 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071054114 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070343742 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069837586 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075017238 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071189836 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06988025 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081482326 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06864768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071465903 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085170608 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068000453 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06946529 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074395839 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073074827 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06790112 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079923698 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073565933 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069080198 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077822678 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068236123 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071097524 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080505607 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07435464 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067207388 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07301988 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07448389 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069194516 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070007553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071181165 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070021283 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076774741 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074651385 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072879186 seconds)
  done (took 10.760063035 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162745051 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155861157 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071468912 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147949541 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077523687 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080259641 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149118285 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095517619 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068787144 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069564873 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070312397 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11198937 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107289494 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11735456 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079907436 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068586422 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084702177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115638992 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152018023 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14514049 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084782884 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077769529 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071192226 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069842579 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071468884 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079596614 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086855271 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077748377 seconds)
  done (took 4.503703428 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08223671 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098318112 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074809755 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09026832 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093269887 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069027815 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071274717 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070635186 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081699757 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080579932 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068621327 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07427059 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075590577 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072102561 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069353008 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075525798 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07594981 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070045624 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071861107 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07360432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078402979 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082032135 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072572058 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068070733 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074007973 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068098304 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065773306 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086280473 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069364655 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091311442 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067025254 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075730058 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082630178 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069574551 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068576839 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068670457 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06821587 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068604418 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070121262 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067095057 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067149122 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058315437 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06739548 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081023555 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075057014 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056994957 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073280711 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07349945 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073905785 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066160965 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071245478 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071530201 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071777091 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075569394 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073340456 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073749484 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069891893 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074775492 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076359698 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068414481 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065368392 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067213103 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072829905 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067408558 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076307346 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072614414 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06673934 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068093786 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069895482 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074655913 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068315629 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071727806 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066614754 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070222203 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073015681 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069901457 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069576326 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06685925 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068018209 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068456279 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05625328 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06813548 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053964997 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070948366 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066518436 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067118255 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068055581 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073264027 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081247013 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070017044 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074011047 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06920289 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067410654 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071653083 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061043065 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070934092 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083501257 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083945015 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06827355 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066406436 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0824385 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072858516 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067246446 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0570731 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076214373 seconds)
  done (took 9.307240505 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089975692 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070688513 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084441559 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092436289 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088020529 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076089837 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07716671 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069895341 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083478311 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074406939 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077644675 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069243511 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078191852 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078181242 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07112352 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07784557 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073105191 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083903986 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083319766 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06935293 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076719326 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081309231 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090451862 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081313316 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079371315 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080743144 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090014333 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072841546 seconds)
  done (took 3.983963548 seconds)
done (took 38.586747867 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.789657717 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.967232504 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.790534623 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.176141383 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.868639386 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.977011198 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.842668122 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.806396745 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.145000357 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.826167358 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.06229441 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.845035292 seconds)
done (took 65.825391724 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.851908021 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.931338114 seconds)
    (2/2) benchmarking "String"...
    done (took 2.057055527 seconds)
  done (took 5.717005484 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.09000749 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.369271121 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.020458358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.784529947 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.791499887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.013153325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.588776467 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.318743335 seconds)
  done (took 30.613932919 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.899042518 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.009779966 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.520329958 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.49477351 seconds)
  done (took 15.696634828 seconds)
done (took 63.772092637 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.785373275 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.835863177 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.797746312 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.77037112 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.845584754 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.807276184 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.193542168 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.027633526 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.787256955 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.778241127 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.787935006 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.221920982 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.795952139 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.084895269 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.789232731 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.790870013 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.81643116 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.290784385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.944202969 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.802674171 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.807441202 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.846741106 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.7964713 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.92197535 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.844186803 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.796353021 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.246230459 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.795108438 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.411417228 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.796144641 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.820342257 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.294142536 seconds)
  done (took 206.057504698 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.789754019 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.838961605 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.869056251 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.792339319 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.270140559 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.975659794 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.909092969 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.293597686 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.794971749 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.815394493 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.922078164 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.790451618 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.947651077 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.738754416 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.819802425 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.790080164 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.004751179 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.944148026 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.824604331 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.959599 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.814589233 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.864662774 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.829539231 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.90464025 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.808678953 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.893580437 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.8070877 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.82089614 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.986676851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.987173084 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.802211079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.819229914 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.99346428 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.670884336 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.804269506 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.818362627 seconds)
  done (took 170.449370088 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.955560354 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.79540819 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.79572049 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.794447098 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.801044453 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.794403341 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.925180665 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.924251393 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.259528718 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.194897736 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.848572864 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614232252 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.793946702 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862341973 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.808940322 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.795567588 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.810174796 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.821903295 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.794872392 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795943985 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.939261502 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.808518964 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.807611069 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.803265674 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.796864161 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801701571 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.166088195 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797486391 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802205146 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.03952917 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.797197971 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.796187954 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.730843808 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.862965367 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.798009637 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.877710571 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.796085344 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801213241 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.794611025 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.013764324 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795978504 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.793801306 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.796395834 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.967833091 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.794743561 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.925468675 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.795003304 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.287875248 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.795431992 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.794871961 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.081539791 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.696338761 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.801380012 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.799513204 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.798610199 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.802293174 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.80029275 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.79885862 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.812686899 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.623345182 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.878928516 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.801013387 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.802099407 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804887327 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.799995472 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.010795572 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.801632239 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.906723266 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.855903001 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.021119178 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922109442 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.803123673 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.867712098 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.895482682 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.800456566 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.8003381 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.800685247 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.801337545 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.801146305 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.881160097 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.800997484 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.951522065 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.809678654 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.801745637 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.853837068 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.870925303 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.804158168 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68880986 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.805020232 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.801213427 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.10503436 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.87094194 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.802824283 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.801364194 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800860159 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.935219696 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.927918687 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.567571818 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.805548664 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.646362761 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.806112934 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.95195181 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.802407053 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.98651601 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.807007357 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8845064 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.807183542 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.803624003 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.805245643 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.801908057 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.835300705 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.80216069 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.864187835 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.803024911 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.172632687 seconds)
  done (took 405.216133287 seconds)
done (took 785.460603095 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.495024201 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.451683364 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.568339019 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.477174209 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.448522693 seconds)
  done (took 14.1836379 seconds)
done (took 15.927203801 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.893390673 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.895966036 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827171983 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.893638879 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.824247141 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.891163562 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.874722876 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.832198787 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857846754 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.829527149 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.861528481 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.829790239 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.816472512 seconds)
  done (took 25.872579975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.040124301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.038063861 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.879452386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.034886147 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.855935807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.070882323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.968368697 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.95942121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.959394071 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.822358913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.8195605 seconds)
  done (took 23.192922471 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.048881268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.036970523 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.88755891 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.044864304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.858181245 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.04032644 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.973524702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.959269841 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.958746428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.823496139 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.820653548 seconds)
  done (took 23.198199346 seconds)
done (took 74.009450648 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.814130704 seconds)
  done (took 3.559894063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.836611543 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.974520845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.819977879 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.816869933 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.812858255 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.813672601 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.817428279 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.814913819 seconds)
  done (took 16.456728049 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.814998736 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.816114422 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.81188945 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.81248664 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.816795769 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.814441981 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.812825818 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.813277257 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.812908901 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.815559259 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.815783373 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.812134794 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.815359467 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.817556774 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.811882674 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.814321096 seconds)
  done (took 30.773669759 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.815510143 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.815213319 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.813436757 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.812542843 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.812803431 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.813045524 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.813474031 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.813992894 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.812565311 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.813164869 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.814143851 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.81427035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.813893723 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.813665192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.813382002 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.815300297 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.814798224 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.81547718 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.820061547 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.814146031 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.815655546 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.81365203 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.815189201 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.823654522 seconds)
  done (took 45.301904883 seconds)
done (took 97.837426639 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.715030128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.202259777 seconds)
  done (took 8.665080799 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.819110975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.817230055 seconds)
  done (took 5.420561594 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.815378249 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.816711236 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.817208106 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.814928468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.817278941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.816474847 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.817777593 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.8196097 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.818371852 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.817290842 seconds)
  done (took 19.919575219 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.819092309 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.818033725 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.816255272 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.819649854 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.818397321 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.814242947 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.81704411 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.818405414 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.817092652 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.815897322 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.820683588 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.816686401 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.817769378 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.814799725 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.820484221 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.815750038 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.816738602 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.815574741 seconds)
  done (took 34.460865603 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.818448662 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.820369502 seconds)
  done (took 5.387853547 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.816081417 seconds)
    (2/7) benchmarking "second"...
    done (took 1.816602556 seconds)
    (3/7) benchmarking "month"...
    done (took 1.816904807 seconds)
    (4/7) benchmarking "year"...
    done (took 1.815847553 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.815761694 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.816504423 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.818950101 seconds)
  done (took 14.466603333 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.820446746 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.97465492 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.046434479 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.481659346 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.820339757 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.822399396 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.774019761 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.824113325 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.824330645 seconds)
  done (took 20.139295991 seconds)
done (took 110.207221202 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.656094453 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.814655664 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.162598762 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.868502551 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.861474231 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.156876966 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.859353336 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.03434232 seconds)
done (took 43.16423076 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.824050326 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.357319854 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.385824507 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.117648277 seconds)
  done (took 12.609604581 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.796337712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.33318667 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.845157036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.408999378 seconds)
  done (took 20.154083188 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.178228949 seconds)
    (2/2) benchmarking "read"...
    done (took 2.181814278 seconds)
  done (took 6.11402528 seconds)
done (took 47.4512964 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818078798 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.81801367 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.813881471 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.819290645 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.814798646 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.815311237 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.81695607 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.815849008 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.819730933 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.817577074 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.817872911 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.818744848 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.817685183 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819552697 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817169698 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81557091 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.818623614 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820273682 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.815878799 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816898008 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816751881 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819290036 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.817852094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.814985498 seconds)
  done (took 45.365527384 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.820628734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.818715266 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.819776111 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.820968279 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.817523612 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.820224252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.821032143 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.817607382 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.821709439 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.818834475 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815074755 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.815921825 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.818825424 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.815589607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819473528 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.816758974 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.819479719 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815865418 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818469074 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.818342939 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.81964063 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815728816 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.815638578 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819135585 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.818481105 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819176078 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.819334281 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.817097317 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819633846 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.816090833 seconds)
  done (took 56.303607368 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.825139438 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.827891376 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.819186032 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.819368152 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.819330882 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.819491639 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.819646935 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.819920178 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.819139806 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.819174173 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.822012986 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.822110924 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.819895087 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.819607351 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.819703925 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.819861632 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.821188827 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.820578116 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.820033272 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.81956319 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.820015554 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.82265398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.819727765 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.820229221 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.820563645 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.82033164 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.819803053 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.821675322 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.821273217 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.820646615 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.820830801 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.821572012 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.821319739 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.82077347 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.821260856 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.821247076 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.828172161 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.829029226 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.824184373 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.822099408 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.823819558 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.823786725 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.822892769 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.82324609 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.822303402 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.822342609 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.822820717 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.824621157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.824792641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.825650967 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.822952636 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.822349169 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.823829988 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.822736217 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.823668842 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.824027753 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.823375017 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.82197895 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.823346161 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.823112021 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.824512052 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.823380161 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.822910156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.823252134 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.822559691 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.824128805 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.823039956 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.82424946 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.823626826 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.822970044 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.823088584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.824891486 seconds)
  done (took 132.955384497 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.822667392 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.82153933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.821015458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.820739369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822217265 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.823750732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.821986729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823782609 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821277815 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.824924302 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824738028 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.821758502 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821050031 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824123857 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825072284 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.821034522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.822899072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820594893 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.824430296 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823929524 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825065139 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.820294443 seconds)
  done (took 41.85343904 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822474197 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.823324324 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.821839969 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.824814415 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821464508 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825676338 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824793922 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824485554 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828897163 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823470696 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823732574 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828281596 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824398788 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826158885 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825067958 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.825754731 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828299237 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.824044822 seconds)
  done (took 34.598550728 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.8287324 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.826780136 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.828364967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.825662754 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.826015178 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.83020966 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825811494 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.82917906 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.828484133 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.827809392 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.828857729 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83017692 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.829159855 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826639658 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82878058 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.827622509 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.831239359 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824814955 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829600951 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826016256 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.826802323 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82934027 seconds)
  done (took 41.974198401 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829414638 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828767543 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.826503984 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.827835311 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.828677248 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.829757367 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.830246367 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.827078193 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.829933426 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.829989192 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829455287 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.829898952 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.827985828 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830759033 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.828061493 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830640285 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83200284 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829150729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832091564 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.829460665 seconds)
  done (took 38.350933715 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828938485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830109072 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82889183 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829249474 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828994689 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829949913 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828256476 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.828999029 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82878488 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830231965 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830076109 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828621794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830097302 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.830301745 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828737605 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830231212 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830927471 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82802785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826472057 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826963659 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827305754 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82905608 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828021766 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82752911 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828830071 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829455984 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828171476 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.831623857 seconds)
  done (took 52.977215038 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832230004 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831560069 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.828493159 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.831961172 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.828870216 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.829303535 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.830624711 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.830348159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.832405008 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.832485942 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.831897324 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.832531963 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.833564507 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.831757869 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.833819761 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.833698632 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833529859 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.831173631 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831345634 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832034646 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.835719503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834585264 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.834590246 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.831991577 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831422 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.835639055 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832154237 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.832649777 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834689551 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.832883354 seconds)
  done (took 56.732301421 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.85485857 seconds)
    (2/2) benchmarking "in"...
    done (took 1.852950965 seconds)
  done (took 5.471315594 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.832432698 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835943078 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.836994361 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.832937646 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.833035515 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.835840368 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.835564894 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832435738 seconds)
  done (took 16.440403957 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.832497055 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.835874933 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.835748472 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.835550923 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.834410995 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.833105135 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.838794796 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.836577383 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.834043707 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.834627872 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.840574554 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.84229372 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.836439899 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833845923 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.832725418 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835283414 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.836834943 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.834399819 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.834063255 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.835111553 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.834515067 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.833921911 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.835821924 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.834119475 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.835078986 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.844170867 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.83782176 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.836295791 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.835271346 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.837306878 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.834003204 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.83412141 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.835908918 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.834827668 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.837476062 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.836520574 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842780428 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.835853989 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.840205959 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.836270879 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.838363253 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.835254883 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.835786633 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.837272442 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837245886 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.834981084 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.838286853 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.834954456 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.834573778 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.838713049 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.843993523 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.83630348 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.834724792 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.838860951 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.837069803 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.842094228 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.836718911 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.838285575 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.844481233 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.844592127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.847519478 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.842785127 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837259886 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.835833975 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845980015 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.860999872 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841977934 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.835363853 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.837087493 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.838552936 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.843260621 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.850637083 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.845625846 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.837028869 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83782425 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.8387005 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.83731305 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.839242865 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843274517 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.83916069 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.836872998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837780888 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846531736 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860072831 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.837164008 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.837536315 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.837938324 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.838211362 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.837724247 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847169649 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.837660703 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.840274904 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.83682424 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.837581487 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.838141132 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.838176825 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.836701153 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.839283433 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.838553782 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.841098301 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.839110946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.841942548 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.847842036 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.838387218 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.838092818 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.844457707 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.841491227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837836325 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.84455925 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.841183277 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838779323 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.83920353 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.843370039 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.839104311 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84273572 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.847928912 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.839574688 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.839996177 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.839675324 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.842800732 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.849325479 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.866018472 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.841513419 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.842010462 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.844645819 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.852420281 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.839690515 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.842365562 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.841701201 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.838812588 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.839305407 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.840939307 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.842403896 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.840429355 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.839930636 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841769207 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.839657884 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.842182771 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.839663835 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.84128902 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.841452919 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.841648038 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.842180068 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.84269661 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.84182098 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.842584065 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.84666457 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.840552848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.841787672 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.843554055 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.841472674 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.843858278 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.841638264 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.842015667 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.842355369 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.841122221 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.839590983 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.842647785 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8439465 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.843447449 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.84372259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.844137894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845074273 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.842958479 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.84517244 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.842155233 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.841515068 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.843692023 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.84331629 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.8422218 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.844291185 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.841022348 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.844380338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.850966086 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.844526333 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.842549647 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.845017782 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.84289385 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842562996 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843606885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.845655308 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.850719504 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.842772136 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.848180349 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.843619298 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.842196945 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.84613779 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.84325182 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.841965851 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843469994 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.84605196 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.854080478 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.856221755 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851839159 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.843938885 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.850531855 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.845080532 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.849020578 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.847998639 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.845588576 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.84673591 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.844281961 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.843879949 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.843327391 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.844925471 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.844132492 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.842885863 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.846011437 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.845640484 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.84470672 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.8475871 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.844560076 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.845892182 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.843088812 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.847779494 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.844772924 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.844008993 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.843426838 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.843033561 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.843905557 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.84694374 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.845822202 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.850865003 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.844570359 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846782075 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.846122247 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.845117021 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.843859881 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.848273362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.848374196 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.845808699 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.853020592 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.844776112 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.845885725 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.852367687 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.844862117 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.845470162 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.848022195 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.847388061 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.845725697 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.848961562 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.855813985 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.848120766 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.847051032 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.845972221 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846655856 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.848123599 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.852751351 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.845459956 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.846266006 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.848947872 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.847367091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.845917248 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.847152338 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.847120418 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.847902951 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849758094 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.849338519 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.849009808 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.848938995 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.847345197 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.847942969 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.847414459 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.850171647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.855505942 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.851842329 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.848159064 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.848830745 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.849367377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.854477563 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.848448329 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.848368113 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.846330263 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.859956256 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.85663508 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853603202 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.849198076 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.850721543 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.852894475 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.849236242 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.853368952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.848619692 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.848304934 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.847416684 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.848036545 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.847757312 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849028302 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.85104708 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.849472728 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.84892753 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.856097659 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.851342245 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.847612711 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.848482883 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.849632392 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.85065448 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.848195304 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.851711511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.851328779 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.850154722 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.848419903 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.848529738 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854732237 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849265971 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.849481834 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.849318238 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.84849464 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.849204648 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.851318449 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.849498556 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.852565204 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.858540061 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.852343428 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.859798318 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.852593232 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858924937 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.850456626 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.853823554 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.859280734 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.849287019 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.849638668 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.850721566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.850760856 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8564178 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.851281338 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.851347047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.854694 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.851223705 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.851908745 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.852478563 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.849709304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.853534384 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.851075396 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.857866238 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.851981981 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.854927702 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.853277692 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.85084171 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.851786614 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.853521553 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.851281608 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.854816506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.851875046 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.852297821 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.851637653 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.853065757 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.853719051 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.851745726 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.853738656 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.851345474 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.855128331 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.859528964 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.853005767 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.857205231 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.854500746 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.86016093 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.853501949 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.858999506 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.852393152 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.852573085 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.852597412 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.85464827 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.855128229 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.852932636 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.854193205 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.853833476 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.853242002 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.859219659 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.853534217 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.8542867 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.854443509 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.853617772 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.853651751 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863074049 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877639534 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.856662954 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.860319311 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.852507931 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.855559671 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.858637125 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.854366734 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.852890851 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.855242352 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865039499 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.865368667 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.85294405 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.853882522 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.8539077 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.854685888 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.85644545 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.856917443 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.853408982 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.857157047 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.854951364 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.854462145 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858124598 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.856045898 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.854530628 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854595164 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.855885115 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.864984247 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.85513033 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.85514573 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.85478522 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.85688112 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.855996873 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.854836583 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.855323666 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.855364255 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.857291714 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.857142035 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863376945 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.860901688 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.857608263 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.853937484 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.855688343 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.855477213 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.857068135 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855503936 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.856853109 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.855888228 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.857094077 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.856193354 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.855998013 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.856230572 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.858640274 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.855699401 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.859224975 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858684718 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.864445884 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.856295603 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.855973452 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.858331819 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.859548055 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.855112389 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.856696379 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.863456919 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.85996543 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.867561106 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.866020602 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.862330084 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.856624538 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.859468281 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.865174443 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.856278394 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.857742496 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.856155658 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.857725594 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.857434411 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.86049301 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857866144 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.862558026 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.85689773 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.856938296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.864567137 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.858414678 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.858070718 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.858762654 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.861914479 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.857661427 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.856932973 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.860519936 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.85668339 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.863906289 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.858378825 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859668111 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.859609917 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.856524445 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.85927294 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.861472437 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.861144791 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.860194809 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.857284089 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.859242667 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.858495209 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.860844343 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.858297288 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.858436481 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.857339304 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.861667276 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.86585795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.858399183 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.859847677 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.858060688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.859251158 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.859636923 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.861738048 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.858934906 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.858495992 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.859824869 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.861036967 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.859290598 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.861658104 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.858279259 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.860002123 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.86399022 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.859472037 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862333076 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.870834226 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.869330699 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.859323672 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.859795029 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.859262326 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.862960162 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.859258205 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.860257904 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.859887369 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.861623913 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.861899474 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.858917656 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.862175892 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.863938207 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.87606364 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.863374897 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.859165793 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.860618564 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864112818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.863805043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.861032038 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.864728035 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.863355281 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.863218159 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.870167939 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.861685221 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.867574853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.862071755 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.863691637 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.867504875 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.864167731 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.870395253 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.863431574 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.86286526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.861525555 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.866556815 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.877337565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.86362437 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.870848654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.891340983 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.862663549 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.863156912 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.862721132 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862160545 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.862892363 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.863463192 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.862371566 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.864420058 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.864355547 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.862534368 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.863087673 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.868203225 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.86399848 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.865573744 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.865283676 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.86224153 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.864816884 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.86260448 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.863079849 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.865931224 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.862937145 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.862937673 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.864255036 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.863071334 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876585623 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.87395568 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.865115764 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.862832749 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.862679169 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.867483196 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.866223391 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875244658 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.874398759 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.864217278 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.86436275 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.864963517 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.864672785 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.863014894 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.864864161 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.863089853 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864907584 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.863741799 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.878368225 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.873386846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.869243124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.864482825 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.865544936 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.867449256 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.866489318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.864723393 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.865462584 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.866414743 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.864867717 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.869269304 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.867788048 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.867122413 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.868920849 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.877118406 seconds)
  done (took 1105.226012715 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.864546778 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.865228139 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864745184 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.865399689 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864836515 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.865379789 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.867095742 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.866176147 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.866206346 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.865931868 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.865905825 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865746446 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.865747497 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.866050346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865410755 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866107265 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866237201 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.86714517 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.867041585 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86614476 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.866240385 seconds)
  done (took 40.981855736 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.869715581 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.865724611 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.865833164 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.868909962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.867602361 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.868460385 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.866947277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869512429 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868812082 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866744738 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.869294489 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869670673 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.867272093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.867211552 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86686031 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.868722663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.869429168 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8695015 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.870513473 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.868167892 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8701074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.868226512 seconds)
  done (took 42.902298629 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.869014981 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.868483862 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8667256 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.868214452 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.87069679 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.868321359 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.868168643 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.871004423 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.870363449 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.868415279 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.868012872 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.868747174 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.876796477 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.875927777 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.87000749 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.871973666 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.015398744 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.868742476 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.870061279 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.869209493 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.867262657 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.874392371 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.86940136 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.86835412 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.8679878 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.869156329 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.872360032 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.872044684 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.870059486 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.870011571 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.874241315 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.871397668 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.869444802 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.871565395 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.868629779 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.870110381 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.876782234 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.871911404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.869432716 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.87308732 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.879543486 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.89350902 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.870614186 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.876441319 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.874129895 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.873071857 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.874054144 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.878748534 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.869001014 seconds)
  done (took 93.652030475 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.872331597 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.87440053 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.872283551 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.872603664 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.87451798 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.873378361 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.87430903 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.873929785 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.870795173 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.871732928 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.873445888 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.871576684 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.871102605 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.873086898 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.872714297 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.870869537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.870877085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.870676592 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.871483185 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.871660111 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.870765207 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.87344765 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.874168345 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.873635412 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.874306553 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.87200294 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.872902995 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.873953368 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.872771782 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.87151658 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.874103373 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.873809553 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.874489227 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.871673744 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87196923 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.874271454 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.87495245 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.87296275 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.874772085 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.873231962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.875677144 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.876291697 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.875035737 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.875409514 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.873436333 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.872513817 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.872882552 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.873037531 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.873087704 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.875575081 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.876206786 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.873350588 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.875233792 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.873624622 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.876314434 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.876110185 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.873739917 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.873398384 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.876218682 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.873659003 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.872699902 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.876598088 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.873398286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.875877924 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.876086802 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.873685183 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.874471507 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.877213012 seconds)
  done (took 129.208842048 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.874250406 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.875363993 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874588332 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874711556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.875289847 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.875101068 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.873976644 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.875246312 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.87432745 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.875140258 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.875263964 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.877166154 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.875238224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.877362515 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.87500635 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.875816918 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.874618383 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876267809 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876897478 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876020751 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.875373513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.875587052 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.875946252 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.875093772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.875218983 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.875475757 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.87532301 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.876938198 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876049096 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.875917039 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.875180256 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.876290916 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.875773948 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.876373463 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.877272058 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.877669606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.876131153 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877777196 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.877493106 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.876250708 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.877057702 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877785567 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877412991 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.876979852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876544807 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.877528836 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.876156162 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.877219661 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.879294033 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.877027416 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.876726121 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.878594581 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.876819901 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.877213 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.877053411 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.879175279 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877666918 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.878423591 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877238452 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.877665651 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.877382774 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.880003128 seconds)
  done (took 118.145738899 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.878918707 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87899954 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.877030984 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.877420202 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.879592476 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.877322652 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.879763819 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.879695336 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.879467025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.879907718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.879844973 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.878898118 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877504784 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88054233 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.87763922 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878254639 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.878104936 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.877756253 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.881370127 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.879280182 seconds)
  done (took 39.386478549 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.878370895 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.88283927 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.879285466 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.8787305 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.880531054 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.878824751 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.881400584 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883211601 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.878941888 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881880261 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.881473025 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.882066574 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878891771 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.879104883 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.882673226 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.879400061 seconds)
  done (took 31.898167494 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.878792181 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.882741126 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.879077484 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.879739538 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.880040489 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.87986734 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.88144334 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.879639419 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.880163931 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.882807286 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.882861661 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.882186522 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.88213195 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.879604537 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.880348362 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.882543968 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.879761624 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.879880491 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.881636081 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.881347478 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.881591566 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.880596507 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.884300513 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.883456568 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.881318108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.882019714 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.880553932 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.879885314 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.881409742 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.883847049 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.88164852 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.882660835 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.881675148 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.881683304 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.882432541 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.881665706 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.883753756 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.884035541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.884674078 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.884663103 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.883011844 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.881885966 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.884026675 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.883494687 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.881387953 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.88393271 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.883089206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.883239771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.881694906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.882400944 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.884855515 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.883321086 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.884290437 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.885454334 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.88438532 seconds)
  done (took 105.327103548 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.88539059 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.884496515 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.882324155 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.885410775 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.884517838 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.882361788 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.88546853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.882148429 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88237585 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.884683504 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.883107867 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.886030774 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88218289 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.885759676 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.883373149 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.885997388 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.882345974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.88369357 seconds)
  done (took 35.726164701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.883251057 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.883517199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.885564856 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.88278288 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.883222422 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.886093316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.883917677 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.886894136 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885948214 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.884239878 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883524925 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.88675119 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885604062 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.886696777 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.885350171 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.884729017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.886856421 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.887143469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.883844607 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885653314 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.886972238 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.887087257 seconds)
  done (took 43.290783248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.883642697 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.883838797 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.900131352 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.904141506 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.906882707 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.918533683 seconds)
  done (took 13.21270763 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885524175 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88765613 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.88563422 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889338672 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887384231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885801036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884789407 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884487808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886903495 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885167971 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885906758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887821539 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888083189 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884945789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887559708 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888429961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886419912 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8854949 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886823617 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888906538 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885475066 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889094587 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886217024 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88635176 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885574042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88650639 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889126739 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886472264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885596237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889397072 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889080352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886260946 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888720187 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886568448 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890205176 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88865133 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887685612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891222196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889360031 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887164268 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.890434217 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888748133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888810774 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888055576 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889271338 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887317434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886988138 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888006302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886655682 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890238952 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889805624 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887768032 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890201361 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890426278 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891217176 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891593395 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887603493 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889223461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889933778 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888217311 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888722991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890359211 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888654413 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889134536 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890930932 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888802471 seconds)
  done (took 126.422891203 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887529681 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.888008671 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888454845 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890075015 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889489137 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890083521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888307221 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890073874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889410674 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888755934 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891649888 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889734254 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889891062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890015259 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889426261 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889928737 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888800526 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889285354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889760645 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893721511 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888029153 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889370474 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889957505 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889689096 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890430837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892269763 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890661177 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890219027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889651587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890702973 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890162234 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890929875 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890831775 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.890351217 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891332295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891124571 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889833708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890337672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891872403 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894075726 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891527081 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893844531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891034864 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891025583 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890678361 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89057351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890983785 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892165814 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891350433 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891265265 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893512184 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892996181 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892022291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890481588 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891148299 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891543521 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8919739 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89171826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891724472 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893269747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892303062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892034449 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893841816 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891877265 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891233463 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89243542 seconds)
  done (took 126.615341963 seconds)
done (took 2576.767762516 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.882845157 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.957827201 seconds)
  done (took 15.662963591 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.061945532 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.015282651 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.89419505 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.913315361 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.894341742 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.8974335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.888572545 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.895989422 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.893708548 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.893881134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.894420915 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.082441668 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.910112764 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.894678216 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.894675677 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.986561361 seconds)
  done (took 52.751573395 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.896256363 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.898378576 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.90778732 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.900364868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.898792562 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.910239485 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.933355833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.900692477 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.933518039 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.911482722 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.971356174 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.907002367 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.897917973 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.94873773 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.911817398 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.912264722 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.989505932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.976007119 seconds)
  done (took 36.430801614 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.976802534 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.921588999 seconds)
  done (took 10.739002248 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.90528294 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.909042876 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.923750249 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.909258971 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.891277831 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.921254749 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.930199493 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.93750888 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.917798949 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.896500596 seconds)
  done (took 70.974795543 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.905205488 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.898790181 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.898168775 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.897774699 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.891059319 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.896340172 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.900559369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.89465632 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.594532093 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.933995699 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.90689837 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.907390475 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.8990292 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.900622335 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.899601889 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.924649428 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.061545836 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.900142739 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.899550312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.907024529 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.899782507 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.953957399 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.915097399 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.902435798 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.930701549 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.600047729 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.909160672 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.904723405 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.012219905 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.900592086 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.899539864 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.899287539 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.904590006 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.288295374 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.185509702 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.900612454 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.908084308 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.907297316 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.899048732 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.028897365 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.900539032 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.908576529 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.871003139 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.163441806 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.986428075 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.945167838 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.273614402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.905539639 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.901740034 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.931572422 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.904049016 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.90169918 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.916340163 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.41857193 seconds)
  done (took 134.430767601 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.896227726 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.184258283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.052177884 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.898225464 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171249216 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110140072 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.899338265 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944304856 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.897155747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101646822 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.064655066 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.011699625 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.898613215 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.893816463 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.894467932 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.894088488 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.058735088 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.96753882 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.897762808 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.893560471 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92547099 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107707095 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028413979 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.898915718 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.917176859 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.107391907 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.021025093 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.006236901 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.418866366 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.896479855 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.962232643 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.898777882 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.894609417 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.895893504 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.05346664 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.99483661 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989312765 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.897762965 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.895999856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.897127586 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.57377937 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097969617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.000494142 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.043428028 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.153317458 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104531838 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.641344413 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.896069604 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.54892664 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060684367 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.113654135 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.105905458 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.026694236 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.900760759 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.284538726 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.897065203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.897191715 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.138690377 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.146074818 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.000814516 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.90271613 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.898601151 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.899203004 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.144953407 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.903839992 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.998502845 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.902471283 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.899574787 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.999140132 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.008163693 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.15034474 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114811038 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.935517839 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.207041512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.387577462 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.115338896 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.969336627 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137850276 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.901929035 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.898877501 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984793074 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.653156332 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.060864652 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.151269618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.125469407 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936587773 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.543475933 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.899330907 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.093737495 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.087686451 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.097776329 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142882742 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.053918773 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.304814897 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.898969072 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.898660973 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.140210537 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.03768156 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.901648211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.25862839 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137168511 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.469545085 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.930639985 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.197968586 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037575218 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.298733301 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.525198783 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.900759867 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.068318489 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.939393742 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.902345114 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.90182345 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.091075655 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.716992316 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.900253012 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.424333623 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.968050686 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.905292203 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106581133 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.903977648 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114447529 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.907255962 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.139545365 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.951193393 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.936921772 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.14608304 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.142890101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.705244117 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152835087 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.149093468 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.021308723 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126468521 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.542173039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.902101415 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.180545821 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.90305583 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.903318585 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.069766914 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.902675335 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.139491658 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.904166443 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129730991 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.928687881 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05921527 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.907799182 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.145739571 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.942075406 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958364828 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.907965445 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.03355907 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.903815382 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.786409399 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.057846781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905699969 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.905081919 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.609051148 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.904532906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048242333 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.134961399 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.929565045 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.973080592 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.436947936 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.904815833 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993014202 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.931944402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.644571189 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.904181008 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.06382053 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.906810447 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.346218277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.900913609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.143513163 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.091580116 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.904123063 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.902004989 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.648342321 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.631358954 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.902482818 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.062977481 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.656319305 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.571590405 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106461302 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907690064 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.034599089 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.907548198 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.238415507 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.257894393 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.904369087 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.902810382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.902824848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.905143021 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.907620315 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.186883355 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.935971198 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.429002535 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.044697794 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124190598 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.212516075 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.126234041 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.955868557 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.909677737 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.155289503 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.908877917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.972104054 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.90892136 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.929535627 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139372985 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.910817987 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118936615 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.161315929 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.856592059 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955694374 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.904239248 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.900763201 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.901971405 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.059649631 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998219357 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.906091865 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.90323516 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014576058 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033427552 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.099279381 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.503666204 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.082727796 seconds)
  done (took 907.673423463 seconds)
done (took 1230.486409303 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.903696263 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.9032523 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.895062472 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.905947958 seconds)
  done (took 29.44792096 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.911088208 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.910169675 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.908243264 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.896281397 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.897955094 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.895176738 seconds)
  done (took 13.262114466 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.064347826 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.888811344 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884281791 seconds)
  done (took 21.659730068 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.955014688 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.302691074 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.997070684 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.33848503 seconds)
  done (took 10.414236619 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.888607856 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.889346241 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.884604064 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.887574276 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.892729911 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.889864879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.885510436 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.889984306 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.889245558 seconds)
  done (took 18.820945918 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.25507641 seconds)
done (took 99.700016254 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.994786321 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.24936535 seconds)
    (3/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.009540318 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870397234 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.625825167 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.128438995 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.776335094 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.057726466 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.979737856 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.876790695 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.074909014 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.878491914 seconds)
    (13/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.900028054 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.079557609 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.018880616 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.923390693 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.041531864 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.390618847 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.915463717 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.877305203 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.91045436 seconds)
    (22/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.393758219 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.553984039 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.981572743 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.561229164 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.05381264 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.796088956 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.229462709 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.457717886 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.181194258 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.993268673 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.113423426 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.170650591 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.251889851 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.089020068 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.886315738 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.535545924 seconds)
    (38/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.115350693 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.538626968 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.562780589 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.909808532 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.013693505 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.843542876 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.790362546 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 4.849016361 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.866001287 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.567250355 seconds)
    (48/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.165829467 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.983735483 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.04388406 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.047289138 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.207111823 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.037473115 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.928254641 seconds)
    (55/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.174359723 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.987179705 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.011943078 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.995906284 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.135087854 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.878155051 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.379380618 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.941989066 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.906260535 seconds)
    (64/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.940605642 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.874864613 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.190349205 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.076240378 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.255962253 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.97701688 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.036999732 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.363570947 seconds)
    (72/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.474816323 seconds)
    (73/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.042965267 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.058858383 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.986022934 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.147284365 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902985039 seconds)
    (78/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.44861716 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.965233746 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.19595049 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.989232104 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 5.688344485 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.240357794 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.068611439 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.624302713 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.159700836 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.877366592 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.799870998 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.384139069 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.433958861 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.006860646 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.26852323 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.460527163 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.974428147 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.881200949 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.426160879 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.96020846 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.069900631 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.988343483 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.180352614 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.56763883 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.881859832 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.067894252 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.250618763 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.008266141 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.125447758 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.981488369 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.876014055 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.907870727 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094439332 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.092450025 seconds)
    (112/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.450456953 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.25229699 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.520126809 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.884712512 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.95597366 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.252109962 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.777622504 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 5.709194978 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.858116306 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.05062579 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.114561587 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.213424284 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.324355294 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.90009855 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.229103892 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.235898285 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.953153814 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.959436217 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.084753191 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.131979804 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.869583352 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.278176771 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.852025808 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.784481817 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.474781817 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.520157944 seconds)
    (138/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892897766 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.972815783 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.938696541 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.208484102 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.214376668 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.090289502 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.896743683 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.974337982 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.099412315 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.982848703 seconds)
    (148/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.994559176 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.198362142 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.896053107 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.207253363 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.967454623 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.851364684 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.240065885 seconds)
    (155/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.056897512 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.856912484 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.079643533 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.946392337 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.269878252 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.166977378 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.858268435 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.994319263 seconds)
    (163/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.268238338 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.349717718 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.071979942 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.785649062 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.86330067 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.908309027 seconds)
    (169/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.018503003 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.006747519 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.27793293 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.041588357 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.183777128 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.935831823 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.147423559 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.093686259 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849434587 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.102183597 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.367740681 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.942908548 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.222823316 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198922291 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.897956066 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.846849503 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.28133227 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.885036013 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.952286947 seconds)
    (188/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.998933951 seconds)
    (189/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.464494856 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07590272 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.904166203 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.660740263 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.247060338 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.116783266 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.962846158 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858118615 seconds)
    (197/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.830112657 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.366640865 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.085797207 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.986251889 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.858478821 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.916466606 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.870903736 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.915879467 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.874485151 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.884977727 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.98920142 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.148709812 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.365552464 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.85515614 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.826004722 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.883174907 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.256832854 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.644313459 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.075864868 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.862776786 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.929215348 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.151977436 seconds)
    (219/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.156138852 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.893501901 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.213099933 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.247427129 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.84155227 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.494065368 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.875224673 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.043041349 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.160991802 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 6.861372247 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.886457719 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.797662177 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.969414937 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.951150695 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.059041375 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.900992437 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.993878675 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.981844984 seconds)
    (237/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942056393 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.791231706 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.927825468 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.854596601 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.920981427 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.946860915 seconds)
    (243/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.003723568 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.06848967 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.854615286 seconds)
    (246/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.65336727 seconds)
    (247/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.349131146 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.098465466 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.85839013 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.857732339 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.063193233 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.960079788 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.859513596 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.838300517 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.966960429 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.746921512 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.919340606 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.841233256 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.847047202 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.46511096 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.150755929 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.89100574 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15259353 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.944843713 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.701819224 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.958245908 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.463450818 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.980637017 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.968392733 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.154270755 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.169209822 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.957385117 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.941433701 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.883448273 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.114980582 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.907618633 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.061506935 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.940119133 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.953073883 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859735044 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.940656784 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.928182762 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.684156314 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.271405745 seconds)
    (285/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.458620995 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.017625702 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.812166198 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.248923861 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.876172341 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.858656226 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.721426418 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.883356853 seconds)
    (293/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.08822097 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.635370733 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.882301581 seconds)
    (296/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.841530753 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.9411166 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.918402759 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.844653451 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.46731652 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.110972166 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.151302998 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.959831025 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.883456084 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.027824696 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.94226038 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.93396182 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.82563534 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.862644584 seconds)
  done (took 1018.822840221 seconds)
done (took 1020.70932136 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.89279949 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888979249 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.872652735 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.888242956 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.983411775 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.905031792 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.879804336 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.873129516 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.9212517 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.921314227 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.87192672 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.904377235 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.87449539 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.875141117 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.869529542 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885778337 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.182175724 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.898498101 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.89316773 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.882493818 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.888077389 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.871063495 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.919094816 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.910003712 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.871805091 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.872570612 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.874560742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.894614457 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.985123289 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.881294823 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.873653276 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.883840777 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.183595307 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.893974829 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.869990712 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.891563937 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.88235925 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.87891482 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.874303595 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.908231142 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.32459152 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.877089907 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.875646589 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.87229905 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.87265493 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.876916426 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.874618163 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879010336 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88915682 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887027921 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.322398973 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895485565 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.878974677 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.872649806 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883577765 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.879878421 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.876468797 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893323353 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.894616862 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891395375 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.178645726 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.90134984 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.873937332 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890751036 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.882295648 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36131831 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.873788804 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.875712741 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.321321793 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.882723365 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.360489169 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.887057342 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.873192046 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.888343487 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907688424 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.186245485 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.891236777 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873186126 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882043561 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.873985974 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.887061485 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889691878 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.877574535 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.873553799 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888168032 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.911057668 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.880449097 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.875361791 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.882946276 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.892641951 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88219622 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.89225655 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877951879 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.86833405 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.883344141 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.878065685 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.880545866 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.879506186 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.878688311 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.883534333 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.31841527 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900772745 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.871959086 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.873577782 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.874570745 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.891911934 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.318882411 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.880577815 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.897264141 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.922239478 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.874609231 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.176281561 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.904472577 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892664569 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.883081005 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.876888936 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.872681438 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175893932 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.343316476 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.895386157 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.875770886 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.874847184 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895616713 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875160984 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.87189947 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.185205928 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.90138655 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894685122 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.00058601 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.88549427 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.908890621 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.874932957 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.882215113 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.909393849 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893445175 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.909846356 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.878219373 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893412778 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894769982 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.871153389 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.888713747 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.885869569 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.876076137 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.882930238 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.870740062 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.911322402 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890778346 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890234591 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.900826008 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.00032307 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.873351845 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.176527649 seconds)
done (took 294.838568375 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.942424203 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.868816138 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.974509719 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.875193472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.957322704 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.955621309 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.870148642 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.87521516 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.873275466 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.247970492 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.871158145 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.871172774 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.867546457 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.870682829 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.953611759 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.879597442 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874604661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.21066969 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.872696563 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.943225325 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.869462232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.874022534 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.877356166 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.250502965 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.866081989 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871954815 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.944169792 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.874905586 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.217283842 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.864839964 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.870362492 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.21674293 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.963948047 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.894631859 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.885087865 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.881787892 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.95750369 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.877821336 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.958317444 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.951872217 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.971391376 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.914068403 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.87249069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.866609956 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.878860135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.874398138 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.871636572 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.903190621 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.87643361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.873260081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212462971 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889285179 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.881493621 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.872724367 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.873866206 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.895154799 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.873633535 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.874592787 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.964357139 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.878624018 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.936015254 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.253690265 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270350624 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888661432 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.876921852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.88648255 seconds)
  done (took 184.654828649 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.950790396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.958306077 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.959014956 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.892121023 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.948149186 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.963033932 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.889112841 seconds)
  done (took 15.371851212 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.892441365 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.889511775 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.938552085 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.936537628 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.889271169 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.044394315 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.29126812 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.886247292 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.8839413 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.92800593 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.876521602 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.877640654 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.874949809 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.867167878 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.92372481 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.885757548 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.990050222 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.879214406 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.875056928 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.02737031 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.875240313 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.884257392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.931365749 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.885047482 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.877286793 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.881872587 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472967702 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.881601814 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87389793 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.878205758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87517754 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.919004328 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.87841277 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.875746763 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.873124035 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.996267341 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.875999775 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.875368455 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.880387008 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.870750348 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.879326277 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.878249676 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.880133229 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.876040934 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.879545323 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.899602044 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.879939058 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.880430774 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.878386358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883599448 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.930426218 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.879096521 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.876763898 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.877098029 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.938199073 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.88676207 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.880833185 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.877637604 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.880979494 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.882737292 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.032163186 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.927289718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.87981362 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925308649 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884299831 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.879894812 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.879824997 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.879186694 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.971654003 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.880587278 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.934624986 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.879208678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.03897573 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906268371 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.884150561 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.888046876 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.886145372 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.881061747 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.883198676 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.884291702 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.877315229 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.880577014 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.88616746 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881935693 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879159062 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.994213332 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.988030394 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.879556413 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.893497183 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.886418934 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.878077316 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.934364858 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.883755582 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.880642968 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935496773 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.997321436 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.935752619 seconds)
  done (took 207.259321116 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.883831912 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.890078138 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.880313033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.896456122 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.881571427 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.880678656 seconds)
  done (took 13.11764918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.881939059 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.88393398 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.884372973 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885552562 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.886849807 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.882079453 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.882079467 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88163578 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.885692103 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.883015264 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.882491127 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.880502002 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.880147251 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.880073664 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.880590797 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.883803018 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.883238072 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.880849564 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.88307911 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878585739 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.034345173 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.879712127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.880589055 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.881155737 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.883382474 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.885211421 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.889524726 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.881230457 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.883120854 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.88784374 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.884667895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.881966292 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.881521008 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.886360563 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.885515841 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.883152285 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885631654 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.882596441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.881562473 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.881337219 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.881503613 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881815374 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.883832986 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.882914161 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.881592733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.885973736 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.890952029 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891184523 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.882390265 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.882544486 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.882801065 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.88486854 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.883797282 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.883508232 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.882852234 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887662419 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.889950598 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.88774887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.883422544 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.884111044 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.885446867 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.883050453 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.88735137 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.886437347 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.882623574 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.884354924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.883004334 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889301417 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.883561296 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.884597028 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.883943332 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.882538308 seconds)
  done (took 138.595394526 seconds)
done (took 560.814171436 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.205224909 seconds)
  done (took 9.016893942 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.021007486 seconds)
  done (took 8.943469757 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.326909515 seconds)
  done (took 10.136488322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.905070192 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.888025685 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.884321303 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.883723724 seconds)
  done (took 29.379344633 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.9985231 seconds)
  done (took 8.808201377 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.89234865 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.875441558 seconds)
  done (took 15.611003323 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.017707438 seconds)
  done (took 8.828173388 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.967073475 seconds)
  done (took 8.780091006 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.894424412 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.892082021 seconds)
  done (took 15.608964177 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.863255945 seconds)
  done (took 8.673337699 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.639984569 seconds)
  done (took 11.456681454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.888889165 seconds)
  done (took 8.711449482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.919062925 seconds)
  done (took 8.730544068 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.979194011 seconds)
  done (took 9.788186717 seconds)
done (took 164.279819191 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.880727319 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.871557279 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.876352974 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.875985668 seconds)
  done (took 29.313009372 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.918680608 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.919432963 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.922164581 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.930462657 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.922748218 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.920536624 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.913530565 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.914200591 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.930669109 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.923183092 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.921721278 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.920396236 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.922420592 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.914021254 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.920296535 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.922250608 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.931411388 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.921227371 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.913504427 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.923143736 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.887962641 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.930599234 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.924898848 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.887687479 seconds)
  done (took 47.867815527 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.081496025 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.955570272 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.038625671 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.93783022 seconds)
  done (took 9.82362791 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.937639114 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.942233812 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.952248357 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.994474311 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.017943196 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.951250479 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.912354559 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.908956144 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.897467705 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.941781786 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.016984704 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.957305698 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.024295173 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.891985172 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.072884703 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.887812402 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.886722559 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.941723079 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.993279158 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.005554876 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.888749615 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.939775699 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.943518256 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.958458157 seconds)
  done (took 48.676305611 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.887076097 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.895638863 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.894256178 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.887003371 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.891450397 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.889642048 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.892261562 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.890276033 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.910680269 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.891969141 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.887723426 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.889330591 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.888130925 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.889692923 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.887847921 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902353431 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903243199 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.887841282 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.890731606 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.894214283 seconds)
  done (took 39.666321108 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.87926949 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.733919258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.229561019 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.13482622 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.879723891 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.87940831 seconds)
  done (took 31.553055301 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.897844929 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.893027972 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.886664814 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.946513701 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.022805902 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.891988316 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.888846282 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.898265148 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.931752833 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.954281748 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.904728922 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.917170549 seconds)
  done (took 24.846416097 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.884543839 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.888039397 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.884645167 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.905003846 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.897742163 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.896642271 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.899350909 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.88579488 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.901251958 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.90571845 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.896539668 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.907514052 seconds)
  done (took 44.571631704 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983118666 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.93600269 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.932881606 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586468059 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.268333093 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100713058 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419790694 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.226827111 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.895190015 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165510266 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016033507 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00041141 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149119776 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.33391522 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.922162034 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.359264587 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193803984 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107033946 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916254249 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644519675 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956065225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.013643509 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.704722735 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951298738 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103682623 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.020632781 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.154997392 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892603782 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03180849 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931262486 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904009213 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894064733 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168616984 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272728378 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998037356 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904605765 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.511523202 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.604771121 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.882580572 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.690282994 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.708344499 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.026573142 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905355369 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895015957 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828202176 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.983987662 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263029352 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.899306978 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.606433791 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89448442 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906314385 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985249181 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.898021745 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.709725246 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816383551 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.895029395 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.894205293 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900276517 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471384501 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.0885266 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022068312 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.859752355 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.986339054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647868624 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293998434 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.043835692 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.900518072 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901842977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831583764 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.646858574 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950840655 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226844566 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.914122346 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547278437 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199425582 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.078839276 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836496533 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169690352 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.362222876 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.862733887 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125348729 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896210149 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837654771 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.927603361 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832362057 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171869893 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933538763 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.65678133 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935591622 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23264537 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905670292 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918646098 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921416587 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121699697 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.780203265 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898443846 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.791893143 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035995473 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917468014 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233592427 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830167779 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.899878743 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152295007 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.110001675 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.906588602 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393365273 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057425363 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393894486 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.941650293 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.987769928 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938169379 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.173197754 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955716751 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.08083327 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950680542 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899818342 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220827605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428999538 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.029152087 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.016605374 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022678659 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.217269603 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923411009 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963562881 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908737929 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900165309 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.729667556 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452200908 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.898965488 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.901109444 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912269766 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938586363 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.898278259 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849378732 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.518417842 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042237761 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.910522524 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124728064 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.410486611 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205372846 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83285187 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230459733 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954793276 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.122728236 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561367308 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.984483745 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16402913 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909003807 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.939377084 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939805021 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921466875 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00066803 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923837045 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.982067694 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185925817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905472683 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.906011574 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.747612797 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936077295 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900506652 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.907340141 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651651815 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180116912 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923980036 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907196269 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790849065 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.914726275 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968117913 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905771414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912916434 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.440344443 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627117229 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.906622344 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.486158173 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124013175 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911871834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.662027119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013101543 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.985522496 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179556031 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95939864 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.834991971 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.614593802 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.593810546 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905212598 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837019359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902750536 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910734423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912733956 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.096670004 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185115445 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945106705 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.66237582 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.943695903 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910920825 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.905703458 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903669488 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.40970294 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.095624818 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.028965075 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941451022 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047312535 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.916441552 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837536698 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.90760462 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907583675 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903511409 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.904232874 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9350242 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.664821056 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281778921 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163898762 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.510377283 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916002819 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.695025182 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.960980383 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.96170486 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.660260781 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166028165 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.927816738 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038015536 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.911257626 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.667903384 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.610084295 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470060597 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222449525 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211990496 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356248048 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.052815631 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923586496 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243301677 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836164203 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.465715415 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962090197 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243024394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848572593 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994474231 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565594805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257231056 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919959356 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133395907 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31736587 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.726595068 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05883515 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118671165 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939150678 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.99599117 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85825371 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.425026228 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048993532 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.694695844 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116655648 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239611433 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66603433 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.039093589 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.903911275 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598073073 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989486574 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.614908241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078243859 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.023861446 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.931284148 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391999594 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910474231 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.134005633 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270856807 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.990456265 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.022931867 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840685351 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916712235 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918396158 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.904284105 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.913165329 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.787425493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.154371629 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917826778 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844079298 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944862086 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194578693 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.808861645 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.912348007 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908800048 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230678641 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373010906 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074838014 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.933451165 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.427864568 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920800928 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842477497 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84434115 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.601836753 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91783636 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886884253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122313308 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.007008146 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825561737 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918011063 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981302778 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164298681 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.923841284 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188863147 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183452904 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.605591223 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931024074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.009641521 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670145217 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.023267639 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909694821 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145705783 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.66198455 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133647634 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.971295044 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.867004481 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.907156751 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124121076 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907894334 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.902911335 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147576122 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629557759 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.918499522 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347255432 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981698079 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.897867718 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963985955 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.998801804 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915563329 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990597856 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918367782 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.922826459 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92261265 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956493666 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.884634322 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.04236971 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.923965521 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002397669 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.106240667 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.437665821 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.914443782 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191641512 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271343477 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246133588 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969681642 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908576797 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913874813 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846430468 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058630021 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.137691509 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18539856 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046275135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.024984601 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935741905 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.669191239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.05267603 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145340636 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186886203 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.805621075 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337727181 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945856635 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.912068205 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921748187 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.124158846 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127618017 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216487609 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055065275 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920376471 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271107127 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184161675 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.911639246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912107721 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505644719 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.91360398 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.713069773 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.955208599 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.885610159 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195383266 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925260998 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294144561 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931887952 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.071190398 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430752925 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675087644 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201987079 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.906434819 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974417664 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197210961 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309123929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226224991 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979539596 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925724758 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.02788194 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062587248 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.810080109 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919580504 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915525733 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132538589 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.626517352 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924093856 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203496754 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225327268 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.911735941 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.829900737 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93931174 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.928287537 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139996699 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193393599 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168878307 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927280219 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924584989 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.735612932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196627891 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975631734 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852684373 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.924836062 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015579436 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165527959 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941074807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.370034653 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.628332142 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200594976 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.916087951 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941029576 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00638155 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287000429 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24613388 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.449385408 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128927867 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50409078 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.422517783 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21397515 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.929144709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.002852639 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214631764 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.923749634 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.965991217 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949549149 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.193503665 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236763488 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.931537395 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792849239 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.88764713 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261289109 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482030204 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856757378 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927609335 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.976900021 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918937737 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052207132 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928713667 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.822660832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996631884 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.672524541 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193646399 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.924741944 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.904752529 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.669176396 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.135339998 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946108775 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063575633 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920482338 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.641031865 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.282911641 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176587581 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.923356202 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.922599832 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.925143316 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919882247 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909102128 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120243798 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.115314237 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199140083 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.944946244 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.953288109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925777995 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.137243248 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133951868 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.872842276 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06398052 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.918194868 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957221502 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.824774572 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424624849 seconds)
  done (took 1692.368750557 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922609371 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.937626061 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.928197448 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.986645069 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943798544 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928670741 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.950786877 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993593205 seconds)
  done (took 57.44301084 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.923404396 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.121254938 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.931693918 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.925119706 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.934092336 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.924913761 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.088495014 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.930930025 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.931769289 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.935820947 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.9241311 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.921520859 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.228452412 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.942589223 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.925660445 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.911895714 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.931482321 seconds)
  done (took 75.29274942 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.949907122 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.985183632 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.948383535 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.941856838 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.879707554 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.929386715 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.73057339 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.932521078 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.92323052 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.145575686 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.553020768 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.93188565 seconds)
  done (took 90.709261392 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.933445442 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.932444355 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.930756615 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.931882314 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.932235911 seconds)
  done (took 11.520892587 seconds)
done (took 2205.487122823 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.172456709 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145710516 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161684823 seconds)
  done (took 6.16344148 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.077875309 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.121383218 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.243741935 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.248368315 seconds)
  done (took 10.550966532 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.215382608 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.309149206 seconds)
  done (took 6.384780904 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.310880837 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.933544295 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.30866687 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.929641384 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.92841297 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.931002752 seconds)
  done (took 22.653403326 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.934387351 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.936942208 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.934610512 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.934928044 seconds)
  done (took 9.603655298 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.912882512 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.614225497 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.910369576 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.923531988 seconds)
  done (took 21.219749954 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.681910713 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.690742117 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.67676854 seconds)
  done (took 9.911578391 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.512056259 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.833636979 seconds)
  done (took 9.205255211 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.19505073 seconds)
  done (took 4.057218355 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.064880873 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.241941226 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.461999434 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.481244869 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.544669837 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.633294013 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.232440182 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.162164233 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.336280489 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.357820029 seconds)
  done (took 25.377258642 seconds)
done (took 140.710513925 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.30068962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.164257956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.125531142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.260626528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.14801611 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.127561963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.146476166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.24612855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.76502806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.764716955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.258623683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146701759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.091960827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.16392587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.093765223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.163301209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.14710154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.317607948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.952040497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.154201596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.143957102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.896702065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.099463617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.907902568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.148667335 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.074286836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.482780687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.167165829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.107022822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.489588502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.074505664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.311761223 seconds)
  done (took 174.302317021 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.847257008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928364971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92704014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929831778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.544234063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.931161128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.928218254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928569244 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.324646066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.316236843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929140392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.541559197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.935073998 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928125319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.941816514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929343251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.490661291 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.938950038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.953881738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.957614481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.960848449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.522515556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.957756717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.560756581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.500915715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.958538749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929534422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.96134632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935482196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.935491645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.941461032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.929812069 seconds)
  done (took 212.109686298 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932424907 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929509284 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.93091031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.928878832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.930208586 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.936145049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931489524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930106696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.713075446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.707568217 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.940070071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.938895548 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.939889684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.93305937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936826461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.930109854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.939148055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.941762642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937625534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.940975864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.94712585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.780836548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.950411374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.768655505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.941527645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940205781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.930218281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.944516012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.953666377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.950958602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956051906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928636699 seconds)
  done (took 223.1187012 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139231794 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.943588995 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.942289974 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.896483934 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.943204685 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.942919027 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.938928936 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.131052578 seconds)
  done (took 19.770726238 seconds)
done (took 631.174014042 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.398298961 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.238722671 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.116470293 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964862117 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197992864 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.996267118 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9614259 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.024490249 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.696924469 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.027479018 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.595001538 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.970703275 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.684471332 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.978695171 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.087591015 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.015578704 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.486155183 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.579162121 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.133435648 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.028687914 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.139536337 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.893844189 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.031138195 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.707211307 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.697964343 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.92786005 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.136369819 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.495338033 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.968361861 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.129025129 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.712419824 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.3443642 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.965608657 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.959029753 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.012535928 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.995255047 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.308707818 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.964025446 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.08618182 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.699229955 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.019399141 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.578191282 seconds)
  done (took 105.81945339 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.933279622 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.930888205 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.929969516 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.930180248 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.932919201 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.932607218 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.929655415 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.928413273 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.931900076 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.931340494 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.929988243 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.932183037 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.932637124 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.932876529 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.930402153 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.929160705 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.931777121 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.93230406 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.932253813 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.930920516 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.928879601 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.931457537 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.946172902 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.93309303 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.933881288 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.93185045 seconds)
  done (took 52.1098071 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.948957925 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.090939746 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.174025267 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.957023882 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.943293512 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.946899952 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.96190907 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.949185769 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.947638628 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.945753389 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.040053538 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95181612 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.964236239 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163451791 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.950074674 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.946679825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.947373149 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.944298037 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.092315198 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.959232136 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.963644896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.950077144 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.961915842 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.956386487 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.946414815 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944028992 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.948922563 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.413043364 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.952208358 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.03885982 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.984538936 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.96497856 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.382808911 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.172365626 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.992209452 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.951962371 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.948597126 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.042703972 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.950561593 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.946821175 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.961710866 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949343483 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.162550041 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.434601976 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.950941215 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.947695903 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.428739544 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.049587508 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.983826796 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955553872 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.169354144 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.957627736 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.948530788 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.948409859 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.978602336 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955529411 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.946719798 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.310163337 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.953174457 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.963697498 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.951544425 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.947520042 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10344045 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.952066585 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.092415421 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.954642177 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.95521639 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.949373755 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.167393564 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.95719551 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.452022434 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.958364794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.950001511 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.041641491 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.094087401 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.448379663 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.954477055 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.101841405 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.395977588 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.966213919 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.953365077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.407955715 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.975112283 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.955055277 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.951196959 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.951575617 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.950056699 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.994026774 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.96518426 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.38549069 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.448563401 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.31883594 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.970556613 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.964127681 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.951209414 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.312340028 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.956239002 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.951424716 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.161987985 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.456181536 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.957119225 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.95858267 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.437908963 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.956127212 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.96594773 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.955623749 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173028928 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.957915768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.996204993 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.952057303 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.955651983 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.950285725 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.967169487 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.953202913 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.949239708 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.424875604 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.054198248 seconds)
  done (took 241.007186202 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.942773377 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.943386298 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.941642797 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.940406585 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.943903089 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.946893304 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.945325712 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.943576527 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.950183776 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.943040079 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.943929576 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.947550596 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.944612986 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.946266593 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.980996204 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.951100949 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.557735055 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.943916776 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.943234237 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.94023181 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.5897011 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.944709063 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.942197304 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.941273634 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.94150924 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.944809736 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.951699578 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.975461716 seconds)
  done (took 169.647419846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.953233709 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.061988973 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.960162162 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.978743595 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.955077753 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.951326316 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.973807714 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.961266818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.955972259 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.948261504 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.950638786 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.006314668 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.958828491 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.048955923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.976847679 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.977931853 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.051076738 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.959946747 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.949792934 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.953175542 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.976935682 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.941488968 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.009333491 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.068582218 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.965715121 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.061568548 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.948329379 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.954256629 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.953989301 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065772906 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960071543 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.010710278 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.975656114 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.968154336 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.063216222 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.058988793 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053423719 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.97995501 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.953288995 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.952205291 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.95439314 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.942037802 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.063335107 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.96644416 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.955199182 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.051829744 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.968321259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.956428121 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.963071878 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.953922826 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.966458593 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.964738045 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.009982089 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.074197329 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.978252191 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.9792829 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.97658281 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.223971054 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.964879436 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.04802308 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.942838197 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067712179 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.967163747 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939809886 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.954284519 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.96047637 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.981445491 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.980828612 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.052739841 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.959160101 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.05102645 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.986000254 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.957877209 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.953958581 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.958773318 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.066629736 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.061328632 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.985154652 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.984368305 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.979153652 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.944486797 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.953232762 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.944353689 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.970131672 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.95830428 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069563867 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.062243192 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960414733 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.959005787 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.959060837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.958984712 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.977762086 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.068384137 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.980734225 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.047298121 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.016607123 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.018136261 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.964905962 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.967019946 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956710741 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.013282989 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.962836557 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.967575992 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.271282473 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.021532502 seconds)
  done (took 211.060227507 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.435461823 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.010365422 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.003209767 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.239840391 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.366664265 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.839657965 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.99647293 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.002275718 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.023010268 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.153469846 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.058631404 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.015216019 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.983976206 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.969874796 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.998649472 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.018235265 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.002314023 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.296878875 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.114582084 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.127930062 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.974914058 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.300679117 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.313399724 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.37007932 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.032517618 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.33126559 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.685059868 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.244203322 seconds)
  done (took 63.793063048 seconds)
done (took 845.301928858 seconds)
SAVING RESULT...
DONE!
