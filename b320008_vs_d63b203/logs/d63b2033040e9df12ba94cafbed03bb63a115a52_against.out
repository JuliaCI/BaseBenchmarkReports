cset: moving following pidspec: 22059
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.479926368 seconds)
loading group "string"... done (took 0.519377095 seconds)
loading group "linalg"... done (took 9.763438441 seconds)
loading group "parallel"... done (took 0.181663811 seconds)
loading group "find"... done (took 6.500273191 seconds)
loading group "tuple"... done (took 2.202505914 seconds)
loading group "dates"... done (took 1.509946414 seconds)
loading group "micro"... done (took 0.217033618 seconds)
loading group "io"... done (took 0.55131093 seconds)
loading group "scalar"... done (took 59.903270656 seconds)
loading group "sparse"... done (took 14.466016933 seconds)
loading group "broadcast"... done (took 1.376702835 seconds)
loading group "union"... done (took 10.891106459 seconds)
loading group "simd"... done (took 3.689723575 seconds)
loading group "random"... done (took 13.675339915 seconds)
loading group "problem"... done (took 2.226857001 seconds)
loading group "array"... done (took 25.981907742 seconds)
loading group "misc"... done (took 1.173697993 seconds)
loading group "sort"... done (took 3.89037995 seconds)
loading group "collection"... done (took 22.750563729 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.62258344 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130935238 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.207363868 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.230923453 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231536653 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168371439 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145492185 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.237175571 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.525406179 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200675858 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159832652 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42805732 seconds)
done (took 6.046002983 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255670688 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244688951 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16600297 seconds)
  done (took 1.108357822 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079180957 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160120716 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110390954 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096411268 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095617384 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111858534 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096502899 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110869258 seconds)
  done (took 1.485691899 seconds)
done (took 3.63143421 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.516002428 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.857088717 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.513135852 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.147050416 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.319101903 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.29407369 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.26990438 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204451032 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094485671 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091334673 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177919998 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420589602 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.403823661 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.937793187 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091157428 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110199216 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.11640824 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.769900358 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080657314 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121845263 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502010265 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193849301 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115412468 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106781962 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192987585 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139010295 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.1619888 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103257448 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682489078 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132795714 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.178362432 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099922236 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158957901 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.188010934 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212800466 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096660652 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686501124 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202910574 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098523819 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101923431 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.696223893 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117297817 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188205937 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105290286 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090514348 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183163315 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102247425 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09490054 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095482374 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087287218 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166402807 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.443245154 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109149942 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176295989 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094630207 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700984094 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099427815 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276299663 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128047447 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098279732 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093957058 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090217777 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167761184 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094613221 seconds)
  done (took 20.129280334 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148114254 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165452177 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079741026 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158164453 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12522504 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082440001 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102885321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079947606 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12788404 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180511709 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140520111 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154730632 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094221984 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091812261 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.151038962 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.236040108 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113114148 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126891753 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093705541 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094491362 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145806125 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101236632 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113563631 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096405251 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175444712 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207653808 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113518286 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126424144 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09402876 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099973227 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147027838 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150063286 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095822847 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092748133 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.196077039 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109405623 seconds)
  done (took 5.332107622 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.117070901 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.154071288 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.17650053 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.22623139 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197636017 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15495936 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186081532 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155884061 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.274222463 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.221291119 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169035028 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133929589 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099381234 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099962338 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085061103 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08318439 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.493668773 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153109258 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.194245678 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167199696 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.143126607 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120059199 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08671664 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106901244 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091146902 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119001523 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.125835447 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0871048 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322822053 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189920567 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117521919 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.145959883 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086981647 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101029392 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137644374 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195757336 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.146271197 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128908181 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117491341 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090937287 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232213439 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104870828 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100806782 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122120126 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135560668 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120141818 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111929007 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.115223231 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.230351632 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.109389771 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118232948 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.077190102 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199776927 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.129739352 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.088696237 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300850576 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130390751 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102831374 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112091201 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.781641041 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132512426 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086212464 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085971141 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.10169058 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099831538 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100348434 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.436300275 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114510546 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.207925086 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087296671 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16502601 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099134237 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120596223 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089769756 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105339634 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111750114 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089011442 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101745868 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091097952 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082665109 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.112090022 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116795298 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104243906 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082972144 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148165361 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117591356 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113232493 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126027016 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096047502 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.088193444 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137178505 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084746032 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107855067 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.149597007 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121284652 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117943486 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117777988 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147859956 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09391476 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.22938399 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.10019917 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127748995 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100428054 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114827635 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122061986 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084014563 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087364879 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.101482805 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086173426 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15184524 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.107081366 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085456771 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09165967 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115755424 seconds)
  done (took 28.867909895 seconds)
done (took 55.029577085 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449289509 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083169312 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082144157 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101552991 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08257936 seconds)
  done (took 1.574482513 seconds)
done (took 2.326559164 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.324370462 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201347455 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104638216 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190385125 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087306078 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197413797 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182743948 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101892319 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207234516 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08634239 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185871425 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086146037 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104632811 seconds)
  done (took 2.834890277 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104943698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107315162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121059028 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104314855 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088612562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104555324 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123861057 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112860382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104556392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117175435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089331164 seconds)
  done (took 1.928971102 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101568892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1048489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092542515 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117281262 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088157815 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10386647 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119591789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110169573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102525682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116042175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090371719 seconds)
  done (took 1.898002993 seconds)
done (took 7.410316186 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.068685756 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.57092749 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147965042 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211843222 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348018243 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.238331835 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.571805841 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154925452 seconds)
  done (took 14.209126908 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.122388554 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096745808 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.156336637 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091537019 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091584981 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115260141 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096097625 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091496525 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.11079507 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093848576 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093928482 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112397359 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095451157 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097419552 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113630321 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099665316 seconds)
  done (took 2.497345977 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145217806 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143253049 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098525658 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100156181 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114372396 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100882436 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10310554 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117843498 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09548796 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096317025 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12218894 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100278709 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098476763 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113791304 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103069923 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120623805 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.11585656 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102675125 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120604455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.12055489 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10404888 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099815057 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.118998322 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102694296 seconds)
  done (took 3.499723566 seconds)
done (took 20.959776754 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15077894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102107322 seconds)
  done (took 1.010273321 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141297423 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1575292 seconds)
  done (took 1.059715605 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113573553 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090265413 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137726954 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103561294 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091594748 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108344416 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116075278 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108154907 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091990775 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091844093 seconds)
  done (took 1.817701583 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095420253 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097009954 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122514252 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135580332 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117862043 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094842244 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095777398 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094433527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114361076 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091060279 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096038076 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127479937 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097363124 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127182871 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096772693 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.214986235 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116626927 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095430233 seconds)
  done (took 2.796827516 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09194756 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092275321 seconds)
  done (took 0.951498386 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095430169 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090591929 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093716577 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111088831 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091166249 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090864858 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107636279 seconds)
  done (took 1.448627834 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498063466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.263778316 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.360534802 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11008856 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150001079 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.35217337 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.151171152 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104735795 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.12356486 seconds)
  done (took 2.916597543 seconds)
done (took 12.767738746 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093203956 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222303904 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609221994 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114176223 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091723415 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159093323 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294687089 seconds)
done (took 2.358329745 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346041908 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141039679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081926374 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093625148 seconds)
  done (took 1.431379589 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083375333 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100002778 seconds)
  done (took 0.95953898 seconds)
done (took 3.169423074 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090816241 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.121521269 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108565698 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091413413 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089279251 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088628301 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107279985 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089043507 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088354402 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.107749985 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.089779952 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08921326 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088910277 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105239377 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08869576 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088013553 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105535384 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090888963 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090023006 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088315691 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104809093 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088551119 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087698972 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.105441879 seconds)
  done (took 3.101455156 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107312391 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09132159 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110744266 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095458389 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094507502 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111917123 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094926017 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091831148 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11074824 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093418449 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094169865 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110315392 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092584192 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09557696 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109147455 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095674559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096209032 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108311482 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091913327 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095530844 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.110233439 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09173288 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094127544 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109599088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.094903337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093864818 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091407242 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110213609 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09424724 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094985306 seconds)
  done (took 3.751243604 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10029889 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087413085 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089694983 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115215587 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087119721 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091163651 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103850889 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087574229 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090484405 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089573292 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108047084 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09024966 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087755963 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108494366 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092155751 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093997688 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116046029 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088024884 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087695678 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090647062 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111010683 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088288906 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0901313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107813636 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091810488 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087252881 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089547413 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108878344 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091075485 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089751161 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110555583 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095424369 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09090577 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117158211 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09552851 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090098835 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.112651813 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08772561 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09209877 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087182899 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104845919 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091733871 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08806034 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114941228 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090399093 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089766842 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087479375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108585565 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090918022 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093020755 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104544554 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088445635 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092894347 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.107330349 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093415149 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088577271 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090448751 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.103905318 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091699984 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090176474 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104416546 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088553666 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095282139 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09027749 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122287637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096933258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0869152 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109765061 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090941487 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095918105 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109037087 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101158455 seconds)
  done (took 7.723904918 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10347485 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100485991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091878965 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109300283 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09210792 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090466109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11426504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091161528 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093115734 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114348069 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091584881 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09148427 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108825636 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092590358 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091453926 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093445461 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114322995 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091445667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090184479 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109164923 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093238009 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095092383 seconds)
  done (took 2.951048595 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237108549 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097702083 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139408062 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125879486 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108531633 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120709657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097095479 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097160159 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115060159 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104840804 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104647586 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117974775 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11423384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121863415 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105309496 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107353917 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117229748 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106431038 seconds)
  done (took 2.926423445 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105315139 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093527988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12989136 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094049648 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093680418 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112050925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099521795 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112628507 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110581244 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09364844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098963316 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114020678 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09637317 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093250577 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09298408 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114656058 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096892727 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097349234 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122871785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103083843 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120661277 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105875556 seconds)
  done (took 3.091220131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107407278 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093726274 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127774376 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096463859 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093203842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109193264 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099845687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09321634 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117039349 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094247694 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093993365 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093352493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125587662 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092999916 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09859912 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110278726 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0935559 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093605239 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1107231 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092970678 seconds)
  done (took 2.828773251 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169873588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126710462 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108828635 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116316912 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125428196 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108360855 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116573554 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127009376 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108634532 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137737536 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109191028 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109791341 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133995441 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113691888 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125485627 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117597204 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116486085 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134141421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109026519 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125197348 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122646474 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110279901 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133886859 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108562764 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125146332 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109303535 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109433213 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134811625 seconds)
  done (took 4.186729977 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091940117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092070038 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091815539 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.11102638 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096386174 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09633867 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095716922 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114356276 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096725696 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095177774 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.115322531 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096088791 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097214098 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095466024 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112976449 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096784605 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095458736 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.113971768 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096082776 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095844333 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096366753 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113649228 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095812142 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094984029 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113965712 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096907866 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096068027 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096008807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114000592 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096734481 seconds)
  done (took 3.802999943 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105542078 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102693858 seconds)
  done (took 1.004806567 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100274705 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105681846 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091234925 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11239817 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102736844 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096306249 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12358203 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103317996 seconds)
  done (took 1.633242287 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141882192 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161810218 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09817068 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103519376 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161366993 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153406363 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133456956 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096541953 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109333897 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086036678 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.155919923 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084464334 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093192143 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108005452 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09365323 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099602715 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111772254 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102797297 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098313547 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111523713 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09738442 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098028598 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112034616 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104189668 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087152388 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112966255 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098216759 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103170923 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107263212 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095658077 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091503694 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111274 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097422302 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097330416 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092581225 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162082641 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09945318 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108024625 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093636903 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09633061 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.143547887 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093756695 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095258848 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109591561 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09595901 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09695215 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115297409 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093182099 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08639189 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10696297 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093672427 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088223855 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.109876939 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094535854 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093846784 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117735552 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094241645 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090310494 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106218031 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089149267 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09215191 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10749763 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097432727 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096686901 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112161232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094831332 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092331523 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110498863 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096600186 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095071988 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0927262 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125780109 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094501263 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115189703 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098174287 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094500808 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090176836 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119506028 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095131512 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094893673 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.117729905 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125754769 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117112853 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092835544 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088951134 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098906147 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113222104 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095738126 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085796156 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120015622 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096611762 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093738344 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103883802 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093588905 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088918081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.115911343 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086953881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095021824 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110112231 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09978507 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099359795 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109079992 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096862587 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09812219 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115749015 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095314759 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142901327 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112348195 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.094710463 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100060448 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122870855 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093369087 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.098061806 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.116253201 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095750813 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088067958 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114968674 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095084391 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096056176 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097509436 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11397228 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095028351 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094606713 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.111514748 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089315687 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097037225 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119036978 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096980082 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099047698 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.115327359 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099930256 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096934993 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.121488385 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.097204291 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098798202 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109100968 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093945846 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094439295 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115640581 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095402213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089267782 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110752609 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095590155 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093641969 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11317113 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095338826 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089667366 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104109818 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097542706 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091846715 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098625128 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122489751 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09008039 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095757389 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109126714 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103065799 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090115814 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.117426036 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095780446 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100003751 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117013387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087028571 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090929921 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114122321 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095625231 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090095164 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112965335 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09577081 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101034196 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08638103 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.116636955 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08717026 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089951784 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.126033243 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095720135 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097219484 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.1078596 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135148866 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104919697 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118285457 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093854375 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093184258 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116004948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093858148 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096495344 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117092113 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098479542 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092304219 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110010881 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099673305 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089743992 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.115076477 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093905272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096047777 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104251398 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095955029 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086882282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097659022 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114842955 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097996963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097315704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114123991 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093237456 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101091714 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108729132 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097712451 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08761032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11714325 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104875729 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109906628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11777064 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096752855 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091096782 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113577674 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102707997 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096026045 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111824433 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096069425 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087534909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087694765 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118673503 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096911545 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090773981 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111872794 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095415325 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095970197 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11071576 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087910636 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097544768 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115646453 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09121019 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0950566 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109644267 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093248979 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101350629 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105526257 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091624808 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096628661 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117828733 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09498878 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094122903 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115329171 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101127879 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096973155 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097798556 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113924642 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108915965 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096843356 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.117099679 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094818423 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100036986 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.112492022 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097581528 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096801707 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110036871 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091457278 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097890869 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11747488 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100157812 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092450831 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.116913063 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100362892 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100366408 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093199367 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.11755163 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090443769 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086719802 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109650867 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087956943 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09612206 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109628178 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100409846 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09281049 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111175336 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097506583 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097503348 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11135334 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100555231 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106607738 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110321983 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.091212358 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095412938 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120201094 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096200373 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097915518 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.121477106 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10373973 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10602367 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123823506 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098902328 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101446698 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.127285239 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099156897 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107943422 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107357619 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.12673621 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.093257914 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099271681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113658641 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100387783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088672203 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.1164872 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093859592 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094464083 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.111680229 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093201047 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094299253 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.114460454 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098216358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10746368 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112931489 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100902812 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098086729 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.115355061 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095512588 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094093597 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.119399164 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09454407 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10146634 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.11337487 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089518278 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090180549 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099128168 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115037883 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100971554 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091400358 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.117478811 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102677066 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099844284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114913425 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104131443 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104112309 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119410172 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103058846 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087739416 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111946905 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100174344 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095523892 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115485709 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098313881 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08909843 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098398458 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119360954 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097247364 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093582898 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109535755 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100605786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107653628 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.121878353 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.104772348 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09855357 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114450502 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092106986 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099160311 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101272417 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114211341 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100934151 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094888174 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117981964 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091994266 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100195081 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.115206409 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090169851 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088937117 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111744279 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102523864 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090411131 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118420353 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101059997 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092324711 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112248612 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101520506 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092625777 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098593108 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119594526 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093884542 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104402729 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115723591 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094928359 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099897418 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120009494 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090372816 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095509913 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113065828 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103380627 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094672927 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119202387 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096850153 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099974487 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116314127 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100782622 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10045631 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100345399 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108776155 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103823547 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098722093 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.117030673 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095247934 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094873621 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109891239 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095838199 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102792006 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112309694 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103939603 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103385592 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.11342158 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09532868 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101161929 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112772328 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103564783 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092523244 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116498782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.092079165 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097653042 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113768301 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103553521 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092684737 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089864711 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121059852 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100882238 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099318056 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117650952 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102816095 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089035748 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109946225 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098733105 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093318297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12458495 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100251064 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094607919 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113813289 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100340712 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097021025 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122040651 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092141897 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09279236 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096473155 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117654038 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09514238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090393023 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120112841 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096102153 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096856429 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114760948 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091538802 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095898984 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.12241024 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095108463 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091136335 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113717027 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103458093 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095450466 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113079558 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090785508 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102681395 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11805362 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10322797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093447824 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115294873 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094533497 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098753079 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123554602 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096131094 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096260863 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.11333245 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103040643 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101781246 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089833527 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114083262 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106195482 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100420403 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117848631 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098625756 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094961766 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122754512 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103188002 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098897851 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109890606 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092386968 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095342855 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109285241 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099859315 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100652608 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115651802 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096784639 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100895008 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119236036 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100623552 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09951794 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090568366 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12375154 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095590709 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099608894 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109587216 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091240786 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099083287 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120251645 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097517768 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097564632 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117645327 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100355043 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092159713 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093332167 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120884626 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101090043 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101143529 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115861202 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09512811 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098381164 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127176809 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09752368 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095295522 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124563975 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103733341 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096606064 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115776629 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10195327 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102168845 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117236578 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103458462 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09439769 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115719829 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103595781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103196582 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125397051 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097200262 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090874254 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120086591 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095450159 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091299027 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118641249 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10466398 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102870898 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096342177 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113984665 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105071518 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121389703 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099053346 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094579431 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093845041 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120974508 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095098638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099728541 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.1143635 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104125374 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103315765 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122053881 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105566617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09023576 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121639077 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099260043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104942015 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.116794595 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092438489 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091289966 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098508084 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122742131 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102937376 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101621975 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119609406 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101649544 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098237665 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116100586 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095325278 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103397074 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120607779 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099942892 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098332495 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.115601384 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100044954 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098603539 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101784972 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.122403396 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09864458 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106182733 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12456836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097034065 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093282538 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117451883 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100533396 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096948243 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120994293 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095470627 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092784442 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120719087 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104428549 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096583909 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123312668 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105343269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095757007 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119224122 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105552252 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102189267 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098032629 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117365096 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099967806 seconds)
  done (took 62.525329891 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147247999 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105799969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119514794 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099788399 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118008479 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120180101 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099817478 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100728114 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120739837 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109102372 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099176085 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118015851 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115392403 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139159683 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117322861 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107948604 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117917134 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100552363 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09910768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120282033 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11593769 seconds)
  done (took 3.24016378 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117059285 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113023747 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130581341 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114168281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106776912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131113267 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111067001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129659504 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114539439 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108408947 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133035476 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111014679 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128375591 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10857447 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107636307 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127952713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114464865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125710999 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112622799 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110747782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128536181 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111821846 seconds)
  done (took 3.445320615 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129992123 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102334469 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096946518 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119739996 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102514281 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099500062 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12230088 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100649519 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108631477 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114525713 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091957079 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095495069 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097903987 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119347205 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095255268 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099598724 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126945019 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102795705 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103617153 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118047722 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091967187 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099407333 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099319398 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10993928 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105035578 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104455784 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118762529 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103761424 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090760541 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102078372 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120019672 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094181261 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090619571 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109854732 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091319956 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102201822 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121371122 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101316882 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099246654 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09034656 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119320459 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103994068 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090841768 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119518616 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10054636 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094847389 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10203246 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119864302 seconds)
  done (took 5.896607814 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129802707 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16447998 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.340489272 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137730527 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134865558 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109184706 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124989018 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137112623 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102457468 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124781055 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114681485 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135204643 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105347989 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105495919 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125462493 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105490024 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105513453 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121783058 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109280977 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102667939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127021232 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104317703 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11265928 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132693311 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10596995 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10309896 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122093782 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106420416 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131408333 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110169067 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10680616 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126081295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113645997 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101682036 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122833906 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104488697 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115245313 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123533628 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105484764 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100175557 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122900172 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106490671 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104759375 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134792552 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103573331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.123985225 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10505671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10101056 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13237949 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104134589 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109349345 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132805368 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105559521 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103370581 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126120722 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116523575 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10363403 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122203271 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105081816 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130922715 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103437416 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105439399 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132281232 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104374616 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109340426 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133569011 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106694015 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104951876 seconds)
  done (took 9.070436418 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133130072 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106881625 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135289561 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114850222 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106671577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126860208 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107523361 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127798222 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107731533 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112915371 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125506761 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199572993 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124529297 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111768112 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107323236 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128005845 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106960036 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105842992 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109189371 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107688509 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127289022 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116804227 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106437368 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13468367 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118453017 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122840501 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108552218 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107035694 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13524012 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109269546 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118451043 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128738034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108191204 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136044637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119014585 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107563733 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12218645 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108999063 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107581709 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127822934 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105234825 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114938815 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127804446 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104679958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106592248 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127866292 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116929359 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13874439 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113353113 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112162397 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12861037 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116059144 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127791468 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108903372 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115005238 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14329881 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116087978 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135128071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108408806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113888296 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135018698 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12109464 seconds)
  done (took 8.293316489 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101205233 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100236622 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100070349 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119527314 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100756787 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099819332 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119788409 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102605736 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100202713 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100483407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120348413 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100140236 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10023829 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120282792 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102292215 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101534914 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100352397 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1193931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101070437 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100553453 seconds)
  done (took 2.97373082 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110875169 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118001771 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123295873 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108420692 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103475872 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128667647 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103523311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103289795 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121988877 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10497874 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112169495 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130492141 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103963361 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109276772 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130586315 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109808346 seconds)
  done (took 2.687515905 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120760181 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118488031 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187322353 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104818566 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123282875 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111038362 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102805087 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124751091 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10174941 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108145712 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105295316 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127623937 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103485137 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102556578 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124844074 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106217435 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101464451 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127385296 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105026144 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187371869 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106769576 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103640485 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124678198 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106306175 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103755155 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128743528 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108851194 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103655605 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125090457 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103824263 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105318671 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130610735 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103705131 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109819553 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122659764 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105060624 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103165719 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102524956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125535277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102732947 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104687236 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125658207 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10327571 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104145364 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122707194 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104882303 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101424733 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129134508 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104697473 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104602535 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123440774 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111068376 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107834913 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130587157 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110515332 seconds)
  done (took 7.178111708 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113830737 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103813424 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134006892 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102770163 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103951253 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103729106 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125260718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106083595 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104185479 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122492038 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104565637 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10474132 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124934322 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105664799 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104306516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124591005 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101401183 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103835936 seconds)
  done (took 2.864673545 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109566851 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103652017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106217865 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126084171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103683711 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102787364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122069675 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102936387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102212539 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122773595 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103810359 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103498518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102845139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123551816 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103959501 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102746141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123515982 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102695283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103376952 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121775355 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104583402 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102173347 seconds)
  done (took 3.274013745 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114378244 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185121489 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108693765 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194227613 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099083283 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097717506 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130402759 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09985963 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114909383 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.1208619 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099335055 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097806168 seconds)
  done (took 2.334750806 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130604312 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141221647 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124368281 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103981451 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112347652 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129582622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109010419 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107120021 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137362863 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118629541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127938061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116586866 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114968634 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137613835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111819168 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13164077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107982603 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107896426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123509628 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122869865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107797652 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136793576 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107555963 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127316343 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108872653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115985302 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136069715 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119996793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127597725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116554588 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111511708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128659167 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118945789 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138847702 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104178824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116227288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127903869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123262999 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111391616 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137449194 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103919208 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132833 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116473267 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113449897 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136098425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108137743 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135099199 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109776354 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108663621 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150487169 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113831112 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137493131 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114142176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1155184 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135880575 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129449099 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142693792 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116259942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132333842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121829158 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115320127 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135296748 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116130226 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141194288 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113018949 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115862706 seconds)
  done (took 8.928558576 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146017408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104817025 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129854267 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120923054 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138228031 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110339921 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108075204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130403413 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110431339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105407858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169975284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108377282 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1379127 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117648792 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109698938 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130150327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109794586 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116544284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126710856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130616706 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129195148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117928986 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114942439 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138041483 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119512918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134678885 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108672912 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108237129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129852237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108320599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133785177 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108980286 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116346739 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124979915 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117496796 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107964862 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130720878 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114191692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108928181 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133891805 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118892666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143959633 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109326303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109421898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141722922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107639701 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129284236 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10623705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109018501 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124498554 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121712793 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120490908 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14203806 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116145449 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132194615 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110080847 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108536758 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130629311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109781396 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112753154 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137698829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10967734 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150971193 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109914369 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108289941 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137772025 seconds)
  done (took 8.909524808 seconds)
done (took 169.399674972 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149778633 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187328287 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145913324 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179752916 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095332091 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12964514 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148507817 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147196398 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115754983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096919909 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095070082 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097150532 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183762425 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095848559 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094926744 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119597804 seconds)
  done (took 2.958202706 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193560916 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.309908933 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1100128 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121590497 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102849249 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098941542 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121862947 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101921501 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100318741 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129485063 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100090951 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095994786 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127495686 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095694697 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099542133 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120222883 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107038915 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099120741 seconds)
  done (took 3.120580709 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120435963 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143160906 seconds)
  done (took 1.152099294 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131005691 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21218313 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282212587 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170114827 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121382715 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140970677 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148512686 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135063656 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18894754 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13491176 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113402432 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118819643 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.126101377 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107903825 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13879112 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09861725 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128416057 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136247172 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114475384 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101050823 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145450023 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10390559 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.126788135 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115889844 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179370616 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136894292 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10420252 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125394873 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103328155 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114010663 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129955703 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117902129 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133516513 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158885089 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12544623 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155346878 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128591948 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101467337 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112639743 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122135881 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103948543 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125862817 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116487082 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097973225 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.125050507 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108091697 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10424948 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.126232158 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109699647 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107328621 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13183987 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10848837 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176078958 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107374616 seconds)
  done (took 7.926117666 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.877158411 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141167241 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099865824 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.024772633 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152281837 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115669385 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.894795448 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125392296 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25793521 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.894442122 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115282452 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.137159878 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242536515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283967266 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.269356184 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360181519 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.736231807 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136371952 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132041536 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163929201 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110852923 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127720776 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145667445 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51701013 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103553853 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099998244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131166659 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115534983 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179337848 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101589778 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104932535 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199505998 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29602716 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212011708 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101863439 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123228922 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101119863 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187925121 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274168784 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22157085 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198233831 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098304525 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100395559 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133027806 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121674952 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098459178 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182245818 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194167764 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195048389 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105209263 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137024872 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112345536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108409868 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180157641 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120834693 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362107675 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366544193 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100817657 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133688689 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116727004 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274875979 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125434108 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240439459 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130845488 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219236357 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123992921 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836820226 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164365209 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123145143 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108279303 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131155323 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107985273 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109096655 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190997308 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49735618 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11518099 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105809688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122926875 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236187447 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102778937 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101152495 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182927924 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101209128 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133475034 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116291572 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135270631 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169530624 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272925281 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136815173 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112663279 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106863244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137385512 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102658063 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236838016 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231811721 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177423729 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233741631 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1105692 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184398748 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187508321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10907413 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192183405 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110253118 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140000356 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109365641 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227979359 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158732255 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106193918 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129168389 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11253222 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159856218 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107079797 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112150233 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190183859 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555287173 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187826761 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100116115 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106977312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133790842 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159069201 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132550306 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266000756 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112322619 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187811875 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108099686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121290437 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111703395 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184475902 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111435371 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133815178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110651617 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132427053 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259268695 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225176379 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138213602 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25554131 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.200780752 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111118527 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194423958 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111828131 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193301354 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112766945 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134074121 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103625407 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823585608 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139033783 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11211728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107868638 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209039108 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102198407 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104430135 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125347788 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100288289 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814996074 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105217538 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122186981 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104275326 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110081221 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132861902 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111576551 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128934147 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160695973 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270116018 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115611238 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10857021 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125515158 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180869465 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104008328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103085034 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10195564 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127200629 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110976253 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128896625 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106398312 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193789463 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156436588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254099092 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.65584792 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102572858 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102375022 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267707245 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102807918 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329920904 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11118812 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259876753 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165896427 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123112731 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362613743 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189726898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187905769 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128530877 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169982094 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123058362 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111379005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182089409 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102387372 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131884456 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157393603 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140822912 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115934512 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280338612 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126334055 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253031311 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100573355 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189594128 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104452181 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110404468 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350512102 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103524571 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119914415 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183717786 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107859895 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127287396 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.629815806 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104979051 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114174157 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133691685 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236643785 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186754631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112460595 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135042695 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116935678 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183840701 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23288989 seconds)
  done (took 48.354990569 seconds)
done (took 64.397453069 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266346376 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177264557 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.284672093 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178117644 seconds)
  done (took 1.890105052 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.243498581 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156163519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.201479452 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.121090406 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.205259935 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121300674 seconds)
  done (took 1.964474415 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.176499032 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168339178 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14570942 seconds)
  done (took 1.402818814 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200830666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215595881 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325743289 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257418138 seconds)
  done (took 2.003396306 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.263384226 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116937915 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125480234 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206620618 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.219960953 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204802822 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123127323 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173376214 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129877779 seconds)
  done (took 2.519191363 seconds)
done (took 10.693625578 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.381512538 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.251048352 seconds)
    (3/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.329617679 seconds)
    (4/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.144710416 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.213575312 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.109009658 seconds)
    (7/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.209891729 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122961762 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.280333872 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.319902454 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110283155 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.259474952 seconds)
    (13/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22493458 seconds)
    (14/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.332226412 seconds)
    (15/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.249547037 seconds)
    (16/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.258034551 seconds)
    (17/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135330832 seconds)
    (18/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.190720356 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.155048762 seconds)
    (20/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110965609 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.208244241 seconds)
    (22/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.221883548 seconds)
    (23/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192793356 seconds)
    (24/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10683085 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.261327262 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104416436 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.081713591 seconds)
    (28/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.152031044 seconds)
    (29/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.137580933 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127084519 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.143179371 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.224467646 seconds)
    (33/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134803177 seconds)
    (34/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.12615817 seconds)
    (35/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.160577119 seconds)
    (36/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208363478 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11904492 seconds)
    (38/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.223500087 seconds)
    (39/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076984617 seconds)
    (40/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.234210638 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.213983598 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123860306 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12663659 seconds)
    (44/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.085827491 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.192206006 seconds)
    (46/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078950608 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.178997039 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.101838846 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075945399 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.136012902 seconds)
    (51/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08103031 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108506859 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11538066 seconds)
    (54/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.165536113 seconds)
    (55/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.166350652 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.102432445 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127436235 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106617721 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110819042 seconds)
    (60/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.24202776 seconds)
    (61/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17089878 seconds)
    (62/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.255192405 seconds)
    (63/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.076532466 seconds)
    (64/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.186702887 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.289887685 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.145836869 seconds)
    (67/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137254797 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075646768 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.256593222 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102106016 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148069048 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.185048788 seconds)
    (73/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130058639 seconds)
    (74/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07764037 seconds)
    (75/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106860094 seconds)
    (76/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.129288206 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.103181768 seconds)
    (78/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077082642 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103265768 seconds)
    (80/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076906012 seconds)
    (81/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.076655016 seconds)
    (82/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107369194 seconds)
    (83/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.167550194 seconds)
    (84/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083594499 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.145616278 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.188959843 seconds)
    (87/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083448837 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130632107 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1301909 seconds)
    (90/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083983365 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105890363 seconds)
    (92/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.107766066 seconds)
    (93/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.139130882 seconds)
    (94/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080117338 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083658775 seconds)
    (96/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.162115388 seconds)
    (97/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083944225 seconds)
    (98/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109943939 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.123495286 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111110874 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084582849 seconds)
    (102/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108620352 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.125724247 seconds)
    (104/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.166191609 seconds)
    (105/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084110023 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131044623 seconds)
    (107/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080231867 seconds)
    (108/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110902315 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102565467 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.15135648 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.150177159 seconds)
    (112/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148624715 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.12640999 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110926174 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.142453154 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085050294 seconds)
    (117/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.081094852 seconds)
    (118/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.172243373 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.108145515 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077584005 seconds)
    (121/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110238342 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117329028 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.155692835 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085457331 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102951563 seconds)
    (126/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.106083044 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.12879804 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109343101 seconds)
    (129/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099948517 seconds)
    (130/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.154041842 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103547477 seconds)
    (132/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077801459 seconds)
    (133/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.158180101 seconds)
    (134/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.078980218 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084698984 seconds)
    (136/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080238892 seconds)
    (137/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083346099 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161711751 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113164022 seconds)
    (140/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09972366 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100635178 seconds)
    (142/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078340524 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080974438 seconds)
    (144/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083339217 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125712089 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114345231 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084770177 seconds)
    (148/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12337412 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126626393 seconds)
    (150/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125353438 seconds)
    (151/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076998661 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083950693 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127727893 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111438681 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100052905 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.135748995 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10374192 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084642082 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122372641 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.084324408 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103653967 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080154115 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07998183 seconds)
    (164/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.163207895 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077909906 seconds)
    (166/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.160154076 seconds)
    (167/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126962021 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076908766 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100699462 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080118721 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.108949073 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085115027 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109210197 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107986309 seconds)
    (175/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128896987 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123100239 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079399454 seconds)
    (178/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077172317 seconds)
    (179/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100863048 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104393457 seconds)
    (181/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077697352 seconds)
    (182/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080737458 seconds)
    (183/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.104217629 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110323471 seconds)
    (185/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108955652 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083616007 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145672191 seconds)
    (188/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.08259933 seconds)
    (189/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078770672 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099971393 seconds)
    (191/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.101067907 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101839448 seconds)
  done (took 26.428015462 seconds)
done (took 27.351403906 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.206903907 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126613543 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11088387 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109444333 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.201783288 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117653824 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149447781 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11192347 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120374165 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134200477 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101732585 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122738379 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133198581 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.181562367 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137261208 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104670668 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10217287 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120266349 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.15090383 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127358524 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.203425724 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106203552 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119509741 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126947557 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178537438 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131325929 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112134092 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111207261 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.148229494 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112709458 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110946752 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.1274529 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126758088 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12510461 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125907729 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112342034 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102263912 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084963028 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13658141 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113326854 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123644545 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135688124 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111997216 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103011248 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.137309229 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112263535 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102617228 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137825673 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102755346 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111145519 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130577958 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.1275795 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110517258 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124488889 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102995208 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104380155 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144940692 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10448276 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124884595 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126267537 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105144726 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103138961 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112595579 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126816675 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112014129 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103199276 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.139583174 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114127414 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110445004 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130126055 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103837069 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110179969 seconds)
done (took 9.892713081 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108687976 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147287488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200197824 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211219676 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130948486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142860257 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116790793 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126923703 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138944799 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122365916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141015626 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158688345 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182463546 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144533046 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117925498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139078259 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115718408 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111610013 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.208820678 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128357539 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152542836 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120634722 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129296001 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14525736 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107695926 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153916839 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112364409 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115554912 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129967379 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127247971 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126539171 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129959577 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111469701 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124473307 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147871363 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117780576 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118486703 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138814287 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109408607 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106597727 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139365774 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122987309 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106988861 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144083537 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115261249 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.144674449 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115484888 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120129757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.130408083 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115444213 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107990089 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15582527 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12036799 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123451167 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.143185126 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119961214 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119841169 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143373344 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111694076 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118461259 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131468233 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108422197 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108646907 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152762655 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110898825 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119834694 seconds)
  done (took 9.620219745 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127941519 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137938959 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.1424189 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11794663 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11305531 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125708141 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102000497 seconds)
  done (took 1.83191609 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104201575 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18686239 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210347566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209777781 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.206867396 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195098238 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151842713 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103401543 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137379509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137408963 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185941192 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238624952 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112472354 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143527504 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212786267 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10328202 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.215213553 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103915335 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116404563 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212661264 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120732147 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161638986 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116610215 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102844197 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206368575 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104389104 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257373425 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14587516 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113295212 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116842713 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14123609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18345417 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208302661 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116789233 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110085805 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210441921 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206599279 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116716172 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220991268 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107847881 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206912254 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116663047 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.142405395 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118902788 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117383027 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.19586611 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121122355 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.1438244 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118386698 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214504233 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114413458 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209639747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116019937 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117190233 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.13939027 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120772478 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124775917 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.143592011 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191050681 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146461948 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184340921 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210873851 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.208888287 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187342566 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154036735 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.18743482 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205134663 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116726023 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138564853 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120395839 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213338381 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116847378 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139402581 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176691249 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144896539 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.187635807 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.212228705 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11537591 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14226131 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108139966 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116695713 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103730118 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.221868404 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118292151 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142279994 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122957543 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141033614 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120077692 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108416575 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.154217479 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118439388 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114441133 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146341945 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11857572 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119862797 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214985984 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13995214 seconds)
  done (took 15.837547644 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106230614 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104197693 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.1091538 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129238974 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105245346 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104605134 seconds)
  done (took 1.640672643 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143018957 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119406171 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150444304 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120182193 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1851784 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.191294948 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.219217311 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111960234 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15990177 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127782955 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217710521 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192436782 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.217515331 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121354166 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.220869288 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119647806 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221496236 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140686869 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127782689 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114896426 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142920755 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122890331 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115962055 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208989106 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119575697 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146068173 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11442164 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125696682 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151470072 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114146754 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120350434 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143400856 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.132556493 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13659121 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197548481 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136914229 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115557382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11984442 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.145385898 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120100518 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.220354594 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116033206 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124169438 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146711283 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114468112 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111017478 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147072379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112690415 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.223521841 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121275494 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.145394767 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120989295 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119665354 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146497617 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112545534 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11285335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146529465 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199837463 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147608359 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11116379 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117702882 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144586939 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113461454 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.146888492 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12092953 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120987562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135743358 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121121528 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115734179 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142582357 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123004558 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119328448 seconds)
  done (took 11.264994811 seconds)
done (took 41.154164522 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.458463482 seconds)
  done (took 2.43942967 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.893736613 seconds)
  done (took 1.876588287 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.884681541 seconds)
  done (took 18.89893223 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.42609325 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.463565029 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.166051406 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1473017 seconds)
  done (took 3.186048376 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.817688839 seconds)
  done (took 1.823040558 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.325134343 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238753574 seconds)
  done (took 1.547813827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.712839857 seconds)
  done (took 1.710381256 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.513611124 seconds)
  done (took 2.499398559 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.285218914 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241434104 seconds)
  done (took 1.530868018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.606287701 seconds)
  done (took 1.608894631 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.305254708 seconds)
  done (took 21.310180314 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256732563 seconds)
  done (took 1.263218956 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290485543 seconds)
  done (took 1.29682826 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.462332469 seconds)
  done (took 4.470441067 seconds)
done (took 66.457294796 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116320058 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117698689 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.139895904 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.116591421 seconds)
  done (took 1.485296531 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123741848 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119327503 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14514573 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119593272 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124978127 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.142017005 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118424036 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120398806 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11727999 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14523588 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119393534 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116615924 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146062777 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117529139 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115190588 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145508998 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121263309 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117607569 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144075457 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119965035 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118262799 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144194497 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122291155 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12036056 seconds)
  done (took 4.053980121 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115136054 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108577639 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110516106 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132580706 seconds)
  done (took 1.478395632 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126436644 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130607376 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154246585 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125866113 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129797465 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152547645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117421016 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114281472 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142322551 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126910344 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134637981 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156270265 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12994267 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.144737762 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129629337 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113019368 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117096122 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154223668 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125060332 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150264138 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119882118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12518981 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147103192 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12738773 seconds)
  done (took 4.201027448 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194648002 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129082626 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174664099 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16356146 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176467315 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11685351 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143739695 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150583389 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124837448 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.14552354 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.12266562 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1618106 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149618543 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122327763 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118958793 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14908586 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131568183 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149139401 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.164699641 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122462192 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149926004 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12989256 seconds)
  done (took 4.20611079 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122666213 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110088121 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129676756 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111009226 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122286338 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136569607 seconds)
  done (took 1.752001237 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10829626 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104148027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103750444 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127396003 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108186404 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102893238 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125653356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104143206 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104616281 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102600609 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128456819 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105000298 seconds)
  done (took 2.337190679 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332266829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109320582 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134317775 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111757705 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113549239 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105571264 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145989094 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108183449 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26716019 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103381338 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.132183574 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19582385 seconds)
  done (took 2.878804814 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200823175 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148078371 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251181372 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383682652 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184360067 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186694742 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275663491 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18963414 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20224295 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136748545 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210657635 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161184516 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178234545 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183252366 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166569499 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157705999 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188193177 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20518732 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168462159 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23588367 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156476871 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200932993 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187119148 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174688019 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138398428 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187800342 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118521327 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15239589 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166554025 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189395657 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171669351 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176149329 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139847083 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214844817 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257541545 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198766762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271775751 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132666169 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191831064 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194376655 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257509827 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169895777 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213080255 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15293553 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129513573 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209675027 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176443491 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18495306 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158403804 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144603459 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207439519 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177217901 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200983365 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134204451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321482725 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158925193 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14142617 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205155456 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186131571 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225256364 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20356433 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123535442 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20374153 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214019519 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210602503 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167695992 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163741048 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151689144 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163674414 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231598436 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207302233 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158676671 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232284207 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158470047 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171196306 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199235525 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152257307 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2324662 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197879996 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119584879 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175356319 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135759734 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125536468 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216974999 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121409646 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241395377 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130332271 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34464762 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209928766 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155015699 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188112211 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183218471 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162827751 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173919885 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101873135 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142415081 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187163576 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156624154 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156112425 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154945362 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166494219 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126871051 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148710139 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149093456 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168396578 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159103141 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161191831 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194744803 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131900798 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203986335 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147479382 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189829728 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166870488 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220566749 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130818374 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160977951 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245394358 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16832318 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164527936 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174416113 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221762007 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147452296 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160945175 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163843293 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220248827 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169693716 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197094827 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164575548 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134180816 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.164507612 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172564814 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187551508 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153618839 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153278576 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164128336 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21738727 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12690964 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16477771 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178960635 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160658303 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124840349 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135071796 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161979112 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140662023 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.175137512 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137259801 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178460704 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164701523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192190388 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15742832 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161264199 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171240339 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15819684 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169272826 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174379933 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11958015 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201833291 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194657364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156161812 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178799126 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190543845 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210786075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172830625 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156179931 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18324199 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155219086 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121547917 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186313545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172133057 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188826433 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186601518 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209013634 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189339102 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162033856 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174941181 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193000227 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181765228 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182557121 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14346659 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20048144 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167012796 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147827151 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125291761 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127632093 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164143565 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130529114 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137079736 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204200185 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190768626 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205243004 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168097205 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164244511 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189479416 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153175347 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159396116 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202140188 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137841614 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214803295 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18904588 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206240986 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166762678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16273392 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120143611 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153123962 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132134101 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189404715 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13702224 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160657453 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142653774 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217227125 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171541712 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17529759 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218680132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165310408 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227419807 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119701776 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189363547 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168168081 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195315409 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184440262 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159416764 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161119315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221730044 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141335806 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219273437 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193641814 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178841476 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221632761 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162194566 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158578387 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146856364 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188221778 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137183552 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190561364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14565827 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156519387 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151940133 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137402917 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167569334 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213722942 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144157455 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205849958 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157328769 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197463236 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124632441 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169537648 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175306856 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172658333 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104202758 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196450551 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195875924 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178035339 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154014112 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20101359 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130277679 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344408209 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213581169 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175578923 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163732231 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139487152 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197774268 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161289538 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189560471 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184834677 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168511736 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23155879 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168654675 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.16844799 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133022622 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147188917 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178772939 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137979254 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180306417 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161481809 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171816774 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212512504 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138802282 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194846251 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177030836 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173001329 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149970942 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137289845 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251743372 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193984073 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171006358 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191913408 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164758364 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210851023 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12372005 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154420599 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133397132 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214458017 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130623988 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204010941 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179631487 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211964682 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201501097 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161845656 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170427618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128862508 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195648505 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149045984 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215685346 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134687133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165392725 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215469464 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127972684 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130421501 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190992914 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309248195 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148096808 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198061747 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106502748 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305089218 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130417531 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131862384 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191452561 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167522516 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161188529 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181838973 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200896202 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140655086 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19041067 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135064648 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207862597 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213154434 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167097462 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20245858 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146067867 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191234568 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159540013 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203827754 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145916754 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176283819 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157990891 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223239312 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208257241 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132970254 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196634552 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168759649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198196224 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173339986 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168161656 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181939991 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154264178 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164589724 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165328238 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124906795 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160415237 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.205880038 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15672932 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174884882 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19770858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129479609 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154992408 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147131014 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19135903 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140915657 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128130961 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211379133 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127772959 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208875302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237170112 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129400995 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193738821 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147161199 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129323223 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166447224 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143794952 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161443966 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173679279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208352816 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132814827 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205771639 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165388991 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191683102 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157419036 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172074054 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.333298687 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155859133 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190918527 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178522456 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196251935 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17874371 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174482337 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19788869 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147668475 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192135134 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146719013 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.250186577 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191329441 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166822533 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130931024 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171577107 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136829996 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163392693 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15240028 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196682348 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140856063 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.163573556 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168334267 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172897787 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149118876 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140264014 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22813745 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179141384 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187379011 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216486076 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137567882 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204461705 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203712072 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129585313 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162680976 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197809395 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144526168 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180923884 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13418035 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166541924 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211161206 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.155579067 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15893451 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201994468 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168064657 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200150667 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134417738 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20786122 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140553743 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205557294 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126679941 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181172968 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171400949 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163658348 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127069678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198978861 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159850882 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192490966 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141604896 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176946633 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218959337 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123587425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162511713 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306257431 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160429007 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223148981 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135037418 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164937892 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147465809 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158596664 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191943825 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197327565 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132381281 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129253936 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173689851 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156309972 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171205301 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16930311 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213686661 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159259816 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212906885 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13345352 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284172564 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140858005 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199425913 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115799752 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128664084 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171574077 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133988065 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170628594 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212056096 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214076082 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192381759 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147969505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163946813 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127662748 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129605356 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193429152 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149387567 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19731284 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147833536 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130813661 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141038829 seconds)
  done (took 86.247289159 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161745142 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153340752 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169872562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222986846 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196171641 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290709525 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229103933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246441865 seconds)
  done (took 2.775336193 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121935813 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160579652 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143746271 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143449598 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109459531 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.446981873 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158442901 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120707216 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161475452 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1512932 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136193068 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.555062489 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117412863 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143053447 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121369827 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134663781 seconds)
  done (took 4.020620907 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.138115505 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541028818 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.916401393 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293611239 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.258720905 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.203357768 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.739612764 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196170306 seconds)
  done (took 12.385270994 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152108846 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145043857 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.371370631 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.27304488 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.205218935 seconds)
  done (took 2.253518155 seconds)
done (took 131.073276729 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122414206 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122460539 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123132282 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152136727 seconds)
  done (took 1.615268918 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.17395626 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08990679 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092355632 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11700473 seconds)
  done (took 1.579075994 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.509012123 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091024803 seconds)
  done (took 1.732326138 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.1523605 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136131557 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165523449 seconds)
  done (took 1.572831554 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142438248 seconds)
  done (took 1.251276265 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130576779 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126079327 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.228497538 seconds)
  done (took 1.597616017 seconds)
done (took 10.460026312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120551557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.929669813 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433141353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133075342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710640578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427530629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.447314077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176038375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175835192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138450209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132178911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691310705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.463988039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878495279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.418242759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904150617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693363573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111095004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145214282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111692217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.453869608 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109788892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110921055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111292452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718556754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41976432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108996849 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918945275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10875338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140222683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399692178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109856618 seconds)
  done (took 21.052845806 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119031904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167315599 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145932713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11162959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11387794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139747201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121949164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123043955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202634612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109601863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160082033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109483379 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114712693 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139354418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135873158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109427393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141627747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113064943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117085999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140462573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13297455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109340371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139511099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113352078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110230273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159303063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110461404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123076032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138676355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115685088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113903761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139124774 seconds)
  done (took 5.255908705 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158350388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176924194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147927204 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147351022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18749195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113360942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225349003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148864082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20404376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114600248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13197863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138852557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152456096 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110796097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165481353 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110586467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139348747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11451131 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120440127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139139216 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134766658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109886366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138669219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113736755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110533888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160456795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111277441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124207652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137470421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1143266 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115141766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138963343 seconds)
  done (took 5.573869144 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12518164 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126067011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132128073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162383016 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119533811 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123191305 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153586997 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120072507 seconds)
  done (took 2.181546519 seconds)
done (took 35.178877155 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13549231 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131277895 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130186877 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153886904 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.188383067 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147004239 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12812473 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118725933 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152464409 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133011032 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109690604 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146104683 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130163511 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120795436 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218627348 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126385614 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.225010182 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.190049386 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.149717911 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126237464 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119382098 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223695937 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122749581 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.148488077 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191911948 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.143229068 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.184847755 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.150808037 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121631033 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113256133 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.221196369 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123645125 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119305652 seconds)
  done (took 6.056084129 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206236716 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.122076805 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149010078 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118971272 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120959147 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148243717 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.20877594 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149209814 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119279384 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11944572 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117851391 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223266671 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125490912 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145136968 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12249236 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108326582 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238150964 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121446706 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110633856 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.121661865 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114895337 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118808952 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250196518 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116210739 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.146659625 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120000851 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123162267 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123493047 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150310924 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122096806 seconds)
  done (took 5.413541886 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126030437 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132924824 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165683443 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187831366 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148569145 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160923276 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140432073 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133350666 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169722705 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113649011 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128190039 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178839942 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128789546 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123568049 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146208999 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132142076 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135686545 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14322841 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121548626 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130193098 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163586869 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131379055 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135836852 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150891097 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112638799 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121487584 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153348188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128420156 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121080935 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156838887 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116765253 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116522845 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14444289 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148794061 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117238627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158108866 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140194759 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125691 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15668015 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145223493 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118455721 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145210642 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139299796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.195830427 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115938167 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126149001 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12476569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157543167 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113260658 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1321232 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185915579 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117289595 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.163337113 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11401869 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113955106 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121859291 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143408617 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118041739 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127778009 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145359559 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139125143 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120745791 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153174627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116686508 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124074791 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.14121835 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113699534 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118234642 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.167486076 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122718403 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149046284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.140996001 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127006885 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125510689 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124064866 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15430309 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114082046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124178996 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154122994 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120097643 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125926698 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145420238 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11839956 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131041714 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163688581 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.1290559 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125142864 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156186639 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118281138 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115889732 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159552897 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115927861 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119310625 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155504763 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11543667 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118044172 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.15464647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12690654 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112087368 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137534099 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14676037 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114087304 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140355389 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146134373 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120102525 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124066249 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.185567659 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114418566 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125448985 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156683247 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114567216 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121360209 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146945058 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113761512 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13068484 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158770017 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121896476 seconds)
  done (took 17.023383455 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.317281206 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.273206804 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216420546 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.246500285 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12676126 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238661365 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.301358105 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.304356194 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113585227 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184816854 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168105803 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.275453493 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145327553 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143516521 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.306285895 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.361238022 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173648296 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.155028186 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181890458 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129181818 seconds)
  done (took 5.506163303 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137318381 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150411077 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166757194 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142307491 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124770264 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159041232 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11606876 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136994068 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154878341 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12553551 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115878768 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159746543 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12736575 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131011539 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159276251 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145299679 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121610008 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149490016 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13688507 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119066882 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.1310648 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140445697 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.152040829 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.138259676 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13388565 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154006208 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115171768 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119748872 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120927192 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152653012 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12033745 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132353871 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153776984 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108486471 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126469753 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159557783 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121334145 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118315186 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.147895907 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11949442 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130424511 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.155882242 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123453493 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097770789 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132138756 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.137683493 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.131181263 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126930726 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105406193 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16420629 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127092623 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129785738 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151983248 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137467604 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121362031 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161519075 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127224923 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129109851 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149006345 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113652004 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11202353 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.148430945 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124050722 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129352815 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154878686 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135015373 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130360997 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.143777336 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12112968 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117999212 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.147007018 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129126154 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134071302 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.15441596 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122776823 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126711022 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.152611855 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094959453 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124727269 seconds)
  done (took 11.757387435 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141118068 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124652468 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161187377 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151999257 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128364225 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149336908 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126017188 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134946998 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13069082 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162030757 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131177269 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127891692 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166039119 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125309504 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123987397 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159494635 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128650005 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.180864874 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133992669 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142686556 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160203296 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120290261 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126924562 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156284667 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144053531 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125859659 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172332724 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130479758 seconds)
  done (took 5.12673262 seconds)
done (took 52.011407784 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.314889776 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.47270554 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.25222194 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.248921477 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.284681724 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.286203132 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.249912107 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.263729073 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.612628982 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.2247538 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.252176538 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.256746582 seconds)
done (took 28.87281769 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.325764478 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.779354853 seconds)
    (2/2) benchmarking "String"...
    done (took 1.550822398 seconds)
  done (took 4.471352056 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.240442623 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.240987494 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.501048229 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.242268197 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.257646125 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.241575887 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.247777568 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.249694202 seconds)
  done (took 16.121667513 seconds)
done (took 26.302273916 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.285202849 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.434602912 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.483678814 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.257937862 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.256012226 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.245259799 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.248801976 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.263208953 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.251343265 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.250357691 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.64388549 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.513902512 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.262580001 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.628366784 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.255995829 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.271764494 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.242329665 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.463359068 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.240942449 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.272639216 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.21912799 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.230637618 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.25963468 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.243612998 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.24725808 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.254939436 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.304981162 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.245103907 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.42598549 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.264200302 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.27228887 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.24698962 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.307369349 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.245589718 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.243407593 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.260941652 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.428599793 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.24885558 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.230856298 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.26404176 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.431277052 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.256810392 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.247111739 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.242866273 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.250306686 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.287541238 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.239753094 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.358342277 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.270114396 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.244084019 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.325702039 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.601401294 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.250221294 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.257465629 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.254141349 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.458321272 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.260900437 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.296971483 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.271234968 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.256596698 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.248168298 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.251187482 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.263349508 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.262968946 seconds)
  done (took 146.446056401 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.244457524 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.2509767 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.249995534 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.258166681 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.249681682 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.254028033 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.244776984 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.244053395 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.252336656 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.261449162 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.252994861 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.247857846 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.251708194 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.203355669 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.255477016 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.27071763 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.251944382 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.263694471 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.261883848 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.246892521 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.256547878 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.252051364 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.247474105 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.248277463 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.292620934 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.322701735 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.285452187 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.284861302 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.263325409 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.246766166 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.290234184 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.259971076 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.858146187 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.102316893 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.266593523 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.272571481 seconds)
  done (took 81.913917106 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.249727785 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.248021724 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.246241869 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.247882963 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.279371932 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.248756646 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812243309 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820389143 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.222740655 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.285569671 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.584993204 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.489938122 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.253756323 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337886444 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.260213785 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.251256791 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.26375755 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.275147529 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.253360477 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.24758824 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.24890701 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814720482 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.26716791 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.424050437 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.264466421 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280944495 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.637792261 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.249374586 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.349539776 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254723738 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282848365 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.579665311 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.298551502 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.249326529 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.572379403 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.247027049 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364008959 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.251724603 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282111466 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.25074754 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.530821227 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250602069 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.250371593 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.254458312 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.877884309 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.255078303 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816851337 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.255814637 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.173442456 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.251694618 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.250007363 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.11807437 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.906276353 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.255411797 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.250695529 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.253894261 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.249850821 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.251263801 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.281672557 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.112800113 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.350242129 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.254502368 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.25121643 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.255518107 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284188427 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.250471714 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.367170748 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255810284 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.523332466 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.308876805 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357922298 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819068517 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257575163 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34586506 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368392412 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.250976029 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.25190599 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.251546186 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.252168671 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.361709334 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.252769005 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.925009626 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.427375331 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.270389445 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.589133077 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.355195595 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.253085649 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587544946 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.259279076 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.252840395 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941768676 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345520944 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.252460434 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.255217508 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252234059 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.928329333 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820760396 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490175437 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.259126843 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.689672987 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.260335447 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.108730372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803603368 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90557372 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.260090146 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364361895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.428789816 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.271864047 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.253737829 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.591424599 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.259944135 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.310507124 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.259436854 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.654965434 seconds)
  done (took 378.807866449 seconds)
done (took 608.311041971 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.131896352 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.08918823 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.238220305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.096803666 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.084299439 seconds)
  done (took 11.792667344 seconds)
done (took 12.945414383 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447603851 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.452995075 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323010262 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.454907919 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293669865 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.470836733 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435238591 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.278207955 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.36558632 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.343578363 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388498402 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.315597866 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.288912492 seconds)
  done (took 19.010870334 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530259356 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.267468043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.319970509 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509834059 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300212944 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533127383 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.565262259 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.267064616 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415217949 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.279812704 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.277012688 seconds)
  done (took 18.420696147 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534989972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.267743253 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323041277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516759004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304443316 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543917293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.567620099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.26650511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407483393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280230244 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278134321 seconds)
  done (took 18.444512342 seconds)
done (took 57.032455795 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.296100429 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.356115453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.294311394 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.276674854 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.275100262 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.274386083 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.277585704 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.273824778 seconds)
  done (took 11.478884629 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.272976943 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.272691251 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.27210466 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.272518118 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.272507968 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.274904377 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.271288451 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.275761024 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.274587246 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.274000042 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.274398665 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.27372965 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.273184672 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.273858665 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.273350012 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.273635756 seconds)
  done (took 21.531852927 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.276605258 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.273310949 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.273035188 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.273217256 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.275154223 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.275011215 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.276918108 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.272975041 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.274783594 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27571696 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.276643572 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.276211584 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.275141861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.274789857 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.275290943 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.276645382 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.275579742 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.275081728 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.279020474 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.275535363 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.275514619 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.277273135 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.274151796 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.274630106 seconds)
  done (took 31.764780894 seconds)
done (took 65.930055377 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.265978659 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.26898686 seconds)
  done (took 5.691853062 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.331860604 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.335678028 seconds)
  done (took 3.826777083 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.276864904 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.276956187 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.276391974 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.276078755 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.276179232 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.27575926 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.275235471 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.275916758 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.27586129 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.27626498 seconds)
  done (took 13.918607334 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.276731405 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.276411972 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.276018263 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.275937258 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.277761898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.276939541 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.275898181 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.275352008 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.276401212 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.27518264 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.278062789 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.276421625 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.27686654 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.276403929 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.278016955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.277588632 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.277260174 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.278340748 seconds)
  done (took 24.139665504 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.289926099 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.296758962 seconds)
  done (took 3.744764354 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.404946376 seconds)
    (2/7) benchmarking "second"...
    done (took 1.320307569 seconds)
    (3/7) benchmarking "month"...
    done (took 1.381317921 seconds)
    (4/7) benchmarking "year"...
    done (took 1.375310065 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.318963054 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.298702636 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.319438968 seconds)
  done (took 10.578105605 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.278840839 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.478110624 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.612414469 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.291983465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.279154526 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.282108306 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.465492243 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.281411675 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.284258343 seconds)
  done (took 13.412879269 seconds)
done (took 76.472435878 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.263336775 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.313503616 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.280785667 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.283523888 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.615945843 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.276909949 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.271037975 seconds)
done (took 16.466712763 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.243891464 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.247220824 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.255090312 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.288147298 seconds)
  done (took 10.192842334 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.275270568 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593331295 seconds)
  done (took 5.027594382 seconds)
done (took 16.382003151 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280060165 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.279317799 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.279783938 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.278804761 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.280081314 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.278461544 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.277897327 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.279273496 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.27899781 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.279592658 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.279783984 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.27952895 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278766493 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.281517928 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27868193 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279720531 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280792978 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.278658032 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.281166656 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279562365 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279544389 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279137447 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.279980696 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.280906292 seconds)
  done (took 31.870909447 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.281631539 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.279294397 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.281430674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.282249504 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.278537905 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.28193217 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.281949983 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.280134835 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.281866692 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.279809852 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281973271 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.2799054 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.28009036 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.280450102 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282187345 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.279330603 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.280590731 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279858444 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281905654 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.280285351 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.28119625 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280973118 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.281130071 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282959456 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.280297075 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281925777 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.281397722 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.280153842 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279979716 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.281401873 seconds)
  done (took 39.589175687 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.283332759 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.2809339 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.282805288 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.281039298 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.280428939 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.281150186 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.281626802 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.281295404 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.281420077 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.279752732 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.280662111 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.280734885 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.280946913 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.280990148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.280872833 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.279539736 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.280553567 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.280471955 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.281895436 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.280218541 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.28121418 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.279971992 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.280480904 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.280150764 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.280818712 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.280598327 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.282382718 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.281726497 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.280866705 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.281774823 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.281181477 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.279610538 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.279682082 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.279693835 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.281065483 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.281513566 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.282905412 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.28071648 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.282235899 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.280977273 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.281144834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.281943223 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.282790236 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.281365623 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.281039506 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.27984082 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.281476783 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.281595135 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.281311833 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.281742948 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.28292937 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.28045389 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.282490881 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.282097497 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.282669498 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.276488805 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.279795752 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.282777682 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.281376474 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.282990265 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.281035571 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.281511572 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.281743046 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.281620359 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.282407808 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.283308951 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.281114354 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.282149482 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.282986697 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.282088468 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.281629636 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.281844092 seconds)
  done (took 93.416100734 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.283804311 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282226439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283019042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.280133778 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28077958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282434687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282745108 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28100105 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282362853 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281620699 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284476486 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283492994 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282759211 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282954817 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282366475 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283054553 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282817945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28314793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.283954039 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285641263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284048744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282309753 seconds)
  done (took 29.383758249 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282067625 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283023854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.282722497 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282449646 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283872639 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284886648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282749734 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282651904 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282477942 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28350261 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281817703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28331923 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285141981 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282085674 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281213659 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283274856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28469984 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284342748 seconds)
  done (took 24.258018783 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.280951055 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.283752431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.282196867 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.282479817 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.281607111 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285434785 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280556169 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.281842721 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.280674975 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.282638826 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.281360797 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282600327 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.281699964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284106424 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280209482 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.281810621 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.282404834 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28132379 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283425086 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283830504 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.280928347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28487485 seconds)
  done (took 29.372751199 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282076025 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282871933 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282269842 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282125916 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.279760782 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281238937 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.281138326 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.282222073 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.282837201 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.284004979 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281196984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28212034 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285103984 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28261034 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.283234227 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282431462 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282547962 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283473581 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287589912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28258206 seconds)
  done (took 26.815881576 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283122733 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283658485 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282908329 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283701642 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283510808 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285479737 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284298138 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286630434 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282666913 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28365445 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283567426 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284532473 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284888242 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284296255 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284630745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283871294 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284366515 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285369887 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286264576 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285540374 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286529831 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285888591 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284327979 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285538446 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285413582 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2850137 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285540312 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285961559 seconds)
  done (took 37.133978676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28467012 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284106897 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.283240979 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.285345971 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.284933639 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.28537945 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.286645265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.284961282 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285144028 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286334324 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.28494705 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.287199605 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.286612781 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.285289759 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287622444 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.287185487 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28571617 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.28856832 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286347754 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28582165 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.286955292 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288428657 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.285840064 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285219309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287800404 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.287564429 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286561835 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286794595 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287232606 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286937194 seconds)
  done (took 39.750196807 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.305112411 seconds)
    (2/2) benchmarking "in"...
    done (took 1.306003212 seconds)
  done (took 3.775452889 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.287737881 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286533256 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.28648096 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288727064 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.28635213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.286414389 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.288358669 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288872437 seconds)
  done (took 11.465208639 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.280882696 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.288762881 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.288756728 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.288106878 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.289716976 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.281121959 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.288384252 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.293580466 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.280680166 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.282323844 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.281586114 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.281381009 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.283943872 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283785322 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.284290874 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283354634 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.293075127 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.288272185 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.289102983 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.28821778 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28879646 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282884251 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287223141 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.292180175 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.280913364 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.288475617 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.289512928 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.295161598 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28218097 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.288462333 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.283713228 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.292121292 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.290554639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.29104949 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.290338848 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.292235147 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292163386 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289593916 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.29229251 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294502699 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290383964 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.291709755 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.284159285 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.289612671 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2884788 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.29467226 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.289765765 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.291362246 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.284491557 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.284702123 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2932637 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282796831 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.291912093 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287428146 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.288881479 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294830288 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.298652099 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.283521822 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.285792756 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.291616295 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.29957542 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.294410815 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291276367 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.297333638 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289716177 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.291924319 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296023667 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.298879563 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.291674834 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.29203872 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.294444183 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302504688 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.299787666 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.298269378 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291812664 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.293796197 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286012082 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297293814 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.294759806 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.298527236 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.298020084 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293824797 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289267371 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292591038 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.289473071 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.295740425 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.294331605 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.293702676 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.284417428 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298354383 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.301861508 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.295992995 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.28734742 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.289318972 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.289072417 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.295333511 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.285507121 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289634915 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.298653228 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.29332988 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.294441513 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28685188 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.291285391 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298469322 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292875026 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.294624746 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.300639287 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285586372 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.297640256 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.299702511 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294076962 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.286640714 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.292411592 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.297077735 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286368992 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.290911032 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.297362968 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.288956347 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.297866641 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.295087268 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289309913 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.299213813 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.30008442 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.295993945 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.28660187 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.296068871 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292316622 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.292497894 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.300298437 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.295561997 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.292797175 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.291509348 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.300621198 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.28986774 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.296867167 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289779339 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.297064396 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.294984448 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.294973489 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.291675172 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.293208057 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.292100042 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.294418925 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.29923689 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.298054557 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.291902982 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.302499822 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.295491152 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.292736047 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.296126322 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.299310273 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295837803 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.289085122 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.298970339 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.288945389 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.295900542 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.288538591 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.297352672 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294063212 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.294967256 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295927318 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.289526624 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290217919 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.299511621 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.29377264 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.297276164 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.298053892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.296356686 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.296521746 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.300520438 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.298345085 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.287922686 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.292109501 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.297299476 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.294879117 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.297364406 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.294299394 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.30212496 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294617426 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.293655559 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.289715235 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.293147154 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.300376152 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.299464252 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.303501413 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294734495 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.294248451 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.289199488 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.29051681 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.297734008 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.287863509 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.299426102 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302075524 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302701201 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.291040194 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.297558046 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.289824975 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.298033187 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.29589753 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.303464567 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.297753711 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294055665 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289869384 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300805811 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.291556311 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.298349309 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.288518404 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.297478287 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.298338752 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.295788966 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294393546 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.288767266 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294420322 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.298435183 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296348042 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294751779 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.288268174 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.299851082 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.286532828 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.291089646 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.299038484 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.295040936 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.296573648 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.306341073 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294429238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.300741115 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.296756057 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.291568887 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.298746107 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294900737 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.296023737 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.30178271 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.297119474 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.294898611 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302807946 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.299636145 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.290380781 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.29922018 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.30500679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.298827064 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.289897014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.301160046 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.296891914 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.297479931 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.297579693 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29222704 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300109544 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.300449279 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.305001357 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.292299209 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.299532998 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.294657709 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.301771336 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.294181801 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.299755343 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.29871844 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299808607 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306499069 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.298652149 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291324513 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.303040343 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.301059676 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.298406054 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289948491 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.300720083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.29861538 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.299606653 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.296675462 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.295981322 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.299484197 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.290431345 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.302384 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.291737109 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308383296 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.313764807 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301744308 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.303420173 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.304356381 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300970808 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.301116693 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.293792793 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.294847516 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296646801 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.295158001 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.293398481 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.302615978 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294137355 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.302421618 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297650218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.301830191 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.301992076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.298417532 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.291823426 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.30410066 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.302256895 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.299829435 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.294340005 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.300228114 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.295823561 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303038142 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.300607506 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.2960239 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307141601 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304107021 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.299032642 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.297180969 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.298394716 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.294438426 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.298915345 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.30575635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.294796428 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.304618176 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.294815232 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.300468325 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.29800661 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306450625 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.312414686 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.293519276 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.305245914 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.300344745 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.293399602 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.295016996 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.306038865 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.306630587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.314091239 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.294540208 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.304711339 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302704448 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.304084474 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.302024887 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.30253652 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30347277 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.301689224 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30690964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.305967951 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.295994646 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302062839 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.311663237 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.30234855 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.301951119 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.295444463 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303557331 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.311988911 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.299133316 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.300365005 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.29733123 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.30506868 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.30323682 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.304399186 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.303530183 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.30344838 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.307072809 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.308594102 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305268645 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.303424211 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.306565709 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314280475 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309532879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.315443532 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.299647757 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.306959618 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.305758433 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.297724703 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.299634512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.300926856 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.308190002 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.294908 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.308185204 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.306429538 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.300822229 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.304157646 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.311725731 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.295255005 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302729412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313230312 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.296822087 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306522945 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.305358982 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.29653783 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.305480342 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.305606411 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.296574819 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.298190149 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299188222 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307912928 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.298712242 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.309283449 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.299902825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308167302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.305268134 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.3055157 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.305486913 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.30489695 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.297066216 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.305469308 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303828647 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.314926529 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.301092834 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306535966 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.300076915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.310689611 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.315090461 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.301451693 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310443646 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.30594432 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.298819045 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.3037741 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.31108519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298988565 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30882914 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.29697684 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299411934 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.299889405 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.308017704 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.309426326 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.308900628 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.297595536 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.29945097 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30870038 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.307586317 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306791933 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.301394566 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.312566534 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.299271541 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.299817353 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.308596136 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.300804969 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312331762 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297806292 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302433236 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30339489 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.311259913 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.306427496 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.306650875 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.297943589 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.300456469 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.312527228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310037711 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.300649619 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.300820384 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.308332643 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.299391628 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304307172 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.303041264 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.300404679 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.30282057 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.310872754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.303899688 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.301279649 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.301417843 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308953884 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.310009675 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.310460692 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.301722757 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316011339 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.315031944 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312654992 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.299966828 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.303825023 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.304006834 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.309866994 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.308210596 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.301241326 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.314751657 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.313396977 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.311371563 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308117068 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.308835635 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.299849857 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311283077 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309410286 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.304681362 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.31666222 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.304877872 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314491936 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308032351 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.309887134 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.300287483 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.303439539 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.303557453 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.30391694 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.311168417 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.309697255 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.312283704 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.307925594 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313988017 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30946524 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.308775395 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.309287222 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.301698657 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310900647 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.301637135 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.311301882 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.310233244 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.301554704 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.311147354 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309922549 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300836478 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.303908734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.312531787 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.307790413 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301998876 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.307763888 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.313670746 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.319351879 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.308536477 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303097137 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.30668153 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.313065152 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.309193933 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.311160075 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.301611636 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318268767 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.322486672 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304431933 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.307355709 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311327256 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.320323299 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.308988026 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.309844596 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.303782318 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.30784229 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.313773058 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.309167817 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.313758151 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315329852 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.30446742 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.311280985 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.30267722 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305398884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.312522848 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.322089197 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309568803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.304560031 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.317181393 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320646154 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307449564 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321193472 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319062835 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.308830421 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.316920411 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.301051376 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.311737981 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.305893398 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.314393752 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.311216751 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310581968 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.30973197 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.30192481 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311433422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.318449397 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.319584676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.308460713 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.302570094 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.305478475 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.312109279 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.31074528 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.311835835 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.310523739 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.309911939 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.311524824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.306773105 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320140688 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.32385851 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.31773029 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.311473244 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.312022615 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.311880705 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.315018017 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306073203 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.314351806 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.31088871 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.311437456 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.309024364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320410138 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.313803299 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.305251363 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.307187911 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305238771 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.314656636 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.31785094 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329742239 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.314840137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.314385427 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.313523986 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.311487919 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305110801 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.316611062 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311440783 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.305486141 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.306058614 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313095321 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.312286501 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.311080691 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.305546205 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.314723028 seconds)
  done (took 776.331206817 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.311857317 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312537644 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310589137 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.312005631 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312034323 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312861555 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312694385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.311877024 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.31206614 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.313345392 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.310564205 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31245201 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.312049969 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312131263 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311613971 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310516541 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31039599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314085529 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.310966903 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312789305 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312433536 seconds)
  done (took 28.73607968 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.313305563 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.311546164 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312540575 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314052584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310682956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.312766584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.312520136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312153417 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31168896 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312150477 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313086398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311677456 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.313294445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.311695115 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313517926 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312309563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31243345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313126651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.311445438 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312166898 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311987001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312896046 seconds)
  done (took 30.057102535 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.311801102 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.313277685 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.307009971 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.317860591 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.312081425 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.312394934 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.313123191 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.312540178 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.312290866 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.305059588 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.306636217 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.304912961 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.308083214 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.315533302 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.30923751 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.318247816 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.312889286 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314307485 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.314393488 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.31285009 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.31609757 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.323212147 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.312422594 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.30479261 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.316065517 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.314532635 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.312245221 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.312658902 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.305253485 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.315864089 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.312869227 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.30814217 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.316886602 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.315483054 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.305967561 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.315581331 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.314897701 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.312726651 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.313646839 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311339026 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.323366389 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.313495136 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.316547213 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.328411498 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.315272698 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.307601199 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.317323689 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.31379694 seconds)
  done (took 64.218702039 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.314651295 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.315271902 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.315129163 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.314599187 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.315764992 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.313287488 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.315055749 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.316250005 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.317159009 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.314405667 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.316840951 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.316863392 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314204074 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.315564793 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.314970991 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.314867178 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.315359877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314900813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.315098684 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.31529946 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.316157221 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.316207452 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.316690804 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.316715221 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.314736891 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.31585506 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313751259 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.315523173 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.316102266 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.315885824 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.316445827 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.315052491 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.314986466 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.315086541 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315656161 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.315487341 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.315501969 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.316141893 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.316224307 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.316097059 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.315318312 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.316381906 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.315635429 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.316606179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.314354565 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.315642748 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.314993435 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.316204607 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.315597371 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.31573998 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.31589589 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.316977338 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.316693602 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.315312399 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.31645067 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.316282898 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.314744719 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.317714578 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.316873203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.316982066 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.316620255 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.316792525 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.315697878 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.315449464 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.318157994 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.317156734 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.316279326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.316788268 seconds)
  done (took 90.663266914 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31619334 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.319310002 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318052105 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317679476 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318160812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.317579696 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31961945 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.317368731 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.317686601 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318567091 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319012478 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.317138481 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.319327388 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.317241399 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.319428286 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318019061 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.318174375 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.318988746 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317606432 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318243977 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.320130013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31844413 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320777564 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.319421242 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.319459618 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.319823518 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319617057 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.32065923 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320933712 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.320079669 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.319960554 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.320332261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319007223 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.319189813 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.320268284 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.320103727 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31907852 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320811946 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.320191663 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.319631174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.319657152 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32029322 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320809298 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.319836478 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322610359 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.320743216 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.321175462 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.319649551 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.320229394 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.320213825 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.322684182 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.31918629 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318611333 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320146735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.321838198 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.321501294 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320839561 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.321515987 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319914612 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.320535954 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32173077 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.321828539 seconds)
  done (took 83.006866528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320575169 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.321005062 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.32146842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.320129879 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.320185002 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.323404595 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32226477 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.321858562 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32016471 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.322520302 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322756348 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321644048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322745542 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323904035 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321480437 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323850287 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321903115 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.323824482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322664199 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322032947 seconds)
  done (took 27.630585972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.321496447 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322722279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.321841968 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322999988 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.322762094 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323315887 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.322714997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322459897 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322763065 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324911331 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323469958 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.324077301 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322312259 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.324008577 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.32398095 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.32495068 seconds)
  done (took 22.363546968 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.323127099 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.323035999 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.323868407 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.323832803 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.324211324 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.324472988 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.323867141 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.323836449 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.32461049 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.324751524 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.323099714 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.324786903 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.324493952 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.325096823 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.32530088 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.324172953 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.326376363 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.324193801 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.325660546 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.326290445 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.32705447 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.324481945 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.325052907 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.323975449 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.32550178 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.325603118 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.327043737 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.326404795 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.325693936 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.324861378 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.326813442 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.325874135 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.325907559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.32729764 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.325796618 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.325115124 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.326511741 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.326727841 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.325953392 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.327784801 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.325903748 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.325867309 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.328457477 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.32648598 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.326821073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.325943904 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.327893142 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.328988232 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.327304047 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.327394478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.326958115 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.328410646 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.327826871 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.327974748 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.327196843 seconds)
  done (took 74.112379965 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327181779 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328920534 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.327972407 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.327674449 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.326650438 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.327492934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.327377006 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.328070725 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327725355 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.328615425 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.329230642 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.329964153 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326751884 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.328335034 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327380298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327391833 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.328619926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328468927 seconds)
  done (took 25.099690598 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.329201961 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.329005656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.328568524 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.32702432 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.328535856 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329344016 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326827348 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.326836659 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328589668 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.327362109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327281366 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.328339156 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33076949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.328541815 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328576313 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327175443 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.329800887 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328822851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.328090671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328553552 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328889446 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329053164 seconds)
  done (took 30.421911746 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.318632973 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.319080488 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.318797656 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.331998594 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.329032276 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.318411131 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.319084546 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.318155153 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.335981075 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.343837004 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.338742572 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.326365781 seconds)
  done (took 17.115613681 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328380327 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329521472 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330034373 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330589827 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329797499 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331350285 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32952883 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330412355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329896005 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329478808 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329453651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331308588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331076794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330586928 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330319275 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332474336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329950272 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330752022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328946634 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329827963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329554114 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331462928 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33159616 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330106715 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330559877 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33091279 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331734942 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331757004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330679231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333345394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332396781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332001489 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332103622 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332425696 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331413479 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332482449 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332119538 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333012592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331942862 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331054493 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.332148774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333289458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334161928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333838576 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33213672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334982498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333128304 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3326278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332861577 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335495216 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333891344 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33391356 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332515069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333944257 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331813645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334504462 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334285028 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332808299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332876795 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333210386 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332683226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333775 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333517757 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332906466 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332480031 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3324831 seconds)
  done (took 89.103751902 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335977818 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.33457512 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334156098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334768525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333365128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33515151 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332681508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334670132 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335214374 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332375058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334309505 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334200671 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333220792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336004335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334042628 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335640993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334741406 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334886203 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334977647 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336532172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333614413 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336089946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335119433 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337310301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336293011 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335172128 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334930233 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33600837 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337454116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336490971 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334336181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337303852 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336376227 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336171115 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335664502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336424858 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336766459 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337080679 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335254672 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338284882 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336423965 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33723473 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33721128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337260391 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336093675 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337742806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336806546 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338086116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337720319 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337453833 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33846908 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338536428 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338307906 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336734821 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336753238 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338606593 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336075715 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338280668 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337060435 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337700434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338811917 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33892929 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339477969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338447347 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337827149 seconds)
  done (took 89.397877824 seconds)
done (took 1816.252905405 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.493305211 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.449389137 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.327919099 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.338777386 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.330162858 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.326752103 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.342601404 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.329510313 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.327280965 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.329381357 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.3283472 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.519692937 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.366150722 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.329545098 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.328987355 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.424885203 seconds)
  done (took 27.099237561 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.35594251 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.33724858 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.436921599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334220559 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354877067 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.507115188 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.392655166 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.340736065 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.486923511 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356933125 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.327694061 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.355105581 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.333123462 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.329580878 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.350057183 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.505131878 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567712786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.331461762 seconds)
  done (took 29.209082306 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.728057715 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328081687 seconds)
  done (took 5.265361921 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351427637 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.335652134 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.337526182 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.333452861 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.325915836 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.328073121 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.332817794 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.330640285 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.329567175 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.447668676 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.336583019 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.350714722 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349673727 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.336824812 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.342811113 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.379116962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.493175802 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.345565236 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.34144919 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.342505362 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.334887169 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.425894911 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.37351044 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.350648955 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.448465879 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.333184364 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.3450929 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.342368783 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.452429966 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.348137352 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.335510692 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.336016618 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.337534517 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258911937 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.866625429 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.329000426 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.35768473 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.345764056 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.345241404 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.485305274 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.339299569 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.345765593 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.328828764 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.873787039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446524312 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.458399759 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.35035463 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.361187963 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.339449906 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.401834896 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.338174672 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.334840409 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.391957765 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099638523 seconds)
  done (took 85.444486924 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.378171129 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.323563531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.497047581 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334685817 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317034587 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315770538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305084744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558558356 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316019615 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30514441 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610454531 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886778871 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.29742606 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.361437759 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.337602749 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.345410159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29085197 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.28946772 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.290637565 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.294345344 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833204395 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287112526 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.282035874 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.354594952 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.32127915 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.792547358 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.281179408 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278069714 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.295995157 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.276792509 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834726091 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.291151715 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.325168214 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.277613989 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.54771615 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640619207 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.595078218 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.27790319 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.296479724 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.274021626 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.298119285 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772359359 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.614087847 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.272194377 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.275771788 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771821077 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.272540158 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.286536158 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.274819971 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539199997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.276878637 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274590278 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.27513997 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.280574465 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.270333493 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.329853332 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.32699181 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782135678 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269330964 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.269980854 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314948406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.273259329 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.272057381 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273757246 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.273440196 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.617173109 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.514362351 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.273164417 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.609010374 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81818775 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.278317794 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893237692 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.271465976 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.278524647 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.298871441 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269947304 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.289804014 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777445483 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.288649921 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.26973398 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.593459179 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.275967926 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.565085985 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.289621417 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.27014222 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834209626 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.285014493 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.317794588 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.268677186 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.271946648 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.272789519 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273793877 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.549190922 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.318759377 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.270071356 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.272609165 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.284331386 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.269397877 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.285271495 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.279125385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.894650226 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.274909315 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.282544083 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.276674323 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272074675 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.289443416 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.273505209 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.272441989 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554149049 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.278194428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.280267442 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.274766234 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.272745033 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.28004132 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346805107 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.279603041 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.554310393 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.272303932 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274139273 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.277912046 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271606127 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.285214207 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.273690221 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.292884877 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.262776521 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.584317182 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.289933895 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.28854202 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273936422 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.275217289 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.273890097 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.275135998 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.325481803 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.275735678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048818464 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.318610419 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.320476925 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.272542659 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.284562049 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.280271353 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.277697868 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274494035 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567075454 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.557569273 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.503884638 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.278114969 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.275773804 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068076732 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.320168617 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457686198 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294948104 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.274846007 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55454758 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.5024515 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.278666277 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.274462531 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.275787253 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550912646 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.280601753 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594625564 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.856999389 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.275458577 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.269358675 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.04840952 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.078477517 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.271679495 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.268704353 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.555263904 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.285182659 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.264858904 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.265055863 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.267096609 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.266147158 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.271465877 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.270616555 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.26640983 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.265015002 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.60854604 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460117932 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.281301346 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.267806833 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.779240014 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290937922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267255726 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.279769935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.270438366 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.266240149 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.318001198 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.264544556 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.298955537 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.265369964 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.270682724 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804675032 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.270712164 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.272509542 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.459735177 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984340341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.272632437 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.268067683 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.266687662 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.325022809 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8109587 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.302446668 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.553977285 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.284601052 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.307290189 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269328339 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.284252774 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811224574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279550048 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.267850546 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983754297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.273338026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.693128943 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.267772811 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.273366647 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902528955 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274096393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.270214471 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.270108696 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.27018855 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588178257 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.269539518 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.277979225 seconds)
  done (took 485.133859975 seconds)
done (took 633.359867321 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.268854212 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.273437419 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.274237821 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.275270974 seconds)
  done (took 10.254616181 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.287359393 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.275124865 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.285447541 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.274150493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.287477911 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.275103625 seconds)
  done (took 8.847326999 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.269519735 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.275315626 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.274208518 seconds)
  done (took 7.983158356 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.46496658 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.300073132 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.60224228 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.281279955 seconds)
  done (took 8.812797182 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.286288349 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.287131645 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.287013043 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.288108171 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.288952571 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.288781674 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.28850051 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.28917072 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.288531586 seconds)
  done (took 12.754665423 seconds)
done (took 49.814712917 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.362692663 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.420133415 seconds)
    (3/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.25006836 seconds)
    (4/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.322942033 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.287740173 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.34401418 seconds)
    (7/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339153184 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.271093162 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.252917379 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.259894896 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.313460723 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.275247584 seconds)
    (13/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.266924422 seconds)
    (14/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.355493796 seconds)
    (15/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.337002646 seconds)
    (16/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.249961825 seconds)
    (17/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.306499323 seconds)
    (18/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.251092771 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.346626366 seconds)
    (20/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.311433439 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.423887121 seconds)
    (22/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.364979038 seconds)
    (23/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.252545821 seconds)
    (24/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.356600725 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.575907681 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.286326998 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.440947448 seconds)
    (28/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.348146805 seconds)
    (29/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.33117127 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.353589209 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.394917102 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.374353568 seconds)
    (33/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.354970845 seconds)
    (34/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.350726488 seconds)
    (35/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.366475548 seconds)
    (36/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.45412182 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.373152186 seconds)
    (38/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.253365162 seconds)
    (39/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.259776342 seconds)
    (40/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.273382197 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.280330176 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.369364259 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.378868859 seconds)
    (44/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.395184633 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.347242473 seconds)
    (46/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.26145883 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.260762458 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.498574891 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.259365825 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.366771283 seconds)
    (51/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.427578372 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.308533091 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.284475551 seconds)
    (54/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.359450557 seconds)
    (55/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.48127476 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.405483233 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.278094849 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.397236354 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.356624485 seconds)
    (60/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.30422151 seconds)
    (61/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.429554256 seconds)
    (62/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.481567739 seconds)
    (63/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.258097878 seconds)
    (64/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.448439524 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.398088256 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.391333675 seconds)
    (67/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.261179218 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.26136326 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.502777756 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.42309838 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.370149269 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.49421451 seconds)
    (73/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.45489831 seconds)
    (74/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.256055086 seconds)
    (75/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.396656431 seconds)
    (76/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.267307739 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.508395411 seconds)
    (78/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.254758832 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.446186541 seconds)
    (80/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.281011097 seconds)
    (81/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.308587021 seconds)
    (82/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.512635844 seconds)
    (83/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.614895501 seconds)
    (84/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.269616594 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.362620535 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.683631078 seconds)
    (87/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.293529792 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.394430185 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.369670218 seconds)
    (90/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.514793195 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.339937573 seconds)
    (92/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.479995609 seconds)
    (93/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.48496227 seconds)
    (94/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.403829728 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.571870005 seconds)
    (96/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.396782595 seconds)
    (97/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.575854168 seconds)
    (98/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.323940429 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.396538041 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330061865 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.288837805 seconds)
    (102/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.32032563 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.438479808 seconds)
    (104/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.434595984 seconds)
    (105/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.574131666 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.391322756 seconds)
    (107/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.341679576 seconds)
    (108/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.321235979 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.288855485 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.364250136 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.615828511 seconds)
    (112/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.440297582 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.37969415 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.31235178 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.516594734 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.449921032 seconds)
    (117/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.551613537 seconds)
    (118/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.26476459 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.462160299 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.258881727 seconds)
    (121/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319894024 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.321191437 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.34536922 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.259294921 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.403232192 seconds)
    (126/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.444899138 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.438358754 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.32292656 seconds)
    (129/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.394742753 seconds)
    (130/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.505736422 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.403337281 seconds)
    (132/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.3573932 seconds)
    (133/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428474351 seconds)
    (134/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.3102488 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.42056971 seconds)
    (136/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.43506501 seconds)
    (137/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.432966221 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.270569168 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.397079438 seconds)
    (140/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.348746938 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.261189691 seconds)
    (142/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.276414749 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.375206737 seconds)
    (144/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.39501865 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.388280187 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.437019567 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.284235171 seconds)
    (148/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.420220091 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.384984402 seconds)
    (150/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.378235781 seconds)
    (151/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.27071117 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.260568535 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.521403885 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351935081 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.388103369 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.363537873 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.440276193 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.689988003 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.377069621 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.488037383 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.29609652 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.512008804 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.514120738 seconds)
    (164/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.40211459 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.470847166 seconds)
    (166/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.530196059 seconds)
    (167/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.292169636 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.274404159 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.364801528 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.437632203 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.574190232 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.501450368 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.324244384 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.328426632 seconds)
    (175/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.313630877 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.398731282 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.514262426 seconds)
    (178/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.26965531 seconds)
    (179/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.286451123 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.532932023 seconds)
    (181/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.313454969 seconds)
    (182/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.263233677 seconds)
    (183/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.557355316 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.333243076 seconds)
    (185/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.317963796 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.437983786 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.484643162 seconds)
    (188/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.500817133 seconds)
    (189/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.410963633 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.390705776 seconds)
    (191/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.358629429 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.460881126 seconds)
  done (took 314.021023262 seconds)
done (took 315.187196974 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315234569 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.388894734 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294357413 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.295975163 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296045559 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.272734464 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.316392321 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.295857572 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.309474317 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.310342975 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.270592696 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.306440027 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.312721532 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.306755367 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.330877552 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.298104959 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.296552151 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.306141847 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.310492474 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.312806282 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296535093 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296794657 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.323384983 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.297071234 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304496888 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305090021 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.303621557 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.287744314 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.305014516 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.312297559 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.288543113 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.305525103 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.315030059 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.309138663 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298988279 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.309023014 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298149185 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.391639388 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.319142188 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.307775608 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.307722978 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.313104982 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.303435173 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.301346133 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.310412619 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.324799781 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306458006 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.312421146 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.289178315 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.270335641 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317891386 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.309800199 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.30630467 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.271800183 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.301308899 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.313346926 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.308600356 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318631659 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.30620228 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300198264 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.335261839 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319429639 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.311342263 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308563618 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.306285391 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.315651204 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.309562629 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.315240528 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.30683472 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303031748 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30248382 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.308675482 seconds)
done (took 103.338282921 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.421617151 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.296079931 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.455900819 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.30775145 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.465669982 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.42101305 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.307772027 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.307556636 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.308631818 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.100425223 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.30591055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.307677533 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.297594832 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.308035038 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.420172536 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.308197349 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.307624795 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.997580668 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.310840908 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.435420628 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.298818566 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.308791719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.307932975 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.108250898 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.295214036 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.29271208 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.435431424 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.310287992 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.007760309 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.293172166 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.295113335 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.006979851 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.436043888 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.327553272 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.31803962 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.317984746 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.466380396 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.312130408 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.424128024 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425701947 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.457868897 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.349397908 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.292790403 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.299099908 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.31302986 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.311969049 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.310336493 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.338157999 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.298055166 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.309427773 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.000756126 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.320078246 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.320186069 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.310216618 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.312182217 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.331354906 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.309793584 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.311428635 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438333723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.311513934 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.426061279 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.110394264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.103444813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.311143627 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.298019654 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.313639647 seconds)
  done (took 106.373308739 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.373274368 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.377142609 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.411655428 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.302720376 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.351268058 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.410701101 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.30168936 seconds)
  done (took 10.714102306 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.308765877 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.310758318 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351487119 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.350824558 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.311829228 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.475920012 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312117179 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.313880108 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.311932946 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.3527698 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.313959074 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311840902 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.320935692 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.300805514 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350388171 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.315406394 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423624667 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.30500171 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.314495837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.45530937 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312191417 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.320718501 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.353729755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.315435795 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.31319503 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.310539605 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.08748307 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313949226 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.312560251 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.312680892 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314504779 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.370989222 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.315112701 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.302886802 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.312457504 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417490951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.315996396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.314538909 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.314082043 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.305464962 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.313796969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.314962295 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.315153613 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.313836252 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.31383047 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.329848057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.314705716 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.315028905 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.315195039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.315779013 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.356364762 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.315508321 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.314308038 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.315320747 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.360352271 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32449997 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.315034878 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.315552201 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316400627 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.316730889 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.460086333 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353164815 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.31624318 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353233569 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.31555334 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3148897 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.31502752 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.316462401 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396060393 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.315935576 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352877451 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.315804788 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.489345017 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.331350612 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316693033 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.309454612 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.309617686 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.316148067 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.302905331 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.31286821 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.316478025 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.308010945 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.313093553 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316324571 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.315581386 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.465295902 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415132177 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.31763162 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.323015577 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.31520572 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.317295672 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.360377205 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.317273531 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.317414586 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356980117 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426316556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.361514416 seconds)
  done (took 135.326932966 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.321336038 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.320739124 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.312616862 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.334876548 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.308911124 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.308061341 seconds)
  done (took 9.098680237 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.312007618 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.321930361 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.317542437 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.319374659 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.319600728 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.318990101 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.320563833 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.310095005 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.322204181 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.318387598 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.321215042 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.319821966 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.32260361 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.320367829 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.319023129 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.319565762 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.321406731 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.320069521 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.320216431 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321225013 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.308080878 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.318656926 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319682134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.312835109 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.323908884 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.319245493 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333560353 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.321213239 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.320550554 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.31727192 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.323031099 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.320752641 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.312773519 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.315028368 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.322389957 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3114953 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323205799 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.321787427 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.32049651 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.321766767 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.321748639 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323676895 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.321212931 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.322330891 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.31290035 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.316042521 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.324930512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.335263337 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.32139258 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.322974226 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.321798109 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.321977699 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.320979797 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.324369104 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.314459015 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316043452 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.325193242 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.321612888 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.320633916 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.315043477 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.324727997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.321819263 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.315320183 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.324966518 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.322391853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.323562802 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.315320852 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.32498742 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322984024 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.322158904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.325532203 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.323257016 seconds)
  done (took 97.260042375 seconds)
done (took 359.955714816 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.808331461 seconds)
  done (took 4.004818463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.571099182 seconds)
  done (took 3.769529056 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.538693776 seconds)
  done (took 21.988678917 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.403549691 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.404814207 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.329202321 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.312208877 seconds)
  done (took 10.646599372 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.562177923 seconds)
  done (took 3.759803906 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.326657515 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.326642701 seconds)
  done (took 5.852953211 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.468297806 seconds)
  done (took 3.666683191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.52206357 seconds)
  done (took 3.720672129 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.34974181 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.338493417 seconds)
  done (took 5.894196623 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.287065122 seconds)
  done (took 3.485726669 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.687511906 seconds)
  done (took 20.886718749 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.335038096 seconds)
  done (took 3.536955046 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.346328117 seconds)
  done (took 3.545042544 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.670951647 seconds)
  done (took 5.868679327 seconds)
done (took 101.824806162 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.310854813 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.310116303 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.311759033 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.311321135 seconds)
  done (took 10.443323583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.390303777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.390495395 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399087961 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386016752 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.38649756 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393678298 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.354108072 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.359307245 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.38189602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.379394603 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.395850502 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38588418 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395276003 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.353203909 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.380373883 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396725807 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.383630175 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.398181734 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373272134 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387522298 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.328349719 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.385874907 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.380386878 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.328968902 seconds)
  done (took 34.293140008 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.816443341 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.389495492 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.471429797 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.368977423 seconds)
  done (took 7.246725609 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.431555344 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433663531 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450265477 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.486264615 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.516569456 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445384346 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.355083861 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.349208912 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.335953816 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43316761 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510630894 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.431917458 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.647523531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.328605368 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.645709694 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.328883345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.328499643 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.435015526 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48174415 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.510652096 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.32943518 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43204263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.437605754 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.432424245 seconds)
  done (took 35.718831229 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.338420028 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.34519109 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.330231405 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.345705424 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.330981763 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.3314867 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.332565769 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.337282948 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.330122512 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.330799684 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.331627585 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.34507139 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.330541249 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.331741167 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.33796005 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.332662453 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.332794843 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.336300769 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.338938405 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.331267772 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.331710267 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.339437015 seconds)
  done (took 30.57491198 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.314592638 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.314399069 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.667066109 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.571485373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.315469902 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.321486694 seconds)
  done (took 13.707547512 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.387070437 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.521711305 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.327658986 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.646567691 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.736769624 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.322699894 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.321265024 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.551908028 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.831665603 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.818912948 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.377729489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.389031857 seconds)
  done (took 19.434933882 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.323404483 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.319429113 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.327855195 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.335639409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.372557901 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327361743 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.330051547 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.317058409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.378775148 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.376384146 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.325905361 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.37352727 seconds)
  done (took 21.313192742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408183959 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327968328 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328542396 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381325424 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325849009 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327085802 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372682794 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012840932 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.34005981 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605688736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341344125 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416272558 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.576811292 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331649928 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332527994 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.267888831 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56135403 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790257194 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333793695 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32911832 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366635471 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329636505 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346025161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524378187 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337959406 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329477492 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.593570402 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331447115 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597982597 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576758584 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576744846 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33726331 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605800809 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946555706 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442646466 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516538615 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327898264 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330779363 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.306545633 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.341902746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335980197 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334844383 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571767022 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33823213 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328931864 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341247333 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029388526 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.344499579 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.33124168 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332733059 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572652622 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418106602 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.337311414 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330136294 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360555344 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332755818 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.337166475 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4477486 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971262213 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341720944 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347862345 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.337859481 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322943524 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333308659 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95566739 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.343829923 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.336868102 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338079599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331850365 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330596861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359329722 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333168 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.355070446 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332504872 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082200725 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339911629 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353218361 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852213694 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347689919 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.33800786 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559976987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333305928 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333287011 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.332859199 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334420457 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039155857 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345891562 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.300749203 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379325795 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018545133 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527562673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359850592 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363307057 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554577837 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.300687961 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332977451 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.339057773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335717968 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355637742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022857747 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338278832 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.340480106 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582278883 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.547778337 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338763096 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.279195642 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780351379 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343195187 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.363294453 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337370734 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.527468265 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.929306231 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586561195 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341075638 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374457193 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334734857 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108535999 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343941304 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.346860853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347383318 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604939515 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12296792 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340652749 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408914235 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336439221 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335513475 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335333871 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341972525 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334515337 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.500294535 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34296539 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577652013 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.343189575 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334761572 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.345495357 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336931517 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.343529067 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558088758 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341313416 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615045786 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335823691 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336330316 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33631599 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.555760078 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.334826126 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.36600856 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677686357 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336495456 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346924799 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586569583 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376563595 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449181975 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370593938 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.339885246 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593106317 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.343167716 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.345329808 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339834209 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346167093 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344609446 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.347193534 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333784747 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929512744 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321234388 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343865241 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337779 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.352773397 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414037002 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347253322 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528578213 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.348013238 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352494039 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.348149146 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.351588579 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563809005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581119467 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.359974626 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519608254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.778765876 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935026101 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361370071 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.338953835 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.339459684 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.338895987 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341329098 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338276003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339657848 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530390658 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592802674 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344992307 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941627003 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343806585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342333603 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.365020387 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584619068 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.35773849 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341733567 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.343186779 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347380799 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35540972 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588813873 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566778502 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.356062735 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340343085 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.859729383 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347688997 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342806749 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339829315 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369726265 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341296236 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144887872 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682793731 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332430705 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58640829 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35008468 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.37722448 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.342241433 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351964029 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34801255 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.347849446 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372520176 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.532352017 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350352113 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344677228 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981944147 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103253242 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892918226 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351343261 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.353416872 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350189499 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04006643 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349565623 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344748065 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583019437 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037400734 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350624983 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787457676 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.350119909 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06920941 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594192111 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577404131 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34350083 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.349592059 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608045432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564357277 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371282696 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342353714 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350439022 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.312272191 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851756813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348682082 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529805306 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036072919 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364100563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348837812 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.37284406 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.346401603 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716597631 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351187042 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346036451 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346463957 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350850999 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152111046 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352553359 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347282142 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975639651 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354652073 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.799103785 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352393797 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.536869305 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597069304 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.571738442 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.351352775 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.356527666 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.595509231 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591596832 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35365252 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359998071 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893853273 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.203737837 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.354340648 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347551603 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115911369 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359081362 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624740111 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.3592559 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.351997652 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356848614 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348708319 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347184502 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.347611819 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353877853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326828329 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812564359 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.345863703 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345032429 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352354124 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353189953 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594616732 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.364189021 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945382602 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575605844 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347623987 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38136867 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.354307061 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361241378 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.318388746 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347667309 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348126433 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35935462 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570036815 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348130619 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.320280501 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392724074 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561086573 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348529522 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34897807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556225748 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.355148213 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.356075917 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129576879 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380537632 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348560819 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349828281 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338810826 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385875393 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422427534 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540103866 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.602955059 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601337925 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720489956 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354102368 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350599382 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.364307725 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43096266 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35096783 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.365157665 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.354617435 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945664561 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107325892 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.962511917 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601505286 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356185385 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361206284 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348615709 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590519116 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349110779 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626598363 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350573281 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.352497086 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372294576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348118292 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370549364 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566278682 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626059005 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350200363 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357961395 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357232477 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.350782309 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601236794 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.569298112 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819471645 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872880177 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354076726 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354862753 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055376406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634431145 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352853719 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354844657 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353078845 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.369944096 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391443416 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.366099427 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358836764 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576521641 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597361286 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987422182 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602943627 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.544503856 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.275593118 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363505715 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602627713 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184952757 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545158808 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96661748 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053284436 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612427132 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429141472 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545631373 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.360812648 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59225725 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.361728629 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358518715 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356822595 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35441686 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.353923112 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599713143 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964735342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61226406 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.359173501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.362264902 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389543692 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.546308415 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582685682 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066929627 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579623799 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604679436 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367228844 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354874642 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962954372 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610767265 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356949948 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.361461044 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556005187 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361787472 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393321762 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.233874494 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.355117125 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883146179 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.573049961 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377333779 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362726648 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065798797 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965576581 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.369996348 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822142798 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359411055 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360911666 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641302583 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.36510868 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356746386 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644751492 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.365086091 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358429923 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572243677 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.961994058 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089686759 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.385852621 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384874952 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.360521797 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359522674 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416438231 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358543191 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359357809 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.723717021 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364226681 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35814495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371037131 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.360079432 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360738968 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.364713601 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359445886 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.368336441 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.35395233 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.334091322 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366205373 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48207088 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879054389 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362264997 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.975647475 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.694525035 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606907588 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359261731 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.333221597 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.366187269 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358931444 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35857121 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361550178 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353068532 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881502356 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.374429472 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.612687194 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373930179 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.572017123 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57382988 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366315895 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558147845 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366560755 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387391395 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.327821277 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359651774 seconds)
  done (took 965.520023048 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.350491815 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.36538437 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.361055429 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.412265974 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356568485 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356359063 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.358412626 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.419595646 seconds)
  done (took 20.215105057 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.358784572 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.36536535 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.357096477 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.360741939 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.360353513 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.87980692 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.358019037 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.364849499 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.375026556 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.360351267 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.366058496 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.011080309 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.367417597 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.35669523 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.357471156 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.367562696 seconds)
  done (took 32.202222991 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.021955268 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.352984481 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.806914947 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.362776465 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.38141808 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.366517515 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.464242905 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.365035018 seconds)
  done (took 25.358439513 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.36753029 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.367195777 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.366539009 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.36761173 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.367763022 seconds)
  done (took 8.073924637 seconds)
done (took 1225.301124921 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.368589743 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.37010196 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.37031193 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.370961796 seconds)
  done (took 6.715978593 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.331632362 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.331661701 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.334196858 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.351447085 seconds)
  done (took 9.585408052 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.013178478 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.867792894 seconds)
  done (took 5.117772426 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.888532626 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.890162871 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.881667725 seconds)
  done (took 6.897456003 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.649881841 seconds)
  done (took 2.886475429 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.326858915 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.360916239 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.070222257 seconds)
  done (took 7.996135559 seconds)
done (took 40.435515355 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.355683456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.117546337 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.510727741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.355240439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.561168747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509248362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.605406502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.354629676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364064127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.374126705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.354832681 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.514890273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.590109939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.115517687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.593319635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.117373157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.514821969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359512054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361410028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.354550509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.604235618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.356228329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.368828373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366464084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.521493282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.501002168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.356158822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.119468984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.356194625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366000964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.508365689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.355291786 seconds)
  done (took 82.003177196 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.356401114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.375469826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.365062331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.369187213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.364708457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.367072585 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.357849472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359393672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.369377176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367393311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.357915603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.375535416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.361289481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.357425941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.374970443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.363293878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.365138131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.362184445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375788936 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.357520658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.360082322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.370165004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.360489609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.3574376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.362458964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.369554283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365904854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.35969211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.358717716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.373946796 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394467774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.366200643 seconds)
  done (took 76.94241212 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360651656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.364773218 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.387078361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.373629445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.363978051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371498863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.365788219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.365644007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.365890278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367667161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.3731845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.364725391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.368178706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.377475686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366240235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.374517995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364811365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372139436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.363505838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.380257796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.369001986 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.363832031 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.363812345 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.364515927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.365561523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.366680743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.363721987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364764101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364721136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374615061 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.367786714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.364976218 seconds)
  done (took 77.027886473 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.602056261 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.375127826 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.379529245 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370163138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.379315312 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.375740986 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.3715439 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60804676 seconds)
  done (took 14.705035312 seconds)
done (took 251.917255559 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.380237912 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.844727412 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.403303202 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.378086316 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.385407263 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.397994171 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.584529709 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.401667638 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.587006052 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.39250107 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392109762 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.377994773 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.137723773 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525208704 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.178167151 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.283861671 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.216009087 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.367636537 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.904848504 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.654112468 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.403062926 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.365926955 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.161160913 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.222131949 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.347316133 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.446419039 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468558944 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.601040502 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.537467267 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44970339 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.857994443 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.378231877 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.38186888 seconds)
  done (took 63.659595978 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.36970248 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.380343422 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.379289755 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.379287906 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.378892871 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.379668363 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.37040131 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.380340341 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.380348738 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.382148025 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.380023941 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.37946486 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.381215981 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.379805081 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.381354937 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.351238547 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.369912536 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.381838321 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.372014863 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.35081104 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.380556308 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.380638139 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.381707112 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.38144908 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.381429071 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.381185013 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.381199836 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.382351713 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.380750687 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.380828726 seconds)
  done (took 42.568070237 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.381618972 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.929347358 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.085887465 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.384507094 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.372167838 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.376347526 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.64582522 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.387234898 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.376735953 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.375880712 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.822564484 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.389473278 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40526919 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.092150659 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.381391823 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.38229932 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.382914626 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374416146 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.939231037 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389667809 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.649571759 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.391026263 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.648683541 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.389723776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378685628 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.376911623 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380184886 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.162977634 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.398426637 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.822981718 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.090519423 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.647537472 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.108125227 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.140040467 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.098275192 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.393533324 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.38731194 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.830463472 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.384140711 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.375642178 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.645885822 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.383800334 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.097423529 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.057279884 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.39830055 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.383827987 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.196876992 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.831472513 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.608271514 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387433618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.128006234 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.382810546 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.387497415 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.376895277 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.60404085 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.384233204 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.375090219 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.206178408 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.387379026 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.648267322 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.390919871 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.376764568 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.937506314 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.38401529 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.93489012 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.386343019 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.385501062 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.379835872 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.10099045 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.385419735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.067330281 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.397916599 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.386981143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.828715777 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.941977392 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.248412312 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.386639573 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.939900276 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.13685879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.669065251 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.386578847 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.145531456 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.67222637 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.38787039 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.388521618 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.387841957 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.38910541 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.451038075 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.64525878 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.996258207 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.074814467 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.221870648 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.657656377 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.391963011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.380184453 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.209024847 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.393518187 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.388475973 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.093210795 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073681242 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400480731 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.385237773 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.052990315 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.402014574 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.653173338 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.39105885 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.134582615 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.387915382 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.451401037 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.389508975 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.387244049 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.384729118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.652523235 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.389183472 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.389965244 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.053097574 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.860637234 seconds)
  done (took 192.218338739 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.373861212 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.374780418 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.375430197 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.374236082 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.373638538 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.382826494 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.376228172 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.377380875 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381025377 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.376380722 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.37550744 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.385973964 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.383104276 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.377174892 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.383090522 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.376513784 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.375865757 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.387672822 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.375392329 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.374429429 seconds)
  done (took 44.81600904 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.393319228 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.921669234 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.887090907 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.400082732 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.391775304 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.382762376 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.43422982 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.393139196 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.390032813 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.669764444 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.549283879 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.398706751 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.391981182 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.390368372 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.880865508 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368284926 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.668093837 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.924958045 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.398158737 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.916816198 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.370458358 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.391618779 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383144138 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.919601387 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.687563073 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.660732458 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.443089232 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.913712425 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.393305685 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.392489607 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.917958687 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396968833 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.383163497 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898651811 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397799501 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.408367031 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.39352004 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.439255032 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43984206 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.669320608 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.920437872 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.66273491 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.411620837 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.562105951 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.395764598 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.365021246 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.930141654 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.399202878 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.364297339 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.396352435 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.399293132 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895348354 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.392837568 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.895082627 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.398720484 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.39483524 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.922345511 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.903436565 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.892700551 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553164671 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.38491542 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.656140084 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.401243651 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.933278755 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.401256563 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.395220124 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.39467162 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.549352666 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.931881837 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.664562617 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.682984493 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.681537812 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.401391752 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451553163 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.396088303 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.675985651 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458987093 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.806209462 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.676020141 seconds)
  done (took 125.308650824 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.645195637 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.504531223 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.753815554 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.951619837 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.888366724 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546721044 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499549049 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.626897041 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.396209818 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.502692691 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.018004022 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.494903729 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.117169163 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.452791458 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.500084244 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.509282841 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.781566958 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.323500862 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.000364999 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.002500978 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.400184636 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.489629635 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.89719092 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.583475633 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.388345374 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.932425904 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.285819682 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.903916554 seconds)
  done (took 52.657391417 seconds)
done (took 522.472137477 seconds)
SAVING RESULT...
DONE!
