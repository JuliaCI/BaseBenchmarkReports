cset: moving following pidspec: 17419
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.449598942 seconds)
loading group "string"... done (took 0.527083041 seconds)
loading group "linalg"... done (took 8.547436579 seconds)
loading group "parallel"... done (took 0.177615495 seconds)
loading group "find"... done (took 6.221658878 seconds)
loading group "tuple"... done (took 1.934999422 seconds)
loading group "dates"... done (took 1.351522712 seconds)
loading group "micro"... done (took 0.191345964 seconds)
loading group "io"... done (took 0.510408676 seconds)
loading group "scalar"... done (took 52.708997945 seconds)
loading group "sparse"... done (took 14.03195506 seconds)
loading group "broadcast"... done (took 1.318805434 seconds)
loading group "union"... done (took 10.068091031 seconds)
loading group "simd"... done (took 3.315938161 seconds)
loading group "random"... done (took 12.176023918 seconds)
loading group "problem"... done (took 2.211456738 seconds)
loading group "array"... done (took 25.020563261 seconds)
loading group "misc"... done (took 1.120158559 seconds)
loading group "sort"... done (took 3.734640131 seconds)
loading group "collection"... done (took 19.686360666 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.624964584 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137333913 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.219841748 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.235243033 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240622724 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.176535837 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.150049018 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.244558311 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.650311662 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.218100171 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145510205 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428731099 seconds)
done (took 6.2837839 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.26102223 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.250957566 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172287683 seconds)
  done (took 1.183386864 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082810212 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.165096942 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.115640709 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.102783218 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.102642554 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.119953711 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.102850854 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.12084631 seconds)
  done (took 1.593943321 seconds)
done (took 3.883938953 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515224406 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881463734 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514507337 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.151396249 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.323587418 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.298619612 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.27558766 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206065145 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.098698281 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.095213063 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.183587127 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.401277258 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.41369051 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.964457645 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096346857 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.118648897 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.124081101 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782612301 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.087051931 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130312784 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526255644 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.204904585 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.128854677 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113795307 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195713982 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141885133 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170413684 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111854621 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676212404 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.140396998 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186770295 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.106970544 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16435033 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194629132 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.220357827 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.102050261 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.701656903 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.207320706 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103535163 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.108799981 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689722083 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12551528 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194613258 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110067187 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.096620711 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192620183 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.110967336 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.103635266 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104233457 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.095729777 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.187331792 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.474896703 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.118454734 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.183854268 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.100463137 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700206402 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104739698 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280047461 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134438275 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.116362747 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.087726451 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.095943434 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.170299405 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.102386953 seconds)
  done (took 20.650072226 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.155406202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.172992779 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08673973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.166718726 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133528666 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.107772018 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096054941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087446584 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.137070723 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189248895 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.152182858 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.182177856 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087176484 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099411163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.160401245 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243359553 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.137586876 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.115918315 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0981484 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.119252184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133812604 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.123039817 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.103211492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101891021 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.184549078 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.217219821 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.129973249 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.131208303 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099175093 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.106045905 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.153047935 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155865781 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.103575659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098797088 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.201460683 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118072325 seconds)
  done (took 5.669500922 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.22809389 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.113155081 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.23669207 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.206287326 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142934599 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.206613167 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.164633957 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.282991417 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.233132865 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188111772 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140417449 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105018638 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087183233 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.104002385 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.088460115 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.487422013 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.199530451 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.178176886 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153244906 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123143667 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.106056007 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370353341 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112460318 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097415406 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105753376 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090695435 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.216212342 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106067317 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.144537573 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091605417 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.129521111 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125631267 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.226651336 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13718484 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152389947 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104270022 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.142256685 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093781688 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232166453 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.129442225 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.087561282 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12274849 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143673041 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121768939 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.119512965 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133327717 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.229929239 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0962355 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.137751357 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.067805605 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.210799908 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.152782376 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093315071 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301079465 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.13636545 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10886252 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.119142659 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.801872825 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141037798 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.152826857 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.108527991 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0869577 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.120984947 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088082564 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.444857344 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13380231 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.215888489 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093317778 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.167874362 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10476873 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12781505 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093795702 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111093771 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117839014 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093285572 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.106106963 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09476827 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.103088082 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101381299 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.119973959 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111321263 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088759274 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168413428 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.106934334 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115619011 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134644848 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098569724 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.112522409 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135921089 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092155757 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100411859 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.177871245 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106107851 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.139888631 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122942482 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137910168 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.113397834 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.238109665 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093221186 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.134942667 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.110993277 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135486147 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110111806 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088907603 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110720521 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090795009 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089151356 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.1055507 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.089622841 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155077206 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.118136396 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091519423 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096317568 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.120631037 seconds)
  done (took 29.645260437 seconds)
done (took 56.726404355 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.459206487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090688924 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088922717 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10914771 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089794535 seconds)
  done (took 1.680586837 seconds)
done (took 2.496795332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.339612953 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.214058954 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.111323099 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.201984611 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.114479569 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189739374 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.197791907 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111577919 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.22277905 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.111922723 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179938602 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111921203 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096155319 seconds)
  done (took 3.04747047 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117698172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119560847 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.132064529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118489498 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096458255 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.136944342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116432729 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132476244 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.130290381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106450303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096339371 seconds)
  done (took 2.123144429 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.111550634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115418389 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.111879729 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12847312 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09469672 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109040054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125067919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119925565 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109556124 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.129136102 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098070876 seconds)
  done (took 2.0711062 seconds)
done (took 8.055890537 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.082829636 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.609215211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.156131098 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.222318236 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.360228448 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.267272699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.561517219 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.182893332 seconds)
  done (took 14.405723509 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.17602139 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.119952482 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103571637 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100176971 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.117852373 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105159611 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10628023 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.12142596 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10716251 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.107107495 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105631027 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.121957071 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108410039 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102495347 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.12155992 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104838585 seconds)
  done (took 2.702063537 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.154251771 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.151044521 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107018719 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108468177 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.122840851 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108928758 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109804004 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.125950059 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104590595 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104080767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.130202006 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107405823 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106841838 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.120527358 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108131259 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.144132406 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104402291 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107915341 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.143869166 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108359103 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108354635 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.12258823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107672511 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106453647 seconds)
  done (took 3.727316354 seconds)
done (took 21.65485218 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157654814 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111218847 seconds)
  done (took 1.09068313 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.15084782 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.168641933 seconds)
  done (took 1.144622762 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.121950112 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099000832 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146604876 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112920085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.117532554 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10091565 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125342234 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.11783494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100155869 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099828112 seconds)
  done (took 1.970857235 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.105563238 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103966845 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.131039138 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145748116 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.124797584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103598593 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104415499 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.121116245 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105586714 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.214117152 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.123442727 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117186289 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103229524 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.136695592 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104203721 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121739846 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110725598 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104354276 seconds)
  done (took 3.011950153 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.101548628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100767913 seconds)
  done (took 1.034674206 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.102983266 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100538322 seconds)
    (3/7) benchmarking "month"...
    done (took 0.121861503 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106311696 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.10254685 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.120083426 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105033786 seconds)
  done (took 1.591533844 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.51657417 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.28265732 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.382434396 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.122787242 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.165156201 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.364841612 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.161923381 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114451669 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.13462019 seconds)
  done (took 3.115314728 seconds)
done (took 13.78851992 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.102372899 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.240241949 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.620994675 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124669683 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.100367286 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.171695453 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.30794432 seconds)
done (took 2.505657235 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355540012 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150498487 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092616049 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.106143499 seconds)
  done (took 1.535835732 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.092975139 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107852659 seconds)
  done (took 1.040055033 seconds)
done (took 3.414554051 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101949954 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097858016 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.097804131 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.116157245 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.099948206 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099311126 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.152700153 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098660852 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09942772 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.122786007 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.102114646 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102148238 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.122672234 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102958023 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101855953 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.120785169 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100326302 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099734021 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100895405 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.120046059 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100943932 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.099510671 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.118514138 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10202836 seconds)
  done (took 3.453251926 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117424877 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099784302 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.121858251 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.106695529 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103601084 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.12303998 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104308885 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100352791 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.124191568 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102264335 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102645632 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.121028134 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101023725 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103497147 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11943716 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103414049 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103735716 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119267994 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101374919 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104318107 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.125338759 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102627628 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.124321253 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107767934 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105289004 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123155711 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102100783 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102203681 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124109808 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.108804021 seconds)
  done (took 4.150824851 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.109148696 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096089754 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.098179119 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.126267881 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.098347009 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09953983 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.117900814 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100994209 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.103683015 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.119241797 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.102827009 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099029448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.1172525 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.102581487 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100492115 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102133475 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.127329408 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097186478 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097984463 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.118235075 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103796559 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096300314 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.117979647 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10045641 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099664921 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.115100049 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.102384951 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103051256 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.103470973 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.124558613 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.106221957 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105466103 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.12314234 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.112701324 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10296873 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.117926641 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10684891 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096460076 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.118776666 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097670119 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096366894 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.117306792 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097797636 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105858702 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.116716801 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102727467 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097294348 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101436457 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.118683489 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.104311416 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096818152 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.114575624 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102716405 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101270458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.119958583 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097988058 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.100676513 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.113383932 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.102430457 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099242984 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096216316 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.115571759 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104837479 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100825316 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.133957294 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107194013 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098547366 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.123487977 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106287732 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.109901359 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.120085917 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111788097 seconds)
  done (took 8.574804866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113779459 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11012678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120495227 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103669536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101385693 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102406474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.130361808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10454306 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104243437 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131820731 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106750136 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105731809 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126147425 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107133831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104592521 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.127230635 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112468856 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106078345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.125156725 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108640786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106696243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129609466 seconds)
  done (took 3.340537642 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.248943496 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10827794 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15083371 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.132955664 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119462679 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.132323255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106658095 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10637483 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125463976 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111365265 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128124157 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10730536 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120367 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128829274 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111615495 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.130562065 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107024664 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112179293 seconds)
  done (took 3.141094836 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.116227151 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103185276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.141837247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105198313 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10498099 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.123358155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110012907 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12245535 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.122288666 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10388646 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.11068417 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121913018 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104774413 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103955367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121806866 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104796328 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103202895 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12189677 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110575469 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109384329 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.129710116 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112611008 seconds)
  done (took 3.364624173 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118299646 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103354955 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.13916043 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108044921 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10187794 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.120894541 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109001444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.106160426 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.134795999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110152817 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107978141 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.127031974 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124567354 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107152754 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.133542296 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109796022 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108022184 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12834448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109583193 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.107547727 seconds)
  done (took 3.175103973 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183348062 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137175194 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119643062 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127490078 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137539115 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118794983 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.144845649 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120500853 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118391672 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148905038 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118978246 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.137984567 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128344054 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123886124 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140185218 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127989853 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14982202 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132502006 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123308391 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.145351116 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136983995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.144167612 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134433449 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.144359344 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12765073 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12613042 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143742047 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131925024 seconds)
  done (took 4.637559599 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104020038 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104217905 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.103775383 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.127496053 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.108718348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.106979274 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.126439 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109135488 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107786528 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106899002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.12797335 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.107911857 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10587195 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.123195312 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10505371 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.104559034 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120136148 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104500971 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10557358 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123563589 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.107247378 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106544676 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.107230785 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.127274388 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108780814 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10789258 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126147826 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10917728 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109329929 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.126581048 seconds)
  done (took 4.236035987 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.116670566 seconds)
    (2/2) benchmarking "in"...
    done (took 0.11474665 seconds)
  done (took 1.095959433 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.111833623 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119525432 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.126051423 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111077203 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115388133 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.128117677 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119608985 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11355626 seconds)
  done (took 1.814639609 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.155175641 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.176126594 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.108029245 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115565741 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.175518006 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.16687839 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144896022 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107951316 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.12122945 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097625739 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.170366031 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096064954 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103863242 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.121913246 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104557412 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.129820914 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.107639802 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112791234 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109779525 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.124915574 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10854827 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127677386 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107670076 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.115731005 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.121696633 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108361634 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106442069 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.134577451 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10162676 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106126514 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.122266004 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.105680779 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10674426 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.127614032 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.107062366 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.175862558 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112974468 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101492762 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.124973789 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108674645 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.136780233 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.124713543 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106188188 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101841645 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.127411418 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.110197525 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.108908633 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.124734094 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097824342 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100417347 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.124404142 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101561226 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.104618708 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.124197117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105740806 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111767541 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.125901939 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102493473 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.100457682 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.120037653 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103871145 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100997168 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.127351316 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108475368 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.123952981 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107281884 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104792507 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.123133822 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.107531171 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105472591 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.121649257 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122368566 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105282455 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.128548698 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110867561 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.105493744 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120548109 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111257687 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104361631 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.124778783 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.109905814 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.133608155 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.126500764 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101378527 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100739022 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.131533083 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.108531899 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107547376 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.117773799 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115487921 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.107028698 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.125636402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099253413 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.102886029 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.119874215 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.117436177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097418317 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.125489032 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.106311152 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108957898 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.130184549 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105835788 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106613355 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.129958953 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112050731 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103691657 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.172361129 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10295552 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.121417013 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.107981599 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110342474 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.118357099 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106298536 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.104344663 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.121748065 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101905783 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109111537 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.124918298 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.107368273 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108550611 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12602279 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109626954 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112040531 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.125141878 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105924041 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.115909884 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.137252326 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113920109 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.109720012 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.125263844 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.106817148 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105562964 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.129734271 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103973772 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110165231 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.121722811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106297597 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.107769811 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.129055303 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109136963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100655199 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.125468763 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108916413 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105501561 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.128921486 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107717565 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102295016 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.127132882 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108738111 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101912272 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.126108238 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115145047 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101844984 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.129773309 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102748822 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112736422 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.123263021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111857308 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107104477 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.131584691 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112269365 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098473797 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.12407447 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110036709 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108232928 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.12276633 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.108900339 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.105822498 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.131560909 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100164564 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.108294589 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.117405997 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10371565 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111109475 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.127520065 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.109517357 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102532689 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.167150093 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118429186 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11174585 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.125908547 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106911586 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108226684 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.125855358 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.110222711 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111015769 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.130902803 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.104396541 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104745666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.132393126 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103815385 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.109126924 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.125303732 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108234183 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098756449 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.126386871 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099024618 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109892943 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.128617432 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.112130897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111515075 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.128705684 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106262411 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114582507 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.123572773 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.110760404 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098082425 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.13180618 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.118269131 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111929905 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.131417786 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10861105 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103788975 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.12652518 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115156541 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108607048 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.127598494 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.108456288 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100762976 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.119636063 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113665104 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.109704744 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.123289169 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.106450759 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109087336 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12896548 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106501889 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100002848 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.131068819 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113304458 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102682949 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.127245846 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105042765 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104647438 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135837652 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101156187 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102946605 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.129448123 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.112864428 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.106725778 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.127761049 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110496051 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.112126026 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.130269972 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.109658319 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10439237 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.134841113 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10592585 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.106032243 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.12316037 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.109864631 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100378113 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.128111321 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110055541 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103837102 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.122815494 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111061943 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113791876 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.131347064 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106419749 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.11010736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.132572718 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113581757 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10452339 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.132400718 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104014465 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099898389 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.123693924 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101240422 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.107983541 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.123618496 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112481334 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104740596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.12564831 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112885543 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110494233 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.125371775 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.113217816 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117667914 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.122268313 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101539169 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105969009 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128181371 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.1053677 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10279291 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.129719889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108883851 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111790574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131411799 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104338979 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.106419089 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.133831862 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105744614 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113926228 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.133058574 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113985347 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102716872 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.133062105 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105590157 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11056214 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.121935678 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107092483 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126601532 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110806859 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.1049209 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.125387529 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105968548 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101626681 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.124384789 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115730949 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10711554 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.129936801 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109803198 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105674659 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.123423088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106617532 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.113613911 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.125699201 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116039903 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.108082181 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100565115 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.1240379 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.113031929 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107140268 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.134172185 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10352382 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.110905825 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.134473318 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.111590729 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.107320304 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.136013982 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118137608 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112564295 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.135233499 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102129455 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104494493 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.134042329 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.108412511 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110145482 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.130246949 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102899014 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109940072 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.133785189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109220679 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106002523 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.123703299 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.109011378 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.113645049 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.131783549 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.112386894 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.108936927 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12914224 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104737469 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112190612 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.132759476 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109950969 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113610229 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.127664717 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.112354997 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10544318 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.13413492 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.109569335 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102771423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.121581461 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106279466 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.114380871 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.122094264 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.115494074 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112948782 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.124658024 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.1084055 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112281073 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.124603906 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112181763 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112803304 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.125601174 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11956837 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.108968015 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.126073987 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.113987621 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.113217902 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.121623179 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109509258 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107632119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.135354828 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109483142 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112504781 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.128815028 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114153482 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.111719525 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.133269388 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.11506586 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11357089 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.12220067 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116080085 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111364315 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.130331266 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107658317 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108961018 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.122936509 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108927784 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.113289894 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.12640649 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118514699 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.114675906 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.126795559 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107958671 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.113747932 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.126532544 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116716344 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105123228 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.130050523 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103828852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110604481 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.126596838 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.11620173 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105735568 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.122380967 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115385633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.112481907 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111022064 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132246683 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.114126636 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.122223316 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103984692 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.110756334 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105084459 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.139984134 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111777087 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.126963345 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109414946 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111521294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10943819 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.13583777 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10436453 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105784192 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.131990695 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111901301 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.126818492 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105985705 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.112657441 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.127605004 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113073238 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108333116 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.123905167 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109667158 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116138737 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.126587023 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106406516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106961925 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.13641302 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11052296 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106228055 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.122201741 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116574927 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111943272 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.135501323 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106763075 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.1121491 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.127753892 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112957842 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118209815 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.128146662 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110500633 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108246464 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134865591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116120831 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10316048 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.128722259 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120282581 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113929594 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.131165154 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.113070462 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108502758 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.136258002 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117366425 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.112375657 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.124750808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105444392 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107694693 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.123579309 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113129046 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114548821 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.128810836 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108792157 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113228165 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.131830985 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112891967 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.111587017 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.123230189 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117359265 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108155504 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.131977302 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106379139 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103405672 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.111241123 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.135897406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109150598 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.130112498 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.113213379 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113593787 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105110786 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.129054278 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113762417 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112140077 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.13681294 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11098674 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109653578 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.133944352 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119434758 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.109950244 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.130065164 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117712151 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.13487503 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112746339 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109757753 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133559902 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.11740753 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.11222389 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.136324246 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110178643 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110657009 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.135489399 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.118968104 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118467599 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.130319234 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10571706 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.114364465 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.129700536 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106592307 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114936566 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.137620557 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.118916811 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110496463 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.129238468 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120754024 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115534333 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131644297 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111025998 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108629713 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.136066969 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111296442 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.114864432 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.128194719 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.119284484 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.117039745 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.137035576 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.120659663 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104537513 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.137757912 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113939505 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.117425089 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.133560182 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106278421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105997384 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.134687797 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119268354 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.116799316 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.134815711 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.116470259 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.115996928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.111658685 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133824276 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109365591 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.137158629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.11894418 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112693011 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112768678 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.132532104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112456398 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.111776348 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.139003835 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118217261 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112386665 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142923081 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.11843171 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110334025 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.131390632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113678861 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113778449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.134782936 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11661608 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108687149 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.12825163 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117457427 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.118157024 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.132665615 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120841694 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118108608 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.132654359 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114989653 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119264255 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.139335639 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.114184112 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112735544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.135888674 seconds)
  done (took 70.391826023 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163648416 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12018788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136581116 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115183185 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.152737999 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117576749 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114395513 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115217723 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.137814379 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125366811 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114369755 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137470944 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129058002 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.157044621 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132720686 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.14544998 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114803376 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116958967 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.135064804 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117587242 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129637149 seconds)
  done (took 3.666503043 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.133870876 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.128505473 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.147789543 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.129772212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141342323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127246755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12527781 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.146962902 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130414546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143395792 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129711849 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125347511 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.143943723 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.123081541 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.144843138 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124995116 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128872647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142899428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126577815 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.147732259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124510992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125756866 seconds)
  done (took 3.886429131 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.1450591 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.117459127 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112859036 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.137440238 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.117548036 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.114218163 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.139969419 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.116899415 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.123962767 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.132037972 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107225723 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.110028332 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.134794528 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116318964 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.109816271 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.134763976 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124409005 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.117547788 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.138929077 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116634055 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105994244 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.115248463 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.138067033 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107599884 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.120050347 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.142074141 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116428386 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.117994183 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.128471202 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120691333 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.115400728 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.129232724 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107860559 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.106877257 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106579682 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.140697696 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118542169 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116074978 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.138001889 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108018791 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.343988633 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.139070961 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10905954 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.116506176 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.135785631 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.111315351 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.119509239 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115983208 seconds)
  done (took 7.004769277 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.146875157 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.181722916 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.120464115 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152797442 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.153577479 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.124964732 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.142512725 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152336996 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.117063369 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.144527881 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129557032 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.151968822 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120459585 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.12207752 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.144683578 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121296641 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.120389772 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.141610549 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123871448 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.139779905 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125202588 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11967993 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.149421532 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129300431 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121970332 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.141181822 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118195258 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.143091182 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130326399 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123044467 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.144809396 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124999495 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.148683083 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.120541739 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118211887 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.140134811 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.133367474 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119382324 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141268755 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.12006012 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120555595 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143696694 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.121716388 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129914072 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.142720118 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.121454393 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.140361814 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.118962018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128782541 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.141428505 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.125526749 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130605787 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.143899667 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.121021896 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.141868142 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133445493 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119773601 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.140006789 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122939704 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127621825 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.140034693 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122781319 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.150900131 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121945677 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125670003 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.15134547 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122298336 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122034936 seconds)
  done (took 10.105428574 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1517685 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.12359657 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.152899356 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131725924 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144948899 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125789893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.124055186 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.146263403 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12515781 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129097636 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145984272 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.239790726 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123344753 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128628735 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.147789205 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12552277 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123010768 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.145950752 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123850911 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.144558941 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126355281 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130029695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.146055542 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132269555 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.156057296 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121967986 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123874869 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.145111302 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132825748 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123919492 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156526298 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124177257 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.145194377 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134602188 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.156054106 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.125459925 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117960338 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145476912 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.125623993 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124233751 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.142694985 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132575001 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124100189 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.143985962 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124278798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.145136821 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135500488 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135708875 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.151588348 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130265772 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.146146812 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134516956 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125054715 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.14759552 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133558491 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.16213533 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13321217 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152637076 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126968219 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13142498 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.154100645 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140159911 seconds)
  done (took 9.512848612 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121128333 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119576675 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117834847 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.141134884 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119702724 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117801564 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.140060632 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119923884 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118061382 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.139618365 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120475734 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.119794279 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117216755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140138587 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11823542 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117565285 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.140245576 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119791215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11820597 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.13946441 seconds)
  done (took 3.473236041 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.129990986 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136125425 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.144115383 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127372802 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.120496195 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.148628744 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.122570341 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121481846 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14367551 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122273941 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12779082 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15105684 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121730351 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125776378 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.151618165 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.125408222 seconds)
  done (took 3.083591493 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.139426878 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135742298 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.209805062 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.121658656 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.143660932 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.129013356 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.120142401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.146751035 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120328279 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126600701 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.147403202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124785505 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.121278512 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.143763177 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12152984 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.123545671 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.142920914 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125260431 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.121572116 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.209087931 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123902629 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.144690574 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123758427 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125242479 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.145766987 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126467219 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12612234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.144166735 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124862774 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12168068 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.146416976 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129341119 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120336896 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.147423176 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122387194 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121427206 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.144429065 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122788706 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123817107 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.144775286 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.124022095 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.122337343 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.144582159 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.124417544 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.119792307 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.143926996 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.12119553 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126835382 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.145382566 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.124606736 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.121542413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.150160532 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126715715 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129202131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.151777193 seconds)
  done (took 8.353094864 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134207969 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122887757 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.153484883 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.121264251 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122238335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.144593253 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123546074 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123497759 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144504843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122272458 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123617708 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.144882692 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125297358 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123644977 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.144280772 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124362632 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120326056 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122044092 seconds)
  done (took 3.314542084 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127736712 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121079152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.124819936 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.145153531 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.122403338 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12112826 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143208328 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.121080893 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120684769 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.145173212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123269238 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.121419605 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142560626 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122737942 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121319452 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.144015013 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123973554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120581603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.142158733 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121979909 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122626996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120751742 seconds)
  done (took 3.800806162 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.133812045 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.206110206 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.128378944 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.215626488 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.119180024 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.117324734 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.151630228 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.118974409 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.156408032 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118898328 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.116914032 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.139104709 seconds)
  done (took 2.703327287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150410811 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157327248 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.145494894 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124297519 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130664971 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149961076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127175285 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148717301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135802805 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137506616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149229464 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135132909 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156348014 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134965944 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131115122 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15504923 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128686298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149287637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12464606 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142215215 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150865357 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135567563 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150391019 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13029806 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126685888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.158017542 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135683474 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162189684 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129245554 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135045268 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154718244 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127674179 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15730373 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140490441 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123182586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156768207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128394016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165300837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133191481 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135438304 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.147459613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131997228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156710394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134363513 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1346962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150102459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132101563 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148983948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130235987 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170311719 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133260659 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135077016 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154420889 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135443445 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156870491 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149465263 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161800464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137146051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130677571 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162668385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134866486 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154669961 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137134909 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162879689 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133480985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134795399 seconds)
  done (took 10.380259398 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164574719 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124312345 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151469375 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140763202 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.158214296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129411958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12801873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152381476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129479157 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124495943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192859491 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127596277 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159469466 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137081674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150635877 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130473328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129569266 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.159002365 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125483776 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170973955 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129458135 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136360348 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.160159699 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136895989 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162381463 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133930665 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128169632 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152904501 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129355143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151870919 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135086817 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128305702 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.158903641 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127420152 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157944319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131546924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129482496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.156473637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130400641 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132750515 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161549266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143401007 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15153954 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129718208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162116455 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130842833 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129389692 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148682475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130935276 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125760956 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163703976 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141633395 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163575356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13891032 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128434277 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152190437 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129421529 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15113909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130141236 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132895451 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159888526 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130559945 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173575214 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130114704 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128395534 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159976233 seconds)
  done (took 10.416704934 seconds)
done (took 191.917834853 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.170341493 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.210771942 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.167290393 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.201273356 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.115652914 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149272238 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.171234569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.169388134 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.139387049 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116762546 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.115224194 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.140921904 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.18454221 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.116146634 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.137931016 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119556628 seconds)
  done (took 3.410879389 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.213403685 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332268164 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128860895 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.143822079 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.122042335 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11944033 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.143842574 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122887725 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.120106856 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.152714686 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.121632486 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.115056221 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.151601751 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.116405649 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.142278551 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122936075 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.127719639 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.142990997 seconds)
  done (took 3.644079737 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.142355741 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.167368934 seconds)
  done (took 1.309669984 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.150935876 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.237077448 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299674052 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.195903982 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.141476237 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.163727385 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.170672226 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.157410319 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.230470189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136217266 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132166794 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.144006525 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147726778 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.148888709 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138517557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119920984 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.170852045 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136443836 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.134884275 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.146410475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145261972 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.123426951 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.151964562 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135025342 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.223966896 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133809436 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.147454285 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125088355 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122552948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.159034031 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129353625 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.16069681 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.135579895 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.202671026 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124827495 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.199311535 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127740588 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.146355164 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.136789057 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121330513 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.148883276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124896675 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.158482603 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119940478 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.123600797 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.151696486 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125857308 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124343497 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.154847692 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128829032 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.154108684 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131381664 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.198642245 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129265818 seconds)
  done (took 9.233255549 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.892946077 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162835395 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121314774 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.044342136 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172461137 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135306302 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.912556391 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144571832 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280793527 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.917242913 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.161258523 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136267374 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262805919 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.30439456 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.287733422 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.405038039 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.733302352 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.160253959 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151794221 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.187824476 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132119752 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172474342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143189729 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.545192447 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122173883 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.144841644 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131777921 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135073576 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.202034479 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.145454595 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128075709 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224272727 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.315189751 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238489247 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124500835 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120839023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1455572 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186276514 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.320237511 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.243453358 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195401227 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14147472 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123429124 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131740889 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.166230704 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119395 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204971337 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.215667126 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.213886876 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129191716 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136899202 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.159220945 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130362451 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.203768407 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121005305 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.403964338 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.396112096 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122080803 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15476706 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.141326948 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294987836 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123809785 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.287831469 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151321858 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240043021 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.145634606 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873839664 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187216729 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.146584273 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130897354 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.152529623 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130867154 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131769187 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.216060718 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.526682325 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136434275 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127363553 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147149469 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.260309481 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124136494 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121887168 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.207232631 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.147078845 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134214084 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137349821 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161019217 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.214747863 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271433407 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.16067439 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131930625 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.152789136 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13792552 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123863727 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.257505427 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251577876 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.201311951 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.255314668 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130821502 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.2080515 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.210738759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129349644 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.214188796 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.155524974 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139981138 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15464187 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251921951 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157312869 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151862069 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128827233 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132759734 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.185532187 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126167129 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158131797 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.211312168 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.583700512 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188277796 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.143821352 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129320647 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134003329 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20504324 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130384757 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.313596461 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136154765 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.211459476 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131074999 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120867548 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.157606507 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.205678082 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134353656 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156256466 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13341081 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133083953 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.304611575 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247808834 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.162668882 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.279671617 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199127424 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.155877408 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217138613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133907876 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.214362655 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134918654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156494029 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125376458 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862427549 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.162017518 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13437383 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129292793 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.234772094 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123861916 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.150376545 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125857747 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121258391 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849750133 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.151325153 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.124406465 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126996895 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.156565363 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.134332921 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132142297 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.155253184 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204590704 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.274043667 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138106676 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.157968129 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12497925 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.205242064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125384705 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.147543613 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127300656 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124862623 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.157328674 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130228671 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126936637 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217213875 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20354757 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.257170555 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.662483412 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.14724939 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126244194 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268231154 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124184172 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.373936047 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134981799 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.261738451 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.210213784 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122387298 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.41143356 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188111916 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.234137687 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127268868 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.215554405 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12187262 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160356726 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.205270398 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126061226 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131604617 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.20289145 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163248132 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140050174 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.30455614 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.14846874 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255372526 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.147634993 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192239215 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.151511636 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133207111 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.352916492 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.149717495 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144528867 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.207851309 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128582292 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.150657592 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.703167421 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126998924 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137838987 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.15811176 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259578193 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.210331003 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13385315 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.160289929 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138502565 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.207263412 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.256552875 seconds)
  done (took 53.67251785 seconds)
done (took 72.260576854 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293538262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.200141359 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.330196194 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176954006 seconds)
  done (took 2.109635158 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.267060398 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.180963416 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.250116328 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.122268552 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.254140875 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.120685286 seconds)
  done (took 2.233775843 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.199535353 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193535234 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168074918 seconds)
  done (took 1.601138733 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223042438 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239419753 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.361413536 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281373003 seconds)
  done (took 2.234650852 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.28988016 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140053957 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.148011358 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23409961 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247870377 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.230488506 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147113721 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19799121 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151828416 seconds)
  done (took 2.869185551 seconds)
done (took 12.085025279 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.311472624 seconds)
    (2/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.37751933 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.404439551 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.39648343 seconds)
    (5/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.350127222 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.297836572 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.165714434 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.328241202 seconds)
    (9/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.361509074 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133846404 seconds)
    (11/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.256299383 seconds)
    (12/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.37448356 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.321579358 seconds)
    (14/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.179679944 seconds)
    (15/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.273396272 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.172609212 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149583994 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.173255615 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.271999549 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.233126807 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13290803 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.157585065 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.274212335 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.152248126 seconds)
    (25/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.177116282 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152125216 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.224663665 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.151740175 seconds)
    (29/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.125547526 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.268029039 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.168709987 seconds)
    (32/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.280768458 seconds)
    (33/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.219595845 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.146788117 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.101554541 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.160353392 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157575651 seconds)
    (38/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.280267334 seconds)
    (39/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.168308445 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.174027184 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.137879057 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13516068 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.13383445 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.209065088 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129222434 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.299081252 seconds)
    (47/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.151424007 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.159829558 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130853557 seconds)
    (50/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.164489016 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.159710033 seconds)
    (52/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178902944 seconds)
    (53/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.309439278 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.100805604 seconds)
    (55/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.207452128 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.175947586 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126977654 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.151818961 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.127595152 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131352544 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.183348569 seconds)
    (62/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.207507314 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123359897 seconds)
    (64/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.125991805 seconds)
    (65/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124632339 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100948698 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.172458288 seconds)
    (68/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155627931 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.152624234 seconds)
    (70/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.221597433 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130914934 seconds)
    (72/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.161517322 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.13317814 seconds)
    (74/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.175307074 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137733628 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.152505604 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.212065048 seconds)
    (78/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.202646655 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1471532 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.146024158 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.155298504 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148689413 seconds)
    (83/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134178859 seconds)
    (84/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.100199402 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.154065603 seconds)
    (86/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.302779328 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.200132911 seconds)
    (88/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.165065193 seconds)
    (89/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.100292185 seconds)
    (90/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.190854561 seconds)
    (91/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.101541227 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124448534 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.160475587 seconds)
    (94/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.183810747 seconds)
    (95/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.194476882 seconds)
    (96/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.143079111 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.123055981 seconds)
    (98/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.106661151 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.180847948 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.113393406 seconds)
    (101/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110314769 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.106461379 seconds)
    (103/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.167734207 seconds)
    (104/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.102905382 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127594182 seconds)
    (106/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102664664 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128053289 seconds)
    (108/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.107983164 seconds)
    (109/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.107906885 seconds)
    (110/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.167144341 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.126437226 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172705673 seconds)
    (113/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.104139656 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132617883 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.216607979 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107976168 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126514223 seconds)
    (118/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.132109537 seconds)
    (119/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.109596713 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124404401 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100255602 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.13021035 seconds)
    (123/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.102686712 seconds)
    (124/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133880932 seconds)
    (125/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.101493316 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.134506908 seconds)
    (127/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.138128212 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124926803 seconds)
    (129/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100930236 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.172840016 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147310877 seconds)
    (132/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.170737811 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.127938593 seconds)
    (134/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.135789314 seconds)
    (135/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.101779056 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.101546876 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.161873605 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.108638066 seconds)
    (139/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102083593 seconds)
    (140/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179189711 seconds)
    (141/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.110288173 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125216713 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.240909838 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128330151 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126656516 seconds)
    (146/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.13479163 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.135398528 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10257431 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.101111044 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.161946733 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.110262628 seconds)
    (152/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.102027295 seconds)
    (153/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.137070122 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.155140203 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125774045 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.109671387 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.154216651 seconds)
    (158/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.109376894 seconds)
    (159/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133597527 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108631344 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.159932508 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.106480025 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.10594163 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.173205712 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130099657 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.138952575 seconds)
    (167/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.105095352 seconds)
    (168/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.134619292 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.110263322 seconds)
    (170/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.147786983 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.133518394 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.135687516 seconds)
    (173/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103684697 seconds)
    (174/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.105562086 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.153494188 seconds)
    (176/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107664803 seconds)
    (177/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103281121 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.14685784 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.155710249 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.128239944 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.105756653 seconds)
    (182/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.10551566 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.130536292 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130618176 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106501662 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.13517328 seconds)
    (187/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.131898905 seconds)
    (188/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.10635518 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103501989 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.10974116 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.153733879 seconds)
    (192/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130531699 seconds)
  done (took 31.838339177 seconds)
done (took 32.882776323 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233815982 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.154438272 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.137003255 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.135788259 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.230814663 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.142896145 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.178584278 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.138748118 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.146034665 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.163662686 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.127158798 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.148610673 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.162791105 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206567871 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.165606123 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.130082545 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.127730062 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.17364685 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.152185913 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.151432952 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.232148189 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130095271 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.173671857 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.145699966 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233707191 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130989955 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135241017 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.164590357 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.149499372 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137021116 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.164245041 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.1292354 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151331705 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.18033648 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.129250342 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135994738 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.153915759 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111926422 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136628563 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.163105575 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150229564 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137747417 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.164081606 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.13034271 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.137350671 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.16349885 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1286033 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139463943 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.154026731 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137962098 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13081897 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.180076396 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137191886 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12757264 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.153539775 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130747097 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147323659 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156095181 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.15046913 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127596946 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.15645965 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129643556 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.139410923 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.155072958 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138419628 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128264769 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.16608664 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.142113918 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136366687 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.15851542 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129497236 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135790789 seconds)
done (took 11.983069285 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.13660851 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184259131 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.232598318 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.242988686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.160657128 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.17323801 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.15429449 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188617833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.151850755 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.152963441 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.193399956 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160262603 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243929325 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144488241 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.174299501 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141305483 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.173593029 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.144998367 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.244004905 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.154476684 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.181721183 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.148047742 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.162835948 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.180079374 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.137288795 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.193764465 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.138518487 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.140960905 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.162785924 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14656987 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.154576574 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.163858155 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.136760911 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.185207974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.15275101 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.145052003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.174096701 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.141525457 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.135362994 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.162632895 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143449804 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.181702088 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.136243351 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.165301326 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.169022281 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145885085 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.17294272 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.149471944 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.138698486 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.169694355 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.139982026 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161827016 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.171956069 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146380405 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.171386087 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.147273442 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.146176873 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.170564322 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.138969723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.144714953 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.16339901 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.138286145 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.138744042 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.187393316 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136969308 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.17345076 seconds)
  done (took 11.82971566 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.153811601 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.163890305 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.171261167 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.144115525 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.164853001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129918202 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.12750974 seconds)
  done (took 2.15152617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.131830366 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214234852 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.242139306 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.241305433 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.236816252 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.224447839 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.179130937 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.12989066 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.190121012 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.142369739 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.241321613 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.244479179 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.166765641 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145555477 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.245988485 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130317595 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.248275179 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129889203 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.171253547 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.218196415 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.173614628 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161011572 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141707165 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.15826107 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210545997 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.160983593 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.291943773 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149622473 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138985636 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.172713115 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144313805 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.23753485 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212745259 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.172611677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137929243 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.243290221 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.211714277 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.171359588 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.253770779 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.13614377 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.238255494 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145128189 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.145051825 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.172410012 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146353059 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.229937391 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150277286 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145353159 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.172028922 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219871184 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.170192297 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21331387 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.169149002 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.144072729 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.166592581 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148280591 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151663632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.171909818 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22353739 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.175150234 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.216583355 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.24347973 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.241687146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21702211 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.183025889 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243053049 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.21013116 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142569428 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.168250089 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145801045 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246099142 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143854398 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.170216823 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.205547344 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176067095 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.217843698 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.246201106 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141729693 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.172519901 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13516121 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142141585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.159756086 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.207089759 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.17224325 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143809289 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176715706 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146911445 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.145128449 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.162811985 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.157286699 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143808804 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.171114793 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.151664481 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.17016382 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150817512 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.249681556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.143514846 seconds)
  done (took 18.820275273 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.13488663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.132752211 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.161303094 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.135581305 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.133092717 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.132809562 seconds)
  done (took 1.95400104 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.171329732 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.145881219 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.181732381 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.147316422 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.21645873 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.221408319 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.252511594 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139461592 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.189560456 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.155498634 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.251144694 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.250759349 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.227157446 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.176512518 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.229972235 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.176278436 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.225625734 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.173897284 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154379645 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142750985 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.17590796 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149396411 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.17092236 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.215249309 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.174156948 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148591989 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139127625 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.18304229 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154143999 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.166983166 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.151272897 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.147622202 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.165505109 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.143018061 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.255009859 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.141532077 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141763385 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.177190201 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149160573 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.174299773 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.227639793 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.171822948 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.154372753 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147794915 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.169780902 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139908155 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149762645 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.168993372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.256012385 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.149843319 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148846363 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.175133499 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.148624243 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148350867 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.168574521 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141479836 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.175348736 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.230218217 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.178901647 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141066027 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146909303 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.175771899 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142180808 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.150619319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.177685767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.150102883 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.165348937 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150515915 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144180625 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.175225919 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.150787822 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.148064449 seconds)
  done (took 13.549139366 seconds)
done (took 49.397868626 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.577141927 seconds)
  done (took 2.694495231 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.925107618 seconds)
  done (took 2.044324271 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.249449795 seconds)
  done (took 19.400086122 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.460493812 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.505414114 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.228335638 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176506882 seconds)
  done (took 3.487496171 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.853837816 seconds)
  done (took 1.998021527 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.356315878 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26603123 seconds)
  done (took 1.745753988 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.788568847 seconds)
  done (took 1.927703257 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.548464619 seconds)
  done (took 2.671270358 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.316090513 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.274553733 seconds)
  done (took 1.727934181 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.642247921 seconds)
  done (took 1.781027482 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.549595547 seconds)
  done (took 20.691931122 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.286569963 seconds)
  done (took 1.426424757 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.319995544 seconds)
  done (took 1.463921542 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.624864878 seconds)
  done (took 4.768738267 seconds)
done (took 68.961328897 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.144078144 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.146908791 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.171393404 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145963639 seconds)
  done (took 1.738022131 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.153045402 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.147832079 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.17678649 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.148623702 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.153424002 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.174634991 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.148436652 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.149047442 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.174815664 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150014021 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.147369297 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.174695314 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150774862 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.145343701 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.172702775 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150226431 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.150449089 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.175088013 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148406462 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.146803048 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.176745888 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150893605 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150431946 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.178138659 seconds)
  done (took 4.939330518 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.144751882 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.138516288 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.138536324 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.166344978 seconds)
  done (took 1.729660846 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.15757336 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.160316744 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.184651199 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.153727378 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.158628538 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.185195347 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.146502686 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.143717389 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.175961506 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.154958954 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.189320848 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161419217 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.15701891 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.176776317 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156968031 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.141001963 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.176050998 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157936813 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.179156403 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.158287219 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147856361 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.179547985 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.153914682 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155228668 seconds)
  done (took 5.059423734 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.221333765 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.15960069 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.205654682 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.189628668 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.209266387 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.145358813 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.204335556 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153430077 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.154509074 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.177886086 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.15088084 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.219211397 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154627444 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.148655476 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.17461083 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154791414 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.186508372 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.155333733 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.194097353 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.18272733 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153571497 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.188156879 seconds)
  done (took 5.037220759 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.152616052 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.139258676 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.161658334 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.140749448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.152389763 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.16797841 seconds)
  done (took 2.06312149 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.13839602 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.133038988 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.133138481 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.161676539 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.136327081 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.132671091 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.15853386 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133981838 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.13318208 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.159058541 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.134342385 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.13254356 seconds)
  done (took 2.837192163 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.368257953 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.138148337 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.167554249 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.14004784 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.143730667 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.164856315 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.155524041 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.138691542 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.299791296 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.137356316 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.165081929 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.225032197 seconds)
  done (took 3.402379002 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231966714 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178561939 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308968582 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.408017658 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192623661 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21835143 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309434429 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221839374 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.234359126 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166483032 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242794225 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188431632 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212177067 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212624881 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198897547 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.186886395 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220398435 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264702216 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172065464 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267160522 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184159204 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233354303 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246077794 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1782549 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196444574 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190661851 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.175790751 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158519998 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221888429 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194907409 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229510264 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178398795 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20117916 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246766291 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257380049 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232093966 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305630624 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19247053 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201123956 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.249293576 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288130972 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170142438 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247441813 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208676967 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15893867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239921907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182818076 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.240761101 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.163368708 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202704341 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211910538 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235830574 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.233794669 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168126099 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35426393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164661025 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200880097 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234870002 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21865876 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256404563 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233321668 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.154359194 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233917451 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248236545 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243740583 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.200048337 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193398462 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185982737 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194325639 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263135728 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239998996 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188593139 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.264811864 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189240261 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200712181 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227500388 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181784306 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261338524 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22740769 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.150474943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205971245 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165223793 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156458504 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.247095812 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152321353 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272792854 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16126666 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.372246078 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242958489 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214727424 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191157946 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216997601 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192510754 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206029536 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131563434 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171524323 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.221470115 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213738597 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159974596 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183520092 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200526206 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.156035561 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210900301 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.153347 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227430297 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163438608 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221658937 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199963511 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.191454747 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208126992 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20846586 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190848158 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226729315 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249492362 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162465963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160966413 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277183441 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226422464 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166093215 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234026065 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.254003991 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179798417 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192697786 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196807671 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252714109 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173309469 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257921574 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166429267 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193495233 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167779033 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230295786 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21677373 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.186020273 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157835187 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.223071584 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248652823 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.158301588 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195820604 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210579858 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191868323 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156007934 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166475709 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194259596 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.172235349 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.206740257 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168813347 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210200232 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196014497 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222421759 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186921567 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19391538 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201376966 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192834681 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197820628 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207553108 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.150842801 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.233373631 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25468181 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162029429 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238748067 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193927651 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243227704 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230837635 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160942156 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241000632 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159938427 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.151004249 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219943693 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202240245 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223423943 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.247838306 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241606881 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195554135 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.224028459 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179502402 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226946751 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.242313928 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188546943 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.202702375 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202395073 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227203008 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.152195778 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.154145974 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.189564534 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167890698 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190690807 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168856351 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236835892 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193149656 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241633035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22702279 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168828455 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250880221 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155840001 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219986635 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204684419 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200036713 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217241071 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248875662 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23688974 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171335419 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22234166 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.152210063 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184832609 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.166668122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220379485 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170899739 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165510019 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202910362 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249543189 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203113143 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20824839 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252983109 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197079755 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.260306326 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.152850069 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.221398023 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199230439 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226835667 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.216156081 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193864829 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.192948732 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251978556 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173649768 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252094065 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227191973 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211269987 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254652657 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193993097 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193728103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178850223 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220858828 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167940183 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223961871 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176560109 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191871138 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183624561 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.198847316 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173191652 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24365745 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174360796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239766239 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.219270969 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204453403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187148418 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174624228 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234508855 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177476667 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.13571435 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230182168 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256101502 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18163775 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218312462 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203488752 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192155095 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347629652 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247919898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237204733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168113123 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197674793 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204457897 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221444903 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195237654 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246121131 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171640063 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267563873 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230283492 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.17619812 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161164312 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211096046 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181722532 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.199398624 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.21071802 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195096274 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173690231 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249136842 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200656599 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203714261 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237104971 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.177399301 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.220245659 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170845236 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285595806 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227837564 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205061039 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.225028173 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.197081543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244470608 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156805568 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188425365 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.166514083 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247818101 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164057035 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235345858 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212149265 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247605803 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237947823 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192936048 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203582431 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.160129198 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229049652 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180030703 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2502031 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198477339 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.172277632 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250144036 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158836705 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160992193 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222794563 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347897564 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180539269 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236290056 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.13721746 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.343595861 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163736746 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195009056 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195348468 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230503385 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.166404226 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.245780507 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208160165 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201259427 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197378812 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16723243 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245351289 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2508973 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226506383 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206521942 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.208626996 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192739667 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223095986 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232910274 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182268714 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179453215 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22245651 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253840125 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.212979435 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.193998389 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202351415 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23046808 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202311949 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237305429 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171578271 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245891841 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16093757 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228970165 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169529327 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18807759 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19301166 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.241827651 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162855936 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238424026 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231318321 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164936119 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160611144 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20977273 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196680429 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202931319 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.16311294 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246815148 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.162364588 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243702626 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268626793 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164158797 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227560939 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181212515 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162941803 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202695975 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176130151 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196351933 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.209584469 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244418907 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.16547832 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240439741 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197536967 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226974128 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188138131 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208225197 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.355706148 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.191989559 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222650804 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213340757 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258875212 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184868061 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237917646 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202230948 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212231215 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197714486 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210941396 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.253053809 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23028494 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198656442 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196837709 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177842348 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202879526 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.169867745 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21437908 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202132843 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2028187 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.170663122 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.226649815 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180342614 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179608739 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205636966 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262256008 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186350249 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249490472 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219786786 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202761918 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208169658 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241637987 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160955013 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.22999748 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234132871 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178529535 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215645029 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.169379873 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.169420184 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276842057 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.159523711 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223443488 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235405563 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203404477 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23505182 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.171537597 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241598316 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175149897 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239505871 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162722155 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.21634048 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204825283 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198543845 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.162405132 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233034014 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194369998 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.226008941 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176521632 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.211326041 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257263422 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.156670991 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198422257 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.342757056 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194460089 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258619019 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.169405472 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201045578 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181230371 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192384629 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.230228167 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233279495 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.166690789 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16401849 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.210121994 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193563404 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.207543122 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203161867 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250477297 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223580946 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2201853 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.168029341 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.320250832 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174739939 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23889976 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.149690875 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.194511248 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176305199 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198167845 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178285121 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24813475 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281075103 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.199050608 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.212112897 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170843198 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.160193354 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195998135 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198433913 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216469412 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200549027 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213490792 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.138458162 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173775993 seconds)
  done (took 102.377975715 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199770898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.19155028 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.207496657 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.261937577 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234421784 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.331826564 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.269079062 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286444529 seconds)
  done (took 3.243355412 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.155404987 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.197624028 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.177822297 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.657512973 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.146247191 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.489171126 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.195750632 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.156129437 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195587918 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.189739265 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.174892546 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.595274013 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.157921778 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.182965492 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.185958555 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.145350245 seconds)
  done (took 5.255972726 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.702455324 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.593128646 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.06263061 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.337264682 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.302053022 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.238523998 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.799997573 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.233238021 seconds)
  done (took 12.532004918 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.187447834 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.179614495 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.412675599 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.312068627 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.242833057 seconds)
  done (took 2.598692263 seconds)
done (took 153.944199453 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.160039843 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.158888272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.186672889 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.163861348 seconds)
  done (took 1.918899645 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.214760169 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.126015557 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.128049004 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.157545916 seconds)
  done (took 1.893726337 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.552684122 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.126771187 seconds)
  done (took 1.975794985 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.190329951 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.182094227 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210523817 seconds)
  done (took 1.859052974 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.178436264 seconds)
  done (took 1.441478176 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.152966139 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.151597147 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.267221743 seconds)
  done (took 1.842969354 seconds)
done (took 12.198227723 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156707514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.955797489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.472163467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16856566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.775549315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.435786128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.434598569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.214590652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209414072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.176194919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.167518729 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.755983061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.420215615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.904782992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.438066969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.905493752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.748993919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.179562392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.154240906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.146324193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.446024149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.145474069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147732645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.179968053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.745712659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.484881916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.147856355 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.920700779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.174716556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.151727609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.435806341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.175676363 seconds)
  done (took 22.231363634 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155304431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204174861 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.185848427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148935644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.149895956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.179640587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.159303492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.188611062 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21431232 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.146208961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.20213593 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.145455001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.181569319 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.149247683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170767095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.175872114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1509835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.149593465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.185172497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.15019819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.168052927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.176987812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.150256676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.148575983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.178782158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.170350384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.147120864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.191553332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.146741286 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.15114722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.185547355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.147538102 seconds)
  done (took 6.624758362 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.19475234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.211870487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.187067021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.184548255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.226562345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.149497354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.26383463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.185187746 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.245188025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.150021769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.199200827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.148841201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.186736103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.179370611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.173429686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.147045581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.182728149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.150042601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.155231339 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.181768025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.170310437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.176937492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1517893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.150433434 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.177083179 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.172783828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.147939318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.192790218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.148946475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.151893282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.18488081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.149259628 seconds)
  done (took 6.960290392 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.16372001 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.164432334 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.19968147 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.173587752 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.157724758 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.190007537 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.164254563 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.157291208 seconds)
  done (took 2.659813374 seconds)
done (took 39.744903763 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.17503635 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.167511273 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.19795307 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.16507959 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.259468454 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.15747363 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.169086919 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.155056484 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.195048328 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.170898518 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.148447995 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.189513443 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.168225731 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.159015849 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.262771702 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.162713445 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.269061159 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.264247482 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.156563455 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.162076152 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.189249012 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.236170686 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.192812413 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.157367844 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.263114062 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.152700909 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.255732854 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.160523689 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.157970615 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.180383055 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.233945338 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.160558146 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.188301503 seconds)
  done (took 7.55504525 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.249093062 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.188723692 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.159769182 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.156461855 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.157501934 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.189531497 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.251624202 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.189096118 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.156412263 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.156386353 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.189745027 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.233404276 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.197074847 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.153465104 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.159931497 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.145965972 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.283295486 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.159329997 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.181551679 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.130818099 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.153303647 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.188211316 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.265055395 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.183661988 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.159957559 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.15834889 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.160118955 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.197667978 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.161082452 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.159507752 seconds)
  done (took 6.76870839 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.165240804 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.17114262 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.207156674 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.227656943 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.188284543 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.203690886 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.178717295 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.205560872 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.181183215 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.152584764 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.200949796 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.190929851 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.168737256 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.195250968 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.157029311 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.170600911 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.207534478 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.153864194 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.159782458 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201308831 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.174990322 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.169019314 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.208344103 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.160138234 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.150528931 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.193269273 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.162616075 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.16669684 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.193758588 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.167628968 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1537823 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.190394286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.155069922 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.216745904 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.156251958 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.165807365 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.20967888 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.166164308 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.165428345 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.218702699 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.156958538 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.153939014 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.210940658 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.206863567 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.153267213 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.20084806 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.164828052 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.166709177 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.18392432 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.17161423 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.227268975 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.153640551 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.174683728 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.184299882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.153019817 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160776345 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.184920683 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.157674646 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.167894246 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.186999905 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.179175461 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.160138976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.194860509 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.15643003 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.164178839 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.183085413 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.154862123 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.157375303 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.210230767 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.162562988 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.189745062 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.184172656 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.166380755 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.166114646 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.195052362 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.167319879 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.152458822 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.195628957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.16586092 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.159433273 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.199792744 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.158532656 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.156614573 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.20129272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.176992751 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.167857316 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.196481185 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.16705152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.156823743 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.187608224 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.171303624 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.154735723 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.190527553 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.16849893 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.153843779 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.188255549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.16840954 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.166172225 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.182795985 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.181209278 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.15758658 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.184502992 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.18041138 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.156823762 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.189427274 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.165698093 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.194841472 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.185356362 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.166768344 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.167374168 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.186172223 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.163714219 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.156532591 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.185245336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.173192069 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.169748937 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.193773879 seconds)
  done (took 21.992442818 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.365116686 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.351966619 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.22596732 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29332181 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.167973253 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.286745101 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.347610608 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.349565965 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.154017274 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.229191638 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.238559514 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.287640927 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.188667827 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.182982864 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.353444088 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.405205841 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219004332 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.191282942 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.225031626 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.167309544 seconds)
  done (took 6.538705656 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.177578195 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.190173962 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.210025065 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.183641133 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.197320108 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.172252984 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.154912369 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.209464678 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.166769269 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.164177266 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.189036219 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.171995792 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.1685728 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.203320247 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.173399389 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.185100168 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.194747843 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.161676332 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.177009383 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.194140839 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.143007603 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.180083486 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200127468 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.17651033 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.205901718 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.167595608 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.153621968 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.190809248 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.163215342 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.164593204 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.190696709 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.174200693 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.163692367 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.175605821 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.169059597 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.169333042 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.160673453 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.190988767 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.160394191 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.158059708 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.20399423 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.169389263 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.162096363 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.170517413 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.175554986 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.151165046 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202062119 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.170093594 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.146465953 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.17406444 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.201505365 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.170203179 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.162546429 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.210276235 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.162397559 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.171490868 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.200429179 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.170789653 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.191670227 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.155749604 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.153540477 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.158357436 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.196756679 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.171535121 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.16707914 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.209356069 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.171300795 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.187784827 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.162725645 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.160370419 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.191015503 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.17132412 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.175278292 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.198176605 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.163814308 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.170026506 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.196722259 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136565298 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.164929156 seconds)
  done (took 15.258539814 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.183099149 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.166600842 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.205894674 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.193102356 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.169796141 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.194234408 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.167686375 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.175625799 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.204607894 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.176720512 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.171719069 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.204218165 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.179261445 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.168059989 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.198902743 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.174806347 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.170053508 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.229752553 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.175013837 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.216567516 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.173411129 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.160856887 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.202183271 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.16977734 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.18394997 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.201025733 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.186266591 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.170360485 seconds)
  done (took 6.504560992 seconds)
done (took 65.906269328 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.462568327 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.672623836 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.421950058 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.421774165 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.487473853 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.44581415 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.421826432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.426952313 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.021894548 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.390244011 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.421875217 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.436417578 seconds)
done (took 31.349843665 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.457455831 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.958596108 seconds)
    (2/2) benchmarking "String"...
    done (took 1.729739702 seconds)
  done (took 4.999742039 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.413797793 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.412648076 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.659584949 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.411550683 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.412609192 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.413466502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.427449829 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.420969265 seconds)
  done (took 17.467201389 seconds)
done (took 28.649582831 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.473416358 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.601811011 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.656116079 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.412002419 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.443567784 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.41171085 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.416697813 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.432169961 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.416851182 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.426862891 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.820239885 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.688047121 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.414802905 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.796325248 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.414278158 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.459527302 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.411798455 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.639814352 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.416834821 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.441986627 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.388056797 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.392823394 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.434439312 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.410682246 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.41813078 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.427289837 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.437247074 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.415011236 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.591507531 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.43479627 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.442578794 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.414535678 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.448167825 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.410947074 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.416630351 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.41706098 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.601240554 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.421782166 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.395198625 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.440215182 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.592197584 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.428064268 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.421431489 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.417291549 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.422073648 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.470227412 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.393518993 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.54204882 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.436976507 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.411442565 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.473382894 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.777088535 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.410811217 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.424349394 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.420684574 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.623192683 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.424659054 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.453439541 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.433979808 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.425229253 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.418087839 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.414379378 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.457261192 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.420399343 seconds)
  done (took 157.377354521 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.410586741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.416812563 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.415446608 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.476909234 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.415202823 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.415757232 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.4109511 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.409213363 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.41493294 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.416158813 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.416584787 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.415284115 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.418501938 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.349833961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.421093639 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.43284883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.415694518 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.424701965 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.424421956 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.410353832 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.437136239 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.416496408 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.429078398 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.410356631 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.453260893 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.479908568 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.424389907 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.433341948 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.423962991 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.410992132 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.450711479 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.460742992 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.006699514 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.263718908 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.419116519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.418784622 seconds)
  done (took 87.980807146 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.409502787 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.409599262 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.410773206 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.440116267 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.409184888 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.95089002 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.956817731 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.376737797 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.689918185 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.654226969 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608209583 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.40930772 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.501078761 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.421627874 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.414383742 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.426597138 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.437671995 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.414246195 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.411166047 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.949200887 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.427284153 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.414703399 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.579773436 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.426651599 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.440763124 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.79771668 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.410812202 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.440545538 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.735727318 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.457887564 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.40970158 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.707363536 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.694735988 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.522049494 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.41092884 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.440473771 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.409748637 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.408890465 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.686551977 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.409431653 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.408977006 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.411632954 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.010082121 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.414071943 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.943264627 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.413960461 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.335053635 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.414579322 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.410418314 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.453938707 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.004528692 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.409818549 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.410561517 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.414042531 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.410333441 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409008808 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.440761667 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.410887614 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.502047883 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.410553222 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.410422903 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.415670157 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.442985752 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.411501562 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.588022945 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.410536399 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.40308778 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.471836884 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.526462322 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.945002075 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.415176542 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.503985712 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.526423501 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.411395536 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.411384334 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.411314275 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.411200085 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.520359587 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.412261195 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.070466099 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.58237799 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.428288628 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.621509532 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.511239462 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.412298759 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.702897741 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.4167882 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.411705313 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.069480586 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.503918207 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.41335204 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.413369716 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.413232681 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.07413573 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.950902099 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.606846587 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.418317353 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.978709294 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.415679927 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.248758404 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.94027443 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.024428977 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.417994227 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.521790451 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.584080813 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.429665696 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.413664504 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.413733349 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.413409664 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.622680026 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.419341353 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.473089671 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.417678434 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.812599267 seconds)
  done (took 396.900883864 seconds)
done (took 643.568227897 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.289124872 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.247130491 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.392286085 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.255249174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.238922261 seconds)
  done (took 12.733766645 seconds)
done (took 14.044114462 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.605018984 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.604458061 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.47273597 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.610919585 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.444945423 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621537375 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.588198413 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.43944536 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.525587406 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.497622059 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.528687051 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.469370425 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.447829882 seconds)
  done (took 21.167655625 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.302848474 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.425609039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 2.027742142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.303577602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 2.004531535 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.317119207 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.342471475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.432919147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.148130243 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.989743301 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.990388333 seconds)
  done (took 25.597124476 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.333889443 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.425785942 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 2.050840697 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.327406326 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 2.013469133 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.32739712 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.348178742 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.425268784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.14788272 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.998945394 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.986291219 seconds)
  done (took 25.699484563 seconds)
done (took 73.774987712 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.453836731 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.515026662 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.448879972 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.435362559 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.433754645 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.434385567 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.437254184 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.433261224 seconds)
  done (took 12.906797635 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.43319576 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.432046905 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.433035713 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.432542738 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.43401875 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.433355809 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.434434567 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.434112166 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.433412089 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.434022019 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.43508686 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.433995481 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.433433353 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.432756453 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.432663378 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.434386573 seconds)
  done (took 24.25059715 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.438645501 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.433063676 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.43211012 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.435444162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.434781559 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.43367799 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.435077938 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.434316567 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.433402026 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.434443345 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.434703286 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.435598291 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.433749746 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.435081466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.434693531 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.435845988 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.43548697 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.436481175 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.438885579 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.434019079 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.434158074 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.434990132 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.435045844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.434077258 seconds)
  done (took 35.753161618 seconds)
done (took 74.22311995 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.419708507 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.427751999 seconds)
  done (took 6.162960573 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.495722438 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.493469282 seconds)
  done (took 4.305261521 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.437303062 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.43612633 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.435437504 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.436080634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.436281597 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.435788733 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.434140372 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.435064803 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.436037352 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.435747036 seconds)
  done (took 15.674122608 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.436036334 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.435448496 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.435778143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.437306719 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.436157686 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.436218129 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.43709839 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.436240268 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.436871367 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.436207118 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.437005831 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.436020178 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.436865983 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.436697815 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.43674004 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.436466351 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.43655947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.436119195 seconds)
  done (took 27.173675549 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.449884882 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.454582741 seconds)
  done (took 4.222623737 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.566155588 seconds)
    (2/7) benchmarking "second"...
    done (took 1.479455195 seconds)
    (3/7) benchmarking "month"...
    done (took 1.543536349 seconds)
    (4/7) benchmarking "year"...
    done (took 1.535540447 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.478881 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.458761685 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.48031159 seconds)
  done (took 11.859734391 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.438351301 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.637815609 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.764321376 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.450409973 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.439964294 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.442336591 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.633736482 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.442620403 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.445594956 seconds)
  done (took 15.013103827 seconds)
done (took 85.726167668 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.426335601 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.444259993 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.4424082 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.440233266 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.766661598 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.46769581 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.421188048 seconds)
done (took 17.7269622 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.401827586 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.397933458 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.393284843 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.42642939 seconds)
  done (took 10.929005103 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.415848267 seconds)
    (2/2) benchmarking "read"...
    done (took 1.739279452 seconds)
  done (took 5.464490324 seconds)
done (took 17.704598992 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.428282536 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.428367485 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.427517488 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.428639261 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.427172435 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.428429229 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.427104703 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.427954314 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.427330923 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.425908665 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.426866451 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.426140205 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.425565965 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.425497206 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.427333484 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.425634959 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424695961 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.423383293 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.424524178 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.423769815 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.424843374 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.4238645 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.426415053 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.422345466 seconds)
  done (took 35.53652154 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.424679686 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.423214689 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.423881632 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.424542967 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.422907525 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.422029933 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.422246992 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.423150871 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.421206624 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.421413749 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.422248622 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.421600275 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.418593978 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.418503091 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418668758 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.419117223 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.418275861 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41783526 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.419081803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.413856688 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.413560839 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413222798 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.414890495 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.413683996 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.414600801 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.416409597 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.409958727 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.41018645 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.410064556 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.410658479 seconds)
  done (took 43.851238313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.413736234 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.41271087 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.406225657 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.407240856 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.406692564 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.406136318 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.406756265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.406563849 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.406533797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.40373372 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.404027509 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.404011705 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.403944451 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.404862394 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.401803018 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.402649403 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.403061427 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.400467875 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.401429152 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.400996521 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.402534159 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.401918246 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.400620662 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.403109235 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.396701754 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.396714145 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.398003689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.397940857 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.396611892 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.397312617 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.398480157 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.394592 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.395964976 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.394655391 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.395853727 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.395023162 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.396124081 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.395066094 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.392357584 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.392451293 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.394308226 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.393835983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.392437642 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.393814512 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.394681464 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.391243979 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.389858453 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.391439153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.390868021 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.390581862 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.391893606 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.391857618 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.389015858 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.389049417 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.38828618 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.387299107 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.389520786 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.389653292 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.388938314 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.389009469 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.386527502 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.388163165 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.387600701 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.387667541 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.388553628 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.38886335 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.38658204 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.385335741 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.383878327 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.385114021 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.385151023 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.384231157 seconds)
  done (took 101.798381774 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.386561698 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.383010542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.381018618 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.381908428 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.381796942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.383627868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.382944862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382524299 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38086206 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.378865315 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380129073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379335296 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38019285 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.380404737 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380192747 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.379958895 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.379186572 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.378504194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.378900005 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.379754963 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379704094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.37885597 seconds)
  done (took 31.652122065 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.379132564 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.378136118 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.377593036 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.378620724 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.379431384 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.379443751 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.379856491 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.376296394 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376475982 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37630653 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375645746 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376129307 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.378244223 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378083807 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37461494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.375933975 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373992248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.375564803 seconds)
  done (took 26.060232149 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.374844437 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.374204729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.372610679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.372044335 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.373174448 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.372965675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371861668 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.372796512 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.373437425 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.373588737 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.371549418 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371894462 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.373440549 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371388818 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371283272 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.371720329 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.372915359 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.370773715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370875229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371927537 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.370319018 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371303719 seconds)
  done (took 31.45473001 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.371274156 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.371316475 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.369564777 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.369597999 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.36972042 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.369351186 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.370206153 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.368498661 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.371420611 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.366978646 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367501741 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.368047402 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.370822091 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.367704458 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.368397043 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368257946 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.367417823 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.366332036 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3682682 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.367266205 seconds)
  done (took 28.63879932 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.366590374 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366114925 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366846168 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366093625 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364560574 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.364369397 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365849216 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.365185429 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.366719914 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367758205 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.365037133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.366141931 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365254405 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.366151833 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365185137 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365819773 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365288871 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.365187095 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.365704899 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364117031 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.365706335 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364898114 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365639997 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.365772595 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.367968765 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.364479328 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364215425 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.365437915 seconds)
  done (took 39.49542124 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365018583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.365337719 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.364500412 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.365147266 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.365634253 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.364872358 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.365217773 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.365613712 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.365718198 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.365881606 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.36546797 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.364500571 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.36556585 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.366139854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.365345735 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.366392819 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366436727 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.366409337 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367557441 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367451026 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.366376977 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365318781 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.366297669 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.3666236 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367845413 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.366435531 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365943714 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.368366895 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366539392 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.366018107 seconds)
  done (took 42.235670088 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.386017423 seconds)
    (2/2) benchmarking "in"...
    done (took 1.38318203 seconds)
  done (took 4.02458579 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.365435481 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364370997 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.364081111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.365486728 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.364910238 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.365712529 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365037608 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365300563 seconds)
  done (took 12.175191559 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.356281444 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.366488385 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.364978668 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.365367659 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.365265084 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.356229307 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363548811 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.369938619 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.357460226 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.35626415 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.358422923 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.358346066 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.360734015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359435859 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.358861735 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360592033 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.368907422 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.366204455 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.365815937 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.365676631 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.367232227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35971639 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362440507 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.368252881 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.357192529 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.366929812 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.366724854 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.371677446 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359813051 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.36506701 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.361471052 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.370029346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.366844815 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.367299903 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.367431825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.367159925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.369040278 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364950804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.369197936 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372209396 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.36837745 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.368526418 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.361176063 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.364953851 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365317201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.372035112 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.370713069 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.367957656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.359239976 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.361180047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.369042032 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358608912 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.370830131 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363546456 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.366767088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370667332 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.375298537 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.360302867 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.362808303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.370435326 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.376763727 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.369714278 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366267143 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.373047638 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364519906 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.366771406 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.371173563 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.37542552 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.369496737 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.368782225 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.369444917 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3770673 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.372766042 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.372842828 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368750967 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.36867283 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362358556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371926545 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.369644015 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.371704573 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.373621098 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.369273456 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365256567 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.366455919 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.364678478 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.373830855 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.370991051 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.370195671 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.361023856 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370449512 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.377928743 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.371547367 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.361140286 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.364517837 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.36600802 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.371825089 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.360891174 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364716121 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.37224131 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.369698105 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371068611 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363036195 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.367853269 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.375518831 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370195425 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.37147627 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.376409002 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36295229 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.373530673 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.377467451 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371312156 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.362488902 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.366969302 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.372454028 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364781814 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.366642417 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.37536663 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.365583458 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.375732419 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.37111262 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368179272 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.374223723 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.377396117 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.371022999 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.365306134 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.374361414 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371476458 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.368583599 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.377590435 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.370955869 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.370990773 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.367557714 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.378171074 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.365430654 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.374957335 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365494905 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.374905271 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.372327291 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.372875999 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.367450267 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.372121664 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.36799487 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.372573386 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.37258024 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.377155213 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.367665443 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.378099248 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.370872822 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.368313806 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.374756938 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.373639665 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368533384 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.363808537 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.372331242 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.360305781 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370422906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.362445501 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.372646747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367323418 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.367125092 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368349445 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.358401332 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362278473 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.369290861 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.366782176 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.364743478 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.368575436 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.367617419 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.366784126 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.357929237 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.368656261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.35843559 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.360408431 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.37007254 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.366072616 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.366475094 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.36369817 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373051861 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366577407 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366790545 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.358903838 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.364874382 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.371295525 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.368681474 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374780059 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36629601 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.367705426 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.360997104 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.36231862 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368862025 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.360625849 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.369386174 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373344249 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.374517883 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.362571313 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.368815158 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.360410035 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.369186556 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.367215241 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.375450376 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.368379294 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368897294 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361492106 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371281838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.363052917 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.371586593 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.360106837 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.369584781 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.370675551 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.368270261 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.367656503 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.361282443 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36379529 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.371266293 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.369454052 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368962129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.362313231 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.371766106 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.360406608 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.36268658 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.372152615 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.369070069 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.37055101 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.375676885 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366836619 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37216988 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.369379769 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.36362687 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.373004369 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36720703 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.368385046 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374692439 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.370525795 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.366087473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37377738 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.369637035 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.363383815 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.369795496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.377145311 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.370913092 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.363615238 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.372042492 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.371558369 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.370307325 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.369769683 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.362961627 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372482049 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.372614644 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.377762483 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.363112189 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.374930727 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.364677929 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.374531978 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.366870997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.371315607 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.370400968 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.373074712 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380220824 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.371744417 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365466039 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.375232872 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.371839137 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.370743572 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364793981 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.375238507 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.373015093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.371205766 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.368462829 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.366357217 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.371721888 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.362541784 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.373106149 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.364043256 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380204363 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.386547004 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.374394461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.375461648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.374638015 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.373964402 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.37339339 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.364565374 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.366115196 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368382477 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.367536005 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.365985262 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.374298099 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367401966 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.375727779 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369646206 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.372632937 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.3748125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.373122223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.365317554 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.375901282 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.372721554 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.372130303 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.364359624 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.37505868 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.367702076 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.374263922 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.372887507 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.369039599 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379382816 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377144236 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.369586646 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.368873063 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.369710041 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.3661908 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.368444688 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.378795502 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.366672144 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.37522767 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.366127659 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.370851038 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.368732907 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377151617 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.383037475 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.367693734 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.376691531 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.37475486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.366080842 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.367804535 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.376924873 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.377592517 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.383763409 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.367640174 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.376670014 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.374650575 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.37559285 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.376304483 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.374738168 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374889059 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.375380399 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.380966886 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.378395688 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.370258457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377285879 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.383755891 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3745373 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.375137858 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.36748646 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375883276 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.386509985 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.371441227 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.37204811 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.370869098 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.377542099 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.377617231 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.377571582 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.378370237 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.377718046 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380900479 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.38071738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.378688342 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.377229694 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.380079722 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387779417 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380709758 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.387635812 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.371061775 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.382918406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.375730665 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.371733059 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.371321717 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.371886282 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.380038941 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.36904922 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.379125278 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.376626601 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.372390225 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.377469212 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.382986191 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.369820793 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375334687 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383603401 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.369438738 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.378822664 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.377332012 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.3692338 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.378938253 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.377214195 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.369367806 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.371340912 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373172658 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.380846371 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.371698859 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.381120953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.371510274 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.380483654 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.378906337 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.378696348 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.37847567 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.377732919 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.370687888 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.379901257 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378001878 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.388639072 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.372487371 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377371627 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.372133016 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.382666211 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.388943702 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.373620712 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38446992 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.380444975 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.372480916 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.377821287 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.38414782 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.372902142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382545324 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.371742964 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373816037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.374621766 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.380187562 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.381683174 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.3838495 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.372269421 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.374137574 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381299325 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.379909941 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38024148 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.375605777 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.386513216 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.37364527 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.372687906 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.383089608 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.375007333 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384858565 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373422374 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.375538049 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.377139333 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.382709908 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.379644284 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.380426027 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.372216014 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.374591127 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.387076791 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38280637 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.375687059 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.374569945 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.382537146 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.376025949 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377801362 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.378633878 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.376370147 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.375894925 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.385647763 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.375924795 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.376043666 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.377114982 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383467789 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.386074812 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.384793098 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.376126636 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388855471 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.389590878 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.388001341 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.374872699 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.377529052 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.37752189 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.384497853 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.38194197 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.374412212 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388413277 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.388225055 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385690421 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.382232601 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.382237164 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.37460863 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.384970852 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.383697408 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.377977918 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.389173922 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.379588709 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390299083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383981495 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.382242039 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.374980246 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.376609681 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.378317435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.37908383 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.385186147 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380833475 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.386498816 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.379953117 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.387823528 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.383860702 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.383533306 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.3831701 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.376277715 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386109117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.375919656 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.384752234 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.385887994 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.377840501 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.385692947 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384290344 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.377092739 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.379625561 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.387641657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.38415654 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.377042477 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.38221097 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.388489974 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394420545 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.38465132 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378449748 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.381912338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.387822267 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.385283704 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.384735758 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.378238442 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394015952 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.396971855 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.378038853 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.38127736 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38833354 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.39533608 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.385402545 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.386189443 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.382306561 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.382655848 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.388984966 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.38520922 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388361486 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.391143052 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.379983952 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.388830583 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.379875167 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.380749742 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.387607443 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395557506 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.387713527 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.379826709 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.392911259 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.397231947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.383650823 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397657718 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.392757425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.38643545 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.391373874 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.378491314 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.3889036 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.383319438 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.391169128 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.387873737 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.387503836 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.388028883 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.379326409 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388502859 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.392989784 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.396840546 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.388600281 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.379847538 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.382804785 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.390696034 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.387538333 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.390907158 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.388505706 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.388647173 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.388063955 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.382335363 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.398288858 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.400581924 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.394213439 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.389722717 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.389153414 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.389180897 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.391112147 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.385521343 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.392571483 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.38922479 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.389275995 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.386412366 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396622546 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.389909672 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.383101878 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.384051819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383728359 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.392442568 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.396048211 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40682985 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.39170546 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.391418036 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.391188743 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.389514728 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38423933 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393436702 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.390537965 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.384728567 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.387199066 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.392392141 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.391474738 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.389829027 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.383538611 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.393740698 seconds)
  done (took 820.702462667 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.391589896 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39113286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391398746 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.391836294 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390688003 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391125857 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39289293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.391385364 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.391446682 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.391498863 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.390854458 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390569133 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.390446945 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392997235 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.391574703 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.39199327 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392120196 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392573664 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.392093637 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391248313 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.391480883 seconds)
  done (took 30.501272242 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.393746288 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.391150486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.391670522 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.392885973 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391957517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.392058297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.39344348 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392878806 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.39277927 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392917441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.392196321 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392476621 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.392122811 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.392626258 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393207582 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393917636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.392507942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393150033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.392627303 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.392784539 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.392988912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.393220352 seconds)
  done (took 31.917862802 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.392560227 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.394773141 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.386524548 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.396839722 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.393031987 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.394186531 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.393596048 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.393318405 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.393282549 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.386703448 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.386564946 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.386306016 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.388840401 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.398015399 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.388710395 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.399024812 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.394532918 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.394140122 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.39508112 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.39521811 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.39665397 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.407323778 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.394204559 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.385591557 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.396747529 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.395447854 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.39495211 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.394240565 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.38682274 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.397462126 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.395252592 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.387720186 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.396084124 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.396931585 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.388203685 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.398155306 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.394664428 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.395954172 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.395511062 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.391538658 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.402527685 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.396844433 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.399858098 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.40771233 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.395246614 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.388577749 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.398704174 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.395485171 seconds)
  done (took 68.205850392 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.396114548 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.395609654 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.396300177 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.395068129 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.39560848 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.395719915 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.396113559 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.39680591 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.396022088 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.396271427 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.396343656 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.397256379 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39658722 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.396031426 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.397703075 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.396878665 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.395694531 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.396461681 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.396345176 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.397861681 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.398127715 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.398085387 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.396704028 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.397991596 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.396439623 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39675177 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.398868064 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.397659924 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.398093265 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.397098225 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.397288604 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.396711865 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.397784355 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.397134348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399345999 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.398042665 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.398785407 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.398026823 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398645605 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.398486748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.395918574 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.398094811 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.39933204 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.397440845 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399023452 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.398738869 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.398667827 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.398952215 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.400102256 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.399403343 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.40010237 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.398604549 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399354128 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.399298664 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399035196 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.402467205 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.402612209 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.398862135 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.400687907 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.39990085 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.399619478 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.399308038 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.400527365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.399474933 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.39986995 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.398932043 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.399509681 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.40029299 seconds)
  done (took 96.350784857 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401248866 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.400886476 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399928264 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.400808912 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.401206819 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.400734543 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.401248886 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.401542277 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.401554501 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.401694899 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.401694551 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.400601845 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.401301809 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.400038996 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.401768117 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.401778561 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.400992192 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.400268953 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.403124435 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.40213458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.400236407 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.403153023 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.399972101 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.402367689 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.403352879 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.402320434 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.403480471 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.404453643 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.402917806 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.400917598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.401343109 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.402079929 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.402135339 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.402538476 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.402867623 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.401458555 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403190576 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403736127 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.403202157 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.40302841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.403636387 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.403974287 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.403580087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.403986497 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.402990972 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.404575871 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.403938265 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.404676565 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.403427897 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.403238165 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.4029387 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.403393997 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405110941 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404533115 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.404899703 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.40356298 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403735104 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.405566634 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.403238432 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.405087716 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.402274928 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.404948383 seconds)
  done (took 88.246589716 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.404790176 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.405858071 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.404044395 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.403465672 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.40611508 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.404247917 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.403741472 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.406634926 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.404824455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.405809548 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.405903177 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.405709574 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405860869 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404066584 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.406562589 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407607212 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.407449794 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40716393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.403784469 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.40491203 seconds)
  done (took 29.396776566 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.405658271 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.407724367 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.404300978 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.406235624 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.406661557 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.405531416 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.406398504 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.405923654 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405313462 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405289211 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.408755695 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.409006458 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.405627755 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.404876481 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.405208426 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.407272375 seconds)
  done (took 23.787108683 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.405499538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.409876038 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.40858787 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.406512736 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.406928543 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.406421239 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.40465249 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.408907882 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.405849517 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.406802567 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.409086267 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.407253042 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.409990935 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.409036419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.407104186 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.409551639 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.408226697 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.407027463 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.406327227 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.408366275 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.40964581 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.407776845 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.409944047 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.408680097 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.409284716 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.410515968 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.408366313 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.409048139 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.409896506 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.410357005 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.405793425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.410799757 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.409249751 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.406813529 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.410353064 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.407339278 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.408304465 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.406693252 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.411090308 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.411009209 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.40737239 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.409278358 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.408360416 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.41121461 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.411389367 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.407852056 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.412753249 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.410930534 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.408374036 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.408918156 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.409790619 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.410511641 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.411843726 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.409088201 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.411393507 seconds)
  done (took 78.768530003 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411215974 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.410147044 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.4123786 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.41091008 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.411195672 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.412550999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.408949632 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.41151976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.410387398 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.411064911 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.412622268 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.413402726 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411422295 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.413006133 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.412655082 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.411530644 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.411807263 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.413892799 seconds)
  done (took 26.702899423 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.413688397 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.411664559 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.409910352 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.411477278 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.412576972 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.410306698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.414437017 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.411364237 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409088326 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.409925975 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412607877 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.410356725 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.411580378 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.411321124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.415449929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407774176 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.41241232 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.411039011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.410676361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.413819268 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.412690196 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.411824828 seconds)
  done (took 32.356706712 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.40171009 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.403238018 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.40375029 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.416582765 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.409356559 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.402076128 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.404213752 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.403323717 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.420331942 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.423779393 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.421174133 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.409864819 seconds)
  done (took 18.213287187 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414556243 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41687231 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.413519237 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415009236 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416148989 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416384536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415388108 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414003474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418339247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41508064 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416801711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419080376 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419313936 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41945431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418649836 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417823718 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416280011 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419097545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41407087 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414095598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416948692 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4155639 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419527707 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418797586 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419165116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414701525 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418068246 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417700149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41305852 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415539223 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416324318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416346847 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416994975 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416888345 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415865202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420704559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41695534 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421264178 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421081277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418550121 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.415321308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417297633 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421402904 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418284513 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42075329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418829371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420649645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420238799 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418379441 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419120323 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419270914 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418974275 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419491732 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419869824 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418138422 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419391675 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420521766 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416687033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418208511 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422141479 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421736839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419745746 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420448216 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42202893 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420531048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420460516 seconds)
  done (took 94.88398316 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422550895 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.415827607 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421376413 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420919117 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420597356 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420063168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419806105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420423366 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419130925 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418894026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423721156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421542831 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423495028 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423115704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422948836 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420079313 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421398512 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424102749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42142029 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421120093 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416956868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422626788 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42350004 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42149093 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424587658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419966582 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423156262 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420076722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419335468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423070168 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422497174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423646267 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423411597 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.422410447 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422064745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422598727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422772945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422287785 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423904359 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425250895 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419114052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422279212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420083844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423106269 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422668951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422345119 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421201791 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421645369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423794746 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421651589 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422187885 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424139261 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424551682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421012452 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419775797 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424031948 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424291011 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423966033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422163056 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424284835 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421393367 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425267541 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424597164 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426564856 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423734175 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421833243 seconds)
  done (took 95.165824861 seconds)
done (took 1933.433042462 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.578922715 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.532933352 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.41609849 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.429168537 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.408284451 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.411142631 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.420483201 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.408778551 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.415349122 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.413734516 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.415617069 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.603213767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.448650949 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.410634323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.411030817 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.511927653 seconds)
  done (took 28.540387074 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.440553569 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.421306845 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.536674945 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.414767925 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.439607357 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.608377349 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.475949872 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.419657344 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.590261835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.438408731 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.409481759 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.442137554 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.418141403 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.40964968 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.439570599 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.609704509 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.673440296 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.424041016 seconds)
  done (took 30.920329525 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.866478609 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.42676493 seconds)
  done (took 5.599296958 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.440718566 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.421409476 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.420797591 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.417907635 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.409561847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.413224487 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.416568541 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.413618455 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.436725657 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.544362449 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.421586362 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.43095157 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.417552741 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.421768956 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.429760332 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.464762193 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.567653349 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.430710727 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.427966531 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.426330375 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.416834528 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.517760374 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.459720261 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.431277248 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.543587719 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.421176567 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.422415443 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.424458398 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.540526896 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.429962839 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417968888 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.420727878 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.42156462 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.390922307 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.968734747 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.423682154 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.445005059 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.432316166 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.431246013 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.554564322 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.423427421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.429288906 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.413036641 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.962929247 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.542150713 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.546884967 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.428151654 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.423579706 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.420845069 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.495839796 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.422388313 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.423179398 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.480476979 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.287754226 seconds)
  done (took 90.298302388 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.410839104 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.409562345 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59711002 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.443590152 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.411702511 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434372719 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.413577062 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.704775743 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.439681204 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413440124 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.751973509 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.041750328 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.425625674 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.480066411 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.448472489 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.460988481 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42912246 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.415980068 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.41789058 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.416289439 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.983881315 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41881502 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.414088706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.508070873 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.453285406 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.962647787 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.414746419 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.428373895 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.419790321 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.416570483 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.015193692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416526432 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.46037219 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.414272326 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.71036977 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.817092728 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779111322 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.417947783 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.463049525 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.419058152 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.438697875 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956922089 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.80244049 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.417290011 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.415599087 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.955523468 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.418951207 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.421279878 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.429113594 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.686821619 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.41725637 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.417390877 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.416940353 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.417023593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.416972758 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.463323937 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.477011483 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.969160223 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418411837 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.414828525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.427542231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.419067705 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.420982892 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.417413083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.416474682 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80268418 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.684965537 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.422805318 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798969434 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.004482883 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.421360927 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094798305 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.422136818 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.435183356 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.464222281 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.420455769 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.419169091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969574624 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.441462618 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.414513122 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780784315 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.416525016 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.735600728 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.438296276 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42196294 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.00287644 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.430741614 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.460949478 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.427585064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.420724363 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.420382134 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.422594486 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.716886347 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.474550877 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.418696516 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.418276874 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.436829061 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.417598385 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.423342515 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.428547817 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075814458 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.422142456 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.421517345 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.441365739 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42059505 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.420717884 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41957716 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.424113463 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.700576574 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.421976286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.441021502 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42360183 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.42544129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.43310986 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.516552558 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.422806817 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.741974849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.424275306 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418968826 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.423711783 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.420628258 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.46388616 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419665197 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.446376438 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.406954385 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.72214333 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.435379204 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.424354016 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422466273 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.421585907 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41997937 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.438142003 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.474217826 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.424002157 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.202646277 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.427957372 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.438314936 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.421842025 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425225534 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.421903643 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.420997968 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.425750915 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728798991 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.71581558 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67456336 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.419118058 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.424736974 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.238344347 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.429431228 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604794263 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440361194 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.422136458 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.702630384 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671365984 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.423266149 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.420677006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.423775815 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.701776695 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.424678589 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768333884 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.039719122 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.425278347 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.426334286 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.196569128 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243427258 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.424827044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.419782807 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.735897024 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.441601411 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.421419509 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.419489105 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.42209139 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.419315014 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.427496549 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.422736804 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.424881047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.422058076 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.712043144 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.619810226 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.44134931 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.422409689 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971616066 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.44454284 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.427491788 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.433151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.426724251 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.424655291 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.488630016 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.427792455 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.47497087 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.426702916 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.430691672 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.996486159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.425102861 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.425152599 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.623061905 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160045355 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.426959944 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.427379371 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.429981507 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.485792628 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.001715106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.476169105 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.750261064 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.43963562 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.464699233 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427547181 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439106844 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.00365079 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.429325921 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43011562 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.177940125 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.429454084 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.901454648 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.424158436 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.431809514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.104166276 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.430429282 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.424252738 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.422473547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.425951546 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.728073184 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.42799542 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.438888875 seconds)
  done (took 519.156760606 seconds)
done (took 675.822704809 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429188635 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.427353163 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.42601581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.43050431 seconds)
  done (took 11.037388733 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.447606939 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.433210249 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.445368204 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.433816303 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.445454369 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.432766255 seconds)
  done (took 9.96175489 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.428782038 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.426510645 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.428350429 seconds)
  done (took 8.606178263 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.643465511 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.445621124 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.794461184 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.431209711 seconds)
  done (took 9.640646224 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.442223045 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.443882823 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.444659378 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.450290163 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.446149167 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.44546057 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.449146635 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.448399173 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.445562395 seconds)
  done (took 14.337934169 seconds)
done (took 54.902347361 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.59695668 seconds)
    (2/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.405499188 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.582669762 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.401691911 seconds)
    (5/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.408580917 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.694944153 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.500592673 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.531922301 seconds)
    (9/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.556877174 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.467957372 seconds)
    (11/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.541513966 seconds)
    (12/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.410229903 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.787326276 seconds)
    (14/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.512822075 seconds)
    (15/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.407734262 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.549363545 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.535229282 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.686652601 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.492051055 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.645461343 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.472682907 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.491381697 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.412802316 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.679967761 seconds)
    (25/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.545446943 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.511531648 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.551323877 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.52287452 seconds)
    (29/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.457958976 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.588628736 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.538237516 seconds)
    (32/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.408149613 seconds)
    (33/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.412584553 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.524756377 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.521203924 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.461945897 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.514403257 seconds)
    (38/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.792912958 seconds)
    (39/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.516919096 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.432811136 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.541674441 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.506772148 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.409204298 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.607972788 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.554478433 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.594750579 seconds)
    (47/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.499820515 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.471492081 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.621347658 seconds)
    (50/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.5474338 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.467048601 seconds)
    (52/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.645062125 seconds)
    (53/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.41399238 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.405611742 seconds)
    (55/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.730496469 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.433516211 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.721074975 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.53368848 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.560839622 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.553203634 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.588651366 seconds)
    (62/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.738867321 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.544133582 seconds)
    (64/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.428935434 seconds)
    (65/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.497118422 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.636931924 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52757272 seconds)
    (68/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.678232731 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.668788807 seconds)
    (70/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.42117445 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.519393893 seconds)
    (72/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.45808375 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.870872341 seconds)
    (74/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.649483253 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.581615447 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.592365289 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.660994211 seconds)
    (78/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.411245884 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.517846737 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.586952127 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.55516861 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.518908066 seconds)
    (83/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.473468424 seconds)
    (84/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.411670793 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.532221365 seconds)
    (86/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.409601655 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.677108866 seconds)
    (88/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.648916326 seconds)
    (89/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.424633466 seconds)
    (90/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.505832022 seconds)
    (91/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.514014074 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.5604387 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.469920334 seconds)
    (94/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.414244933 seconds)
    (95/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.512104877 seconds)
    (96/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.453167189 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.599334843 seconds)
    (98/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.654806331 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.517085013 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.577518003 seconds)
    (101/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.412990448 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.549761164 seconds)
    (103/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.468126488 seconds)
    (104/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.46130004 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.479973778 seconds)
    (106/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.498807472 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.536387475 seconds)
    (108/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.603245112 seconds)
    (109/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.55653831 seconds)
    (110/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.597863027 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.417228612 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.68668972 seconds)
    (113/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.59174872 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.481560392 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.690992074 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.589529726 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.54534513 seconds)
    (118/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.597160446 seconds)
    (119/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.747021154 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.547973982 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.414456304 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.509332151 seconds)
    (123/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.413859983 seconds)
    (124/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.464059964 seconds)
    (125/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.514307222 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.601496089 seconds)
    (127/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.507464387 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.513987457 seconds)
    (129/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.414970723 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.526771938 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.569730465 seconds)
    (132/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.44770405 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.453845 seconds)
    (134/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.474434773 seconds)
    (135/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.465522173 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.423351644 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.500782929 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.754746038 seconds)
    (139/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.416581043 seconds)
    (140/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.417291654 seconds)
    (141/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.758362991 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.551787397 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.508590495 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.541221684 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.555771668 seconds)
    (146/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.619246195 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.47344454 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.414984769 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.408439535 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.476550897 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.664658587 seconds)
    (152/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.500536819 seconds)
    (153/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.513775775 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.472689522 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.496482942 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.415018615 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.47708046 seconds)
    (158/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.653425208 seconds)
    (159/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.476077015 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.650523126 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.477257749 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.422817951 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.561154477 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.552214733 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.581009271 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.519355752 seconds)
    (167/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.723349252 seconds)
    (168/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.42441171 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.4143231 seconds)
    (170/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.613362887 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.876386791 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.475336219 seconds)
    (173/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.57087145 seconds)
    (174/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.594991625 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.457308183 seconds)
    (176/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.681780314 seconds)
    (177/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.41756949 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.682140021 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.595350374 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.628458186 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.68546037 seconds)
    (182/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.668395629 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.680838134 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.441136705 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.421984059 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.466489741 seconds)
    (187/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.537911818 seconds)
    (188/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.596690597 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.424313481 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.413650054 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.612976132 seconds)
    (192/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.44817372 seconds)
  done (took 344.400912202 seconds)
done (took 345.724930699 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.472117377 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.543506715 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.446995591 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.44711473 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448462893 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.454352299 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.472990689 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.448863416 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.45970815 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.464335378 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.451258444 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.457162971 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.46252186 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.458908393 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.482191425 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.448406228 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.449156815 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.457685769 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.464314335 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.46578831 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.45029185 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448213021 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.47661391 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.450190382 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460508425 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455018716 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.457173869 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440235793 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.456936567 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.466520986 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.448081248 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.455761147 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.468382235 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.461085258 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452877816 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.462649249 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.453961799 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.544475777 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.470867525 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.462564183 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.458229587 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.46785794 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.455429467 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.455989764 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.462030211 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.480276555 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458027761 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.466364541 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.457076371 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.44111112 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.473071121 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.463053281 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.463073772 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.444934297 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.456511858 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.463722211 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.46439145 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472518949 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.459743034 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450968469 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.48699605 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473236468 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.464050126 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.458247235 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.46112369 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.466881187 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.462791211 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.467274767 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.459180109 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455076148 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453448554 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.459009327 seconds)
done (took 114.614219707 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.576364388 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.448491763 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.608611317 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.457566211 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.618815799 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.575574094 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.459800294 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.459104506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.45975405 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.251581968 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.458382298 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.459349688 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.450576673 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.460364423 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.572464087 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.463964062 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.460859514 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.151838884 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.463294549 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.587135508 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.453639573 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.459469579 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.462255487 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.257653855 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.45092467 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.445897262 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.587465846 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.45855689 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.160739509 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.445427537 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.446436809 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.156662106 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.585257113 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.481777898 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.469929633 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.472127854 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.620737452 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.464658264 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.57956791 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.578621827 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.610428986 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.502633651 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.444451586 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.454233146 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.464418735 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.466134779 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.459514067 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.489391785 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.450773479 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.464500555 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.153713906 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.473878083 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.461897482 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.462148354 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.462622889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.488163424 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.461577837 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.464292029 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.587719861 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.464804391 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.574855875 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.26030461 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.25681676 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.464282601 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.449908177 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.464792894 seconds)
  done (took 116.57288471 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.520195697 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.527064111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.56938697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.455686398 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.506056012 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.575528103 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.458888547 seconds)
  done (took 11.948990306 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.457898164 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.46189454 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.506111827 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.502158355 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.465904224 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.625150598 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46315631 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.465761495 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.463209858 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.507033678 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.463589008 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.46442261 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.476623523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.453226502 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.498516594 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.466690826 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.576100537 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.458345838 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.463721793 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.608297514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467709426 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.47643186 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.506034636 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.466301588 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468469593 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.462677563 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.239941249 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466798822 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.464716742 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.466783824 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.466703379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.525191643 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.466456037 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.454712116 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.463416244 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.569173403 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.46848282 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.465903731 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.46578267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.460207891 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.468439691 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.465278262 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.469196772 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.466786595 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.467021347 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.481352977 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.467978072 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.465278104 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.467505234 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.466739459 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.506070547 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.466729527 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.467180895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.465509286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.509296657 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475345207 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467653785 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.464799963 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.468516858 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.471609948 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.61322786 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.50450912 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.466025126 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.50793907 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468374749 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.468563749 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.468619275 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.465867205 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.548991026 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.468956409 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.506320399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.468019239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.641154118 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.482888777 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470842782 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.463350401 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.463021553 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46845463 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.451839575 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.465490084 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.468493733 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.460866817 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.465059173 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.470287942 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469067356 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.617588707 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.56725725 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.471289653 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.477086658 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.465942194 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.469714587 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.510653825 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.473703543 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.471852592 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.513181709 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.578741978 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.513335188 seconds)
  done (took 150.253546404 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.473628152 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.474136714 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.464517734 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.487666854 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.460875472 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.461997901 seconds)
  done (took 10.166214989 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.462688978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.474014672 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.46825251 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.47024791 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.473715181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.468114111 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.471422264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460130092 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.47376776 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.469734964 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.472751904 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.468134968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.473649873 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.470170115 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.467749167 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.471723692 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.4700433 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.470271665 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.47205765 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475956337 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.460039937 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.469764564 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.468958134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.464103212 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.475349515 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.472085537 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.484857613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.472045135 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.471334158 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.471110857 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.477780831 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.471460924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.462984882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.469976994 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.476062873 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.46496628 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.478027646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.471957259 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.473996974 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.473317438 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.47265627 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471810515 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.473741443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.474846168 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.464232789 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.470041142 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.480018286 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.48385403 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.472247743 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.472275782 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.471704137 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.474206111 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.472544139 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.474270652 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.46629058 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470497875 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.477552057 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.473298986 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.472206058 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.465472788 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.475703025 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.475995462 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.468132927 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.480456773 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.473085632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.474910336 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.468468238 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.478858304 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470284255 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.474927894 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.477564217 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.47407775 seconds)
  done (took 108.326526291 seconds)
done (took 398.603784135 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.766491703 seconds)
  done (took 4.11936595 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.477305276 seconds)
  done (took 3.825135911 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.740857138 seconds)
  done (took 24.091691569 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.492923196 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.461783797 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.465157664 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.458429934 seconds)
  done (took 11.228537676 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.752703689 seconds)
  done (took 4.103233054 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.471857709 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.479588492 seconds)
  done (took 6.302612885 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.733809915 seconds)
  done (took 4.082795742 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.663672307 seconds)
  done (took 4.014135392 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.474479872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.47988996 seconds)
  done (took 6.312421858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.438544916 seconds)
  done (took 3.787389383 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.884571233 seconds)
  done (took 21.233767073 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.476478626 seconds)
  done (took 3.830800025 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.495198556 seconds)
  done (took 3.848125072 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.20327976 seconds)
  done (took 6.555993282 seconds)
done (took 108.687676041 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.461326412 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.463517069 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.464005698 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.463282257 seconds)
  done (took 11.203046928 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.53900094 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.539679302 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.549204748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.536838558 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.534649683 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.542257632 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.50151635 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.502288197 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.532350556 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.529177566 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.545063409 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.53529442 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.544689991 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.500109377 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.530161469 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.546377884 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.53251044 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.551831515 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.503792574 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.536395362 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.480129813 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.537342299 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.530757618 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.477684038 seconds)
  done (took 38.009818694 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.958388444 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.535824882 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.621749598 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.522501053 seconds)
  done (took 7.993572248 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.582483572 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.584904595 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.599478732 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.633985728 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.666327359 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.607293834 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.503215293 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.49832194 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.487153826 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.581047864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.667833504 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.58288744 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.795261588 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.480519107 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.797016008 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.479757263 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.480837248 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.582957471 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.633961229 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.661747023 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.479611815 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.582130768 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.585934409 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.582659006 seconds)
  done (took 39.486379671 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.491805491 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.498488732 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.484680245 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.496924537 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.484838672 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.481366554 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.482409235 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.485911403 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.480773496 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.480567837 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.481259597 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.495433704 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.480394972 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.483983175 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.487359189 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.483271709 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.485161005 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.492157368 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.489945002 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.485199517 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.481199277 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.489122078 seconds)
  done (took 34.056369512 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.466946042 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.465600619 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.818013148 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.72098538 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.467412535 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.466192687 seconds)
  done (took 14.759400126 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.545784249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.691935948 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.473753982 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.845411107 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.931712726 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.475759017 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.471705531 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.72676585 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.046725432 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.052558636 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.535697357 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.548613373 seconds)
  done (took 21.705573542 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.469130118 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.47208698 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.470762416 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.489454409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.608124521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.544689455 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.547557024 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.471427991 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.531509041 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.543233936 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.54452703 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.533215155 seconds)
  done (took 23.582676813 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558339395 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480173479 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479208743 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509133905 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475951221 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476071986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502732539 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19659955 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.481091299 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756117581 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480499666 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580369246 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.724065578 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486837153 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481969727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.45603705 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708517568 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015625909 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482603636 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480660123 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512533269 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487878016 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489955961 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701503121 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485015861 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482202494 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.868671734 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4822772 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788584621 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760610886 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763805961 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484433596 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75863476 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147171441 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58496235 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703093621 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474469712 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476560472 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.467176585 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.476312208 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482890011 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503447799 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758524535 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486541957 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482880886 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482058779 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212683095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.487900254 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.479975573 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483967198 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760977964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587467047 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.488195056 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483192475 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512444179 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480005188 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.487703854 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599653275 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116975016 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49787397 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48708381 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.485073982 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498479482 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478998892 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171288095 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.486922558 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.490467012 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490542139 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485852786 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481288422 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52698101 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483021555 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.501089575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486210177 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320678953 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488102965 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490322128 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068920466 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498315418 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.487801338 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71165012 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484438333 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485997327 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.483513542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483734003 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263446693 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487443095 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.455325833 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521336787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203180866 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702059347 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506467524 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515879116 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.705243058 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.450184986 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485571454 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.487979448 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486529035 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502886153 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209447244 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483464255 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.487017173 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733779586 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.694072868 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485140966 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.460644475 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987007644 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497892704 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.510320318 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487601525 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.709744627 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.141980047 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772732791 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489932966 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520491803 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485734859 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328112446 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495318492 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.490792836 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486816751 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779369943 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.332249336 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484389259 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55992413 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487214013 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491002995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487552126 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490877273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48555368 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.685292334 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487307868 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.773258537 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.487837099 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487696951 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.48291471 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487202625 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.488921851 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.7105355 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494837448 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76167381 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488459045 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489927549 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482638051 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.70457405 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496332316 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.488888839 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826737568 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489327257 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491666678 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774944744 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522189487 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599544663 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519184293 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.485378562 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73766919 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.492201318 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.491180802 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485653526 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489104018 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491556371 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.495019779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486369857 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14204553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46579912 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491789611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489496208 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.504494555 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563505817 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495411749 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709397442 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.493247893 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482747217 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.513579007 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.492912519 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711882177 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771431437 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.498532532 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667755289 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.988461844 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146314586 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507400584 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.48964746 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.490809248 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.490041657 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490043625 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489685369 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491933234 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713448382 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775436175 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503620371 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150625815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490076641 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508247919 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.498039943 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774753628 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.503978099 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489806601 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.489120487 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493274197 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5109489 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.77680794 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710541735 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.508758776 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493515215 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.007762182 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498770514 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494661258 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490877868 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514405926 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503828436 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35258419 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826565417 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495876313 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769660931 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505311925 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.512624891 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.489054902 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493774062 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504587331 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.501891688 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495916838 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.71132275 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492538563 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515309941 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123955038 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311682098 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093700147 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497162737 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.494513538 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492509186 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219329832 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490258736 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490715624 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751708489 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217662133 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488612726 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987822402 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.496237121 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289898119 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77665172 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719978116 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490241189 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.488401263 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780876754 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705743475 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522470208 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500357886 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4932529 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.458664483 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069240539 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492742019 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67558217 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219611451 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491843943 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498882778 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.483619286 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.488916206 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901050013 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496118662 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494499197 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505877685 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500471748 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356442105 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4938226 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498055244 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185778109 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.511796274 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.998139222 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492411083 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.714103552 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.780363506 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.753664259 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.496348408 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.508578569 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.741006661 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778023861 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494658821 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511603029 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103771592 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.350796221 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.502031823 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496498333 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334181796 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497015512 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804863779 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.504117366 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.506612925 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50077421 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498699467 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495947286 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.49602594 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501941395 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477430451 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030273473 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.498878301 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515937517 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499442052 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498142802 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.745578321 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.513402551 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157155762 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724169453 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484208761 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523631583 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.499013267 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504906342 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.468878644 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502368119 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499378305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546510781 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.716667563 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494554767 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.461833001 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.522734319 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705473671 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500204936 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502495844 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736447906 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.49986649 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.51121064 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318640372 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52449456 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497951814 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501613038 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490512302 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530883236 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567850418 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721624389 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.781233736 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.783633531 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908223435 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499680888 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501120013 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.516222962 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587482277 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499044335 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.526382559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.498451119 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160669764 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325998319 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164774087 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784859321 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501475069 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510803969 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500007936 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737436318 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497441655 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773089675 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503035297 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.493014606 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521376239 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506059542 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502225599 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710455103 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776553326 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500802304 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501211268 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50371957 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.499411363 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787095626 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.712936099 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043033701 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087700714 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496392765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502232995 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236355065 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776016876 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501462656 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501828309 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50184843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.521732472 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.501853296 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.528088429 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509641941 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726581831 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785982906 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176544226 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783108785 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.680193377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.411494174 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505019672 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753132405 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336083063 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.726496128 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173491967 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282221621 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75602904 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576250826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728898233 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.504495906 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740160057 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.501845977 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507554388 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504410028 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504809025 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.503159554 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788645097 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173171098 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759446806 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.509344977 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.503898296 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534430675 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.72703851 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726429132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291674696 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.722505139 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79149761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.51396416 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50590542 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174896691 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793438591 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505623663 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.507343782 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744864149 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502261452 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538749902 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.384486359 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.502683348 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098027741 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.714469412 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526283632 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507941424 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287697378 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175540868 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.519059128 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045674282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50236384 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512698062 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78292458 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.513165253 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508043666 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786934976 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.508349519 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504168119 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73046036 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.167321286 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.318098692 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.529119249 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506342695 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.50943676 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500028512 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538699721 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502899917 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503407812 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.913981145 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505933208 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508865818 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515498165 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.508150083 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507869269 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.510315197 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507917496 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.510124769 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.485212426 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.480933326 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512323036 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630135937 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077501945 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502795936 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.118482266 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.837987416 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751829953 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508822745 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.47250136 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.508244612 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509471529 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508385017 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505243054 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512728509 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097283805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.506167215 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.793464709 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514632563 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.7181708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722009751 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515076336 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733704516 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511674527 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532458818 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.475135016 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503745394 seconds)
  done (took 1041.962654109 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.523404952 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.513899331 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.519856798 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.525480247 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.526689074 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.549052859 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.550677121 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.51117996 seconds)
  done (took 21.603044838 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.504010972 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.509436372 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.502847668 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.508653928 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.510291652 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.071899895 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.514521675 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.5064138 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.520249039 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.50144522 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.501879648 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.209662662 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.509496408 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.505220563 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.521200605 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.512263656 seconds)
  done (took 34.79430066 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.416895573 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.595981055 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.433817093 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.542173551 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.527896611 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.52712848 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.741456754 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.511109225 seconds)
  done (took 27.678544637 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.510369381 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.508856091 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.511316534 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.515861913 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.511289192 seconds)
  done (took 8.942659851 seconds)
done (took 1327.130525409 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.512755867 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.515630967 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.511775702 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.512456535 seconds)
  done (took 7.432988834 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.474092687 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.473768655 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.477402001 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.492788699 seconds)
  done (took 10.296054266 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.245031596 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052733567 seconds)
  done (took 5.683820629 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.071178226 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.053501745 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.068927223 seconds)
  done (took 7.581596076 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.800647723 seconds)
  done (took 3.189563233 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.497235576 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.501709638 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.241098827 seconds)
  done (took 8.619584146 seconds)
done (took 44.183606009 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.509134428 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.257593887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.737186521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.502872825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.68392932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.657246428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.755208566 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.512235468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.49585286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.501709705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.5053342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.658803425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.737931055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.260282294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.735751282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.258288737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.700868587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503028958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.499842746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.5075571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.748587408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.500258955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.520645392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.509074342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.677469948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.646256388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.498941386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.275926888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.499270434 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.504535068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.689267251 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.507533679 seconds)
  done (took 86.941670275 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.501113711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.50236903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.498849395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.519947321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.504267974 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.503886916 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.517058679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.515957021 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.496907368 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.527786453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.501133948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.498855186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.498123776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.499317836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.497182096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.500067597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.501470171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522914333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.503024545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.503400412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.505710084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.509364226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.502521838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.50036805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.509652906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.502081721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.519907615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.531597425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.502757158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.502123252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.503313314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.525163666 seconds)
  done (took 81.615114879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.508116139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.500956239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.50812577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.506289367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.501096348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.530944645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.503331262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.502572475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.501438961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.524515251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.504625473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.513344846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.503623374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.512748286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.503603548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.515746948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.503970268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.525838468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.51040636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.510398762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.506510351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.502695075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.502838381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.512154777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.521453186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504499501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.520160768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.503690613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.507672583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503197668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.51112333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.524658965 seconds)
  done (took 81.699552677 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.742716912 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.522414209 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.524918251 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.522043724 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.528777208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.523419983 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.517445812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.753702244 seconds)
  done (took 16.027149145 seconds)
done (took 267.666730062 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.51732223 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.035494114 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.547573449 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.531477067 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.531879958 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.544659363 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.746042474 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.543117765 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.753331615 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534538497 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.533161409 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.529583214 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.374023379 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.672341227 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.355863038 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.471942938 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.451757983 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.511364519 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.103706671 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.810664515 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.544044102 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.515528534 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.355083907 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.468875414 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.487885157 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.598338905 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.618859883 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.750653152 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.686719293 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.594945898 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.054030415 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.520569978 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.516437654 seconds)
  done (took 69.200778314 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.517008664 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.523957855 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.524923961 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.524779963 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.526341302 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.525833232 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.519477952 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.525227744 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.526543791 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.524699516 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.527744384 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.528880547 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.52333691 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.52448563 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.526808576 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.49947179 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.517405946 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.526803627 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.519608452 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.496958136 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.525941211 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.529028942 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.525830534 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.527527038 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.527728724 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.529843974 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.526512137 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.531528604 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.523522423 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.529002054 seconds)
  done (took 47.10059167 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.531165031 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.105930812 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.295197988 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.529813377 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.517032348 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.526958957 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.82871805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.534212883 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.521793755 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.52472324 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.011299898 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.532760057 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.552260268 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.301223066 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.525182616 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.529508029 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.528036506 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.523212614 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.110010908 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.529459578 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.832451681 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.531821465 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.832744294 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.530807603 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.524920076 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.520626159 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.526581087 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.38135492 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.541518994 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.020632595 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.376478501 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.826951404 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.312273114 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.347712146 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.380762348 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.535122402 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.531236133 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.016826121 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.524318629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.519786129 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.828318391 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.523112552 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.319428922 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.225003588 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.545023833 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.531277222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.416216437 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.013713586 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.781774969 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.531465691 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.338792519 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.528708557 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.533392531 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.524103502 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.783011799 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.526793601 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.520609459 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.40258717 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.528523631 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.829282536 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.536695002 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.52336021 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.108098864 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.5210575 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.104910043 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.520963353 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.53294234 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.521535825 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.321790944 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.526294413 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.234337373 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.545282022 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.534229165 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.014141069 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.107558767 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.466738314 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.52579433 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117744408 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.343096189 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.853135045 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.529494449 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.362576849 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.85530422 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.529207833 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.537770635 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.5358556 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.53750016 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.59852862 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.831771516 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.153008796 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.231140047 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.412878724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.834930414 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.533113927 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.5255325 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.422032757 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.535787676 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.533237198 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.307114609 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.243347865 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.546894586 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.53322924 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.221804915 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.550367722 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.83788627 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.535123539 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.346762282 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.525965606 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.601623607 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.536441335 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.531706826 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.526241342 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.834623003 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.534155419 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.538271276 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.221249477 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.050922828 seconds)
  done (took 211.788236191 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.52438596 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.521789949 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.522441936 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.521348453 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.522475489 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.531782184 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.522856647 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.519990277 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.525911616 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.518614389 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.517625794 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.527111453 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.528430486 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.521528444 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.520335026 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.517268608 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.522710239 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.525468629 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.518011105 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.521373811 seconds)
  done (took 47.853783419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.54070923 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.130918349 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.097721851 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.538711807 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.541668156 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.527291641 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.589832618 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.540074248 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.539218692 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.854016205 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.715785762 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.542530451 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.540183179 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.5408682 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.095418709 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.514540393 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.856721329 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.133605549 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.537428485 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.136710769 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.513934466 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.539096543 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.52678998 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.135577717 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.865947689 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.835862021 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.593634387 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.130532358 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.54270621 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.538633676 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.134383447 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.541891111 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.529707899 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.120410936 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.543128734 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.553054106 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.537594711 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.591070775 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.590056217 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.85310101 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.146834198 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.846684828 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.554665881 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.710703276 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.537118858 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.508244711 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.150926091 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.543460447 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.511408451 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.540817325 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.546849433 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.112115029 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.533503177 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.108669941 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.542890414 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.543570609 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.137162509 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.112948725 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.101509133 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.714608151 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.532600444 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.835859158 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.54434706 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.152369762 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.543946674 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.54501207 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.53955201 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.719274545 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.139868263 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.841232973 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.857452763 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.859555417 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.544329379 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.60472928 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.538592103 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.858047145 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.603056998 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.958773336 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.855678839 seconds)
  done (took 138.713412448 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.830985296 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.65580106 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.92959142 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.1340229 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.060923889 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.684987942 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.651138015 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.790868584 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.541572238 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.641982348 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.23224889 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.6294989 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.293208892 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.60250983 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.644593005 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.658585628 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.953559425 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.512173359 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.194989297 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.200823814 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.540774259 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.630837207 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.051518103 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.734637289 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.536595412 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.118679442 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.508663438 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.078966045 seconds)
  done (took 57.452079491 seconds)
done (took 573.495551452 seconds)
SAVING RESULT...
DONE!
