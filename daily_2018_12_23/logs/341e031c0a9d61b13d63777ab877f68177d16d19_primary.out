cset: moving following pidspec: 6391
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351238094 seconds)
loading group "string"... done (took 0.558351763 seconds)
loading group "linalg"... done (took 7.659033327 seconds)
loading group "parallel"... done (took 0.170362531 seconds)
loading group "find"... done (took 1.279341723 seconds)
loading group "tuple"... done (took 1.939753485 seconds)
loading group "dates"... done (took 1.423507836 seconds)
loading group "micro"... done (took 0.24727897 seconds)
loading group "io"... done (took 0.986921635 seconds)
loading group "scalar"... done (took 41.314528063 seconds)
loading group "sparse"... done (took 13.431160311 seconds)
loading group "broadcast"... done (took 1.03844686 seconds)
loading group "union"... done (took 14.531589628 seconds)
loading group "simd"... done (took 4.74736262 seconds)
loading group "random"... done (took 9.641788304 seconds)
loading group "problem"... done (took 2.052198208 seconds)
loading group "array"... done (took 22.66166714 seconds)
loading group "misc"... done (took 2.045023192 seconds)
loading group "sort"... done (took 3.436870385 seconds)
loading group "collection"... done (took 19.534229903 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572583588 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142234889 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148809268 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129584494 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204688324 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159031298 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159679571 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098022239 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.983700631 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175730266 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152732507 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52579009 seconds)
done (took 5.194353211 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.241083117 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09642651 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103296126 seconds)
  done (took 0.885223646 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077576341 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147553152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094643661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077779804 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094612953 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077690414 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094320768 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077967935 seconds)
  done (took 1.354089959 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087507836 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096550225 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081747641 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095957631 seconds)
  done (took 1.052694131 seconds)
done (took 4.309149117 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735014052 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272616788 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203456608 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461699002 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196500968 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216137676 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680245907 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351007309 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252797899 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098512754 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142613001 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385841573 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137039703 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688162245 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088695441 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.1232118 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187327638 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.472374311 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08485784 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109987934 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116776947 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141614046 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126829174 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091054095 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184042307 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08204579 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19265013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108262503 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079779613 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275448952 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200110159 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690560776 seconds)
  done (took 10.910637173 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112534076 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132461849 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096761613 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13886408 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13485946 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098534839 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083652849 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095899831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12103821 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175944315 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128743136 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121018434 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093887749 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08222688 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114608026 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243612496 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120879959 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099221093 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099150363 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088379716 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136237836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112220599 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108587255 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092835213 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165550789 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221147244 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113137111 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125376894 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095745124 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110801561 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142311605 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143010294 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09542178 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081602246 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171592355 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122837065 seconds)
  done (took 5.117073793 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083081115 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188555193 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120105263 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170102883 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079912609 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14230977 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093733071 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111663305 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254938066 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.116651693 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.485393983 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141769223 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099204111 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097956076 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081769435 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097424637 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.604696456 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12111855 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148295738 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113140221 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10155354 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083481786 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.720633543 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096809633 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079606487 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10068871 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066061952 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159878712 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09748015 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.130439663 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100371038 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100978918 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132058023 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198905083 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123881555 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133775337 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077559521 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095857918 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174502262 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086380016 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154322354 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08031256 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120683904 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133347267 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117758543 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098954352 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095629477 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201189925 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095143589 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09625549 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931125721 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181997295 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104920362 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094457523 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284406908 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116155518 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095849604 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081563466 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.30073164 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187199129 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093863969 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079028194 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097028844 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077247851 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098200701 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.742719871 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096188201 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.722294279 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083977673 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105237667 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081993078 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097012926 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102032479 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086571424 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11362854 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07695561 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096729582 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080654914 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097163527 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077727187 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098064483 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105236662 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214926505 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080267892 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097339765 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077169134 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115340842 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125417386 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082383474 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095924092 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128677247 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084927623 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097298685 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132573181 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079830105 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108279143 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09847854 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141413783 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082141483 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145423856 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080969064 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092959756 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107521844 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100072514 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129423945 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112321763 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096859479 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167089049 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078551117 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093064032 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079991805 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094124412 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081010427 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097561461 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092078723 seconds)
  done (took 23.361563776 seconds)
done (took 41.16185244 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321870461 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101961539 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102959523 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101817349 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100855017 seconds)
  done (took 1.485756813 seconds)
done (took 2.215586633 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285287903 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173382476 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0943024 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165058301 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092114241 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163059411 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158720176 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093275984 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.2191692 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093399906 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160760819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076206078 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093699335 seconds)
  done (took 2.622371195 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09392731 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113852135 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08250536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108998776 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075994579 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110136086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092425995 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115827564 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108919299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085450563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092510445 seconds)
  done (took 1.8056673 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094401109 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111733574 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082987703 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108732396 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076093491 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109097754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092453884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117379934 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108241214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085303249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093081962 seconds)
  done (took 1.803310182 seconds)
done (took 6.947606754 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091519964 seconds)
  done (took 0.811355831 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.92778881 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.449505656 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112422526 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.146478595 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.311979328 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.169646965 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.447924968 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.122336498 seconds)
  done (took 10.622461293 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115265567 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112681933 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099570236 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084284412 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103457472 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083613889 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100819783 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102108628 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087642399 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101840863 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085145848 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099294748 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097990383 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084921083 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097924247 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085460941 seconds)
  done (took 2.335357422 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119069967 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118307314 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107422537 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107690776 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087893843 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105139525 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10656685 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088396365 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102200418 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102829797 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090170859 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105571244 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102700476 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080251415 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104858661 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107274488 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087068526 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106642681 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105677053 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090193839 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106714398 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09491491 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087746188 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105849902 seconds)
  done (took 3.266548356 seconds)
done (took 17.759897975 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159316446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109465088 seconds)
  done (took 1.01173703 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096203878 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111850939 seconds)
  done (took 0.946443792 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099009873 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094625863 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121936758 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108941568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081343244 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09610252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120089162 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080444609 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096895654 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080958193 seconds)
  done (took 1.726964037 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083818699 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109614337 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101950255 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094957774 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10537837 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094172088 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089517045 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098816098 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109640191 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077988599 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102138247 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113322453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086457563 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116136048 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104751849 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082969319 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101658861 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097731252 seconds)
  done (took 2.522212861 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082923679 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096865631 seconds)
  done (took 0.928926392 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081870185 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09368149 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081561743 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097311853 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094092849 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077137492 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093905165 seconds)
  done (took 1.360609303 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483863971 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134668949 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260987398 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101364847 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102727992 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300703471 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097535552 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084542181 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10299339 seconds)
  done (took 2.467256936 seconds)
done (took 11.701481053 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094963057 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114792313 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112659209 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465449154 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107824309 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098062993 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146739552 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253657073 seconds)
done (took 2.149893036 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145324302 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606004892 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425915233 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232017306 seconds)
  done (took 2.019904604 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40530099 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098786518 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083592245 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080941886 seconds)
  done (took 1.426566497 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082485656 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100219583 seconds)
  done (took 0.940403607 seconds)
done (took 5.283580363 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081622579 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096423798 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078636643 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128775602 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079757895 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096230506 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077646086 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100003438 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079852259 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098145394 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096251847 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080617997 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09603473 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08075807 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093588415 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078646041 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096515809 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078089747 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093214403 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078120677 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093337036 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080847322 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093243719 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078361613 seconds)
  done (took 2.926845015 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101227736 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098494981 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103283973 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086876285 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101348147 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08688881 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103022916 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096423127 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086527489 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100723421 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100828378 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085531312 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098133835 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084431549 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098832129 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101110575 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086408909 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097689415 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083197792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101977673 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102474276 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081850824 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102054667 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101876864 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085437502 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101654326 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083672193 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097700108 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101517606 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08494793 seconds)
  done (took 3.608895686 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086404979 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093288514 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079432229 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100814235 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07817695 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096440925 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077529888 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094511335 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079313469 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094012509 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079944554 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094880057 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077881837 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096568951 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078965714 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099777104 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112221951 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078880357 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094433752 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079243882 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097885505 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079260425 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095052785 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078040363 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09427037 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078334463 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095261116 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077791712 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095681196 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078178024 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097857705 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081611981 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095231636 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084291926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098974839 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077985135 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099259039 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077217098 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096164467 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094641394 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078746491 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093616644 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078957833 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100673784 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078362235 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09709715 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078886886 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096169638 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079179462 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098597597 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077700676 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094857019 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080183552 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096061019 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081583945 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094836692 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094652002 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078361977 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095623528 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078780854 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093535442 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078327398 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09656604 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079090587 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109755731 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085458141 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095048676 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080176503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096699746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081084771 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097507676 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10891833 seconds)
  done (took 7.165888227 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103483776 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127048234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.098548903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097439004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077302833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09513696 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083833838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096087162 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080389004 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102208918 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095854201 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081095249 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096760222 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094568243 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097166544 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080854537 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102380024 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093150967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079644 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098537754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080370625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099053087 seconds)
  done (took 2.819240537 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210506595 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105466024 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142416386 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107043954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083500942 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106107741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102241962 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087739288 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102392544 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083333162 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.210285521 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10310428 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083659677 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100912428 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100265702 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08527868 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101476244 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085399981 seconds)
  done (took 2.761088722 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09386468 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098198735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098842652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099024337 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098596468 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084870177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103529758 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108139497 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085769823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097894834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091487512 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101639834 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10048875 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081690191 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10052868 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081947684 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100804391 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081999008 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108678795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103271891 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087579013 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108676248 seconds)
  done (took 2.881813629 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097366629 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099783525 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117983542 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085148287 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09485903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080363181 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105262249 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081788501 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107139855 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099954415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082328271 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097114693 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08855225 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098286256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103379955 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081898956 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100192298 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081502988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100536016 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077397876 seconds)
  done (took 2.645025437 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103538508 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100388927 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099493167 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091915893 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100784375 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082940786 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109882531 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10052673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082647404 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125063866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100102023 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082257886 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110406909 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104827012 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099007118 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092903523 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109051899 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108105252 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083681271 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101127488 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125131586 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082661422 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109469041 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099959706 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083153021 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100349183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100102594 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089072525 seconds)
  done (took 3.545107088 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08163519 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097934269 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082350471 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096252948 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079770904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095201825 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079026017 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095823907 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080984445 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095159008 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081676326 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097424105 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081967836 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098077787 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082226655 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098046959 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081135956 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09595831 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078792691 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095551087 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081575911 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098715376 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080707373 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096042297 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078597939 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098398051 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078554005 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096762241 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080705867 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096254813 seconds)
  done (took 3.430702612 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091005227 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106413339 seconds)
  done (took 0.965643465 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079247739 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114870025 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079056182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10241547 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086356007 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100488522 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107153429 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086468787 seconds)
  done (took 1.524631615 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097454896 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11008589 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083727384 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112714737 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109668757 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098105585 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171090313 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101562375 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105149743 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079791072 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11260432 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082015889 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105447978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0820112 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105490135 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087839391 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097746125 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105253927 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08798967 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09750111 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083340248 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109066517 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084109229 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097068982 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100095477 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091906238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112465862 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082785245 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104357241 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106383927 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087476362 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092657906 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081922088 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099703012 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079809178 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108856425 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115457357 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085234654 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108486147 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10069323 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093347049 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094069561 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087834586 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105481686 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108735309 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083199397 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099930036 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078319025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097211619 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084817728 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094556474 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082000153 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094489454 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089089623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103516559 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11000285 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081641081 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100901237 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084445164 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103079611 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088738015 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103478166 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101661833 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082128748 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106137399 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086487052 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110490574 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094192088 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077192497 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097216355 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092557118 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123006186 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105521157 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08316864 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099914346 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081154637 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102683997 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083381029 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106297137 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105784644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083293782 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106285105 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089540952 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100291016 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101692001 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091311954 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097686802 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084169592 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097773499 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117169998 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081538227 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096780426 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080765592 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111373783 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085489344 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099433256 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078755911 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108003776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092966131 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083599987 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100541362 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083046241 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112276159 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104425161 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088759298 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109001632 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10582325 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082911276 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102499911 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079296348 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100632486 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084660115 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106361634 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075977759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103275896 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083015622 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101032655 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108169604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08084226 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100280975 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089775776 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106572479 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09820381 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079682254 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102903183 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082674517 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104039174 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09000406 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099116065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077097224 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095826749 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102519217 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082366133 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102830699 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088493918 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104282607 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07630736 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09897449 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10401733 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092532314 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100914245 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082270416 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106807633 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101031299 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082624897 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106223071 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085632322 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099009078 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08806683 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101855591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076094646 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104420478 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102248873 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08092982 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.1035765 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087190299 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103299082 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099761885 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081374351 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10676325 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082923209 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098668039 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082710992 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098746654 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110311251 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085293358 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094774548 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079479025 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107898136 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079739375 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100604157 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080524568 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102910701 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100401663 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081095105 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099979182 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084479519 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112783994 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104651945 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083722425 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105496666 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093390519 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101485468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084266435 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100509458 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100561622 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08403466 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109771538 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087597673 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106522925 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102570571 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080468808 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106257722 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090567112 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100030362 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079936227 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099794045 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103624566 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08956598 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103357486 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084345253 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099913166 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08342286 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105738708 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103197582 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084120092 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099450175 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088172161 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100137266 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107679702 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084204646 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110982851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085566931 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095780015 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085501304 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099445579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105348597 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078747531 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097154787 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082170981 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101198481 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082042321 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103450473 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076843227 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108447268 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107292008 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082828331 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099432809 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082922869 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107032513 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084171364 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105169832 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085443621 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107218806 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111343834 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082649171 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103321414 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094218602 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101950416 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093829006 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08909905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097429086 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082193892 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098877498 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08135494 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10424252 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109736495 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091716576 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093906074 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087002791 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099399034 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081001082 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096670009 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087557264 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104368362 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10033777 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090298924 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101767672 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086167235 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105180007 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081358089 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.1020182 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101104755 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086263572 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101021447 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085938531 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100742295 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085663694 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100503005 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079455799 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10417947 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100374546 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082959329 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105537574 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082312974 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100748656 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085730983 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10235948 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100988334 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083929201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099608307 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086825965 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101709948 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083904506 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10296925 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077940923 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108861542 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08164966 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109386437 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100789386 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08015403 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106929196 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084893199 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106782194 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100937721 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084749054 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102550265 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082886467 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103502729 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088992009 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099451881 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11184475 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091351075 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102033943 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085363923 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101761105 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084037795 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100916095 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100642124 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08443037 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099945017 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084184425 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106700673 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085018124 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101118839 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084313883 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103156407 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100444189 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085392218 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094705263 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083006942 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099286572 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084210649 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112768715 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100984665 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086766813 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099241076 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084771559 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100544144 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079299506 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110064553 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110621306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083799329 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10891571 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082227504 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103742121 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111983693 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078126762 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098334443 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081371783 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098314568 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091656062 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102760765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09982406 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101420854 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099604572 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081416014 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101752695 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082773558 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094988123 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081077 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10607554 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084789052 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101030217 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082551733 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105164403 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101888162 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093737495 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100867827 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083937234 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101765984 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079463157 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100986224 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099248608 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086811342 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102051863 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081585162 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098907624 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083271064 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102628003 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084927365 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101730898 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084132255 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108876814 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099890587 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086625247 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104761742 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077432915 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106311126 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08266441 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101135299 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099052976 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086875197 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104178084 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084400292 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111331474 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081967487 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102834084 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101007766 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082023556 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101186397 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082878133 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101467651 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082389045 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103203417 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09082784 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100834347 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103995446 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083054561 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101858115 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090524721 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102626646 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08559745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110964659 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104429579 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084826992 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.1099296 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086027998 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106789596 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10202229 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085233689 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1081374 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082542881 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108011654 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082624693 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103075594 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102822277 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081310837 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100294241 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084060177 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101142879 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08974341 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103636033 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08121286 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101850298 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080157366 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103311305 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104499905 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091158344 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104426029 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087305133 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098245802 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079557959 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104254802 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0988691 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086039639 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105489135 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089706677 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104678115 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083563144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101025193 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111374178 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09007619 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105019208 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080674345 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105542038 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084658625 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105240988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102225095 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084611688 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102863543 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087777222 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104048745 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082906499 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109858357 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086087039 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103647591 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.1024088 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084378749 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102561365 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078425804 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102686737 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085901524 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108657121 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103891549 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085511235 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11258015 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083222598 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101842879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086974505 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103239027 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105759803 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079732682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10276799 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085000076 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103786186 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078647517 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101944988 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080681104 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10498578 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081561504 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098301727 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112568718 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093677055 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106629584 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081885372 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10144647 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078230903 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098461718 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100439801 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086131237 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103202092 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094460258 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101187532 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083308753 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09794798 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083301155 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107001419 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104816197 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081202058 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097657095 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083660273 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105814992 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089095572 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101019286 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082752403 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106039675 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104329553 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081566042 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105038749 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08037933 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106032118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116797032 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084362352 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10207934 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090699699 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110989088 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083725338 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09788249 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10279983 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086903318 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101716573 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085351674 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103929344 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118624201 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087918064 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100509264 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08292357 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104540541 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083362908 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111339458 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102737956 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0852751 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105755835 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085892227 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111884273 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085627686 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11203583 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104817398 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08739288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101261241 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084080116 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100751197 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081330166 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10407464 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102542775 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090065252 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110677619 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083254007 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114621715 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111236388 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088452507 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098864312 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083382172 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103005749 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078698201 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106259928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081377239 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101773853 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100038773 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083050227 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102174466 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09032461 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102640809 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084534653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103687856 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077502535 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105720083 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085733181 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104988943 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098182992 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08407017 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102731026 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088225624 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106310093 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083315725 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10478894 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084154021 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103819337 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097665868 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091468456 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100654668 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08690958 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102273894 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083289817 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104152655 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086899653 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109334252 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103669194 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086011048 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116535907 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085377543 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100604067 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099014386 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090465214 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099886365 seconds)
  done (took 57.685075349 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146276903 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081787685 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098393622 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079132775 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112276729 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098250449 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079443247 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098830066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080458264 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101211175 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078595199 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098148737 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10768868 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123278871 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093031713 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104663031 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078477419 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100091566 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097930445 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081376777 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109652476 seconds)
  done (took 2.868601979 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104584569 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121253431 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11553693 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118569716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089729853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114685965 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114640617 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113640846 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099109015 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112425357 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117892098 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114381074 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091376195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111203133 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111074575 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092715494 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118674577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109178585 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114635853 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095749976 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113926609 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114622136 seconds)
  done (took 3.230606498 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085532992 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101478017 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086728302 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097848534 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083777631 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09737123 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087676652 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101167392 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087056335 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102568876 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081900167 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103037256 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104077346 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079700548 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.1030973 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082777791 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150848905 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107938377 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08323529 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106354896 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077266875 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106618274 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097594538 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080589773 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100829674 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087959909 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104419971 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081561182 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103436135 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081677483 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104373751 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080902238 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105517241 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103169419 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083593851 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100928034 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084534061 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102121971 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079281961 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100367587 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084457443 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09902234 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084181159 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105904914 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081777791 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102164789 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08453458 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104907463 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098080302 seconds)
  done (took 5.478505322 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106255836 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159944108 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086241772 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142896882 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121128731 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111517751 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087974739 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142556149 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102654243 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082392508 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122971004 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121124789 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103482558 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08922202 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110985153 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102579375 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085377841 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103104519 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107672017 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08467805 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108391382 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089971664 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119466228 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118005648 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107430287 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082767237 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10421101 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108109085 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098218699 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109547581 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108494555 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090494549 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121067171 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110103585 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082651882 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107859564 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121545523 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103650228 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088721588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101144445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086248212 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109353756 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109915184 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102273167 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105043156 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108653289 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085088791 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101925036 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117486351 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086975516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114222883 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119558833 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107909608 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085589077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108003106 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120607166 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084885854 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102360605 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086812764 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118007577 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102146214 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087974917 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119888799 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106181758 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111599666 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100298615 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110364434 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108585116 seconds)
  done (took 8.138341529 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096848566 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110153019 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119992273 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11994018 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092111471 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1107382 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110690058 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090152671 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111143105 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1160651 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110356698 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134209131 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086092486 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11419917 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109936195 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09134256 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111653086 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11054213 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090946993 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11144825 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110826304 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119004761 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091222466 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119919152 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141833938 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105634955 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090458787 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112254144 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120685302 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109863375 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123020551 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091675559 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111488699 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120929648 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123626617 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09110943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10368748 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109769336 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090979291 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111582863 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104648459 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099838392 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111237348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106219533 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09100548 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11144893 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120556108 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123959241 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11408214 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097128685 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111689789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120803516 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109155395 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091792383 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119230815 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14707807 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120293767 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120807558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110165817 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100532601 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120435874 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127571387 seconds)
  done (took 7.669671583 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10866641 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115211909 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11719507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099667383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083586121 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1085514 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082227932 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102424821 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113224919 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094854196 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116549607 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108533077 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091489009 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11727264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108868595 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111497067 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088898073 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108979704 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114045661 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087982009 seconds)
  done (took 2.924114552 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096282741 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124038655 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084935747 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113095284 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107877492 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090839813 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10779495 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107028354 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086230449 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107367523 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095260124 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116496088 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105903507 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09130823 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115839149 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11164346 seconds)
  done (took 2.511090876 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100066391 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117311568 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120314096 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083984717 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104535747 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080332811 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106016603 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099525626 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081226828 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121167008 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084960537 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108961892 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104468336 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083321748 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100961376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08733506 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101543235 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081646095 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105623554 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119427953 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095470612 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104739816 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104460423 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087363059 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104936724 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09052719 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106157511 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102332411 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083914883 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10523848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085109579 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113560835 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102284663 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084667384 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102215857 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082997528 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10494086 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085063649 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108507186 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103349512 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083828049 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104409506 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084732057 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107495238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079772176 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10645616 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09965372 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091717602 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102230824 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08512642 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105673975 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086024857 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10740805 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115711759 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088916646 seconds)
  done (took 6.247715243 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100828308 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108383152 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080187938 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102825331 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08735015 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10797463 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107431763 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088293374 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107284933 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083274226 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106646861 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089599876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107930576 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108847831 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087474485 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1090684 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08156674 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106984876 seconds)
  done (took 2.625946857 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092263597 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10474778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093027604 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105931273 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083870058 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108676094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07982485 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105108633 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102713586 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08574679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104856988 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08846253 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103919543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087032327 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10620592 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083756879 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108411057 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102017184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086249928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100186824 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087838242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104365598 seconds)
  done (took 2.977775959 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123252401 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125413876 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091428535 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231652207 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103712733 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132395583 seconds)
  done (took 1.66163173 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112145452 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121472321 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105141247 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107016258 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114520029 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085894016 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108486968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107254904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117137498 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101602212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108219243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117185546 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116241081 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096080808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114953857 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114381956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10673729 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087971125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106216057 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127706071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08691273 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118680391 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108084931 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086079224 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107978501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116307462 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117396075 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121867789 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088592929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117803653 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11342121 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088078908 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118257076 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122239394 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107934586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096939021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108747844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129074601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112979577 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096745051 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109135006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113215104 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097329965 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113978138 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117067625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107549955 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092998728 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108535542 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107525203 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135098946 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094731533 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116937144 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114511744 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118259182 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097569674 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154620099 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101937755 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11627695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115646381 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122822714 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116685061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093905538 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11801271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12212893 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113853271 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096678955 seconds)
  done (took 8.115024998 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105206473 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126196626 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108070863 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121646461 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096777975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107991873 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107180046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087801536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107839063 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105614661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152202846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088425384 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118061464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116802425 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087600214 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109130498 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107219126 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116348211 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087438368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134069534 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108114672 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116878091 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117151313 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096743728 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123250607 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11502618 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106939 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087609498 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107784764 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106106743 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093357913 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108868792 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117245882 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085998057 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117231768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108927746 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086972108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114029324 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10805413 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113409846 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096316684 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127911869 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108295692 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107025388 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102360489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108688871 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108268672 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086386873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108710931 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106551438 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10237138 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122489154 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123403579 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117682964 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107346819 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088206814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109423325 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107938633 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088096904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114658105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116724995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087103507 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134715496 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108950336 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107751178 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117255721 seconds)
  done (took 8.012046823 seconds)
done (took 155.164999026 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.230568645 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201176184 seconds)
  done (took 1.291833408 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.091588931 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135962952 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095784876 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170568279 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085098097 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141118014 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137603472 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097982925 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106632241 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085733198 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107004496 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08735179 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171971921 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084785819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107305939 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106987315 seconds)
  done (took 2.679525623 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119364265 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254795374 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125578095 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105098962 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089657504 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109853884 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084007227 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112212029 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088710822 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105381615 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087886278 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107721783 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082624563 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107137195 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109144306 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089028066 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103633019 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089032496 seconds)
  done (took 2.833733086 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114672368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147773852 seconds)
  done (took 1.131893038 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.2420408 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163341289 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230229259 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471583709 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.27618926 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36393593 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.202327679 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212566581 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.168289771 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209827258 seconds)
  done (took 3.399094391 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11970312 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179770849 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316786494 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155180502 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107675231 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130065811 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157131187 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130006773 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121977235 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101285636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122014995 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117988 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137238194 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09416938 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116234011 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116779883 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12063888 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115019888 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115011079 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096093796 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137717939 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083875029 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11534815 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113379733 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096767481 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120704936 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105490412 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085587372 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116223387 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092370825 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11370834 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125462585 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118354861 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154327487 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121392619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15594214 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116719005 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090272774 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115739763 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089136836 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118902559 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118000704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123204004 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09660681 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105548811 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097056369 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10638717 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083958414 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114536248 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118131028 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092526272 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113856337 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154044871 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118693279 seconds)
  done (took 7.370828908 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787914774 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154394032 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089288116 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.879824714 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134715214 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103251121 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76974207 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110481972 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254984193 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.749928296 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133425341 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118471391 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203932773 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258636942 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925150553 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285667683 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636292834 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125858755 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152432778 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152058185 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117396416 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112836373 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130655614 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427903972 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117504718 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088090809 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118099863 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118722095 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160069437 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124679585 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091626803 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201379478 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246121038 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202734157 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092489382 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112766709 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087490642 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191133588 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261242086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192864739 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18008561 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107978689 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088125352 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122522313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131428645 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086735053 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186350347 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173895619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167875171 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114996488 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117819353 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097665118 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121236978 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163319745 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121218106 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310368986 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321920373 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088708892 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121609352 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125807176 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234118584 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123884575 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22491523 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139998762 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18850496 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11242316 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77942734 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169542957 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110771759 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095655039 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119588694 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114608546 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098213874 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166671056 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406927637 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124919071 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113755719 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090710889 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226652574 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102215011 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112442952 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160836601 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117253222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120095516 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10237431 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122538642 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167796253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248242703 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100839293 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120791101 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114394156 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102921813 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116670851 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209956481 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217534535 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162017675 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232123675 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099984904 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184590179 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169577315 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118773267 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171806918 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118726942 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101540766 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121860718 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219746202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144902835 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122179753 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093267101 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118612721 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149013148 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125554685 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096507621 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191899552 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458657687 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167331625 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109097256 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12673122 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096848288 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182494764 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096467281 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263682693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120426458 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168211762 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118534047 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087102842 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121452786 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16223434 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12210071 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11911367 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100781124 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118972556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233179146 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21635746 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121805665 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22045252 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184162434 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117727173 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170930398 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121311356 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166733808 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119534241 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097288173 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117535076 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770885435 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122155274 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098094073 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116988476 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187556166 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088028962 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124561513 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124459676 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086330117 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816571563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127378515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119341687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102070612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119440917 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119427859 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096295047 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116419686 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161367222 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231561098 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11928539 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09652879 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125434152 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159420032 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11810429 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125074045 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12363412 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103777015 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122019097 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113571843 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10312007 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190084027 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165014196 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220734479 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571251119 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112873953 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12374922 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204997376 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113512292 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289690158 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118427776 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201271073 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186525637 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097939422 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319600532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163041293 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186305234 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126998057 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171627645 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109975241 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116812568 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165090024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110296245 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095392291 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160303957 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125301879 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1232651 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969651718 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089419253 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247103731 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087438349 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169461068 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116888852 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119816836 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284859956 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090916794 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129670584 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163131871 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115406878 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127580533 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.846698371 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124871082 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120193562 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096698363 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222869205 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161965671 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12053662 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119012768 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09668737 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184652219 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207464458 seconds)
  done (took 43.922224641 seconds)
done (took 63.490295516 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277901508 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217993167 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269319495 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170839125 seconds)
  done (took 1.911774384 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176376367 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149108057 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12193815 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108172615 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15017977 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084390893 seconds)
  done (took 1.683536801 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.366646141 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278314461 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243163158 seconds)
  done (took 1.781795596 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.318599095 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251167606 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474227967 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326696067 seconds)
  done (took 2.367539029 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210623268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133891319 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110399222 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103484234 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197716482 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244749061 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142002689 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201147087 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097748595 seconds)
  done (took 2.388447804 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197231196 seconds)
done (took 11.228642668 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.178971957 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.248317524 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.232448289 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.158649644 seconds)
    (5/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.288351242 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.205338788 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098562871 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117721315 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112149701 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137635513 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.148473386 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.25134029 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.183629109 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.229186391 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117538177 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.212034817 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192409673 seconds)
    (18/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.203235178 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135268601 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.156469839 seconds)
    (21/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.177636264 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.170040361 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11626356 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.215566414 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.074875291 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.127446581 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116042991 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089016097 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162479954 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.121895539 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093642739 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.143173334 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.149343227 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091600151 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189845123 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092153343 seconds)
    (37/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.14051792 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082404974 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134947391 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218157211 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133839267 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.155811478 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114448068 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169203651 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066796434 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.147976276 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092951853 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192835362 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.190252179 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086874251 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.161439259 seconds)
    (52/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.164427999 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.151303958 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09488578 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154464613 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11006575 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068590743 seconds)
    (58/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200526567 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214459194 seconds)
    (60/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.226479151 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141072135 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.234146387 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192616299 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132677522 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.084755394 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123090164 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174005953 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085512906 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115962229 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091584431 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174225153 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066549699 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.248375159 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.086279202 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.160084535 seconds)
    (76/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091908923 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.140425781 seconds)
    (78/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13701413 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0675276 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066840111 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221352582 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.133012758 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0957919 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128176493 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.142876852 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.164888435 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139518163 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096434138 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117789171 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092687074 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138537307 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119046031 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.084406776 seconds)
    (94/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.099282242 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115349203 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124231449 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.084690829 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117610987 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.191189353 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066147581 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139810182 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065561395 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110482413 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108747414 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089734254 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113969121 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125945033 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192909883 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066728119 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118233523 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.19071035 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092746738 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.190793033 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111744066 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066621274 seconds)
    (116/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.148012964 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068199203 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.085717737 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154805593 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.400344828 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117474938 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085503484 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114725043 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089023423 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116687501 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178412081 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086525179 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113802827 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095169828 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109645817 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094111044 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133793616 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167818576 seconds)
    (134/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098626671 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126041672 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217154989 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067038091 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194716361 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115720217 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116083238 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11959669 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.113656643 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110572477 seconds)
    (144/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09573532 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138003821 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118333131 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.177316036 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086043486 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116845926 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091190509 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.111551302 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107406654 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094064922 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148338714 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120094774 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.191622608 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085095946 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118123783 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066949276 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.110755349 seconds)
    (161/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100246765 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183165807 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115786163 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09396261 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10742071 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066967847 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119623403 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099949408 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14327513 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067548623 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065688582 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.13877227 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071403235 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.170827399 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10802396 seconds)
    (176/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148791297 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11735216 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091819436 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.149183046 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118704852 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08604101 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113720148 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082208422 seconds)
    (184/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06505372 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089360476 seconds)
    (186/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094188049 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110369634 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067554697 seconds)
    (189/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118682309 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148617092 seconds)
    (191/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.099276588 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.175547033 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108562373 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091083177 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10904845 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.074779884 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111197086 seconds)
    (198/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090198141 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115615996 seconds)
    (200/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076634278 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118585233 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08750957 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.152816658 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.093999979 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118320227 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086268849 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089300333 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066554118 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142652959 seconds)
    (210/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066681603 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131369874 seconds)
    (212/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118833575 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095101746 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12058292 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155486752 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099761303 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090657387 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216842325 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110473691 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 0.18941047 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066914731 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090908983 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069585127 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122619201 seconds)
    (225/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112018636 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214769321 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108271614 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067149477 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.109707192 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068042691 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067737423 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175296495 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180258178 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113271473 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090448955 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078062009 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109357307 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067383265 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.187870637 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066854348 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.165020714 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06615214 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.09917091 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086620776 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115400582 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164962776 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136027431 seconds)
    (248/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066316537 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092071058 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086110555 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110885331 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066850713 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117897519 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150975561 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110353812 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086062727 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091850424 seconds)
    (258/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090883773 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110150647 seconds)
    (260/309) benchmarking ("sort", BigInt, false)...
    done (took 0.223056809 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066928201 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116594929 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091072405 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110428747 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131235384 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067502091 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09515269 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111611828 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.156529454 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.107487898 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113515055 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066442676 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.174653285 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153257452 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085497163 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091620975 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067025824 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.074880248 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091668243 seconds)
    (280/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111456188 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134261194 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109733219 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068032641 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114622398 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069655644 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093663574 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109589928 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084078703 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091130337 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06916572 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.10872631 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093982239 seconds)
    (293/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116295391 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 0.171085076 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111360911 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214913628 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223991597 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11477379 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07820903 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089064014 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09247049 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086322066 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117495852 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09161851 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099710578 seconds)
    (306/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112222709 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11147899 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 0.173731969 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067193838 seconds)
  done (took 39.547547405 seconds)
done (took 40.449487408 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10318063 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148070288 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095022134 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136533183 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122604052 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091661058 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119183499 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096724653 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12492446 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124949201 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098082617 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093204115 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096900664 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119791105 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096460879 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140645389 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122582401 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094110948 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11934712 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085911769 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119223397 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0857486 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112857377 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070140953 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122238348 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093847743 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117057823 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119439157 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086589622 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109576071 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090845109 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116897923 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086581392 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123256991 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092952193 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119181057 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095983917 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120699932 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087402266 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11064719 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117514797 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086753523 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116412405 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095045869 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115837871 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092379577 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118785379 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098780513 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140593779 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115360916 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095318435 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120829867 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096930414 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121501943 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090170449 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122477732 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090711844 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142448032 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120119381 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091764098 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11906384 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094817097 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117513895 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094673706 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120446367 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120177626 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09832044 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116180338 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097271553 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116461204 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08630563 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12041305 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089765959 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111070307 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095964065 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122337482 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108551 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093496067 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116854735 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093084916 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109096653 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09008574 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111365962 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092983407 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11315851 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070361672 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114479228 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093202283 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109736233 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096404666 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116782419 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09379507 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112553465 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098301315 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111101283 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091929006 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111893887 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086395054 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113863165 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089856098 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111579547 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088705802 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120083045 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088163671 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117691251 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122565564 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087374264 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116185391 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086644133 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10965924 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101850624 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122486251 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086617935 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117108887 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084898574 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119358219 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085468557 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110572007 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086433018 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112044348 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0917592 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111564821 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112450936 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094915234 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124412944 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087104017 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113718442 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089702173 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110690755 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093307026 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110853755 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087411816 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112800511 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078126646 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112536583 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087153453 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117958392 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090041155 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119614775 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08970776 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121045313 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09076394 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117204997 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092235794 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110989727 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073904202 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115584431 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089099702 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113190686 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086574166 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113766585 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085984638 seconds)
done (took 16.94457727 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090228075 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186025738 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151839881 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142823825 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108139713 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112912663 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121678757 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119516835 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113687849 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144014158 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109548406 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133324991 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148610592 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086841787 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112221039 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091435351 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112589266 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102009158 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146747587 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132991887 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164065384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086267291 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148155409 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137069162 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120549981 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104985418 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111951447 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091690628 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115062196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112186271 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134413815 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089651302 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113211713 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134582472 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104800745 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119802393 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086952372 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119439568 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086221868 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112380024 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139591733 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133623283 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093311979 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116971929 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09111624 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113750903 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088476046 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121593843 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097850681 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116850595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126579767 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15694929 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091610891 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121879361 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086269526 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123794616 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120780604 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090822139 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11112881 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090866001 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111040289 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090869871 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127661871 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14164931 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091662987 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122493721 seconds)
  done (took 8.636267198 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107341481 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138688787 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104610255 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.148232572 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111436035 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088576004 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112754119 seconds)
  done (took 1.778958281 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089691177 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134097861 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111680169 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13613715 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132441978 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108887317 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122643129 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088222001 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131615174 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088367883 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135566941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151529619 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089549499 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121406658 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137406218 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088910634 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137798057 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08805551 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116612337 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112039647 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117058582 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133654537 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090949958 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11300434 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102525436 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114459565 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161746045 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094109897 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114304149 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09189664 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112369729 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165748737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104905676 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125134381 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087393532 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128703315 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127262206 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087806748 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129083356 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093758683 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128560518 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087931963 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115356013 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086022845 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119123729 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123568204 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090847498 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113669504 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093217886 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132930515 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089081205 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126433819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088574313 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121513563 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089502911 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12066988 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122294674 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090593442 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133293792 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091377146 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131526551 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104997931 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128383128 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129841041 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091578034 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12699025 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103174747 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117018709 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089794935 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118488719 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1305957 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086846431 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114787206 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09989415 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11542861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111862023 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13792221 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114379442 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099646686 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113231147 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090070609 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112590838 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113093245 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117711922 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088347849 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118545133 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09281801 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112634828 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087268808 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117968953 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087495065 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116298033 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116021751 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08980515 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11571732 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106060308 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114612082 seconds)
  done (took 11.817078702 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092471623 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11400122 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092060159 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113661667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090282553 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114862683 seconds)
  done (took 1.597670413 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114600026 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117424474 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103658307 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121189384 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155836112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128032337 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105160025 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124027827 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107393591 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128539847 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129193452 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105073255 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137009633 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120464775 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104530089 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120225145 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.12900272 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100419296 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127134567 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096315893 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13663225 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120989664 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096296049 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133392685 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118307809 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096261653 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125180765 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102230219 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128105318 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122438092 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096021766 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118219086 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096777105 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123190389 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129364559 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095859959 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122179921 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118570012 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100295684 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11755401 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104649664 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121619369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126467726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094641064 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123758407 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120562768 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094756812 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125567618 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103772213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120135422 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118762938 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095570858 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117822446 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094174162 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122694626 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12300378 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094247642 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129101527 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095388093 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122459977 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118164013 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09372248 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123991957 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117826856 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105438361 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119262451 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095100173 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123441563 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121662948 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096493548 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119748136 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092847591 seconds)
  done (took 9.226887995 seconds)
done (took 34.022533553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687821741 seconds)
  done (took 1.65944947 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.722190448 seconds)
  done (took 1.69942783 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.791981839 seconds)
  done (took 17.769053537 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504489574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588634051 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.883408657 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179795355 seconds)
  done (took 3.13487487 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952616668 seconds)
  done (took 1.949785026 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299724281 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258526059 seconds)
  done (took 1.541061846 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.778842773 seconds)
  done (took 1.768425493 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.337377363 seconds)
  done (took 2.322031738 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335992855 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184333421 seconds)
  done (took 1.514091982 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547591393 seconds)
  done (took 1.542285625 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.806014154 seconds)
  done (took 7.805225376 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271515896 seconds)
  done (took 1.27804561 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302652203 seconds)
  done (took 1.29890402 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.524584979 seconds)
  done (took 4.523108993 seconds)
done (took 50.784629977 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102058818 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126199657 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102206517 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123511814 seconds)
  done (took 1.446591168 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104233247 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120072151 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100475891 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120575211 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125274899 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096731773 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121981947 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101092607 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120588136 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096169529 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120421201 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118836435 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099490419 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122531914 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092782851 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12392233 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099436311 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121010889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124215857 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096822767 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118092913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097446843 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124170676 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093959292 seconds)
  done (took 3.663146015 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103916458 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118781242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097573527 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117639365 seconds)
  done (took 1.444439818 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103186058 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141688361 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138655652 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100192845 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142922367 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134752807 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092233597 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116223851 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094618683 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124367564 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090478437 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149443295 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137185028 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099383126 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126784299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087908572 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117460402 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135720465 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099410026 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126429798 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095184474 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125415569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090269466 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140308972 seconds)
  done (took 3.809395121 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172995533 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148189707 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138589539 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095267045 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159656611 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140591233 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088405303 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140451195 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087081611 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132283163 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117930034 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133235864 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128712346 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087298312 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113062802 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087111798 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12938319 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12880803 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090213845 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.14094108 seconds)
  done (took 3.469537951 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100521704 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116225841 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088557979 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115320653 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099420535 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119933046 seconds)
  done (took 1.649620872 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092944701 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114659391 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090156411 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113395764 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09418888 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114062352 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088858898 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113713752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090212556 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114109054 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089032929 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11301853 seconds)
  done (took 2.238217908 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463902251 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093137761 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119804511 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11388761 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096168979 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113774358 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102490056 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117765833 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139419293 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088685096 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115163123 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091832167 seconds)
  done (took 2.664249584 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235889414 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12545436 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286945896 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274612443 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158116484 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17075285 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279623751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163259225 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224255763 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158799354 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203422596 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223977766 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151048893 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189575837 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138117835 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118464145 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22554783 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239640696 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151491597 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202013746 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224804525 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166142864 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179802339 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149974852 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112363692 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196736795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095076917 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128999434 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205773259 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202882725 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188469529 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16121017 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146681392 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236626677 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252115684 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193771657 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284440796 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135412493 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170314588 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168037132 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263475794 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112638569 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230655864 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154792455 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130613977 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192621305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165169011 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175689371 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149953618 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139546271 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219586796 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211816742 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.218606011 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1109837 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234587873 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156087253 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168601458 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19510238 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249548416 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223949231 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178171211 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118986034 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188662085 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189615826 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183357001 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.194231576 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1812503 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147353687 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191584132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187809956 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191458311 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186928374 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187175929 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140378292 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168300093 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172190732 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20028824 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229197372 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203429915 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094611589 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169427343 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149604234 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133322534 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195264696 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099387131 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239812238 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147926218 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162598642 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217811688 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160150749 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161077808 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197556069 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220689463 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148814599 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083435041 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155741278 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15568866 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190832301 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140093246 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158398214 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161096523 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129710962 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179018448 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09683692 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201946573 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090443186 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174225989 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208719512 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099483682 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160632199 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151192669 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150369058 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174426309 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224681522 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115117197 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13405438 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208375826 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204562478 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150428827 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179058674 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203787152 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144113331 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149101525 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198714638 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24387106 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139247996 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203043974 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157481848 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135361371 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104880592 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207010879 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154948914 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161304562 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108830297 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.208734525 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206491471 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125731718 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111536216 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2108104 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105662008 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133197737 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161498484 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148844424 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139621406 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147582398 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151160835 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182921894 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177983098 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154366056 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164675612 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152194567 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253945324 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142940685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1498072 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12192179 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121449133 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192500882 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22697041 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103445896 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231544382 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172131445 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231537353 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169156024 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108029163 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176466652 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130313078 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119472628 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193891906 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16686658 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161766958 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19607699 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227834204 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179502559 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208753262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172296532 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172964576 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165371098 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156719994 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138488072 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133064344 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193929693 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09629531 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143190949 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134190298 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148665734 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115975909 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134487844 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222237998 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169398678 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190166822 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158987563 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151016791 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181138058 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129168191 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173523848 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178490662 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147435743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225725243 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194378471 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18706596 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144673414 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225774543 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094022424 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12528955 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114794238 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197875612 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107014984 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136507958 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165724887 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18082197 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18047767 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203247574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212218466 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196833321 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18963076 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094234067 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169528749 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18507243 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203151328 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161700234 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139880667 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150978144 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177770441 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159010994 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254553678 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16883822 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175402927 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235317249 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122241327 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132885752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152030048 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18625509 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154246614 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176157538 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147096772 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14191395 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161589512 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132567326 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159532434 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182801121 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163688339 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217354005 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122178492 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211985241 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126983501 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166096949 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159768117 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165314161 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081874521 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174087344 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231937773 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149325985 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168685635 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18896129 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131710308 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.3079415 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208017294 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219499782 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13770575 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15734727 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160133099 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136109567 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198884727 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178562922 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159763021 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187721288 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159074912 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136348486 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113971008 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148835056 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150889702 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131349518 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147846185 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177826969 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137425721 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185559219 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160598817 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159508691 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173242463 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149909272 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116464837 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150197591 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244544948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176684284 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23686366 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122435155 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206818357 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206175944 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125455669 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104154665 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133696995 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177786127 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137121158 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189957298 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214595785 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206755433 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178802878 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215409065 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111161599 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120429221 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158087208 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174040025 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234338668 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152494402 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158944899 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202983045 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143412979 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104588977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170755779 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227124893 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146557049 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197102965 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078979261 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302865921 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100268479 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133140263 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164893025 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207326597 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135929015 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183617199 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169067173 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168802906 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165291402 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150254042 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190692404 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243967634 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198181235 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208587684 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10466576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156488619 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176261773 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221897156 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158447545 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139084264 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205656657 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19364508 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223906632 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113019923 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197884743 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168320707 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156442649 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187844286 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134193002 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205475651 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135207517 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193050805 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152998015 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142353591 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177761328 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21653883 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114060136 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217100777 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174926736 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135553324 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104915689 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196869025 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177643808 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158465523 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098930591 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207834458 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097410948 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21949983 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229599892 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134846789 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155014387 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147782601 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13486235 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156238044 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157238809 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113526007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165341439 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20181999 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134604387 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192192569 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231148563 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168651051 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173455249 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144592749 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693107549 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131772945 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194715403 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155614074 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235554384 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15020094 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173402454 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158261777 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168771818 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194918873 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161312759 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232090331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218822038 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179485186 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103428508 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157017625 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188662492 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116494278 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151371465 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168690613 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159583188 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152729828 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177140059 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196316784 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106708116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140736125 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198919738 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156683233 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181101106 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206553451 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111220143 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173142293 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218017353 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132380097 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179881074 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205543296 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142134403 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153679122 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133997599 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155893047 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261259726 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097182343 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227493933 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17734136 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159347106 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167902066 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148129473 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190547947 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157661768 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177350405 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146023009 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159963018 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156841449 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138095871 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128736733 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153805334 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167573366 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120837748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158640409 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165527862 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192491886 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124242048 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144751537 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198618511 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18800147 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243934704 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136371501 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107433749 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162991275 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151124476 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179212116 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20616392 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10735151 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136648162 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137818084 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13140539 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139614765 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155511186 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198873189 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166106562 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23418328 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109548387 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280170909 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141390622 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15480302 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089598495 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13271209 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149676127 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146714478 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15899826 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19280857 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262868596 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146259498 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106401257 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150056066 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124920805 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107657671 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165769494 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162545062 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176747745 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145327592 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109187535 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159380666 seconds)
  done (took 82.562719692 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167357014 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13179543 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146935578 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204381923 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176845469 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270094516 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209635368 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254817589 seconds)
  done (took 2.65910851 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096489809 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145537332 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158028913 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133096909 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091691686 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11955663 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345601242 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133138289 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11605439 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121381468 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172460505 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093689534 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552133817 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090959268 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11959842 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108055331 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091530213 seconds)
  done (took 3.781044221 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477620814 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715484971 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511183237 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097367806 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.129411224 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112241322 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.672600899 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195416509 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114220851 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482870055 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773988228 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162195706 seconds)
  done (took 18.548924342 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100971064 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120488538 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107914483 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136095914 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096338642 seconds)
  done (took 1.671622875 seconds)
done (took 130.601067068 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106640507 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403757846 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071230263 seconds)
  done (took 1.615469042 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110863905 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136762362 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10854652 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136185612 seconds)
  done (took 1.604981372 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10024304 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126341032 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108703776 seconds)
  done (took 1.442026325 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322765175 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189477545 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.163891812 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108345843 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129140304 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102116916 seconds)
  done (took 1.450392739 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099247232 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127146469 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098124633 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129696623 seconds)
  done (took 1.56551866 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096942278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070615136 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103115371 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074903858 seconds)
  done (took 1.450910576 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116954518 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131709157 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104205654 seconds)
  done (took 1.466358655 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132806558 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139010848 seconds)
  done (took 1.38515657 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106546392 seconds)
  done (took 1.212833338 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119979177 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169303263 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.18986563 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16476122 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229142816 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165764419 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140755388 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113813999 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130838567 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143736535 seconds)
  done (took 2.682144853 seconds)
done (took 17.766499966 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10519691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512946328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412463108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116956568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722656024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379665815 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031730188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146186902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165434542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093093735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139572664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671851375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02226621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.467678204 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982396571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.463455363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703428634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092903168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118919902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094408657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015609507 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091294279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121450213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091735059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701690978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424666173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094473394 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.467288784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091754597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126185965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382697478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122057681 seconds)
  done (took 17.275238383 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097914185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173670748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098614896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137450985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123323874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094228146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12452122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09371073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179551247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122387022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109946859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121523619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12531519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09468675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141588411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092728382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124615915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092393701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120666712 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121309034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111928735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11916979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093192537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12127735 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093248013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121571561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093711034 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119748078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09751508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127162683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093985214 seconds)
  done (took 4.832569808 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143212582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182595101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128611355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126857173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168286206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123659463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199020996 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117655064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183544771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122308436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139298266 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092665665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156086411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121956887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113835752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121196678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096488557 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122803672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091795978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122865992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139320039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093431113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121578011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093491085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122881035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108331812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123042929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12106311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093062688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126702848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0998782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123660992 seconds)
  done (took 5.163895907 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10010119 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125881109 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10905389 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138470802 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095046016 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125644143 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096298972 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12437784 seconds)
  done (took 2.031243679 seconds)
done (took 30.410829213 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114052033 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127310429 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105991324 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135461297 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102454088 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131772319 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090973271 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134317538 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134735268 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101544442 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137784955 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091590352 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123358669 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091917195 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136203115 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097590889 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132892084 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102155463 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134089784 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131360124 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094765091 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133477501 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103859484 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13374537 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104254319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133988866 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136912373 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098973689 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122706247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094337378 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124488434 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104052336 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124727732 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106266426 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126545028 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097109378 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123577709 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093119702 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133341286 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13284799 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100251336 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133445443 seconds)
  done (took 6.023190708 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110582462 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140223971 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105122299 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080626648 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117180266 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080493764 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138220865 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078544929 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110152869 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108171474 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074624381 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10616215 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077878644 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102081002 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077003533 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074794891 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108692076 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075415189 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076000722 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106167638 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080050155 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072552232 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108320657 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078350452 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074525508 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111044235 seconds)
  done (took 3.596682578 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102468136 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135836379 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11226055 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184349158 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161224544 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099013363 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132219314 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139588631 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109574588 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120858989 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096103768 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149949425 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110503581 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129244346 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092010576 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137643774 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135120047 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094504258 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129010363 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113563871 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139372573 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102577092 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143622654 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133810432 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093217774 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123732007 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096525139 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135852455 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098130285 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131641069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096069727 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125198825 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123604842 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10489565 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126712655 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094027152 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142077551 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102539852 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131059357 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092684754 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.125872948 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121669906 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1135937 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168386192 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090965172 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131031747 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127995024 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102366057 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121137472 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110422107 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131482285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09165977 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124786487 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091199526 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122363779 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105595087 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12382498 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094317227 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131898816 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12459666 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105708406 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125316425 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10884585 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122099204 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100771818 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12127301 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092892693 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120633834 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143119236 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094427468 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163836044 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093927371 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12390489 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101113275 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130511332 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135373399 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092796497 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137805676 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101991713 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126155576 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101693164 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126030493 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124043641 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111622034 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124256179 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094656564 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122408954 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099216787 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124822408 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093427844 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137320988 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092818415 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125501169 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139820987 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093618618 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123127229 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099059067 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127089874 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091213567 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135683296 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098201038 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123781433 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132403339 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093316074 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124759619 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103126256 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127375858 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092143441 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127341067 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098256168 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123633332 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094044843 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125914966 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094211378 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132020442 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128503426 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097347607 seconds)
  done (took 14.856100677 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232303781 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215656011 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.237203969 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261720905 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13525078 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113780933 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210807233 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155408237 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123246027 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159653489 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161517923 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180260514 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139186875 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179498984 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141216712 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122074484 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111696757 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1654936 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21549073 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290124549 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112035953 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132204543 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161844397 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160625522 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105155446 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13272372 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139850347 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105620727 seconds)
  done (took 5.746941099 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110443264 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156377696 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09777831 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144952819 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148538077 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092620386 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127911347 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093832325 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135914379 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135385536 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091823149 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129298496 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099952094 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132015728 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.1223099 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103243568 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132775653 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093764262 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126993744 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096935199 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129901813 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101133439 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127949322 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121006042 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102849318 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121731136 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085824168 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142852958 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121828158 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115919921 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120911836 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099797001 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133178839 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092439505 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122743103 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094302466 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125491671 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094073766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124007982 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091028755 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122288499 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077014375 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121600932 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135455657 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098961388 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079019893 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129495519 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127673393 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094343474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120253069 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095704382 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124233026 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095783293 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129580092 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097900494 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123975499 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096416933 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116074979 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099050513 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124685877 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084192248 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121012877 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098701301 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117961269 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10133452 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127750869 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091962084 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125757214 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097765724 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129542244 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094527127 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126806388 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090398993 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126851011 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095955117 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127525671 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09561376 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122599097 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12172239 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093433509 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075195416 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124154748 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073666898 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126713698 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090900019 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121719417 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095105055 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129859839 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136836951 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095566038 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131850282 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093190293 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122688385 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096177674 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11357645 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096126628 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139529629 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140018763 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093760873 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121050733 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107061111 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125841058 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09235726 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10652575 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100286899 seconds)
  done (took 12.943888518 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.1299478 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153623629 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094262342 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143266275 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155914412 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157331868 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101399647 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130765666 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094940045 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142139471 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093842677 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131837817 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096986264 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13758213 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156551311 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103237045 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125604641 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106967366 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.1320145 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17044727 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111055334 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.1427631 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.106816343 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124534611 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128476734 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110194892 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16209704 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107097083 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137322403 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141245354 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108099602 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161307509 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142351207 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098235389 seconds)
  done (took 5.498421152 seconds)
done (took 49.780518614 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.246182417 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.444363049 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.215985809 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.19950024 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.247518659 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.222096021 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.228523003 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.217546734 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.277975629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.216354927 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.461144802 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.888258534 seconds)
done (took 59.01388542 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.265423105 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.354495755 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483409744 seconds)
  done (took 3.992014583 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.576639501 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.158537237 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.477336664 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.216781752 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.216097294 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.51106897 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.848813947 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.559040215 seconds)
  done (took 28.132566526 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.218039086 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.610493383 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.925726696 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.925526851 seconds)
  done (took 18.827563118 seconds)
done (took 60.93740077 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.239552284 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.29897346 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223059235 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197443076 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.331152641 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.238648235 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.29573277 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.271795668 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.242634569 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.200396308 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.237463881 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.217303454 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.222736809 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.350376949 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.225408924 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.218051216 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.275357055 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.879075039 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.631992342 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.22767901 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.251460652 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.248024479 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.235231273 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.218030899 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256453402 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.231332002 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.217743669 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.234448261 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.821993972 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.22332281 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.2334624 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.405775553 seconds)
  done (took 190.746764872 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.221436114 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.230678379 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.362111802 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.271899079 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.632776202 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.417833673 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.355062093 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.82205865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.238754923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223789538 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.385592552 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.219323186 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.446853685 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.262448576 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.228487808 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2355891 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.460608957 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.477211223 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235288499 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.454412161 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.245598483 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.291064521 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.237940966 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.364567007 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.252323962 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.347575788 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235652647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223484043 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.412419172 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.399558504 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.224919408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.245045254 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.84696219 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.081790482 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.238202913 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.25517771 seconds)
  done (took 150.234788621 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.516033689 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222810446 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221555323 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222804152 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.256519007 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.222699853 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.80991775 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811186755 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.763835184 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.650098996 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.285998528 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5300808 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.224768745 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32144664 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2346746 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.22349743 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239945951 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.266222559 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221712859 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223212065 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809666854 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.238788825 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.654983579 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246645722 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22460633 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257216861 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.614698715 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222000245 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256419595 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557147496 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.272567861 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221581724 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.626942079 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.153852692 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340833345 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.224420941 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.258394654 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.226159354 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.50800587 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223395397 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.226296191 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.225827746 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.227032518 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906079435 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.226173017 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812210358 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228041915 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.215210252 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.227308805 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226782304 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.846196358 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.947584952 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.242363507 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.226725176 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227294113 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225421619 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226510745 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.260985741 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.074197614 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.321666321 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.242847714 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227129069 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229905196 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259379604 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226241549 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.611818372 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.24430044 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.489603042 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.302513561 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333472358 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812993707 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229345628 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327419315 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347816193 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.225345875 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.226830051 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.226881373 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22854328 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.227882644 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.339203753 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.22576156 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.660704541 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230914264 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.22766298 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288435562 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323212581 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22469032 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641684903 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.228697093 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.228607241 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.044105564 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329778045 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225652191 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227173816 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228138709 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.660961231 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814829103 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.489988683 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.229298936 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.084670574 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.230773847 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.228641929 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.676366575 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.794993555 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.942270968 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.228129301 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341108816 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231442398 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22954996 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.227555514 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.257631761 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.244058705 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.289474147 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.226915759 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.628422798 seconds)
  done (took 352.11922829 seconds)
done (took 695.762801867 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89030398 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.88160702 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.992450371 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.873015073 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.857679037 seconds)
  done (took 10.649968659 seconds)
done (took 11.802077223 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417443543 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.417456461 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291157945 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420377532 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258619306 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437118162 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394716592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.248454305 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332395715 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.312375408 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331015814 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28457532 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257690831 seconds)
  done (took 18.558001591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554702645 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.553144991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291199532 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561220258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267242921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549793503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431001638 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.447456647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.454410281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261756605 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242522923 seconds)
  done (took 16.771914879 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570050681 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.562402393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293607649 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.557096353 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270902965 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.552510573 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43492324 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.44841143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453606697 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263544582 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241850002 seconds)
  done (took 16.805365791 seconds)
done (took 53.291650549 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.241999076 seconds)
  done (took 2.398122522 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.275969171 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.43983958 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.257753963 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.244745277 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.239668182 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.240073612 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.246594708 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.241910126 seconds)
  done (took 11.345036555 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238688271 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.24057161 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.237957153 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.23780916 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.240265071 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.236865712 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.236326858 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240207771 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.239434398 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.239430842 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240014195 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237344002 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237420132 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.239414907 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.236720092 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.241512312 seconds)
  done (took 20.979531793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24108262 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.23736615 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.237322595 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.238137405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.237130571 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.235948732 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.23831748 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237205861 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.237917138 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.23794793 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.237779622 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.237230699 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.239353547 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238664822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.239635643 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.238922538 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.238369301 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.239164106 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.242661705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.23880532 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238396756 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.239280999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.238049481 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.238168994 seconds)
  done (took 30.884702854 seconds)
done (took 66.764741939 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.465557788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.041018577 seconds)
  done (took 9.665884778 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.241864453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.239918311 seconds)
  done (took 3.645560174 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.240764472 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.241000794 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.241260826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.240168363 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.240659965 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.240283743 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.241160413 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.241288159 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24180172 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.242240082 seconds)
  done (took 13.571387385 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242167501 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.242545272 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.239833494 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.241900179 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243648634 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.240668532 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.243143029 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.242785027 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.244313462 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.24185726 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.242926112 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.241156526 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.243377212 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.241256645 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.242603893 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.240776842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.239533267 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241026053 seconds)
  done (took 23.517350925 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.243541542 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.243019333 seconds)
  done (took 3.649177744 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.242981998 seconds)
    (2/7) benchmarking "second"...
    done (took 1.242079784 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24102488 seconds)
    (4/7) benchmarking "year"...
    done (took 1.240828499 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.241970893 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241433329 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.241748957 seconds)
  done (took 9.855032274 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.24596205 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42424029 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.505731761 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.845503359 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.245709166 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.246178259 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.119645135 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.249333125 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.252909019 seconds)
  done (took 14.299572724 seconds)
done (took 79.362883052 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273449515 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.251982208 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.513333234 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.261446518 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.255045833 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.583176503 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.260246511 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.362360074 seconds)
done (took 37.924146075 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.258690408 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.003671643 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.013048816 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.237939456 seconds)
  done (took 11.419025371 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.228215128 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.189376187 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.225966468 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269885251 seconds)
  done (took 18.07983208 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304589339 seconds)
    (2/2) benchmarking "read"...
    done (took 1.578015318 seconds)
  done (took 5.046134002 seconds)
done (took 41.967518864 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247425087 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.246194778 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.244613592 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.244191198 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.246621621 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.243697167 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.242812938 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.24378028 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.245287752 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.245864351 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.245886709 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.244598886 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.245400423 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246376804 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244657959 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245323803 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248434576 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.244669901 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246859533 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.24614867 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245820526 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248276391 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.245038535 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245035467 seconds)
  done (took 31.058372617 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.249440792 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.243851067 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246676299 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.246081288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.245895859 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.25056245 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246877576 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.244414443 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.248415098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.249062869 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245944347 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.246902895 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.25006504 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.246315021 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249474264 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.246530606 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.250193209 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246373846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24967115 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.246755801 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.249468719 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247749539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.248252029 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249607496 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.24778383 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246923055 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247827646 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.249227494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251467191 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.246821691 seconds)
  done (took 38.602161481 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.255840989 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.257661157 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.250267178 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.251967249 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.250707463 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.251797215 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.250510496 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.250701529 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.250131677 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250979023 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.250839611 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.249921159 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.250325413 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.25229836 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.251220137 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.25094275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.251738417 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.250256655 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.251455719 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.249698114 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.250805611 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.251372352 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.250375247 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.250848245 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.252658194 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.251119083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.252041432 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.253082457 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251957814 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.253187867 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.251341433 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.253795163 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.252422869 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.253136163 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.252047386 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.25301344 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.257416649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.261793448 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.25259366 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.251977901 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.253059866 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.252148043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251936188 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.252977992 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.253068406 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.253757235 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.251524319 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.253713163 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.253327748 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.253343913 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.254881086 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253735917 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.254782786 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.253771401 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.25276009 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.253155442 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.254547818 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.25261173 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.253910343 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.255095167 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.253418711 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.253453467 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.252502545 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.252784537 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.255577162 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254151815 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.253970357 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.254582552 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.253904638 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.255033144 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.255309915 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.254767228 seconds)
  done (took 91.373950214 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252795579 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251179213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.253317226 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252396307 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251907162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.255917092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253783066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256905746 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253051066 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254702961 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256320286 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253159799 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252581165 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256117837 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256419416 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253025115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255483305 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253547787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.256723639 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254840223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253760128 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252545534 seconds)
  done (took 28.762743469 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25652492 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260465073 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.254243243 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257038684 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255381362 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256570965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.256687583 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259500358 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257821711 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25358009 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259233273 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258106633 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256446623 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256079833 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255068357 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255716082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258729888 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258860221 seconds)
  done (took 23.800584483 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.254154205 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257047626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259659866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256446568 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.255451282 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258008748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254770343 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258907131 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.257885351 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.257902268 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258514573 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256671609 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.259225192 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257110014 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258396903 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257313749 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.260124217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254955667 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258866912 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255767407 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257113906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257588672 seconds)
  done (took 28.836616803 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25738958 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257703305 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.257174025 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258281819 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257808481 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259993206 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.258816869 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.257684773 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.259388149 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.260208418 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255255429 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260039699 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.257735263 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257917479 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.256991943 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257037039 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258876025 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257544985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259139589 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25822896 seconds)
  done (took 26.339523901 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261881779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260289761 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260572193 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261041108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26139059 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260952494 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261944945 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260968941 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261597292 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262527184 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261713504 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.261786671 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261485265 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262442463 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261209105 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263351958 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26305712 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261467442 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263392845 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262286865 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261740419 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262477393 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261859767 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261210465 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262530658 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263089889 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264169824 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262320045 seconds)
  done (took 36.512019102 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262447443 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263815563 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.259078193 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.261388342 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.260192894 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.258424802 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.25957837 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.260910231 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262340691 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261254694 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.262553036 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.261241162 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261975243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.26388619 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263311425 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.261905657 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261837187 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259748937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259542847 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260041053 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.264123074 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262149806 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.262950853 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259262771 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259865444 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.262853935 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259003384 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26099002 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263209117 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.261550725 seconds)
  done (took 39.020654306 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.280714473 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281578997 seconds)
  done (took 3.742658677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.261141331 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26400024 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.26400644 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.261550117 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260889158 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.264930684 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265104917 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26147267 seconds)
  done (took 11.283826224 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.262507725 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.261364082 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.264069891 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.264428571 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.263380597 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.263088231 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270518465 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.280262324 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.264668981 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.264584666 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.273721583 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.272715879 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.26600087 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264737006 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.265218211 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267460537 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.265057382 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.266369188 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266091333 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.265394943 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267501881 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266853865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26655604 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.263305335 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.265706179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.275793448 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.287735085 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.266561503 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267092492 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.270309021 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.262891662 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.26380477 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26695178 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.267511699 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.26561212 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.265944386 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27364314 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285513138 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.270403268 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286502733 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268196468 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.263640862 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.267251851 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.266447742 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267377361 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.265555715 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.266137177 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.264265893 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.265222249 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.269279468 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.273292527 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266630141 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262412602 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269438149 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267834656 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273041602 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.286465594 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.270695077 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.278126298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.27678589 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.299073037 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291544319 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267969024 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.267685679 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277876376 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.293758563 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273779556 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.285471698 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.265196039 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.267979243 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274342417 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300943928 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.295414889 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.27060435 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268674918 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.269222025 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27037291 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268369819 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275396337 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.289740453 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269550877 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270361856 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28167119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294781578 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.270494777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.269360397 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.270942042 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.270608782 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.271120931 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281662084 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.287391679 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.271726521 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270618494 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.270286304 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.27167967 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.270375933 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.269753585 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272384058 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.267853599 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.270483898 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270257091 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276342317 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2797148 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269815703 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272217488 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.278039258 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.291820208 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269492646 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.276759721 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271560656 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269926677 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.274060494 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.27904807 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.269194764 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27277327 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.282174721 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.272165831 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.274344446 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.27122598 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.272920359 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282669342 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.299516958 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2736376 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.273183996 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.276333385 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.287195217 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274274038 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.27461256 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.272488157 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.269852254 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.27069172 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.274427889 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.27348704 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.273518838 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271877326 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274541416 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.270719688 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.272510399 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.273862172 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.273164183 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.273762593 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.272148068 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.274837584 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.275417994 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.272000238 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.27240983 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.276994451 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.292949937 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.2727008 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.273785349 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.271386571 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276188125 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.275757447 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.273384873 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275352645 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275056961 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.273728198 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.272835114 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276204988 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.274899952 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275388157 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275064233 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280033753 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.273754638 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.278933067 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.276877548 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.273327997 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.275929321 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.275029184 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.275905934 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.276305245 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275510895 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.28013805 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.285500819 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.276122662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276459602 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.27859048 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275683482 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275885163 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27772564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.279982368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.286301504 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.275665717 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282376143 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.29494948 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276675641 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.278837214 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.276295709 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.278287171 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276874539 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.281597683 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.286646413 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287341125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302380311 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.279762118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.280587617 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.279158685 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.280805954 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.279019529 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.278973647 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.277205252 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277729411 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278294288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277163131 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.279790086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.276774834 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.277642411 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.278014843 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.278575694 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.279470074 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278296148 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.278016157 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278145714 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274098491 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277698454 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278575402 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.27919308 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.27671173 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.277226438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.277078989 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.276840235 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.277809596 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.283251884 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.27488035 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278575209 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278898461 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.279597495 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.278597444 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.278637246 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281356278 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.280335858 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286173621 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.299355312 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.281393554 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285555725 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.299324614 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.28089641 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.281442395 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.280707774 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.27846656 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.283103372 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.28855466 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.281363788 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.280057701 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.280672443 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282517107 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279402676 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285428163 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.297871981 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.281824709 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.28200517 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.282982101 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.278428582 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.282477254 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.282171698 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.280759375 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283054262 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281204346 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.282904527 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283395968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.280712257 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.283633691 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.28053929 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285576812 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.292656453 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.285889933 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.281886958 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.284110886 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.283630008 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.287491261 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.282055417 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.280752216 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.282019446 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293453287 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.309147381 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285925928 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.30337673 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.281827036 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286616809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.303553751 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.287642308 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283499944 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283983653 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.282920021 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.282922199 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.279537912 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281236468 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.284853551 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284133873 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.283525898 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.287522409 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.280400862 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.281616656 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281172982 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.28068438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.282090793 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.283171592 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.280249617 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.285722122 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28558007 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.280410379 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.284673853 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291530769 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303904321 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.283689304 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.284111994 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.282415259 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.284340945 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.286003339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.281643708 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.28801652 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.293292903 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.286591218 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.295629556 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.285565624 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292653261 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.281644579 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.286721189 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.292423123 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.281871374 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283291443 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.284448637 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.282979864 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293040141 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.305468086 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.288489581 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.291693597 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283973329 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284728625 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.28802114 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.286683539 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285189181 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.285944359 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291964925 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.307707208 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.292093865 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286282186 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.285024037 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.285850429 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283759497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.285157503 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286364915 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.286218647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.287262988 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.287023628 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.285679878 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.286960814 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.287759062 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.286718145 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.283573212 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.288309817 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294824675 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.307570941 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29393251 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.286892203 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.293219386 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308891108 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293027421 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.307279574 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.285905735 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.287552668 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.289920172 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.289308075 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.288755997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288013081 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.290300495 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.287521899 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.29130588 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.287313614 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.288622167 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.287372012 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.287377703 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.287960558 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300241435 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.314618798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.288096549 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294085154 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.28633715 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.289643524 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.295363674 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.288691438 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.286307278 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.292514786 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302516193 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301022785 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.289935654 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.290970535 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290335647 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291233563 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.289885434 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.290586249 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.289383387 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.289542127 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.291421269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.289284995 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290420411 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.289562119 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.290767277 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289257998 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.289720079 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.300107414 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.311323357 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.290797788 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288381495 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.289664736 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.291886587 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.288601693 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.287477203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288756475 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288794159 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.289830567 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297857289 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.300908297 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.292202013 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.289339804 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.290881645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.290684271 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.290239027 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292984494 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.291055494 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290887694 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.291424099 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.290251299 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.291179204 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.291208129 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.291740348 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.290279304 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289465383 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293544035 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302564533 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293566027 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.289940246 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.293376589 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29281633 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.28945272 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.291909467 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.298895717 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315987907 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.304861282 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.302445795 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.296693188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.292063928 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295582523 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.301141817 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.292369304 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.292372544 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.290666887 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.292295783 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.292160694 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.299151931 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295408842 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.298160006 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.314772924 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.292602825 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.301460181 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.317026501 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2916081 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.294659429 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.299859414 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.294296224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.292730658 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.29446491 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.29245145 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301219114 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.315469341 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294605606 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297025732 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.293845804 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.29656415 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29997205 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292301508 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.292821728 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.292427582 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.29479586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292505262 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294281063 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.292684384 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.294032109 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.296193675 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.297724314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.30253794 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.291909431 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296911667 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.29441072 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.296028691 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292279998 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295183789 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288693589 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.290880062 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.295199382 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294847312 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.293880931 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.295681318 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.296384282 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.296064521 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.296407055 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296704551 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.297402348 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.307548704 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.305475966 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.293609457 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.296899963 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.295484765 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.297048619 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294244141 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.29826778 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296626149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.296042525 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.296355082 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295503509 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.294709131 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29861672 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312653147 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.314835445 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296306278 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.296633974 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298098656 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.298022458 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.293455495 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.297275904 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.299967279 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.297527024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.305348907 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.295588342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302224755 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316962554 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.297211 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.300937256 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.30117117 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.307054387 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300879129 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296875467 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.29757824 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.302029179 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.317303893 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300175787 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30917733 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330151706 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.317699643 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.297802863 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.297957204 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29663633 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.297175235 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.297713315 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.297801249 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.298960665 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300615993 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.300730727 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.298835958 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305134399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.299578754 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.302579678 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.298720351 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.298261537 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.300859718 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.297453741 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.299018735 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.299022182 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.301236681 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.299522929 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.300864382 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.299675135 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313759248 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.330046176 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.297818305 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.301189292 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.298503376 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.302233024 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.301839052 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31366076 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.310363936 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.300478269 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.301414959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.301951429 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301926583 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.299096904 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.302087867 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.301862361 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301237164 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.297603169 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.312413689 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329190519 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.303895713 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.302476715 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302554373 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.300513591 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302077119 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.303650579 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300981113 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.303294024 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.307108014 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307290477 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.301624479 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.300800096 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.304033664 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.3113037 seconds)
  done (took 767.873919203 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29873939 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300788788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298822974 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298296771 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302431057 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300223574 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297449087 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301514138 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298628704 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299110533 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300300725 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301708343 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300302609 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301584248 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300114665 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.301640497 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301125491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301627876 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303057022 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302646911 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303047307 seconds)
  done (took 28.529721921 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.303712817 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.303365148 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303806487 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305335515 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302286206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.303357449 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.301512528 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304685182 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304472546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301813529 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305472105 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305353572 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.30349798 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.301786334 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303258518 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305597206 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.305193295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304104191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.304069593 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304578246 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305698413 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302772464 seconds)
  done (took 29.903686393 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.305527618 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.305247378 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.305911392 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.304356193 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.307312391 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.302915805 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.307081224 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.305243891 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.30568857 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.305632988 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.305927 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.307602783 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.315406156 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.314904268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.30864116 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.307863873 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.451189457 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.306690467 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.305929617 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.305558086 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.30573296 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.312822238 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.325575387 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.305197767 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.30540725 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.306767893 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.307023157 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.305690203 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.307446193 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.307837057 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.310229417 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.305813329 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.309727212 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311346151 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.308491073 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.308868882 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.312036247 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.309317639 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.303950301 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.309064226 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.319274746 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.333532914 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.308913023 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.314744669 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.329979802 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.309848853 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.312036781 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.318718285 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.306843505 seconds)
  done (took 65.538376917 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.308808249 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.310369056 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.307058305 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.309145103 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.310605952 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.311661148 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.311490156 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.311127385 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.308177423 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.306564286 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.309011129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.307577993 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.308437804 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.31216416 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.312080263 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.306934859 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309516358 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.307756601 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.309597091 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306871177 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.306827669 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.311864366 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.313111804 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.309511676 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311515249 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.310063984 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310086143 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.310704866 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.311698347 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.308113734 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.311132868 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311384537 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311043021 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.30973669 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.309298092 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.312358164 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.31383127 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.311107516 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.311009084 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.309036672 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.312574974 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.312007722 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.31136481 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.312786929 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311605135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.310074118 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310423663 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.311445463 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.310822316 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.313111005 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.314287456 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.309549861 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313015899 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.311745497 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313759927 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.313445851 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.310008291 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.310653215 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.311864555 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.312029599 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.310490259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312998017 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.310169155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.3137548 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.313495866 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.309058614 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.312149054 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313467535 seconds)
  done (took 90.355011176 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311815741 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.311365353 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313401852 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311652294 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3128769 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.311614643 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31309706 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.311494257 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.311987562 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.312448944 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31278912 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.314797841 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.313894491 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.312534384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.313900353 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.313485572 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313038789 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31290036 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311180869 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312446163 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.313968978 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.312609911 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312759264 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313413451 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312561225 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.312261888 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312648025 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.313143802 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313598078 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313625457 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314703802 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.313601258 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.313215791 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.311372273 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.314457838 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.3136513 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313000314 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31441841 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.315945036 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314152929 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.31490931 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313368144 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317035332 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.31431239 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314185642 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316148558 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314723436 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31675526 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.314612434 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315157928 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.313432816 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315839962 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316294897 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316456178 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.315153784 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.317476895 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316116892 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314354592 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314703968 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.315197405 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31490444 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.314701975 seconds)
  done (took 82.686324644 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315693507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318098331 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.315151632 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.313872919 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317228151 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313903548 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315939376 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.316610467 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314798725 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.317198386 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316792102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314346326 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3150011 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31933006 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316314436 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314158025 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315859746 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316285855 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317442065 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.316783333 seconds)
  done (took 27.551171082 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.314317249 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319483326 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.318005428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.318823246 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.32036833 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316313714 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.321416889 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320395015 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314056436 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317901848 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319295933 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.317327084 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315538861 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316205175 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.317918845 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.316832576 seconds)
  done (took 22.316041109 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.316609992 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.318859682 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.317892273 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.317575239 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.316618915 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.316552477 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.32048925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.319219966 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.318176267 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.320678627 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.321527941 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.320650471 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.320509182 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.318763678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.316396057 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.322081111 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.319090288 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.320649413 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.321826279 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.321941941 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.319516464 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.320069098 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.322829348 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.323319273 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.319319732 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.319779704 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.319346862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.318668109 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.317676741 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.322626146 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.321464018 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.320837355 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.320359078 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.319339676 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.323103813 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.318837803 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.3240802 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.323132327 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.321801196 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.323831206 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.322486085 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.321192703 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.322131646 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.323363462 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.319781697 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.321421367 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.319477283 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.319433615 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.318903619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.321023643 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.322983206 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.324034119 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.323200088 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.324521221 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.322438609 seconds)
  done (took 73.866347594 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321807574 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323362413 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32056279 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32275267 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.321683099 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.318808391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.321853398 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.321928984 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321432845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.323608228 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321903928 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324787641 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322341089 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.324844282 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323154883 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326560305 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.3224769 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323179211 seconds)
  done (took 25.044044033 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322236374 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.324253965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.328837521 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.3231635 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.321989655 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326274722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322770485 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.324531598 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325085134 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325242079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327170178 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.326823366 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325098669 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.327812569 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324356335 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324099913 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.326525003 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.325812862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.323313151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323077721 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327214683 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324206941 seconds)
  done (took 30.387095831 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.323187358 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.32442561 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.324472126 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.341560059 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.345626211 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.347225562 seconds)
  done (took 9.243755464 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331289064 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323604791 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.321179295 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324456932 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325537817 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322801608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320881057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321464833 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326342182 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322353837 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323998173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324646103 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325618047 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324271751 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326488842 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326154112 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322190066 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322784179 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324138372 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324994161 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321326124 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325943839 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323100494 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325297907 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326007941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323049956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326976249 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325757906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323052182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326637728 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327197366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325220836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326913354 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325634123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331311186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327993924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324770682 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329500982 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329941933 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326303727 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329219926 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328017033 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329582574 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326134413 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328209382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326451319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325543326 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326219462 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326927823 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328334869 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328825957 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325116726 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32987652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330844658 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330227862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330091991 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328038828 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326880445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329854837 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328939213 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32774097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327666705 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326885581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326431935 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329980947 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325098823 seconds)
  done (took 88.800660887 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32528187 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326277204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325933617 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327977508 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326350852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326182308 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327773212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329204551 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327057582 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327387384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329547605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326577483 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32659095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32862359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326724063 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326973635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327066115 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32727287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3275887 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329381517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327515759 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326312178 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327498162 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328260616 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328559154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329535143 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329364681 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330048666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328374555 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329446097 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329373356 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328333223 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328875349 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328023208 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328983948 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327359573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328851389 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328880263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327901793 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332693399 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327790898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3351396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329632454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329331321 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331222111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32969413 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328213683 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329374555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328668931 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329855434 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330532563 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328882802 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330721078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32945774 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328004133 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330334842 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328555095 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330217705 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330826124 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335354564 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330657072 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330788827 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333532715 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329523728 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329866729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331506954 seconds)
  done (took 88.951791928 seconds)
done (took 1791.546596592 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.335140991 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.433571815 seconds)
  done (took 14.013342176 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.498704425 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.448291723 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.331847207 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.36665347 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.32920573 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.335076771 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.32527048 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.329171186 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.332345165 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.332295762 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.331262657 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.522135774 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.351319678 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.330112352 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.333863697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.428524369 seconds)
  done (took 43.179160241 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.363760574 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.34054133 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.461085278 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.358497277 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.363754036 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.533780701 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.39489524 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.34149786 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.526122977 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377983876 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.021357598 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.361786773 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.343784754 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.532375628 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.355177132 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.532419585 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.602156389 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.022334781 seconds)
  done (took 31.081038058 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.828936627 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.357995777 seconds)
  done (took 9.434613698 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.365264862 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.386454263 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.342049863 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.359951051 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.34501162 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.357239228 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.379066055 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.369818354 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.326274903 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.327809436 seconds)
  done (took 64.812005533 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.357034196 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.340090248 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.342260881 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.339563795 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.334260539 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.329524989 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.336853025 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.349909406 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.352645965 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.471943486 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.339524113 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.348226015 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.362424113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.342526501 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.338839179 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.376581039 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.487369084 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.340538476 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.338066649 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.347433247 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.342946434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.465913454 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.380812543 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.34196513 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.477927313 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.359068893 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.340221315 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.347867125 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.469218308 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.342138842 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.340349301 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.342253832 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.344299996 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.977604877 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.862691517 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.362807172 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364572642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.347190994 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.33732402 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.523085278 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.34227138 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.34840387 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.332716276 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.876224564 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.484873429 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.462382461 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.627392511 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.356953151 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.342707904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.407318907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.338319824 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.341720104 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376485187 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.125973001 seconds)
  done (took 112.859607988 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.375308527 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.725262974 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505414911 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.35836264 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997577877 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.074386775 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.353943186 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.656182493 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.41612346 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332741472 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.624500309 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.868029042 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.355144131 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.356310941 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.029257311 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.395455841 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.335751983 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.103791477 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.349741968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.332219563 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858950115 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338648758 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.364139593 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.488040254 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.372124247 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818294759 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.910576316 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.639440792 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.353483516 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.331796128 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827305339 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.35025301 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.349462281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333910537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.616247622 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725196153 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.713861205 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.354956217 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363398328 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.33604742 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.354880951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814181073 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723948712 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.353434201 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.333170522 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833838434 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.353441313 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.340501 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.33860804 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543290535 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.952286677 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.336881578 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.847004072 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.334340503 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.728202094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.366189048 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.402796229 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848296414 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.352616335 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.325600105 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388512213 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.337145926 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334439849 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341299871 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.338029425 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.707720449 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.468218498 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.336052914 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711554229 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840013874 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.354214394 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908952575 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.268818955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.351697899 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.435149161 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.345046171 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.912746613 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855172491 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.376153027 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334463791 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697916675 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.355778654 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.642842136 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.357868634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352908601 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865243833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.344455936 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.379004145 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.337290978 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.368748832 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.955664552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.342196854 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.639468515 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.360016697 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.337265599 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.340227893 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.360725909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335531108 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338962747 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.341651424 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895310944 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.354951668 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.333214972 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.359774411 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338908135 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.358901199 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.347077967 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.339578095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561608286 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.840213038 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.366747944 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343414672 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.337091198 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.355317109 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.50464863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.343301124 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.674258671 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.360499651 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336086095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.343463464 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.042897455 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.379664607 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339494601 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.357904917 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247808868 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.547985177 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.362898668 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.339301604 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342749143 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.359808284 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.686035566 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.357553066 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.367025078 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.343791941 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071822759 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.396944505 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.342705638 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.602801403 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.343875107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.356650303 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341580263 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340527778 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65649244 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.628814068 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.394471765 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.341048328 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.359033598 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063763177 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.397892839 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488927739 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360993699 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382073291 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545226426 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770168227 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.342270293 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.959110271 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.344535601 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556782672 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.342683489 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.648945837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867694215 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.362171914 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34917456 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.072617075 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.064128048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.043289362 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.348238842 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.640375346 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.347790358 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.829371379 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.342704597 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.343072966 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.78528771 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.346540074 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.342169783 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.344850674 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.342593483 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.473462562 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517967437 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.534703916 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34840269 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821168489 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.37294732 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34195663 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.345345269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.342038576 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.688722003 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.428045862 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.349379824 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351039708 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.345908569 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.349754442 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846508415 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.307467734 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.3489395 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499936916 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006851471 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.365424899 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.347317242 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.944385924 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.620887142 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88420102 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.429278804 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.67987988 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.367754159 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.385301893 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.947911998 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.386138509 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844483998 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.363582198 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.345794558 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.970489196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.366888474 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698496605 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.345127061 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.344906527 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926124106 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.365081508 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.344845486 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.756490285 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.371767842 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594158205 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.348826297 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.395520485 seconds)
  done (took 1114.016698487 seconds)
done (took 1390.642466551 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.349208177 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.34725747 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.333949687 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345150521 seconds)
  done (took 26.641637886 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.358062813 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.354351043 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.355652309 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.353468652 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.360004213 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355864326 seconds)
  done (took 9.407445063 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.57188799 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.348138331 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.349628698 seconds)
  done (took 19.538542868 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.575993745 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.734426961 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.740052399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.770959278 seconds)
  done (took 11.092006914 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.354680073 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.356615551 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.357133552 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.35883391 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.363118391 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.362717115 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.360127576 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.36098156 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.362814676 seconds)
  done (took 13.505730831 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.619367864 seconds)
done (took 87.070944522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.530126397 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.268052834 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.674796914 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.617072579 seconds)
    (5/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.080950929 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.779730419 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.411840926 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.378624586 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.33599859 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.894163411 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.621639582 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.080337634 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.32847603 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.366809684 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.477320352 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.369594327 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.211369252 seconds)
    (18/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.186606233 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.020431402 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.639595816 seconds)
    (21/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.540371615 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.427676371 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.220365868 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.405586697 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.294132398 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.351577183 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453136594 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.418461958 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.3565051 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.505139145 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378102854 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.788327331 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.163234166 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.177791796 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.329381162 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.459268648 seconds)
    (37/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.026972444 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.34038668 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.367706701 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.33525693 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.6538712 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.335236855 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.41325075 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.334894363 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.292015607 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.753255772 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.861004917 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.371850471 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.340967534 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405760959 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.450693312 seconds)
    (52/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.765247046 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.331567117 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.370909813 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.463823265 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.363186371 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.365459448 seconds)
    (58/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.483164068 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.349680788 seconds)
    (60/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.908943463 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.427536985 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.43307165 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.655667028 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.065094462 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.153004651 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.377216238 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.460350866 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.177546137 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.396893087 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.25904444 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.334054337 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.354376128 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.377029648 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.611914325 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.546142482 seconds)
    (76/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.503768866 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.402393456 seconds)
    (78/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.241008843 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.651402289 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.004799816 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.370476302 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.381676022 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.438774137 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.828954854 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.740146145 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.34044818 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.03114553 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.367471712 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.384565927 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.369890238 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.038540566 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.352494353 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.117026479 seconds)
    (94/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.222779731 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.942913348 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.465279113 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.787344689 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.59052711 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.359318496 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.334061978 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.354496063 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.354641061 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.058400169 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.395122281 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.853279475 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.231207474 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.124457558 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.381754412 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.335736467 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.381442046 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.340356625 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.900170288 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.338244534 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.521938182 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.799354889 seconds)
    (116/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.770202108 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.432424254 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.384487712 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.426462932 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.885999757 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.402008809 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442276632 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.378319865 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.424648647 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.621139921 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.456035729 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.214639144 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.187174498 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.381250044 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.369408131 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.616469061 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.361235432 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.338105104 seconds)
    (134/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.391371173 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.96712933 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.355954449 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.960866897 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.36224983 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458713047 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.916409286 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.369585763 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.580622985 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.029174818 seconds)
    (144/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.4593639 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.361891908 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.415603017 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.663464694 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.216801969 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.384381797 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.478882778 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.408623804 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.804087202 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.522980475 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.361302436 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.812365269 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.359494538 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.363868027 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.383278798 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.974484822 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.465848553 seconds)
    (161/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.106576735 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.363004953 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.396993389 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.374322673 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.801053381 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.061938911 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.452250815 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.837549888 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.339861235 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.076806196 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.341569973 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.05526535 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.346086136 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.464914139 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.237509825 seconds)
    (176/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.393749913 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.187713875 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.386610094 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.348200838 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.41017367 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.914287506 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.637996982 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.930122185 seconds)
    (184/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.246583589 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.898055513 seconds)
    (186/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.389022828 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.454193616 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.950956409 seconds)
    (189/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.460892666 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.348275224 seconds)
    (191/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.806217143 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.341474013 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.424616333 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.391594593 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.256799032 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.752120634 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.47417711 seconds)
    (198/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.451388125 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.393889904 seconds)
    (200/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.832164036 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.467839556 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.454061405 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.122486294 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.009987791 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.601368894 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.428731272 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.161438611 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.146344084 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.385680683 seconds)
    (210/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.350900991 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.098921066 seconds)
    (212/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.374411219 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.388780899 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.453426147 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.366147674 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.928489821 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.406160455 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.370672057 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.3633375 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 4.387489322 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.352290001 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.380349919 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.347467363 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.847235426 seconds)
    (225/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.392995347 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.368624934 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.425924679 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.560238576 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.41755402 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.114770588 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.369049452 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.34760583 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.364765691 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.972773682 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.181343137 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.370778418 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.366704588 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.352848813 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.367564704 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.360273003 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.387495484 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.461537837 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.775480487 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.314053525 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.506667661 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.368060321 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.411397146 seconds)
    (248/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.672610824 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.372581085 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.746256795 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.616592927 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.6796825 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.448133 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.35239547 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.333546478 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.744279179 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.364690611 seconds)
    (258/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.467941779 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.599289862 seconds)
    (260/309) benchmarking ("sort", BigInt, false)...
    done (took 6.382975207 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.3476069 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.395761081 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.396894291 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.409933774 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.075955898 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.352825406 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.773383687 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.370458981 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.353398395 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.627922213 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.367734105 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.604305319 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.648331702 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.346879031 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.438305606 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.348697549 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.672641111 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.788931005 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.353416867 seconds)
    (280/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.466992921 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.387555432 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.371365916 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.331387678 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.479185684 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.368808974 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.452687476 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.454797613 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.491850265 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.365208591 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.374853249 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.471166205 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.1826233 seconds)
    (293/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.392867979 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 5.740008327 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.106947509 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.486098658 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.389471452 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.410101168 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.814770156 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.432931257 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.779747848 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.90617651 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.396062722 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.396338464 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.979483363 seconds)
    (306/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.389676201 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.370585645 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 5.413008034 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.885264854 seconds)
  done (took 1056.741474529 seconds)
done (took 1058.008592494 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.411696674 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403977466 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.386878896 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.410077896 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.495830055 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.409280771 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.39685252 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.388951519 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.435278472 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.438913992 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.38397101 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.404986723 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.384309831 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.38279269 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.384237851 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39867571 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.523901588 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.382481321 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.399807047 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396380201 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.400161075 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.382465111 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.435533564 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.406770972 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.389707206 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.388229362 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.385637338 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.406272934 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.497024878 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.387889473 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.389849981 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.396184899 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.52105318 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.38390743 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.381185753 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.406429005 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.396418651 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.395952049 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.389962687 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.415315975 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.968634626 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.39996784 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.385251218 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.38701396 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.389182229 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.391248338 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.385903305 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.393351224 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400803276 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399244381 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.954115704 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.413901717 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.387253536 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.38787754 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.396014854 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.384839817 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.390732782 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404339937 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.405121136 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403102585 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.512304984 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.390339205 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.389772964 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.401117092 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.395103267 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.993321068 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.399745884 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.392904348 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.034649576 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.41205877 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.089977203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.414096602 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.389468861 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.401121412 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.418520048 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.520169537 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.380654034 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.391044487 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.394126117 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.387168653 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.40089723 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400222471 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.395235637 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.389636705 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403472491 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.411271829 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.398169106 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.388612544 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.399846343 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.405987593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.39537542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.399556606 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.392353347 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.386116952 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.399234004 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.396771509 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.392478177 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.394109592 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.398870814 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.401641435 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.036328171 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425864891 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.388412747 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.388236328 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.390939566 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.402685571 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.03697582 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.409697087 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.41440288 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.438590927 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.39247916 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.518830492 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.390333204 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405518703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.401715814 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.396848992 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.387238944 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.516167828 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.971371801 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.421691994 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.393459547 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.389499172 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407461283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.395435341 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.389032222 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.537700279 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.389743284 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405311667 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.510555125 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.403580455 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.421964409 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.389425259 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.395417837 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.413287661 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40829552 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.422420541 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.394875439 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408422822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.408842958 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.387754277 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.403857502 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.403552546 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.393464214 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.399667225 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.387741861 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.415893832 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405234514 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405556318 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.415094226 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.512675632 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.390706301 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.56886292 seconds)
done (took 236.2621076 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.450919365 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.388047107 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.472963999 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.388889103 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.492089428 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.491578738 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.386883337 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.387265073 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.38764332 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.767832878 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.387969067 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.387195021 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.388038141 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.387579236 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46920721 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.390460024 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.386416175 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.731340374 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.390766961 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.460434703 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.386898923 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.391978528 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.390502074 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.774567163 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.385677727 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.383610281 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.46090779 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.389928807 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.734391324 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.383937964 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.388625177 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.73509193 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.481050657 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.410949762 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.402083423 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.400661054 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.495158339 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.411974069 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.472284487 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.474459463 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.475357693 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.430206631 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.388077337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.386946371 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.39458634 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.393522386 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.39190693 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.419064789 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.389005076 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.390655611 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.735129647 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.401199159 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.392848373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.390528928 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.390635788 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.418907709 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.390233836 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.391819338 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.481070041 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392553457 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.455468698 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.773811033 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.770183815 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.394032276 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.385173786 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.392036452 seconds)
  done (took 152.260934928 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.45707225 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.465826031 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.514036087 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.412977049 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.442283819 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.520170057 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.414169465 seconds)
  done (took 11.527179006 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.402118012 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394772777 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.442947826 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44202869 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.394850646 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.538719715 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394882845 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.406341585 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.40173977 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.447422215 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.395386101 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394159285 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.401272872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.394869349 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442489741 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.405159031 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.508639553 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.398671101 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397460219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.550602168 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395042016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.407363381 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.447936411 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.406124432 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.39910913 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.399317474 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.965715976 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396090602 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391624247 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.397267079 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39571172 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436142508 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.397113326 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.394086875 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395794921 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.510720057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.396597658 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.39445471 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.397414753 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.397845058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.400425278 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.398642401 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.397617494 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.394312274 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.397243585 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.421229555 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.399174788 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.399987764 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.401212704 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399383752 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.450155318 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398713339 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.398271914 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.396163478 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.455828244 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407381399 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399990147 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.395435362 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400064796 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396499676 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.55720851 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.448400864 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.397755884 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.447635421 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398263136 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.398221288 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.398109858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.39818588 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45169002 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.399169579 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.445886688 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.394179038 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.550531322 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.420330055 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.400556848 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.401540173 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.402665455 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397304607 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.392699999 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.403675006 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.395636303 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.399773234 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.405849678 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397175703 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397537728 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501638965 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507467333 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.397232789 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.410916395 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.404741161 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.396993127 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.451868696 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.40070595 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.398741393 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450975185 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.516391234 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.450472042 seconds)
  done (took 159.477309464 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.40302693 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.40835513 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.400343389 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.415856256 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.399953333 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.397321122 seconds)
  done (took 9.731172511 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.401938719 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.404224205 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.400662146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.400251017 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.399958285 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.400843039 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.399492788 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401459146 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.404852872 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.401080879 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.40093173 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.400799091 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.400573287 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.400098085 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.400116126 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.39996829 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.401642178 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400193242 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.403810047 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402325933 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.496346092 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.402634861 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400580019 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.402256385 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.407006443 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.402553433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.410520947 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.403193296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.401091891 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.411902718 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422970578 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.4035587 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.404258551 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.41134867 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.407470288 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.403676816 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.411185994 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.404884741 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399082659 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.406849071 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.40492618 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.402888054 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.401932596 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.404922099 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.405161875 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.410010521 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.409065279 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.409383566 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.404255277 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.403381653 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.403328612 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.403410951 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.403966194 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.404348444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.405679056 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429720268 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.410740846 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.404002843 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.403740792 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.406330948 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.405536481 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.408160916 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.408834284 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.411663525 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.412989595 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.408769189 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.408137951 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.412849058 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404598793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.405357595 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.407086921 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.404297164 seconds)
  done (took 103.577393025 seconds)
done (took 437.870638508 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.580480674 seconds)
  done (took 7.892467507 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.608884864 seconds)
  done (took 7.924205334 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.859858492 seconds)
  done (took 25.178564418 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.511665805 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.514413158 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.406143629 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.406540362 seconds)
  done (took 27.153795895 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.998888798 seconds)
  done (took 8.311999753 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.873764819 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.395156398 seconds)
  done (took 14.582874801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.658727481 seconds)
  done (took 7.970850105 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.89023946 seconds)
  done (took 8.205742597 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.405786527 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.424488857 seconds)
  done (took 14.417619742 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.382820026 seconds)
  done (took 7.698818132 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.65300577 seconds)
  done (took 8.968077273 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.404927908 seconds)
  done (took 7.71806643 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.435323272 seconds)
  done (took 7.746951064 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.396451141 seconds)
  done (took 10.711744459 seconds)
done (took 165.793024717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.400921034 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.398627284 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.398622213 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.397450264 seconds)
  done (took 26.907550205 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.44117427 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.44479274 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.444879868 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.453967979 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.446988524 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.443393779 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.436113055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.436801132 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.455153702 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.445059328 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.445072866 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.445645181 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.446517085 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.434932094 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.445352678 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.444859381 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.454704245 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.445314301 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.437135175 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.447620604 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.412521472 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.456957365 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.449626205 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.414600985 seconds)
  done (took 35.942898061 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.940174161 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.486603568 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.565565108 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.4661039 seconds)
  done (took 7.773408906 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.462303227 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.465236669 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.481926979 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.51865507 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.549697663 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.476782658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.443558578 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.434911116 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.420598208 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.465260275 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.540620084 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.480484144 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.56030763 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.412103798 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.636199468 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.412572133 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.41210621 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.464471192 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.515781237 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.532467307 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.414788032 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.464576785 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.471282708 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.481426488 seconds)
  done (took 36.833063992 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412722029 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.423751237 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.413675064 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.412435627 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.421061861 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.411382956 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.414085125 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.414076578 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.413641005 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.419341385 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.413346908 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.427600903 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.413788391 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.413951102 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.421256084 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.41677593 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.421656949 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.413915341 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.413513732 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.41758062 seconds)
  done (took 29.645704214 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.405570863 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.259468691 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.759984199 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.662947394 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.407314137 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.40705166 seconds)
  done (took 28.219785831 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.492041258 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.665218427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.415664391 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.822631922 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.9103987 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.428040822 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.415816698 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.693190432 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.05810462 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.047458569 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.475176643 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.493193584 seconds)
  done (took 21.23769801 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.415202488 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.410389544 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.414823959 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.426606454 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.479362848 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.437342867 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.423489973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.410922188 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.479543994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.500857421 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.437047987 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.478690941 seconds)
  done (took 38.635621507 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495894349 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458882338 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.499761486 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422557697 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135277725 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618370897 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421923602 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.877705336 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.414348267 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682918603 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414649841 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501089673 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.671155566 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413037178 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414834595 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.516884868 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656742284 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929342679 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409095174 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.785269776 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438315361 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413331699 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918299692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.447493544 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62569313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.558623556 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.67323772 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.192649076 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746282584 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425841543 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423526046 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4106622 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687320461 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141436866 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527701846 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422607933 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417287864 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.957273401 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.40907682 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.81184133 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41497763 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412824156 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422652422 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412985785 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347434865 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419728254 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885313933 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.417366862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.124021977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413092232 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424822814 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508070154 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.416922437 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.986290679 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41962098 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439570884 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.411266975 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439202498 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003642393 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367172346 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427988363 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.352074691 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417340033 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908809041 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110325129 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.530817273 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.416903554 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416939705 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348042257 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.854624272 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432513821 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55345297 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.433512308 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076659946 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230992847 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.439740493 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348189412 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992335017 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429253572 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.351285184 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644247545 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191017741 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354190561 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.361584192 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348582374 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185507013 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419425912 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.86010459 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430992878 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905824459 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.427846126 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43283109 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439660805 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.641253613 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.29379317 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415631281 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.413466564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533921396 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434967109 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887125221 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352151873 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.416843059 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676709088 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.628115972 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432868531 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.532278746 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666900301 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416187506 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.432725331 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434040052 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.428799114 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.067659513 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448256369 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378298339 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43694843 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.192458301 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203960558 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423108363 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.52154586 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422653411 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693760407 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.256369269 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300310542 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48663591 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425704944 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418225427 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911872299 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014999326 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.301525913 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.415598404 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423552601 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.431306878 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.418384359 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38104122 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.427515806 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426636392 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.200971426 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645659816 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43148132 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694986719 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354720139 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55849126 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43241343 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.640842058 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.770014113 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.432747795 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682314842 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428284495 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434594005 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433200662 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439049633 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521639436 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442101447 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.420372567 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681108122 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.424648093 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.424388119 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921485822 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.197025239 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420534612 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.424644867 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423355982 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072568382 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415706119 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420924422 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316305123 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.437786868 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490129445 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430213045 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.432782928 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.502044158 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440725024 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.427311587 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.43165262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643346766 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432699316 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.917477337 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503496939 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.647125296 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076476175 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45554813 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.354950197 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.135181157 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.116439916 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42395732 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614155133 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.4225894 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434745154 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433806747 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440048512 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073536611 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44255234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845736707 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.428180237 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433075926 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.42688721 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423385142 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.490956898 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425135384 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443061026 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.43626615 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566467198 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.435398357 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.358092629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.941270436 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429725483 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42417892 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.203528282 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458401901 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83485978 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937139657 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684379346 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433553855 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436902986 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.033276074 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.461493026 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.427692118 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43183763 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441091209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.437521068 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427756128 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.437587749 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.918204432 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.800536432 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989674063 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220775896 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056155136 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516879557 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.432289175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.326569482 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898589239 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358931519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.08506527 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641630883 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922353479 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383105577 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652696052 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.817746011 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321440809 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439791579 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656606409 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495936376 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.44361635 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439150248 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637187454 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461343895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.42961667 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359381341 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.941515275 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68946341 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423684458 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509522842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89577027 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431481555 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.207879134 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.480730343 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.825059359 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636247063 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975205314 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.821836994 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438396741 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429964341 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937249528 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427809585 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.958355197 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115493694 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444490032 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.657504211 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369452055 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.440743941 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.439631388 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.425119233 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.019197421 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.431143491 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.689509611 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441188564 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367260478 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434928801 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026906902 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.297992066 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.437817053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432879522 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223249007 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427865253 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764842327 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.432401912 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.49623029 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454709253 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.367132054 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365457362 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.12133446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442847092 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402797606 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963991821 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.450001817 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426343692 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443438693 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28281335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.690454814 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.443731929 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091834157 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67206921 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448145079 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450951423 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.535163387 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440036132 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.414555138 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.324657073 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667405972 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438749763 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655774837 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.560958113 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.333405648 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432864829 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641054037 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.341882679 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438945262 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723580548 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.161533015 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.451297544 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229866929 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470592501 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433714884 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451518295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448007579 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448223726 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521696104 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44248689 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.444047583 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.444941989 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629106963 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439436795 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439014265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.449929692 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529447746 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444528681 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.502893958 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.209591237 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094153311 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247370394 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103135644 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460475187 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433536203 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43582383 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367780773 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582662886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.962443032 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711682221 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554488619 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.433401881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453411997 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449005072 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437768586 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650102372 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709312619 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410407771 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452486559 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223850545 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.315456035 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445912537 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.647323883 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974617542 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031471714 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553391293 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433756201 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.906471076 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70944946 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.526904921 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435696701 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033382208 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.43728289 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.852181183 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.456779982 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435282532 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585317906 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445023674 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17445462 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.466291856 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.596122658 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.210376025 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985519956 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.69666089 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.999145637 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.445450201 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095060158 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251744774 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703845506 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507648803 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446801468 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.547132739 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582046782 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.441407726 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.325308925 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436757822 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287388253 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.147475884 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.44551786 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093146977 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716969347 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.435105951 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.441614804 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455509665 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.447170819 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663581882 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197771426 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659674212 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448928729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446694029 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.010516607 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10859288 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469862693 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375128849 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.437321739 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725486725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693950204 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460027674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.892460299 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.147784084 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028507778 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.408786814 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460745258 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452824639 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240220284 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109578117 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.493091025 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977170187 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.097094187 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458695934 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717284338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.445837737 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439339008 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719222562 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.444476464 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.456676367 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452831515 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.09768967 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.322845468 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.456524809 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.937233719 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.378031682 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.668715397 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45948547 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373170316 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437984272 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.64359976 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44306674 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56078794 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450232411 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.441965798 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436351243 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.2001235 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72356101 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.443038775 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.420497934 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.440311846 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446359878 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471324639 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725266085 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442655062 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.117437167 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.803909611 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.701575094 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458686714 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.425392835 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.444289956 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4424146 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169921144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458319641 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455493851 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043975851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.440850934 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.456485905 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44687027 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.659147539 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654840774 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.455287718 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457931512 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460804191 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460565228 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.345184967 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216412506 seconds)
  done (took 1699.743040239 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473793679 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.457510535 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.447771992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.449800804 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496402708 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506892756 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.541021025 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506447629 seconds)
  done (took 53.230491112 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.457269813 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.600652589 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.477650616 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.461605899 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.447815049 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.444309157 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.967316688 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.461661078 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.448398022 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.453649764 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.459647092 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.439866515 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.163809364 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.4535637 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.458884697 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.44043868 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.447697815 seconds)
  done (took 67.441440672 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.462080375 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.050149024 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.489723895 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.449416838 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.074747728 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.467453193 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.930265249 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.458570379 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.438758947 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.533206578 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.100871134 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.450947238 seconds)
  done (took 82.259784577 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.452544922 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.45242193 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.453287107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.454462725 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.453535933 seconds)
  done (took 8.618869206 seconds)
done (took 2137.804278857 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.691256105 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.23865255 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.192965777 seconds)
  done (took 5.785014903 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.594361435 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.641746619 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.80733504 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.774031139 seconds)
  done (took 8.172356916 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.723711551 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.821093674 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.639833405 seconds)
  done (took 6.537616102 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.06039764 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.460920182 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.449719041 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.447492012 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.444733719 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.448994508 seconds)
  done (took 20.697335012 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.452661506 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.455862722 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.451875536 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.453711199 seconds)
  done (took 7.170659132 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.427600066 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.148752349 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.425385056 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.447130254 seconds)
  done (took 18.803073106 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.198341573 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.210889839 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.196399023 seconds)
  done (took 7.96217802 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.460765502 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.290429357 seconds)
  done (took 10.106074309 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.748803064 seconds)
  done (took 3.103647881 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.583193736 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.783098356 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.608660332 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.486406452 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.630088437 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.965481597 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.383769214 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.893542922 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.467324087 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.949739596 seconds)
  done (took 31.107898452 seconds)
done (took 138.459819194 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.726966354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.849671095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.653913265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.731021616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.793716333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.655993883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.739782147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.69986059 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.202456166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.190853102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.739062603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.677689319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.682759821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85494851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.683286038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.843606092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.682420455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.768778164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.388680563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.458923794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.736939842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.332869864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.570610233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.347483477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.679914962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.606994044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.913492133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.846084275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.470173099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.925590955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.606923114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.457277445 seconds)
  done (took 201.874917022 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.454705882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.450864834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.472465929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.447512651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.445596408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.470003168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.449229592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.464068185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.453768708 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447204842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.46430513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447793212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.447472558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447743538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.449068605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.455597635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.463365505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.458313089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.457621301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.447334194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.449116283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.465459119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.478001428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.453894664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.449016558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44831225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.465967176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.466986193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.448317551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.465012781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449855682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.466451926 seconds)
  done (took 207.957573703 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453413853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.468511901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.449496752 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449472317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.465951772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.450092294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.468670589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.454086847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.464761222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.46006934 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.449731161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.468822561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.469631655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.450388422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.452013403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448889665 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.478949242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.456006974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.449329838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.454163571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.45139086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449505777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.44959339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.457460007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.458944937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.462933227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.463941937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.450554163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.468099739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.449606872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.467465913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.449971186 seconds)
  done (took 208.003259702 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.658591901 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.462273553 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.462984081 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.423054173 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.464201296 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.461162479 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.463666511 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.654687623 seconds)
  done (took 15.412218155 seconds)
done (took 634.605030105 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.89145476 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.587764717 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.673176819 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.479892739 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.337781534 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.497147694 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.481658593 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.67131531 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.435281881 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.679803322 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.794648133 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.496118298 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.971386603 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.476901826 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.758677789 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.588050596 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.396278692 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.552151993 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.832089819 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.112558703 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.760462119 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.019995456 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.689057834 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.417462325 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.959913927 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.01524597 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.29854206 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.39131848 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.497677455 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.833133916 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.265776827 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.6042118 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.55916354 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.551306942 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.608790379 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585458225 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.583939595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.553867831 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.695046319 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.781457588 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.096170912 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.238023223 seconds)
  done (took 99.081778433 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.448081936 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.446973712 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.450621645 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.447585679 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.449735796 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.44801491 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.450438587 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.447232882 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.447720771 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.446915831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.450477459 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.449581017 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.450502477 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.449085261 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.448457532 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.449333596 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.450552171 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.450652594 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.4503015 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.447565115 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.451922804 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.448415754 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.448733555 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.44928877 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.449900631 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.450173537 seconds)
  done (took 39.042517303 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.470687258 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.741438833 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.909061545 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.469667673 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.466831707 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.471318322 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.556151288 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.464672224 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.474039187 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.469429086 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.652387714 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.466932402 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.506182655 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.95698058 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.470364643 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.468923013 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.469300751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.468851515 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.750563701 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473908342 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.582742645 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.464689388 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.559375315 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.477994418 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.493439663 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.469444778 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.474895518 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.99791975 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.486401601 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.647937664 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.3816685 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.556224893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.942631593 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.953302048 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.386588861 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.471533616 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.469553028 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.653460242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.46803787 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.469525501 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.558570799 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.466435747 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.942303032 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.11732877 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.485632939 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.470515333 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.019253555 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.670240938 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.756917128 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.48012356 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.97255588 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.474022645 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.473693555 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.471479494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.754158143 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.472240777 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.471826527 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.038348547 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.493137386 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.561341738 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.469766117 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.470934304 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.751140405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.467339961 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.739567693 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.468552196 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.479484677 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.491922441 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.947825621 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.478576099 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.143830336 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.488689688 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.473327834 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.653536276 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.737507391 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.061788088 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.491978453 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.754723402 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958246905 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.576921616 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.472721774 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.98734359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.580642772 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.472504804 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.475423189 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.473486889 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.474926174 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.524441064 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.560706262 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.06812946 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.14397433 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.052498678 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.582836717 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.484074552 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.477701073 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.036437721 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.491270096 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.473945198 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.9228752 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135129168 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.489498228 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.480009352 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.144741157 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.493318262 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.563192154 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.47648813 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.937405691 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.471551829 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.522978834 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.474571764 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.481333523 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.498759583 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565150526 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.477701004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.476493668 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113580492 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.682895953 seconds)
  done (took 193.45094905 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.467007842 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.482138688 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.478923122 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.464532595 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.466640687 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.477218021 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.468128196 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.467708943 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.474955119 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.467482252 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.47130491 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.469636599 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.47149187 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.474864551 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.477816346 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.476190741 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.078700972 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.47159972 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.476475984 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.463851354 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.290004388 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.47402561 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.47749903 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.465364209 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.470558871 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.469297045 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.481353503 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.468930867 seconds)
  done (took 156.017013011 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.47743013 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.118288002 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.49162591 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.628657703 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.496158026 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.477907615 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.629279164 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.541599215 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.492507925 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.47532131 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.47575513 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.827176092 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.475642203 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.068046093 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.696438423 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.65049806 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.065498122 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.491905026 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.476845332 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.475443169 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.63305723 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.48614636 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.824878649 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.123691086 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.493827878 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.126123411 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.458797837 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.479141976 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.477715719 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.145630615 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.492450268 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.834104056 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.564774634 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.544651854 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.143957737 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.084590447 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.082132531 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.648757064 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.482346385 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.478146473 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.476107344 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.463977832 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.16415546 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.498534807 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.478984457 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.151712367 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.501668344 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.481363681 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.48469142 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.479242987 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.548089437 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.562706023 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.862477068 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.16902465 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.590778341 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.489462715 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.635237081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.861587254 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.478442193 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.072673992 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.459320057 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.168823901 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.502091838 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.465545218 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.479866125 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.483083577 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.651757487 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.630119118 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.07654484 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.494847594 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.071796957 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.668229928 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.477182571 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.48026265 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.482696306 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.169377526 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.095163814 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.668258759 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.633301563 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.702438542 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.466359647 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.480513122 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.467135471 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.570358442 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.477002255 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.170331096 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.092867274 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.496878815 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.483330162 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.483393743 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.483680265 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.687409548 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.18686081 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.59055701 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.060769277 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.867434919 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.853042961 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.485063383 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.550429762 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.500231529 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.853874677 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.486828944 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.549659359 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.926984861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.849997434 seconds)
  done (took 177.950467399 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.754060258 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.790032734 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.580400298 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.628679217 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.135721928 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.097670062 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.831424632 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.636381048 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.599567987 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.76742406 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.810088579 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.574030743 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.680431647 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.565463758 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.260480702 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.577595526 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.597337839 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.642888056 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605657997 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.555737874 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.187279471 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.798530177 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.671300205 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.570183514 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.585418268 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.327068017 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.096160579 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.027737266 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.674307743 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.945646302 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.031555987 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.693532529 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.566499118 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.267901107 seconds)
  done (took 71.517097607 seconds)
done (took 738.421076113 seconds)
SAVING RESULT...
DONE!
