cset: moving following pidspec: 22470
cset: moving 1 userspace tasks to /user/child
cset: done
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/parameters.jl:8.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:5.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:89.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:136.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:181.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/groups.jl:5.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/groups.jl:141.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/execution.jl:10.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/serialization.jl:5.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/serialization.jl:16.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	WARNING: importing deprecated binding Compat.UTF8String into BaseBenchmarks.
LOADING SUITE...
loading group "string"...done (took 0.748879863 seconds)
loading group "linalg"...done (took 7.630039383 seconds)
loading group "parallel"...done (took 0.180453067 seconds)
loading group "tuple"...done (took 1.861051797 seconds)
loading group "dates"...done (took 1.259003388 seconds)
loading group "micro"...done (took 0.182125067 seconds)
loading group "io"...done (took 0.361327226 seconds)
loading group "scalar"...done (took 35.774226247 seconds)
loading group "sparse"...done (took 12.584223504 seconds)
loading group "broadcast"...done (took 1.042323968 seconds)
loading group "simd"...done (took 2.28895324 seconds)
loading group "random"...done (took 8.850401522 seconds)
loading group "problem"...done (took 2.256425662 seconds)
loading group "array"...done (took 18.942077907 seconds)
loading group "misc"...done (took 0.867498913 seconds)
loading group "sort"...done (took 3.47139505 seconds)
loading group "nullable"...done (took 5.349678911 seconds)
loading group "shootout"...done (took 0.755001371 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.683328081 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.147919144 seconds)
    (2/2) benchmarking "String"...
    done (took 0.154053855 seconds)
  done (took 0.926288541 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.116559166 seconds)
    (2/2) benchmarking "String"...
    done (took 0.120129784 seconds)
  done (took 0.846986269 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.110788143 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.138756196 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109276821 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10873442 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111247733 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108577072 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108661687 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.12240891 seconds)
  done (took 1.416829853 seconds)
done (took 4.644617021 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.403737812 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.930831968 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.532491043 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.152431621 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.293343143 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.244775689 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.244668057 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.234656672 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117432925 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.106699238 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.183972749 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.451265248 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.349617033 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.84941319 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106159409 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125832641 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.147019306 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.861443646 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.108308214 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142880127 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.431623278 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.167994712 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.132612267 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144984042 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.227120912 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13496039 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173561311 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110320164 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.799556472 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135440099 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.219051087 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.113039026 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168846355 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.181199579 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.207404421 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.129290046 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.847246532 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.218388462 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.156484458 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.118466918 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.781750149 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117678819 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193507377 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.121709481 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.093443267 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194117868 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114028482 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.120050505 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.130465952 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.11098767 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202985254 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.539234499 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.138452699 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.181046579 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.139063381 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.79286717 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.130790724 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.292075908 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.156939724 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.136138867 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.110027521 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107389193 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.198635691 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112964999 seconds)
  done (took 21.261911753 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.170962097 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.157538237 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.108272778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.165368556 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147494294 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.113540304 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.11484312 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.110348919 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12418166 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.168095319 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122466407 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.190236121 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.111237525 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.141483553 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.14836477 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252580663 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118353321 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124912286 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.120967581 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.118962828 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13989699 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.131705729 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113366634 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.117456204 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171534856 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.235884238 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.146355946 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.154234279 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.121816295 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111857493 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.156558072 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160001218 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.12415708 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.124262246 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161891302 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.136779175 seconds)
  done (took 5.773024108 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1943058 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.135532523 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191596014 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178572423 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137584793 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163454536 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.166866892 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272554007 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.192618418 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.461281719 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18670224 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.159542448 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.15064563 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109304032 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.112357338 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.108711269 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.171728014 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165202796 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.183065918 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152705215 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112575044 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.129245464 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.747634531 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109458367 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.107291776 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127824975 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094965132 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177565513 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110224309 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.773750315 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110428267 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091673681 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.161101061 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.235060658 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11557956 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147386996 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109572162 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.124419438 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.113537694 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115773315 seconds)
    (41/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.881071558 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.109787673 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131579285 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156794931 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.152551317 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108996299 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108071023 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.19934096 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.108540475 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104569272 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.921941107 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.209079872 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.168482032 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.110446482 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.258081414 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.131051169 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112626465 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107073428 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.212918561 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111613665 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.113423762 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.106881437 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109458125 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.169426002 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.123587514 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109525701 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.621160366 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.11005958 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.120282568 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11271119 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11258678 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.727281798 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115888706 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113111869 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.13227511 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.125578824 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.110530397 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.106646173 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.108294444 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108761493 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117422759 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129429133 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.107104376 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.106069449 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170730784 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.110471692 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107073626 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128415969 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150189459 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.109559523 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.11102431 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139615425 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108170808 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.12212771 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168280364 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096809132 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115233202 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126415126 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.157433736 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.109115833 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.228064385 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.114016425 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.13232543 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.12144793 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14039788 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110142467 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10767689 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123592932 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.108357022 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.107992235 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175282998 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.108911928 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.108538916 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108533415 seconds)
  done (took 25.286765296 seconds)
done (took 52.929564782 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.362428424 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094806328 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096979394 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095449036 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094768674 seconds)
  done (took 1.412146228 seconds)
done (took 2.069498289 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.490003435 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.838060901 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.172448342 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.217258634 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.247113725 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214309131 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273564148 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.171059006 seconds)
  done (took 4.347640301 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.186150573 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.122657562 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.12494124 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.125077808 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.127695992 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.141243244 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.126912297 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.122034463 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.123857179 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.123629154 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.125612444 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.123724795 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.141854179 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.12268671 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.12509887 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.122492398 seconds)
  done (took 2.775844331 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.157736856 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140031265 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.124146998 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.122508533 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.120136057 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.122766592 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.141374024 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.122651212 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.121394248 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.122298356 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.125891434 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.121800441 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.122983115 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.134103795 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.122581288 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.144182689 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.122075646 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.124520122 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.139640098 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.122498776 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.13984462 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.124401705 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.125746632 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.124329516 seconds)
  done (took 3.798798042 seconds)
done (took 11.58356347 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.141364037 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111277902 seconds)
  done (took 0.908500965 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163731277 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161318512 seconds)
  done (took 0.989490429 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.142711204 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.122121882 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128364327 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123360577 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.121782792 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.122701783 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.141180126 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.121656565 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.122349365 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.123828102 seconds)
  done (took 1.960783649 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.120907293 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11962062 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119095058 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154041592 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122225228 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.122850274 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.138710137 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.119282446 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.121464489 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.117794639 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117087031 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12721149 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.11788921 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.14308192 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.122069014 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118296126 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.120996543 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.118012172 seconds)
  done (took 2.911582297 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.119073431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.121967746 seconds)
  done (took 0.910666129 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.120762622 seconds)
    (2/7) benchmarking "second"...
    done (took 0.118633254 seconds)
    (3/7) benchmarking "month"...
    done (took 0.11760492 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116727984 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.115918249 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.121022616 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.121007992 seconds)
  done (took 1.501548872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.451021978 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.292004837 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.354297684 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11742125 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120418264 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350254749 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.117900152 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117064374 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.12903671 seconds)
  done (took 2.739478278 seconds)
done (took 12.588218466 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.118877371 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.167659214 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.584663771 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158617811 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.122237626 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.174221053 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.216774918 seconds)
done (took 2.21909303 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.307141247 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.159746315 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.157437686 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.166789416 seconds)
  done (took 1.459317256 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.112659279 seconds)
    (2/2) benchmarking "read"...
    done (took 0.122915096 seconds)
  done (took 0.910912336 seconds)
done (took 3.049147169 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117758132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.119025129 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117943252 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.119295754 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.117078759 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116245902 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.117515134 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.133804503 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117517809 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.116331627 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118074312 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.120105882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.120172865 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.119372994 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135881069 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.117432785 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.116838118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116554821 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120075282 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.120366042 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.116341931 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11653975 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.137532568 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118750779 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.119349102 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116650281 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.116501618 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.117040085 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117011056 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.133578474 seconds)
  done (took 4.28119048 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.122186166 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.115237118 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.120923318 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.126490907 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.12006052 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.119660783 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.114703422 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13762704 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.118722828 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.121311355 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.126595765 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.118014602 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.119876979 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.117550146 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.139617384 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.120615382 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.124452002 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.117999329 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.116947253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.11805989 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.117517717 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.134032166 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.11805789 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.120877899 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.120534208 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.117606536 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.120828546 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.116079093 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.135067816 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.119044056 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.121020776 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.122483613 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.117503966 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.12208907 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.117137388 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.120173634 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.136319992 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.115711987 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.118681633 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.114377804 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.11488747 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.117272389 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.11752884 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.134389722 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.120650484 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.122180952 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.121078591 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.121324418 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.117469993 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.117707087 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.133777862 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.122659216 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.1235405 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.119220507 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.120693408 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.116684383 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.117639237 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.115011337 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135921981 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.118071328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.116901713 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.114574258 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.119155116 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.117653983 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122632771 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.137761352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.122246925 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.121208579 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.121339943 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.118102902 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.117993439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121723037 seconds)
  done (took 9.436171927 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192463455 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.125019956 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146906998 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121283889 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.120190557 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.134944909 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.118149466 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119197979 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117506531 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11737966 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11759673 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117388179 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.135364548 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120918526 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118315655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122738452 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119672311 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1209233 seconds)
  done (took 2.974040134 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.12719776 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119297819 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127853466 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121781379 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.122039694 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.117306836 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.121811209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.135059014 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119370894 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.117117441 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118602437 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118165223 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.118842249 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118172761 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.1346643 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118335647 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119964002 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117361058 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121058556 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120529554 seconds)
  done (took 3.125018146 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180978928 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131314438 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130277563 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13078156 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133364115 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.151287536 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132510631 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.136009302 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130840534 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130679505 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.130566301 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.148026901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132061554 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130881184 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130331298 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130710048 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130254439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132470107 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.150264284 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135461764 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13423388 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133695927 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130171351 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131444353 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130120327 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.15088935 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137807889 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133350649 seconds)
  done (took 4.515776439 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.125613327 seconds)
    (2/2) benchmarking "in"...
    done (took 0.119758468 seconds)
  done (took 0.935119119 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163917992 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166614492 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.120116982 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.127778118 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.183467375 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154339269 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145539465 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.12209026 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.133739494 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.149462935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.159503383 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.111607824 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.117157249 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.128331271 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.114867602 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115953371 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.121829479 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.128738468 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.126510418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.119033644 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136627167 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115644979 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113425757 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.126339763 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.110080368 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.119416987 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114550901 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.141711517 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11262921 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.116597035 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113280973 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.125863059 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.122785598 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.122762643 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.135295117 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16710191 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115538806 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114249804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.127503183 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121814915 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140639508 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.119269771 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114129265 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.114630419 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115186322 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.120276669 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119788553 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.136094669 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.109305892 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.111169972 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.123474673 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110399189 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.123705032 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116264209 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.131877041 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115788852 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.120110946 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.111616058 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.114788173 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.119241639 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.116284794 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110589785 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.129684062 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.120246925 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113532723 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113493552 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11445216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.117566576 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.120067681 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.136174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11540284 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.135528926 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113905912 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.12380639 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122755308 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.137684707 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113022155 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120927428 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113219733 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116885775 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.126391668 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124785718 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112262054 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.128006938 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112101793 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.125233044 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.119954896 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.120568371 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.108373693 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115464117 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.136765068 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.120928918 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.109092979 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113140832 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.117020673 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.122960991 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.113186016 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131807062 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.119820423 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119930457 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12407035 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117864776 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11571643 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122456454 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.140645702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113425098 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152069424 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110921742 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.113255538 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.120791272 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.13703975 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.114667856 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.116946126 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.118927857 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111649926 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11437659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.122994276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115358076 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.137284156 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.121059004 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113680378 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117414935 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.128339382 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.121260171 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.111876427 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.137417272 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121128246 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113749635 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.119829563 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.118662185 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.118534338 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112128854 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.137208335 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.11913092 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121767268 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111779341 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.123171044 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.121885199 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.123931715 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.130297533 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.112590296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111580208 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115997317 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11826717 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.12331945 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112268709 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.129670065 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.110592963 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113244487 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110727429 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.119701195 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12172291 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111412922 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120801551 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.116897707 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121428806 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.112061127 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.125846302 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12427513 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.125098419 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120292187 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.126675025 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112466667 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.123933091 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.123572997 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111373275 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.119017528 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.120833189 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.139037531 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110881333 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.121296253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.111064239 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.113040761 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.120426295 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.119415839 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.139679867 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.113739274 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131440678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129548644 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.124245126 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11634297 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115215805 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.139420323 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114206566 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.124534062 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130511718 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120583764 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113165997 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.113945237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.13996339 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11258499 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121004724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113802005 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115729137 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.111146362 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.119049493 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.129443354 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122713131 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11411765 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.126296579 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.126527816 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123511649 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112781274 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.138298633 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.113583325 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.124890627 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.119756887 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.12195557 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123781864 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.12137008 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121189446 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.134396386 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113065213 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.119593791 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121213887 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120549352 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115257793 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.122363196 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.127901423 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.112500093 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.126127445 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.124350105 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.116535811 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.119065178 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113874247 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131560856 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11639402 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.12055935 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120861 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114587123 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111668345 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113993771 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.130716324 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114023455 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11596993 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.110405764 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.113332926 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116691158 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120051266 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.137157116 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115230249 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.125580622 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.128572885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.124231369 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.120747144 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112641089 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123309713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.135069808 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.129806937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112634089 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.121077683 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.110812911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.120253882 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112233097 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.130002572 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.112685323 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114449932 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12222264 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.123582902 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122411551 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122342623 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.13951436 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.127512072 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116623304 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.124655977 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.113263509 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.110429091 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112001854 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.131149207 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.130807878 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113666235 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120928884 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112398796 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114477626 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.121662636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110993756 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.130760781 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.122084317 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111228345 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113622925 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.110458188 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112744599 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112197066 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.134497163 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.116924272 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.12405944 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11654143 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.122333796 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114984855 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.11616683 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.146267908 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.124981168 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.113372702 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122375727 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121990627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.122578104 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.111457953 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.138542624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113900476 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11483228 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.1129942 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115273613 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114798528 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113161937 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.134237573 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.118017785 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.116487956 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.111953496 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111877847 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.12204635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117317135 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.12933645 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.132512441 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113810635 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112894385 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113630715 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121727112 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112784002 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122665122 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.137635431 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111829953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.114014522 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122265186 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115105466 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.123207953 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.117039639 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.143411812 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126142135 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.123180224 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.120600673 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.125929399 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129435233 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.129937782 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.132529716 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.111483441 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112518723 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115156673 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.120485479 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.121775206 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.121432722 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.128441374 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115639735 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.124596944 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117025302 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112766826 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110920762 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.125141849 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.125766165 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.142798869 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.12336026 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.120826137 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11496452 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.120580172 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.130861209 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121709076 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.132559992 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12216373 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115846613 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121282566 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.112047787 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122124973 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.131469461 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.129062309 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.113850616 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11368112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.122563392 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.111309538 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.127823097 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125868906 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.133302911 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114090789 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.122662415 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.113784682 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120811891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.130670014 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.114616505 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122784985 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.140054042 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114161947 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.122227934 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122259667 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111988983 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112671097 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115717886 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.139848687 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115156773 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.122483946 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113566243 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126284637 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.124256001 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.124991666 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.139799355 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122483184 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.113096746 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1296111 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122972519 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.121410746 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113438492 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.130479892 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.113428693 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115596492 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.123117366 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113249454 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126065681 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.125587333 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113085829 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.132555995 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.123724689 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114199657 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126673684 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.117157595 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118465685 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111175532 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.134043048 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114711267 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.128943037 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.121013649 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.111439849 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122861579 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122665342 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.140172078 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115822125 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123533874 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.111235458 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.111337844 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.122664163 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11254447 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.140987566 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117651164 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113389049 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118602285 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.125310399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.12424873 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121503026 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.112950291 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.132518368 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.12148666 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.123162966 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114734153 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.112173531 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.124306783 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112967159 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133103743 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114386367 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112324068 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11437826 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124951993 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1135906 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113172039 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.130661035 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124530725 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.119232768 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.118951549 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.115981797 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11626913 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114502212 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.142640951 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11863082 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.122288748 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113734141 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.121069889 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.122754955 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113122738 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133314243 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114242999 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123598639 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115951955 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.115120255 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113318242 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122948086 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124160388 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.132838186 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.126615685 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.118716347 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127763649 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122566186 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.120915228 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.113668479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.133364028 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.121703695 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.113151637 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.12188833 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115636145 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114071176 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114336232 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.140196447 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124459053 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.122478953 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.123974124 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.112200536 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122663918 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114087666 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.133592196 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.118068712 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.117591945 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.125527054 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123286166 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114524102 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117479143 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.124618413 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.14847593 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.114199452 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113386469 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116505177 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122624955 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122842112 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114367793 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.13238199 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.122729723 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126021034 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122489002 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113505996 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117240904 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.12233983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.137278718 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.1201041 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119863117 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.124326499 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.121901387 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124950845 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117783698 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.139655689 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.126176525 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124493173 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119468305 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113843137 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.113431968 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122507302 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.131755764 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.116361727 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116814774 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123355613 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123215668 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115211872 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114720628 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129761772 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.139442233 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120496904 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113418302 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113984738 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.125723986 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118290557 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.131540974 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.131354841 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124807743 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124026215 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123147791 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127737936 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113194942 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116642514 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.137110691 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126942914 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.124535202 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113376107 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112888472 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.121977119 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.128209696 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.149933337 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.127803714 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122989211 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.123082529 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117192158 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122037613 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.121412976 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123635609 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.143264019 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.123100898 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116190293 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114906693 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114566157 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.120863684 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.126003956 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.142400083 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115838765 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125353107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122531067 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115324927 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.119339628 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118745074 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.143703476 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118424098 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123822717 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.118047388 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.1171212 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131500594 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123715913 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131680216 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126688679 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124402688 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114564487 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116702143 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122491483 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.126431698 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.139853999 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11686134 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.12214467 seconds)
  done (took 73.435677034 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144014473 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122395666 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127745257 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126701898 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125624031 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122368501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185152604 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.140351031 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126409206 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130807463 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122936434 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124019006 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123595817 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121332704 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142223826 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122531892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122388748 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124847737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122470667 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122345215 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121401149 seconds)
  done (took 3.473578536 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.124711783 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.125165545 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.119528836 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.127271521 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.127859898 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.122145166 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125771537 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.141570824 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.128878736 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.122299793 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.11364416 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.113960974 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115053927 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121689821 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.132950023 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.122802841 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126857162 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.12699622 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.125004414 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121507684 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112941665 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.140599237 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.123864683 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.118268988 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.129619882 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.128277866 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121316987 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.127001815 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.113087106 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.145860173 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.130520503 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.115889445 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114071898 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112841079 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.112507892 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.122562858 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.142794959 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.123102842 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.125280665 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.113579865 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.12260956 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125929624 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113660339 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.140766997 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.12754491 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.120341099 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.128547512 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.123295407 seconds)
  done (took 6.722384355 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.13894839 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.139396809 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.126682276 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146312426 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12244249 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122676239 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.142423243 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139068022 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.124194709 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124137307 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124441601 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12224523 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121825737 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.142576409 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.123915747 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123490242 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123924343 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.128181919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129018794 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.126745879 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.143342979 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126377798 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123174029 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128193679 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131298202 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122294711 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122774527 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.122505375 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.142490166 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123626454 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122871656 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125035787 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122650094 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.122580724 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123784456 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.14164597 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124132177 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123799001 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128156494 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.128038922 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126757243 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123933501 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.124449187 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.14219456 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.128476913 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.13238794 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123010697 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.123952274 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123079787 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.1232414 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.141699806 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124336926 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125616311 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.122677021 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122504965 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124151446 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122535593 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.141648448 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12507315 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.128628338 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.128957027 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126640268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122290058 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125641508 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123548593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.146896304 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132273461 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124897055 seconds)
  done (took 9.546693509 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1604044 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.140715301 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139438096 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138985267 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13918331 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.160213274 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.141222852 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.141968245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.141144362 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139577667 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139546448 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.222682934 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.144489448 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.150021508 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143721545 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.142115825 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139028353 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140564407 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.144834288 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.149097476 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.139842324 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.140226152 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.141285044 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.160534518 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141899863 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.141961805 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.143607436 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.14005329 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140101577 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159272293 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141029659 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.140364672 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1397208 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.144902012 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.145334529 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.163282811 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.143574164 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140154719 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.139806322 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.143811461 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.148160262 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139419265 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160349152 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.140862005 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14057728 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.141064866 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.14081076 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14196987 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.162612315 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141543272 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.141573395 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139870558 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14110429 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.139640058 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.163668883 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149532932 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145206942 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.143748522 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140470469 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.139354068 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163064014 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.154192906 seconds)
  done (took 9.857287068 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.136388642 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136937975 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.176255239 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.126015548 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124155922 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.148632262 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.127096627 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12348867 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.123216754 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.131370008 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.123608484 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12341629 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.155952238 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.13148228 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.131216586 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.127293845 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.126641197 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12320577 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.124959616 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.201491263 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.13246523 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124782141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123579331 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125532149 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.123756327 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.143482081 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127053599 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.123748052 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127231789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122822031 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.123846263 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124723095 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123222673 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.145765431 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.131372926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.130974927 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.127799047 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126283838 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123226948 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.123117021 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.148093587 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.133315675 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.123956093 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.125197787 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124587432 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.12350601 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.123615272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.145782901 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125864692 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.124373208 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123297553 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127168274 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124004509 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123133834 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125798744 seconds)
  done (took 7.971647872 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13970993 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129964985 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138793124 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.126182359 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123863522 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.123444899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128032432 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.153749277 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124315581 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123127406 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124285869 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125026641 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123595582 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.125003917 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.143933939 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124016644 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124550046 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.125505708 seconds)
  done (took 3.094931224 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.131874928 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.17932792 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.127244658 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.186824136 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.142193056 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119811396 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126863097 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.115520784 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128253186 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119498444 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.124218283 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.136505828 seconds)
  done (took 2.405721558 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147967976 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153978403 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140562927 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144082711 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146456034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159246467 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14127232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142282086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145168353 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141836287 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139914707 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163186133 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150035076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146480896 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150608852 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145229993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141049642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161711434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1463734 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153614816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141263261 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144206894 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140751626 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139704707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1599378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143786206 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144911336 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140917911 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14010049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143204687 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164968602 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143385631 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145040055 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146210021 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149969034 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15219616 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160755082 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145482096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144803692 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145254018 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.153167949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14381891 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164481767 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142617582 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14528593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141430887 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142488835 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140066646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.159679895 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148000096 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145527503 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141127054 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144380906 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144399576 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168908504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153006536 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148207671 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140623454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143813279 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140610526 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165482289 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.155502496 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142600106 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141530038 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144415623 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141317002 seconds)
  done (took 10.526476444 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150367807 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.144758105 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143514136 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142416936 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140596378 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140777291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160736471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143262687 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141708576 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146239743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15882349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146601532 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162258048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142595992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140842996 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145670664 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150468621 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141064703 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161056892 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14630451 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142028915 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144122875 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14087757 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141313286 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160669745 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147294356 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142013984 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141146703 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141953928 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14124501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165232778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148951633 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148830304 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.141334209 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141599396 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140563058 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145099488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17224646 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142406277 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144686426 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142209192 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14523443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145120384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161522693 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142157883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141885949 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142140129 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142147741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141591655 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160857013 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143012432 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147413915 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148775507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149055063 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141756047 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.159215164 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142821094 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148476594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152965545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146222574 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14157198 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160291622 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146521277 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144355977 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141400718 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142147809 seconds)
  done (took 10.496553982 seconds)
done (took 163.47712756 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177413038 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.195507918 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.243469648 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.205603506 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.172490984 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.163821672 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.161832324 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123604698 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.122113212 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115619765 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.191281491 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.116867295 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.226690985 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.12496582 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.263504527 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117033273 seconds)
  done (took 3.492621413 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206298084 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2936975 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130951825 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.136909473 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.122615305 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115801858 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116498222 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11824585 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.119907924 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.116525125 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115831894 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.142201012 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127622359 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.120473464 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.119185889 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.115329676 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116423049 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.119862583 seconds)
  done (took 3.242482924 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.142690428 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156585224 seconds)
  done (took 1.085290916 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.146549277 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164418204 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317281196 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156009432 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.155590661 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120197829 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150931946 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129379819 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190633491 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136311565 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.117282069 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119832078 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143036541 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124532271 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138350733 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118954089 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.158810165 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131009436 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136624267 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.126444868 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138496712 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117806952 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11638934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.15309623 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181419423 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117262462 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117207704 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117601971 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117195559 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.131418216 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.136641842 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117171246 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117008877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.121571423 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.128148791 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.122492631 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118898199 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.136773125 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133147 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121357124 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125861734 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116724381 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.121598923 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119771906 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.139899298 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120111382 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118431342 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117205731 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116077867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12064471 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116838509 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.135356241 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.116885706 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122044293 seconds)
  done (took 8.045406968 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.924476203 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166708317 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123941963 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.064277743 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138863873 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119248435 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.975858354 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.161564419 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.189363372 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.039920634 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131967961 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119705439 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.129116226 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221428161 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.070685052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.235625065 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.852821048 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11932899 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145018063 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.126424825 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117936544 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149329555 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132729994 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423177189 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117639088 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118945045 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117146178 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122772479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153137499 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11927949 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11868109 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1326172 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.23259607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.121960086 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116815794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.137188523 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118803935 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.126817752 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.169537903 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.124413156 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157391545 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117265379 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.145598992 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123677569 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129514253 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118823736 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.118292164 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.13817452 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152645633 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12860868 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118497947 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118156106 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11654367 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120722015 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118682452 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.235094264 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256972146 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120574139 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118358844 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119733371 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.168486864 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122741081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12873334 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156875937 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.13231279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12253708 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.698337682 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127732372 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118651988 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121375689 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.14682647 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119098987 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118613637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148199182 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401342463 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117503103 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117931323 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138502128 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.156086665 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.118938441 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118742866 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.12400841 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11718641 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118127031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145127669 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124064911 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.134468733 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.202678689 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116810939 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117450675 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122525598 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151786151 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118935813 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.176563476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.119251788 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.12103132 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.175109166 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116855344 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141678222 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12800367 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117525508 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.128971746 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117721841 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120395564 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117787032 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.146702053 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.130148663 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128442643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118975031 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116695689 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126486174 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128086453 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.147546668 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.131620788 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.420131915 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.129466131 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118171433 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123588008 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117638421 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146019345 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120091839 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.171097869 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118494477 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125969967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117399188 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11909436 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125709395 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147366464 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126926906 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119046997 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118455261 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120800063 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216288132 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.134096754 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139221007 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.162561783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165735079 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119325332 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.132788286 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117879481 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.129003951 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141158048 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118696334 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118380719 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.703798521 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121513858 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118272394 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126100544 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195666932 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12449176 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12432224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.119176434 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119129485 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.696121637 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.133895744 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.139817069 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125643437 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12218198 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11982934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117488314 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119705791 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.120736033 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.150723568 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118785248 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118483396 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.119522637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.124593878 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117927607 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126857643 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145524624 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126298186 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119546722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119117085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125022483 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.13300375 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.129700792 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.140774149 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.513756144 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121987173 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119467221 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.131937999 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120009825 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209277283 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137512858 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.129844304 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.123512617 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119660121 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.236768963 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.127564709 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175287097 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.15046853 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137595476 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119732409 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118998991 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.120212458 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122974461 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128424158 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.119548016 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138618406 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121902284 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.053886364 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119557075 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.189854631 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.117975272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.130126501 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.138524955 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12044693 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210331478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119497794 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123262163 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12514958 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124355201 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.145934633 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.924815323 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.119700373 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120766563 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122556194 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.129210288 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.125123456 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138546984 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121165333 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118964966 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.121751851 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.169341405 seconds)
  done (took 42.721868677 seconds)
done (took 59.365773804 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.193423748 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156761326 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.212638861 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165379114 seconds)
  done (took 1.566186441 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.221184157 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.143979404 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.187014706 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.144343657 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.204501216 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.123399935 seconds)
  done (took 1.832847709 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.158705679 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.139304792 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141066548 seconds)
  done (took 1.251349462 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.188782126 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190001248 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.514411787 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.359278662 seconds)
  done (took 2.109956029 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21289472 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132307992 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130521228 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.182302222 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.212067901 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150636295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137109687 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.142702775 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.15875693 seconds)
  done (took 2.292595375 seconds)
done (took 9.859757887 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.192409832 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126022363 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.131934049 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.135125596 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.211189549 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.136587095 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.141661042 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.130850715 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.140747036 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137301109 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118342031 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.161768392 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12704509 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182637443 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.129719592 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.117665588 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118116062 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.159588516 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.144561057 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.141341151 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.182427861 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122275592 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.135618962 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.146544694 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189268375 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127127519 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125679539 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.130713833 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.142609592 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.153960794 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141417934 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119137246 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.141281471 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.1413279 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119751508 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.126308705 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.142734655 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107932234 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.128586115 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.129171508 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.14216414 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.127465982 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.125089872 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.139796655 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134431958 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133631598 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126065346 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130753204 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.118267462 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.132402735 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.147529721 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.151962086 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.127121303 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118587641 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117754554 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117322508 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.136571941 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141093893 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.140649558 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121814324 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121344586 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120519939 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128126187 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122115359 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.127102716 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.145315111 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134584324 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133210379 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.127940846 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122567761 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123339797 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.131572437 seconds)
done (took 10.642347057 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.138337271 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.152415105 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.175439371 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.177257601 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146138795 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.121322847 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12859413 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133242414 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.130936046 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12164205 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 0.132625411 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.210706898 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 0.130041832 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119055825 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.133392301 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 0.126657675 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.132580931 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.144133606 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.185483892 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 0.131330739 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.13464296 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.141966412 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 0.120956618 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143741657 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122556472 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125855489 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128762049 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121508174 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 0.127506914 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125945673 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120953924 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150373586 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.133708936 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 0.128540332 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131167782 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.124676166 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.134746339 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12476741 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.140872464 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119871784 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13208245 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 0.136727043 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128627823 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11915693 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127066357 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150692832 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128893875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.129072291 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121935147 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.130313699 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123543303 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 0.12689499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133566943 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.150275613 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 0.128971291 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 0.121396182 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.134568833 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.1341106 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132871779 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 0.126059165 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.149339538 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120906144 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125591354 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131350971 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127226327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127149118 seconds)
  done (took 9.701036967 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129585055 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141471697 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.12803263 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128947962 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.118256921 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.121567948 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.139825691 seconds)
  done (took 1.737718697 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.11924868 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190991972 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183183378 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205200068 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184936452 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196026755 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15379623 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.149326935 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.150355135 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120873278 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.193261199 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.208677089 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.154736176 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12202749 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186291984 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118064567 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.206313213 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.175685543 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.129009458 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184862585 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127296756 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1722137 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122913505 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.120016272 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186867803 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.124095067 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238585291 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136485221 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130723808 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.184607845 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127139145 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163276344 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.218415848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123021352 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129953565 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.17994034 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.204139983 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.128587403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.183841937 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121585266 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.207335807 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.128192102 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128581901 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.132721368 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.132738239 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.198981757 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137074383 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.139994939 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.133683518 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192215208 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.123374572 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208447046 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13885371 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.141581754 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121291849 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130205661 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135523046 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12832945 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.217677089 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131763455 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182679978 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209763656 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.188382854 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.181769335 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133900036 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212789073 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179085087 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.134402377 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.184429128 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.158834611 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184208649 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.131633431 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120510584 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.206829608 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141757396 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18794408 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1878501 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128147245 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.148075173 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119917628 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.13039512 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129076099 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.186460262 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128416168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.154109153 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122992528 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123177686 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.132934342 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.181272999 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.131407672 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.158677211 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122357436 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130316528 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.133090202 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127381551 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.194403496 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.144787025 seconds)
  done (took 16.06904126 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.120591847 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120990067 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123632756 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119538808 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.119094791 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121758688 seconds)
  done (took 1.580848268 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145173569 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.132429097 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145542471 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128187601 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137972948 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.209772386 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.198730688 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126643705 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.141436494 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13860598 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217466198 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191597811 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.200366468 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.138392653 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.21895367 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137878493 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.196091331 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127797303 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.138803327 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128836665 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.152090814 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129254702 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129247561 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.17898712 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129784082 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.137393992 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143181036 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.144745651 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146463977 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125005234 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129538225 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.132969491 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118560804 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.147282909 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.206950348 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119399044 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12778845 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129802968 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127873122 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.154825201 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.199879796 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131563303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.140078619 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.135952431 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.118910714 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.142550034 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.130621327 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120136175 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.202369032 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.137400044 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141033968 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.154488706 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.130877007 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.13614057 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123269305 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129478832 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.13566305 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.215077992 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129867896 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118836025 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.127847579 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131182282 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120736172 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132668568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.152169259 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.137369884 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119042679 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129820326 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129542554 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.134847405 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.137282657 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.133492353 seconds)
  done (took 11.348668879 seconds)
done (took 41.258965777 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.645686901 seconds)
  done (took 2.496406132 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.902838212 seconds)
  done (took 1.753958209 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.687894652 seconds)
  done (took 8.572635161 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.408330492 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.345236686 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.006205052 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152785172 seconds)
  done (took 2.765573096 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.04718041 seconds)
  done (took 1.917453535 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.304984148 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.246029335 seconds)
  done (took 1.409479469 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.66754294 seconds)
  done (took 1.539440525 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.522482407 seconds)
  done (took 2.384105158 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241040665 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.209157398 seconds)
  done (took 1.324777417 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.520497605 seconds)
  done (took 1.395176177 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.233950888 seconds)
  done (took 8.111988087 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269862862 seconds)
  done (took 1.142675718 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272082671 seconds)
  done (took 1.14874069 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.149389195 seconds)
  done (took 3.026663905 seconds)
done (took 39.858933565 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.131199771 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135994334 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.134052083 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13190405 seconds)
  done (took 1.397523188 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.131735683 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.120328665 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.123389411 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122693753 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.122377958 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118731815 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119497172 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.142449019 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.128827144 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.128253675 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128302873 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119326201 seconds)
  done (took 2.385714983 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271940642 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.175634985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.256273217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.288040529 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199141988 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.347684268 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.269731548 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286435626 seconds)
  done (took 2.975375141 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121061775 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.136683237 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.156726475 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.119870052 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.121718553 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.358183195 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136952397 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122907221 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.189482079 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.126733428 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.148362298 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.446776394 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118459337 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142611489 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127109722 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132356403 seconds)
  done (took 3.589067301 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.448443955 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425122653 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.052849968 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.205885172 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.178128897 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.127102052 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610109142 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.128215699 seconds)
  done (took 10.06295764 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.205474264 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.138689959 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.152212752 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.155654625 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.151896906 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.176835209 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.180426166 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.136564001 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144858295 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.140871011 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.132167922 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.127513981 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.209443351 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.138583971 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.131900107 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.128671332 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132860702 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.139804654 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.197825754 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.134389125 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.137927083 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.139305285 seconds)
  done (took 4.229026259 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.132355828 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123701253 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126603577 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12350694 seconds)
  done (took 1.39760549 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.191036701 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.128854061 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127944173 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12646064 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128877421 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125027446 seconds)
  done (took 1.72017729 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183291026 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150750942 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208247651 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.355092181 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144921138 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160711713 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293362728 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157486756 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.156481505 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142788996 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191788906 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160609588 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155376176 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171235287 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141492097 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180008533 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166816272 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19022112 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15257164 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182315729 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179149533 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168861247 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183991605 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148958545 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141724664 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169126019 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.138150846 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136459795 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15680407 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155021314 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17408344 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152776305 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137080483 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170012323 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151934479 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175851637 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232005782 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145037896 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.207403051 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.176102373 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182845905 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141319539 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187184271 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161453919 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140366569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175132731 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143768022 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181528556 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141205243 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145352451 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1550829 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173821366 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.181203712 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140499393 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301771271 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13695593 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166573608 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165494002 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185484972 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180305285 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187323639 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.134100882 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172053617 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19059329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180278411 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14826228 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.150719066 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128661351 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160378638 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200424652 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163918454 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155327396 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166734663 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161892802 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158370139 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161432291 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148747699 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166396532 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177822968 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.139699728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154833577 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142289447 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135669495 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196344809 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156799209 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195774561 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138479041 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165048239 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170683848 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174874011 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149239183 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153823583 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158828045 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148536395 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.120305517 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169515043 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155035189 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151181458 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134696123 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147222658 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148100828 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.163676788 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154253749 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.133684316 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157394692 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13884231 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185956625 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160706806 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.142050577 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163730329 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145155759 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179322334 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153015441 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174592625 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137290189 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138263292 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180132513 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185801173 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143058797 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161446703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169897833 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151299607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171571794 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154914677 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207670592 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143716888 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173414354 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152469418 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137534347 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138779422 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184802341 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148868539 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148450501 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135940661 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153265905 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188214192 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135786897 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143366447 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163767462 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134277192 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13299801 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161802461 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146839061 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.153115374 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159032605 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142346344 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146765128 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182302704 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17250492 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142629362 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139726328 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154044401 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136706082 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.184986739 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274786194 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132662262 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.155626225 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16959871 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159988386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172956894 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149768507 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203027718 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159069866 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143160251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206746329 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142899287 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.132957318 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147149335 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152483413 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162387186 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19003652 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175956342 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.149325024 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.176140413 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144862774 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169820544 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168219484 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15062968 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.16417313 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159952586 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159293571 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134119903 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129674419 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133399745 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170283778 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143831322 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148201405 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15394105 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150299362 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195872217 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173959136 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140022689 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17168047 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133376954 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175013201 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160209428 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142282573 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.166420994 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168564808 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191590578 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139070168 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144732546 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.133620925 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1345515 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13534016 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182576616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150215194 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143737801 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137966383 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174684128 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15318225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181326227 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18128432 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150317505 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202229485 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.132924756 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171679964 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152800253 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162128118 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.203678369 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138316435 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149171397 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168456321 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141520861 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179952097 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180168319 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167803313 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176882583 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166628386 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136883775 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166086605 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15750752 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151218132 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151484041 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140776764 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136741453 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16424545 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140178721 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133256174 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155498786 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14173997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148169282 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173092655 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148852142 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136888244 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138652525 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162376791 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149856782 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.157909823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157488574 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156608663 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146013084 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142406418 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192088383 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135147795 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306132163 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162303428 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154283407 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140033177 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161001041 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163649373 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15106285 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145155168 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199066292 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139526017 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16655291 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16247073 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.165304205 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146007173 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155027605 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152794153 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133840891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131009859 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178429114 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.159390227 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155983544 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139225463 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163501058 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181447599 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154228481 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152009273 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13992136 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184392167 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15551198 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182238828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159930866 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.153121856 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173325856 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132650309 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166948225 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.143585205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182970236 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163186086 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157333993 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.171131979 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215327061 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165229392 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157563899 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1663626 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134891588 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157031812 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144594524 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199859436 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138689836 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140030576 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166210715 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137788491 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135542881 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17853825 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271057935 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153857286 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160303269 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.151723436 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268862516 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136029256 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136233826 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165832762 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184352407 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134871354 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179999124 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159190321 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142253675 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150103324 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159307756 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174359885 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171787624 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174750581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15327574 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138840058 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147974757 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143106384 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162180942 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179869387 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.15263562 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155534851 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168790559 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162967998 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.152149052 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18223643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158062349 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156499682 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147564504 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142255738 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198091073 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135864884 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146697228 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139242706 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130439232 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151769553 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195231111 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136271651 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154199569 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16336617 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171290234 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139943697 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141624726 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160523662 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139056442 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.150820707 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179681596 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136614755 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159439334 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167917705 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137572005 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182551724 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143353669 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135843961 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158986725 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144691382 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136923949 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172994709 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160414932 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.153655686 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162210184 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154787667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157774842 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141990897 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139675433 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.170045039 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.149812083 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168887516 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149557489 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177516505 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171230304 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159003099 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160669575 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144517602 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147886936 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139356408 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.250254883 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148439838 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155836064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13516265 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143069499 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14670057 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.169043712 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153930032 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158128362 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139662306 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138118028 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168238698 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170290153 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.139564384 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143576212 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172102569 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150185905 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156036549 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201952326 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13904337 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18173938 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149594704 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134712862 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.148740113 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154914815 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145153857 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172663992 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.148382419 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.144866794 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168344399 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13620996 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153037111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197910358 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158730274 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159613598 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130647172 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156452988 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138020729 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183966973 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131396394 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143322144 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162397349 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136257804 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134328634 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187038881 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142845064 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.156633018 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138735525 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183637246 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177793417 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.157137582 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137739495 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269625027 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169970522 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208246295 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134846546 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140524408 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142868354 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176174302 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153789025 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161928418 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135383938 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136067934 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134303696 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18477554 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135124235 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16390641 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166515969 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176106341 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184997306 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.148760675 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262039675 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144501003 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188187121 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139632365 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134345521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14170161 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136434452 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141575063 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199780999 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169264601 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159174647 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14198185 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15557109 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.137528688 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137987061 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152592987 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142647987 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160434873 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172495288 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.12962339 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14683457 seconds)
  done (took 78.168141387 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148842551 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159386681 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.24408696 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.262335027 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.143040141 seconds)
  done (took 1.92997176 seconds)
done (took 108.746996205 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.134382703 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13505098 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.133081049 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135498615 seconds)
  done (took 1.493923029 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.171374833 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.108977592 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109027415 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.130553991 seconds)
  done (took 1.48973626 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.35784313 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.111227739 seconds)
  done (took 1.455161616 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154937249 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.149657401 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.151981334 seconds)
  done (took 1.434773042 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.147278374 seconds)
  done (took 1.12013353 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130974003 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131702347 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.195849909 seconds)
  done (took 1.432244869 seconds)
done (took 9.402342238 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.238440087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.960665448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438037495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.193587596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.777904321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.41537483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.434925815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126111121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160957242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129026489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.126850766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.707239085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.409360641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.896342142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.457470134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903736225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.717738217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.132808779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126711967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128212124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.431698426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141465929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127193057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126323656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708904051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425638464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126122345 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.920549252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127383211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126468595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414899179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126924805 seconds)
  done (took 21.252822332 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162295152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1481303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131284695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126760612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133313422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137227984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.160737081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127187139 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145265286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12692675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141803537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125925592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154678893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127722916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141812543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12752527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126951836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125897363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150164507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12949447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130622532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125962307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126983003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126384256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125983204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.168267152 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136072921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134450984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128027516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129644036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128772433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.165719949 seconds)
  done (took 5.362909099 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.177388731 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170078081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132527611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15945893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.158399898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.154135355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.189573787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128704871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146707604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127607476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.151499763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127343208 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.144275844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128010073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149639404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.137956538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.158994928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127147949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129050285 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126931541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146708593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126494229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.150062554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127103809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127503949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13826021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126694829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127433858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.129476902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.152076762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129771958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129870004 seconds)
  done (took 5.515194374 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.131845546 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.144114666 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.159250653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166687014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.145403822 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.139128582 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156944332 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.139002314 seconds)
  done (took 2.165757415 seconds)
done (took 35.272860286 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.137969563 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.152256241 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.1331168 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.126014505 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 0.133168597 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.134829125 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.136797184 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.157102961 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 0.133101094 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.139408308 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.132039408 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.132983205 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.138695053 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 0.133171038 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.157284812 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.132396454 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 0.141611853 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.142263089 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.139967402 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.132354974 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.134386712 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.156968874 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.147843006 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.132081926 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.134620315 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.132569911 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.131721947 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.136086951 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.157169388 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.133569323 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.137371432 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 0.13325557 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.132494875 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 0.133234284 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.13334899 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.131337917 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.159769672 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 0.131263027 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.141088771 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.139263312 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.134118359 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.132200986 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.131164821 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.171618079 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.134381985 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.134118098 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.132901803 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.131587874 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.131704916 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.12219251 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.156663935 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.134866119 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.132209819 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.132472757 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.132197385 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.132528741 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.123905122 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.132990122 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.164576377 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.142749177 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.140946544 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.135147749 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.132542389 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.133582551 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.147436749 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.14895482 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.133681351 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.134366486 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.132979463 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.134194522 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 0.12296573 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.131456645 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.16016159 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.134431263 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.133829321 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.133213177 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.133727063 seconds)
  done (took 11.589536522 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.143749822 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.139349059 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.153546701 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.150637536 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.146947325 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.141879265 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 0.159867514 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 0.14268909 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.152477992 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.1411491 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.139718138 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 0.134091001 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.139781881 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.17225411 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.144957404 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.202980673 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.14990752 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.135952349 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.146056516 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.165892891 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.138258761 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.142537479 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 0.14486493 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 0.153578513 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.151537318 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 0.148620295 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.167150757 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.145479307 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 0.135142721 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.156410092 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.137438935 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.145254811 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.141164326 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.168542928 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.139905897 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.140741965 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.137158041 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.137517748 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.139430025 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.13980952 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.136087188 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.140556588 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.142552035 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 0.142206467 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 0.155251996 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.149249277 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.169376167 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.140124416 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.141017761 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 0.132595933 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.155744211 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.134438059 seconds)
  done (took 8.681481617 seconds)
done (took 21.252465361 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.340564018 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155971324 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.213889483 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.251219069 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239191882 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.213126643 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.182941321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.147811616 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.123707367 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.192100393 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.176892923 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.365345468 seconds)
done (took 6.609337664 seconds)
RUNNING BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.285474625 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.107173213 seconds)
    (2/2) benchmarking "String"...
    done (took 1.234779225 seconds)
  done (took 3.344858206 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.107013934 seconds)
    (2/2) benchmarking "String"...
    done (took 1.155677492 seconds)
  done (took 3.246357807 seconds)
  (4/5) benchmarking "replace"...
  done (took 1.993293939 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 1.992601585 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.368499384 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 1.995992264 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 1.999704084 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.000579297 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.001357354 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.00517066 seconds)
  done (took 14.348866239 seconds)
done (took 26.202436747 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.08295064 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.311546232 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.292445638 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 1.99401649 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.011746575 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.004819079 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 1.999921417 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.017489167 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 1.999728998 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.001908866 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.352033414 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.289636752 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 1.995617813 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.438292384 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 1.998051339 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.010246513 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 1.999747148 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.348796078 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 1.998499543 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.045626108 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 1.994136482 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 1.991001923 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.005469169 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.013013761 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.091438806 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.003769774 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.015342163 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 1.995969251 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.298977709 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.025423549 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.045531895 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 1.988694702 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 1.988894506 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 1.997732204 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.986101339 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 1.987522648 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.30987961 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.096940578 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 1.994009908 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.000030573 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.328246075 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.000909627 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 1.988572301 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 1.991029659 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 1.998805206 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 1.998958122 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.007532065 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.709809772 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.000048123 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 1.99684635 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.078803744 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.403208634 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 1.998033739 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 1.990734257 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.012632832 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.303705574 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.002713856 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.057392357 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.011256535 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.009042612 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.00012774 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.002417675 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.022503498 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 1.997349512 seconds)
  done (took 131.943047245 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 1.99217577 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 1.993386611 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 1.993663236 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.007920395 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.005558216 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.990790384 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.991276559 seconds)
    (8/36) benchmarking "gemv"...
    done (took 1.993560596 seconds)
    (9/36) benchmarking "syr!"...
    done (took 1.991021866 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 1.993405934 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.993681671 seconds)
    (12/36) benchmarking "her!"...
    done (took 1.99397275 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.992869274 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.936862802 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.993989524 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.019910261 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.991165379 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.993062632 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.994131554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.994699978 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 1.998883096 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 1.991345743 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 1.994769481 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.994551291 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.018196252 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.084744004 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.002859622 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.021080416 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.995672829 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.992910034 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.017838768 seconds)
    (32/36) benchmarking "symm!"...
    done (took 1.999023122 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.493453385 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.848646671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.011060319 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.007336216 seconds)
  done (took 72.323505684 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.00835718 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.999826165 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.996878688 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.022028165 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.023557571 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.46776799 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.468812803 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.048534376 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.384145058 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.095937576 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.168393824 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.13710379 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.010489758 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.088656859 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.004206493 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.999526594 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.007694466 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.02095292 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.995226878 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.994959148 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.462989511 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.012673943 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.467728944 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.145699923 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.021681108 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.024005335 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.402266953 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.995428223 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.019476216 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.372260336 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.022223544 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.041119196 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.230403493 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.627528349 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.101917421 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.997669461 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.019002968 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.01453025 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.263032164 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.000227711 seconds)
    (41/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.003590948 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.000863199 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.996451973 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5101868 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.014368861 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.468676533 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.00631547 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.851274778 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.014838738 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.000740696 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.193111412 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.442036881 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.014713516 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.00782328 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.994397799 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.013208258 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.016533358 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.024728644 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.26296197 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.092021891 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.999716408 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.994448911 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.019594719 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.99884559 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.993675552 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.991708304 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.257373405 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.058835241 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.989608989 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.461678342 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.029424839 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.304053961 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.08659759 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.118451471 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.994525259 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.027881109 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.003015293 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.015103688 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.103583665 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.00568207 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.353343048 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.151499359 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.000350328 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.002448808 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.084945716 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.083813071 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.001589053 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.99269962 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.258215791 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.006647231 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.024358708 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.63772182 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.082471505 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.013369294 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.018718659 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.016170913 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.360162 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.4562093 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.156727116 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.995751751 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.2801825 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.002291155 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.343845188 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.452916913 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524718609 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.992916688 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.094892186 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.14804987 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.000482104 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.00650106 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.0908224 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.99520392 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.053161288 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.026948976 seconds)
  done (took 340.303118351 seconds)
done (took 545.554906287 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.756228937 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.761313264 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.831739335 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.716708646 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.704865347 seconds)
  done (took 9.756115526 seconds)
done (took 10.73828678 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.993968663 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.181079336 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.034278059 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231269783 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.017467233 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.19674905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758873499 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.042746962 seconds)
  done (took 11.437780979 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.013963338 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.081676132 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.334193174 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.085633216 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.331437333 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.334209948 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.328093891 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.017488734 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.013070489 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.093690237 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.014759313 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.009963281 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.019136216 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.017069523 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.079345084 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.00575081 seconds)
  done (took 18.76275108 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.986719871 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.021164046 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.035445019 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.033664823 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.047700652 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.362543758 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.879505119 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.043451954 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.012545956 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.046836252 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.091208052 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.018296166 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.026648326 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.016964371 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209341802 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.313797251 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.016476118 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.194853446 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.699865863 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.084629623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.036593877 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.020879542 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.024753505 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.022775939 seconds)
  done (took 29.235200597 seconds)
done (took 60.417618609 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.998697122 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.006320341 seconds)
  done (took 4.987014146 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.341883469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.364529816 seconds)
  done (took 3.687471374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.598415806 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.033211291 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.798064943 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.516567463 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.018446954 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.012396072 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.682355706 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.038984226 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.016589591 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.008549022 seconds)
  done (took 13.711392102 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.022926311 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.179384796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.189595763 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.126049275 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.160906012 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.042626539 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.038419237 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.023319059 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.20030084 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.020025069 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.156688358 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.203729609 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.146727706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23854612 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.042411973 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.172360311 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220458444 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.144989264 seconds)
  done (took 21.31210369 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.028146009 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.020406879 seconds)
  done (took 3.030317607 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.134804901 seconds)
    (2/7) benchmarking "second"...
    done (took 1.042566478 seconds)
    (3/7) benchmarking "month"...
    done (took 1.100524392 seconds)
    (4/7) benchmarking "year"...
    done (took 1.096458099 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.043180773 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.018087126 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.044292419 seconds)
  done (took 8.461245008 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.645439531 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.251126664 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.388648687 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.65082938 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739414863 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.006034926 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.747175189 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.010616239 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.996869882 seconds)
  done (took 16.419980482 seconds)
done (took 72.594431704 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 1.99213708 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.01014194 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.012170071 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.015895972 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.395857174 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.016117661 seconds)
  (7/7) benchmarking "mandel"...
  done (took 1.998300616 seconds)
done (took 14.424652129 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.000380145 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.99718778 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 1.996318589 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 1.952790239 seconds)
  done (took 8.930523187 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.912040255 seconds)
    (2/2) benchmarking "read"...
    done (took 1.307755957 seconds)
  done (took 4.200919381 seconds)
done (took 14.114516196 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.080120956 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.060686361 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.081091809 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.071442055 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.130190401 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.07557068 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.080106527 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.033135295 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.078088632 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.046768133 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.029705381 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.141872587 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.034236744 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.121279066 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.038385119 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.131332515 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.085446333 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.034281565 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.033072827 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.121869142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.071308348 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.035144404 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.120877258 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.028486013 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.11625554 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.031235041 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.044389925 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.063229493 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.036863185 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.114889687 seconds)
  done (took 33.163089117 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.990304165 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.021981437 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.025359237 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.077108601 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.01415699 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.017184769 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.998790585 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.010683156 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.01239328 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.012789856 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.01362297 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.016608455 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.014452249 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.01256561 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.014159533 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.025687853 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.126275935 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.015471197 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.0131554 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.023414 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.031815618 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.014855616 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.016968294 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.029957707 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.017828168 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.000132395 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.011720934 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.015123239 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.016175402 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.012322781 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.030719717 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.025601963 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.023923026 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.087447667 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.04717268 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.022506394 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.993322824 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.015815005 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.023778321 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.996336266 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.997169846 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.009243597 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.009878507 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.042730141 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.02732889 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.01828207 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.012287879 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.018153286 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.0091788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.012317559 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.011662186 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.011689742 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.017570386 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.017603531 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.013856501 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.996315947 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.012990232 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.998382738 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.010549997 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.015474171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.012749154 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.998786728 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.03891409 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.016076777 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.266683352 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.051351463 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.018295455 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.018300235 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.014586638 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.143586796 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.020027147 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.140828484 seconds)
  done (took 76.893182958 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.028042971 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.960281895 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.032870241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.963535538 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.992287732 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.989758745 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.033826541 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.977934104 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.032541516 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.03870823 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.03635251 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.035324201 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.988965362 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.039053777 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.050580175 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.993712659 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.03199951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.99361646 seconds)
  done (took 27.205398906 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.037483644 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.041277862 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.078624495 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.077252022 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.028016893 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.029068832 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.057369397 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.032142536 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.9909733 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.036781155 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.033493298 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.033287132 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.993211506 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.063144444 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.103263433 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.038500321 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.042480051 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.07055393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.039755913 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.033626484 seconds)
  done (took 23.850672533 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.064721864 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.037420164 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.031773461 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.066506221 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.038439675 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.030432489 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.065100721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.035178889 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.039014838 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.324864767 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.040580262 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.038894127 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.071340793 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.039965191 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.030395376 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.065695631 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.06796175 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.072015029 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.055820292 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.044378301 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330083074 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.04228561 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.065412314 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.036376965 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.041649205 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.032728106 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.0369096 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.044755687 seconds)
  done (took 30.883270274 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.039152406 seconds)
    (2/2) benchmarking "in"...
    done (took 1.048555689 seconds)
  done (took 3.069544654 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.997058204 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.015190836 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.017520243 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.04072112 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.01498973 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.994144901 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.000845041 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.026423689 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 2.009150353 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.021725067 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.998647876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.013606849 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.008007073 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 2.015100858 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.001140541 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.000152985 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.027337147 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.081963055 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.026201442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.013393453 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.012618837 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.004428061 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.000660623 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.548468801 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.004655289 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 2.000941421 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 2.002687839 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.654411386 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.004854944 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 2.008425375 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.024438775 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.525529016 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.018302849 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.022378647 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.014132956 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.010358059 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.631067877 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.003820929 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 2.013970807 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.020075789 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.105321601 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.010494589 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.993322338 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.004062717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.012337078 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.036735609 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.019230037 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.019276681 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.992548331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.000332746 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.036544578 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.011231203 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.030197182 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 2.000940714 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 2.011226202 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.002436704 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.019355332 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.994882278 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.017656009 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 2.015292581 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.766121288 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 2.000034556 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.000271222 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.047627481 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.003723709 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 2.019197441 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.00661142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.019948045 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.995117335 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.016580452 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 2.009252573 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243142332 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 2.032865441 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.045565425 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.02616402 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.01861936 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.995417594 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.024550723 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.992287408 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 2.00368143 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.033279742 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.148770535 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.009047412 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.010632644 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 2.019361092 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.105697645 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.009584083 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.081179113 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.99725707 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.004219347 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.020211458 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.016336977 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.997166792 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.028633719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.002517978 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.032169668 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.996615557 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.998331522 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.025747658 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.035954523 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.017738749 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.007463922 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 2.01093337 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.148349649 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.138112809 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.993646561 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.024636857 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.995169447 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 2.015417847 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.908529047 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.014645318 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.993663888 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 2.005934005 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.032239557 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.011272029 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 2.023237038 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.024713373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 2.001812535 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.017244873 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.016910574 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.003016697 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.013538806 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.018298428 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.011471248 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.997529905 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.019014502 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.018920721 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 2.007580655 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.021049221 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.015656859 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.013919476 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.988468843 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.02472448 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.998652648 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.147210101 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 2.013281146 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.029295779 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.013171211 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.08485743 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.996462802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.009792518 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.998975599 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 2.006966803 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.017780043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.018055503 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.990992166 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.0075847 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.008291186 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 2.004539946 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.998802831 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.034825834 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.025884863 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 2.008938223 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.015602275 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.011417672 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.034345873 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.012837453 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.024617699 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.01622067 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.039414416 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.012612402 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.855793186 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.024736113 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.015985942 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 2.000579216 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.994369664 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.034645296 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.009227669 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.040485312 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.002298354 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.017387868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.993249939 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.996121904 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.025479102 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.017244888 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.039546069 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.993910731 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.113133126 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.082162315 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.015571446 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.013122397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.013644905 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.017268006 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.997883021 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.018289341 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.020738084 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.011724906 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 2.009500091 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.001962017 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.141123064 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.990553354 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.878522681 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235078739 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.999843477 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.022908189 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.026202588 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.997267916 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.101863083 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.007784891 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.107619453 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.016785407 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.015757787 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.993216431 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.031713397 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.991403438 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.026403392 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.995587951 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.054654658 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.79095624 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.104430848 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.020239198 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 2.002120069 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.995166121 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.027929553 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.013115585 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.012215277 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.990498772 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.031514261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.999693075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.02749082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.024821771 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.014989926 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.009741903 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.018388138 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.000695772 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.004235564 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.999516559 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.005572179 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.022908184 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.015307943 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.99888494 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.004157295 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 2.001338009 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 2.00726403 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.003900367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.997295865 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.007067446 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 2.004180014 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.022890976 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.020019399 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.026956564 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.013476782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.714874675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.019741609 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.018356195 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.0034507 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.107813906 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.995750933 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.023113402 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.994878186 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.027214247 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.995286386 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.032761135 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 2.005728354 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.998363024 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.007499263 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.006482298 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.037916971 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.036423551 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.992306526 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.039611755 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.056219773 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.019786949 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.995040922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.038996614 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.995616488 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.007051946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.005378304 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.006563264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.0263626 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.992181125 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.025728284 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.006216197 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240519588 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.02382561 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186176436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.012697471 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.027829343 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.996561132 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.002323873 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.004624473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.028378116 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.024297886 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.01258615 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.006320228 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.02189965 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.99603656 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.022048464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.007902527 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.003383389 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.021254267 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.042916174 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.996153261 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.090592165 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.017940056 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.022039873 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.009761339 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.024409983 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.994318775 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.016335097 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.00061997 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.004398338 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.012692625 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.021956606 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 2.00085951 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.020581155 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.00221606 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.000491889 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.021019939 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.027111266 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.009659508 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.047352867 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.991259796 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.010222972 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.00351565 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.000452896 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.034767627 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.012033356 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.0228776 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.021204212 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.995896358 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.002102816 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.02392826 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.002689593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.044921296 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.025851702 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.022758554 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.029296441 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.01579168 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.016558752 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.106530357 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.094121174 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.018121008 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.882901941 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.017176356 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.002192725 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.019925719 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.018420582 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.041105493 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.01632653 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.013050843 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.015731661 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.043450957 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.995884489 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.011520985 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.028572198 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.023378107 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.037204192 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.037440682 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.464127227 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.01523124 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.000157511 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.005249549 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.026117601 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.026038545 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.994146482 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.019626757 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.992936303 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.02732376 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.997147371 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.02744528 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.015162076 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.994425447 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.001693095 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 2.008063384 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.032274133 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.015769834 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.99875907 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.016264953 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.999021299 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.020775243 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.022479876 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.995313826 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.016937029 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.020229105 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.009429911 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.030312774 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.019058644 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.008568091 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.021059223 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.019209831 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.017521228 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.01861872 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.001385526 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.032272407 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.99253126 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.038577857 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.017199154 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.017882337 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.016178902 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.020520882 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.014854456 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.016067034 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.001767 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.024915838 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.010835612 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.018378466 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.993772834 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.001801825 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.007728033 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.004326535 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.023911449 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.997267337 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.108833771 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.947268835 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.997045228 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.018058888 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.101218848 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.013586072 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.018391815 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.013960687 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.002394202 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.008802092 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 2.001048586 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.003812695 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.040849416 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.989593398 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.005292297 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.030914037 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.041012001 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.016649029 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.99708571 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.041915285 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.001277947 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.002232728 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.024555205 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.999610581 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.02179578 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.997920255 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.031959182 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.004519344 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.028315531 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.019267989 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.015022272 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.995614334 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.00678781 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.009877266 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.997629481 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.011678218 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.005903728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.02347598 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.995549102 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.005739279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 2.010369835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.003523794 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 2.015118962 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.029451411 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.010359692 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.889194243 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.01310172 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.049101113 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 2.016553429 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.007846702 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.005790454 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.642612582 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.022148184 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.024276831 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.012627958 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.001701366 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.025168482 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.020301516 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.038353103 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.994925298 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.002568633 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.004439133 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.029691214 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.994770791 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.545623664 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.000748029 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.027673081 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.021237051 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 2.01861966 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.020265752 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.005692122 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.025447235 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.01721415 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.019451974 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.996316346 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.006199558 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.009713331 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.002298518 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.020898641 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.995638763 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.006092369 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.006584124 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.024261789 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.015371352 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.015292145 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.014914344 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.000127183 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.024068031 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.000472632 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 2.033791895 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.00096916 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.029690868 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.026547204 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.017152793 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.99614619 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.006205703 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.026657124 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.02161165 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.993355775 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.017346804 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.000746281 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.0316278 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.014991241 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.00245749 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.004188215 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.028272147 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.032118888 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.015929907 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.99512149 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.68248049 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.043329201 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.000926724 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 2.011993537 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.018510415 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.041594421 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.015285334 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.016580741 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.997776369 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.015667398 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.02441744 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.016123189 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.005063649 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.018766414 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.01458959 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.021478496 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.00011487 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.003913341 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.002327142 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.039470093 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.020464353 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.010260728 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.03213418 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.108231433 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.993156021 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.031346703 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.010571443 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.00000856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.028069281 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.996802053 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.025501699 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.996657849 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.022572104 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.016824113 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.092570896 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.085830643 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.997853262 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.007758412 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 2.005394061 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.00249846 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.016558849 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.00120046 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.009136812 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.050777646 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.023081258 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.996643449 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.020038155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.019756185 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.017322004 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.997188923 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242928779 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.004978765 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.030132302 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.01696416 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.021519469 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.996229651 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.000713436 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.02557928 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.028270056 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.019064386 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.04297959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.99675789 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.031299333 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.535802313 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.018960253 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.002357487 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.006877736 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.025898483 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.776563185 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.033131518 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.99504959 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.002533582 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.026410349 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.029312861 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.996210002 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.162721191 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.129304731 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.011816118 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.028513141 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.098739494 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.562004768 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.015742498 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.996006284 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.034143544 seconds)
  done (took 937.96107254 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.359033502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.059578982 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.035273738 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.031615388 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.089077584 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.040546346 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.035742828 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.044020951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.043645401 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.056282686 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.036011346 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.032504687 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.064521586 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.359336069 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.102782512 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.071946586 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.037119678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.041132053 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.033881119 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.042243984 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.066419066 seconds)
  done (took 23.675693337 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.022074663 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.033154832 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.005987863 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.032775876 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.01708257 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.016595622 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.084023454 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.01523689 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.019031647 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.993172586 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 2.007621782 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 2.016929353 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.018029678 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.01894313 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.997383363 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.023564677 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.027726839 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.016407928 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.019960193 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.0164828 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.003914962 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.03081144 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.037707258 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 2.002815579 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.099120755 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.019558778 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.015563636 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.019985922 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 2.005272909 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.021441705 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.016062374 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.996519983 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.005593884 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 2.005689146 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 2.014554591 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.021519094 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.017688436 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.018400354 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.017304656 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.996981706 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.036184221 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.021388958 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.193616457 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.047239682 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.023871915 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.020088762 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.025140731 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.014240149 seconds)
  done (took 65.154907702 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.042325914 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.140119068 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.061256953 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.054996966 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.140574354 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.06251298 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.05294539 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.053741777 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.050717848 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.044691685 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.151084862 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.193940759 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.058950916 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.053581065 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.100704969 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.060657295 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.074533726 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.058786586 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.067646326 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.063018529 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.060553697 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.055450796 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.131035469 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.191004394 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.053928032 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.060846193 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.056150709 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.050804125 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.186892743 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.068233445 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.051243264 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.058645735 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.141901084 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.148090035 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.062644866 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.043646254 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.145108847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.068243943 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.055647182 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.043806082 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.056224768 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.049891564 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.050614403 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.150721438 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.058339094 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.130497518 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.055411444 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.042948304 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.192173797 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.042922685 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.063252945 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.192715029 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.055734747 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.050028055 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.054599824 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.138045885 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.052222714 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.051017379 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.050867095 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.193649658 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.049947558 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.055771011 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.195229627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.040761754 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.058588719 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.19360828 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.125843859 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.059232867 seconds)
  done (took 74.833901975 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.031094566 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.116345448 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166064203 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.161220191 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.11196514 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.11731506 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.118513958 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.112939635 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.115837142 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.122749428 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.116174309 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.1025258 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.077221074 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.091513783 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.123029274 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.113010165 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.112311615 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.113362719 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.121092483 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.115738395 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.113270196 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.167482289 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.11202937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.165342149 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.405872049 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.071504701 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.12028838 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.117614966 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165385909 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.112907148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.402184676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.122192415 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.127048383 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.171793614 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.403822701 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.119046681 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.031455184 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.118417602 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.118673296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.117909758 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.073884712 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.164785226 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.115113244 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.078312532 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.110744614 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.118272095 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.166358372 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.403465507 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.085419364 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.121412902 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.113947969 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.165907226 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.124167199 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.12595459 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.169748215 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.100535997 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165533586 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166417926 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.11488544 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.165080461 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.163012439 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.102042904 seconds)
  done (took 71.663849886 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.100689956 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.034581604 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.0405942 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.026077427 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.056296528 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.023243503 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.039495109 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.036405166 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.039884544 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.396835214 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.040430791 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.065593073 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.054183969 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.022103107 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.023580278 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.068585244 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.036571632 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.030161925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.037857716 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.02240182 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.64585385 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.01696927 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.047172329 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.022497815 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.076768587 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.633935785 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.045113261 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.072567804 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.024602592 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.029962445 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.090047779 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.408414721 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.047205637 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.047877978 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.026250633 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.035810781 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.039260103 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.035227854 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.066546616 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.032638501 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.030216941 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.089963839 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.040302998 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.025282192 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.038500437 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.033236047 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.043718365 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.396605098 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.022690254 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.100807333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.036629436 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.031723029 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.03298682 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.410203663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.055321227 seconds)
  done (took 61.028932626 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.040859103 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.048493773 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.039519048 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.029852066 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.057797199 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.032548642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.037889095 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.996396212 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.033744592 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.033739151 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.065561838 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.996176215 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.038737723 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.050605638 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.071959333 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.037894705 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.034678059 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.107919452 seconds)
  done (took 21.746148987 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.559774048 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.384336233 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.409575364 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 2.00227361 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.364017112 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.351572727 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.451427325 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.447413051 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.220506784 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.226672668 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 2.003466752 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.562048688 seconds)
  done (took 18.974108326 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.043043352 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.065149166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.022734184 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.045223319 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.073628197 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.080957823 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.079540953 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.081351954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.068824246 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369297153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.085177654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088392728 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.071943728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.11456547 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.06731409 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.073452693 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.081140927 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.083861836 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.045363775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.077608084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.089651382 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.068297292 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.079380678 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.079500317 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.078486717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.119809132 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068828833 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379539649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.082335845 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.069075471 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.066645139 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085736207 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.092814615 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406837153 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.044674526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.070621732 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.080381045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.079041826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.066321982 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.116055657 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.023394294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.069782152 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.069356912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.078883362 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.066299521 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.08701323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.084609075 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.083429269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.075331109 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370898765 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.068623875 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.115784519 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.072933131 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.093506485 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.075382504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368267884 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379085928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.110665934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.064948138 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367511924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.118306199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.06352917 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.113948277 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392966352 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.06438945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.120602686 seconds)
  done (took 74.546178853 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.116924955 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.031399865 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.076815199 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37870559 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114241499 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.084317478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.082283272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.082421563 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.095492249 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.055679451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.079761068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.087870943 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.112570782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.121437423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.082228163 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.083043207 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.07821796 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114590595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.054376728 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36324866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.082398811 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.115839169 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.117479684 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.117506364 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359798555 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.073982533 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.074625348 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.082314417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.08964625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.090727585 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.09060468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.087784218 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.123725887 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.024065976 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.113870041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.083999841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085193832 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.086000743 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.080798374 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.071425081 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.119963199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.078969318 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.081502584 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.084827436 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37083073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.075968148 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.077542177 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.051834027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.076704791 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.057230621 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385613272 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362611906 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385402139 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.117256945 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.084614992 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.084731329 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.081446654 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.069818815 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.086775242 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.070595954 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.115661738 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.083803151 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37293711 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.081788108 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.073146436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.118645315 seconds)
  done (took 75.003053302 seconds)
done (took 1620.642186798 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.172445004 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.128718235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.08622104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.057436974 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.041512308 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.035027084 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.032293298 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.476610629 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.52103184 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.33845575 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.050976155 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.20221323 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.05185157 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.690509565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.06123687 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.107331589 seconds)
  done (took 28.046336351 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.993065864 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.004252796 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.994284726 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.000244699 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.99837261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.980782796 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.400473057 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.006318848 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.007167282 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.005581457 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.016743147 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.995096611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 2.001371785 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.940983978 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.997196149 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.986388016 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.890804284 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.998442143 seconds)
  done (took 36.208692993 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.002580312 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.02117903 seconds)
  done (took 5.008803925 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.999560435 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.996013914 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.99994886 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.003154582 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 1.999694138 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 1.998587481 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.000484212 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.009755509 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 1.99976091 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.964694812 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.011933743 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.011601246 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.001820964 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.998965765 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.099788946 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.447636544 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.131904952 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.055861341 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.059202622 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.993875113 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.997944374 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.560529934 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.363192245 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.090650766 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.966842293 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.997022204 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.999574438 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.998506237 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.126609741 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.060575155 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.001244135 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.014425193 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.01179972 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.775321032 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.534712929 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 1.997567244 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.006656912 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.995514798 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.070399887 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.143142941 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.998287924 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.995915358 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 1.998163473 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.500781975 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.717953585 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.820046769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.995139183 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.996577179 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.999168911 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.546722233 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.016056208 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.010071266 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.379820901 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.755447636 seconds)
  done (took 96.239112018 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.013041561 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.998436683 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.173743002 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.002306144 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992805496 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99682005 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.994662361 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.004459371 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.065815742 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992572878 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.267790347 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.458951779 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.003607414 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.030300028 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.890398845 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.047810417 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99206809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.992717107 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.998050633 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.003822151 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.489238645 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99829543 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.00630448 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.193067705 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.280283663 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.535576431 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.003747522 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.994660928 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.998618797 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 1.996355127 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.452712544 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.001447141 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 1.998403386 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.000728494 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.2763836 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.333592295 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.305754146 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.001298791 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.011070798 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.994860202 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.026386087 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.528996985 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.338630588 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.007754652 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994853632 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.544601481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.998787078 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.002739283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.003136353 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.241639673 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.992095851 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.994024807 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.003093227 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.99873326 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 1.99368405 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.058512223 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.076537127 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.50992553 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999513798 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.996835794 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.011878579 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.001505713 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.025529019 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001839336 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.999464401 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.336905491 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.159823004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.003202228 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.332929873 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.440939082 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.001025428 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.511998881 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.999473913 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.998232931 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.118907767 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.996902785 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.99787592 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.525393305 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.00792884 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.994697369 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.311558246 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.00339204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.280992297 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.026558929 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006725684 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.493235543 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.005646297 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.016544152 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.992326046 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998731854 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.993358613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997135252 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.25019395 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.031346504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.996451059 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 1.996052012 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.04786803 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994928779 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.998421641 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.001540272 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.511601344 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.007366471 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.99774485 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.99988379 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01462186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.001444982 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.00150219 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.00255079 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.250772864 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.996977158 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 1.998211168 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.999184981 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.006801272 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.999369617 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.195926677 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.001302633 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.995091116 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.998365911 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996346593 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.001138485 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999314173 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.011280744 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997143074 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.995005421 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870283147 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.379716244 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.997550785 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 1.998610958 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996936516 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99955109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006411231 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.995108285 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.026961602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.997920382 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.634617327 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.034351748 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.027675357 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993497713 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 1.995432566 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.996443106 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.006834144 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.997691611 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.321494911 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.245218854 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.171139743 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.997568951 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.014073234 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.645143727 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.012681154 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.175538011 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.998436938 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.992583342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.292844689 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.142735174 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.992019181 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 1.996339182 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 1.998010177 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.260946547 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997416733 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.320019088 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.460896539 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.998755767 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.003115558 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627748116 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.699929975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.996528171 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.002879194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.284611253 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.003311588 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.995852499 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.00044113 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.996865389 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.997630689 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.992532098 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.002644359 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.997251419 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 1.997803777 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.16904416 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.192119673 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.994590061 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.008029125 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.491844844 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.09109312 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992819895 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.003647345 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.000146958 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.997751354 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.088905003 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.011464837 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.006318819 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.004461731 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.005758829 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.562691378 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.994688505 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.997894287 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.191288256 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.572029246 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.997785886 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.003077522 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.994224648 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.866628498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.512437823 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.059496293 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.002232108 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 1.998020559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.263068562 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994045346 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.995746021 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.514852864 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019142365 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.000815348 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.581461215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 1.997618116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.804804673 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 1.996159623 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.996402805 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.509206707 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.995430265 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.002683547 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.000807277 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994042095 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.284102398 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 1.997028432 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.03875628 seconds)
  done (took 424.440048237 seconds)
done (took 590.933290261 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.995266446 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.000674654 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 1.996133663 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.99812045 seconds)
  done (took 8.978666121 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.169126559 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.989576937 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.108431519 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.876030548 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.118768846 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.999691421 seconds)
  done (took 10.251457061 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.995121637 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.999209114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.998233558 seconds)
  done (took 6.983671772 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.996845701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.954694961 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.298627654 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 1.99318581 seconds)
  done (took 8.233308109 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.037992189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.015063847 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.020810725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.018850206 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.03949009 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.132924638 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.020537939 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.063354009 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.033006649 seconds)
  done (took 10.367703514 seconds)
done (took 45.802107342 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.205325769 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.124746834 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.001313546 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.843750219 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.822151213 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.620166514 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.113823012 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.822306516 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.768912434 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.787409403 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.616604811 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.601975593 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.157613685 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.749163667 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.282592956 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.824324295 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.997330585 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.85262909 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.994496109 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.990893024 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.987821772 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856013702 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.218874542 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.805353576 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.112866139 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.105830051 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.87309237 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.949486928 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.71315612 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.997213546 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.937240201 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.888955783 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.9496712 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.767149401 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.929272096 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.849132976 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836910755 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.113588214 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.117545143 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.744217156 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.812993626 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.929645974 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.999407033 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.010493309 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.786699723 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.200658058 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.102767481 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.176762161 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.918449672 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.58998522 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.209419926 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.907785555 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.783863827 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.586360812 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.915378037 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.17986315 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.972023411 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.196694736 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.398903012 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849888465 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.290348963 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.201633516 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.876036061 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.105817781 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.442634178 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.169608466 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.996308961 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.997942018 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.708001092 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82948088 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955623622 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.738749949 seconds)
done (took 119.780000811 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.120394313 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 1.997531389 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.13583596 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.387986622 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.156486469 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.128211165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.084596199 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.917483449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.113244977 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.912907502 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 1.998711123 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 1.998437705 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 1.274091103 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.146484205 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.394762885 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 1.273087307 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.097161274 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.804686833 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.913008418 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 1.993933088 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.002318424 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.20956614 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 1.989336211 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.924121893 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 1.992771782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.004384929 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.265128722 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.807841597 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 1.995325757 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 1.999033784 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.812512926 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.999344373 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.997773411 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 2.008062299 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.012662694 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.166348424 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.995417141 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.129701374 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.126136308 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.135766988 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.002384684 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 2.000752744 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.000011626 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.00002404 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.327850576 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.802798029 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.105665761 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.993514246 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 1.998011145 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.995835523 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.806187564 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 1.272267062 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.000726261 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.809102398 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 2.00757639 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 2.009546344 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.998236352 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.91694149 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.911167647 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 1.270649755 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.805677301 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.124680822 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.924526195 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.916028416 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.21419567 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.803349449 seconds)
  done (took 111.448027689 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.294577714 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.308303805 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.554942065 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.001982474 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.323572239 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.544725918 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.998270704 seconds)
  done (took 12.008869332 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.996726809 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.762558621 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327853772 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339530115 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.838079078 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.197290741 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882267904 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.137470749 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.998385349 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.353123595 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.992297074 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.834715946 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.000108406 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 1.997717258 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.323625931 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.136910999 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.267400315 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.956601071 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.874563584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.196840154 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.999040925 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.997578861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.343050019 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.140289577 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.014493335 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.945005124 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.755363703 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.999160066 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.065210147 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.535718129 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.064119234 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384260233 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.742820025 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 1.994889384 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.03595881 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.123134555 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.895199775 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.067653342 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.68995173 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.043791492 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.687887104 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.728207518 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.998899309 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.76857634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.550967583 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.229687277 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.763258029 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.862922127 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.730484677 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.735652473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.330267464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.700395745 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.591458941 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.001269172 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.364053604 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.996862677 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.84150603 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.699397281 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.779283486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.05262263 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.202688601 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.324674195 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.732129317 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.326361262 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.700124979 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.705574257 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.590056167 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.69475812 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324228536 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.717758817 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.315953353 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.663566379 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.189185169 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.218333742 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.998777698 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.009450062 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.996461521 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.84151452 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.002771601 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.936153289 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.652309289 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.969608474 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.000141445 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.007122005 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.04120316 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.169929297 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.127411647 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.667275729 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.19934516 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.833068446 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.568248528 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.340115579 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.704948744 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.633220525 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344951874 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.265723889 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.358989724 seconds)
  done (took 157.053515631 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.146077141 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.151700043 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.999583045 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.327599282 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.996141868 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.992916821 seconds)
  done (took 10.605004935 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.995356192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.134102991 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.127942281 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.143256791 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.429816989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.123196142 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.08818368 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.010606979 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.42656933 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.078934799 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.109304569 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.221875239 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.065836835 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.423818446 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.054444688 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.076858286 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.05289934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.069034356 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.075880184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370982916 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.004956868 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.426193117 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.436637865 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.009137125 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.114418521 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.086402934 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.270400186 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.082483946 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.077683589 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.001306066 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.248853883 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.111150996 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.998122874 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.004067455 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.059611956 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.007767647 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.142565574 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.225313227 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.067820152 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.110264097 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.202553151 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.435484527 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.079894163 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.21119708 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.9958193 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.006713446 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.226946542 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.274291637 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.062534158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.216602997 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.337634871 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.076603526 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.114276454 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.203477735 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.00222773 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.011202105 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.210942238 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.086200397 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.2476212 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.99813894 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.129798357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.107121829 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.997525867 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.056896594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.998594564 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.08301218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.992287541 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.200988784 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385369326 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.129672202 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369821158 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.148823238 seconds)
  done (took 99.17753957 seconds)
done (took 391.27823369 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.33767556 seconds)
  done (took 3.322079235 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.314367839 seconds)
  done (took 3.300921845 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.232099173 seconds)
  done (took 10.232277011 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.032524911 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.016903135 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.008698239 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 1.992990369 seconds)
  done (took 9.036555902 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.441917806 seconds)
  done (took 3.422195774 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 1.991398975 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 1.991836507 seconds)
  done (took 4.965043446 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.030756589 seconds)
  done (took 3.013641007 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.636737533 seconds)
  done (took 3.627140255 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.009522153 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.014987537 seconds)
  done (took 5.015025603 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 1.994285204 seconds)
  done (took 2.972942869 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.335814835 seconds)
  done (took 8.316483061 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.011251337 seconds)
  done (took 3.000438681 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.004295857 seconds)
  done (took 2.992070585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.891029225 seconds)
  done (took 3.878609885 seconds)
done (took 68.084472351 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 1.995735707 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 1.998766188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 1.997737247 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 1.998263663 seconds)
  done (took 8.975322862 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.009503311 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.625400576 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.844175326 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.000627844 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.365802269 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.016265026 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.01557997 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.674352606 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.918693404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.997536724 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.006978032 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.469447107 seconds)
  done (took 22.939025671 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.038548428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.037196491 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.020148282 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.067739271 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.021935855 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.070649764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.05652691 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.016849129 seconds)
  done (took 17.316755072 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.001343727 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 2.007373517 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.00028183 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.997433033 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.001380992 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.580383799 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.010289513 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 2.020852806 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.173149892 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.003983873 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.00134082 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.345427979 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 2.000042832 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.005464024 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.006108189 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 2.000144467 seconds)
  done (took 31.157476645 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.477282879 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.214227153 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.981106308 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.028342485 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.024550161 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 1.996827188 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.489524247 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.997205181 seconds)
  done (took 22.199916022 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.771101933 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.168426843 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.918128837 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 2.001743462 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 2.010884927 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.828851909 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.158576875 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.866476069 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.847990929 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.709632747 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.721839436 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.882820528 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.151477765 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.829537849 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.993139544 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.831790566 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.995072818 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.889243502 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.231122445 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.857832654 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.833571678 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.835849158 seconds)
  done (took 39.329264341 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.215765317 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.381073555 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.165352391 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.326167747 seconds)
  done (took 6.075590702 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.004174658 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 1.99920372 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.351732906 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.251775522 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 1.998450748 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 1.997804185 seconds)
  done (took 11.591419059 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306312395 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994905191 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993577388 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065667472 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994813132 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995574986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06540602 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412715361 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.054447857 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27044549 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003761945 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.308987294 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.238848115 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002863891 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023193015 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.880086681 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.223663272 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513901883 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997356207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994528839 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.220995362 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001241329 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99774079 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007235392 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997445249 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992355618 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.258216318 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991303586 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00390946 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002422828 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005420716 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997044046 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269275029 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355615674 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.130519362 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017300883 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023662763 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99727821 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.017165185 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.999976543 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011649638 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997404556 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006316322 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998753994 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.993433873 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995523783 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412445146 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.994354967 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 1.999677017 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99187402 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005324858 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307605587 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.036361785 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995457984 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100141883 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003035294 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.160225493 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336080527 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647725244 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999812476 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009369446 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 1.990740057 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008208634 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997389013 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604341638 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.042317614 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.032106275 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.048127969 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993684269 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001906382 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.140305067 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001222048 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.136139459 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995795469 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759417804 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99183503 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001367612 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599181534 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006924632 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.008552641 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.22347621 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997287352 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9983401 seconds)
    (84/481) benchmarking "5d"...
    done (took 1.994422801 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997922546 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731852045 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892700656 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.994250132 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.297502795 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411332237 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001055237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.120097473 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.214410734 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.216284953 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 1.99481342 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995901233 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 1.995344742 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001053391 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.165038003 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418818916 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997202344 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.135708192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.243082205 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.204417134 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005120342 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.863833557 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41674325 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003114896 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.189149206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990638326 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996256289 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.53481051 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995943921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003818816 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253491571 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995931882 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791981684 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996127205 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.063388341 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.017178155 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.250423548 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.842318735 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001664472 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362496919 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005750354 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993597948 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992702031 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994443767 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993018531 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.006778718 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001019328 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994315734 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 1.993733168 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992397659 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 1.998756771 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003378092 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 1.992545273 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.214978113 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001489916 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273229023 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009436062 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00075828 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995333278 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.216181702 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.996191235 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.156292458 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333331527 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996019579 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992166658 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001657253 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.249383811 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.111776913 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.242995724 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 1.99367124 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.239615027 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.022154705 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.471315291 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992315273 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995360696 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996548127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.001364509 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018220207 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541376928 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982588874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004249963 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99601063 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.099593479 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346652293 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995606437 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996272691 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.99640662 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001227796 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.474414915 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 1.99994994 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.218062547 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995567675 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.00095816 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.171283513 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.40584296 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529610578 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854809423 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.001041065 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.011326425 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 1.99993343 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997676869 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998961738 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99491642 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010913552 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995319287 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003938531 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537966704 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996486239 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00381254 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.024019694 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004511252 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.992739431 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999655318 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 1.996557209 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992651212 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997998252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000138467 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.218814134 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.115147194 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01272017 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.513792314 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011039221 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.999045326 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.991869469 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.222416455 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996130343 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50884913 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336650903 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000036957 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00707037 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.006292318 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.109990744 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.992622059 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994198523 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996326889 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.000539969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897083665 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.003501477 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999614609 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001497614 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663473218 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761057308 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480513172 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00354714 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 1.993515518 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991018742 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410499592 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993115017 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992454447 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.214875684 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413396142 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995975143 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41242288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.995418919 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636401816 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99809946 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.221067732 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993672049 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.006793048 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000300658 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.21096057 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257510332 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998569756 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992554508 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.000208599 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50327207 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99447937 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.17493909 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416058783 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993582957 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.999975137 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.03673959 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995769039 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992643878 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997780133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994119872 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00481484 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.993579286 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505788881 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006620668 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993608727 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608411776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017667208 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.418541457 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994594598 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.995057845 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004136686 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.000641635 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.997665668 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.994608603 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.238318137 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997254304 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994380306 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999710594 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48019174 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.870714947 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.993571963 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997796119 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791645824 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996611193 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002947014 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 1.995752597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.007571853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017012751 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997717906 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000697458 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 1.996367921 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006920094 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977762041 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508370421 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.003667754 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998844291 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99377066 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993370334 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.243367547 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.096876497 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.531698949 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.220962025 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006115885 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24697987 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.036859072 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007675541 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 1.997978517 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003390338 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00998474 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000679385 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.218937969 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004806104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 1.993399057 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062046738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.20964072 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990593433 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996488599 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999498153 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 1.996347657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.00591316 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756924544 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.212322837 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992797918 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001079524 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010844845 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.268139668 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281529409 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999328757 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.007117291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.012284926 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000339397 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017628074 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003305893 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.103401598 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.296757259 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995323805 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.00288509 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.99515763 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542374693 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760773531 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539045714 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001202279 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996522575 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997619836 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99447701 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.246516933 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996683205 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274046116 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996186052 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.013325607 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.168423904 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001549012 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012687036 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.210879092 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270778794 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996634444 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007594813 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993488747 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 1.992783623 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001945587 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.206554473 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512799635 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582683071 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994835077 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996565543 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.417905279 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269117615 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993201087 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995603795 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996732771 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.00324002 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012468133 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.001261821 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006238607 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.229227852 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995136264 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356684819 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.002774432 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.992027833 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.892013845 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997607929 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.24176979 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992518318 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999726433 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538543549 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623438085 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.25234475 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355197735 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992862993 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.998829331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.241691449 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.000173794 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011948371 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998465464 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994341547 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 1.99889254 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003852872 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540943226 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.248497375 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.14888243 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.998303782 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217376089 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.000581561 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.218499976 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737371615 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.209355061 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00231696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999000792 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99324318 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542541963 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005372491 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996630914 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.057106923 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018399668 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001562562 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.252661856 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.875984788 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 1.994065462 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593860829 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.206711104 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.150833348 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99456145 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62086887 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542705155 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.994249075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512558064 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992772501 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993667596 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.278456736 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.994769695 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999794644 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286816475 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.021760947 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006278788 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025584738 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.539690225 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652357048 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.014110688 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995376732 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 1.997872256 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994431271 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082945849 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992343787 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012324552 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.00924398 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997836781 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99621805 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842920107 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.999104916 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001675155 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 1.994116647 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996556687 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.99429355 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.00834557 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.001006487 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018960033 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314331027 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511134863 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998169778 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.613735452 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.319968694 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.246448783 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.999958612 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 1.993603615 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.133500375 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990768613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996389171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994862108 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996791391 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591325593 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.000708257 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.995849395 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.051083826 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.203818167 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.208177959 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010868075 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025297112 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001182738 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.15790037 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 1.997896862 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992119092 seconds)
  done (took 853.012068936 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.00371927 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.994490801 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.945369674 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.782514458 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.885784563 seconds)
  done (took 10.60326557 seconds)
done (took 1024.191125251 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.020641572 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.018685777 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.020194393 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.019706549 seconds)
  done (took 5.071075831 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 1.992095206 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.002098672 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.000813144 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.997280618 seconds)
  done (took 8.984062587 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.337710345 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.506927206 seconds)
  done (took 3.828974072 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.003042715 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.761901379 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.739403645 seconds)
  done (took 6.494081801 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.29778441 seconds)
  done (took 2.283916217 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.318823472 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.366543519 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.143482114 seconds)
  done (took 4.817523776 seconds)
done (took 32.474672886 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.995058656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.763971359 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.158778281 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.998477495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.156189016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.155273221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.278351491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.001592619 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.999468829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.003224881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.996523067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.156592641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.269000532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.785167548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.271353159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.765641337 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.160399641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.003334537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.996669754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.995732198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.278837607 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.00112537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.994208607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.998476043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.156564736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.142364401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.997216219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.763561145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.998210921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.993543952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.143287056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.998172806 seconds)
  done (took 70.375341183 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.995607361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.000519079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.011300146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.000715169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 1.998617345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 1.999793029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.997565796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.004221339 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.995643065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.00117404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.994332484 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 1.99278772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.998568147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.993296243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.994443446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.995910261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 1.99298174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.996044865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.998308002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.997700186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.998139674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.996278528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.999317946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.02047678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.001376705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 1.997344752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.00029503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.999711687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.994215868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.997104116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 1.997635627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.995898219 seconds)
  done (took 64.95859258 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.998463432 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.999539725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 1.999285274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.005543569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 1.997992211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 1.995820605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.002605009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.993466124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.007169274 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.001509346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.002022603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 1.997220162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.009923762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.999815506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.997209719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.998762203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.000662485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.009069396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.994147617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.994243041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.994507352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.992503491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.991516092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.994130247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.000336838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 1.997849769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.997794263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.002041896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.999642178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.997754136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 1.99362027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.997946571 seconds)
  done (took 64.960865276 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.238156429 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.423375523 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.012431779 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.996830456 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.001033969 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.26068055 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.997025339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.237977455 seconds)
  done (took 14.159614604 seconds)
done (took 215.441477104 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 1.021483845 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 1.020471414 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 1.022416137 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 1.021467002 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 1.017316372 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 1.017988038 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 1.025654353 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 1.013026813 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 1.019402051 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 1.016699344 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 1.013864579 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 1.022261923 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 1.014159405 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 1.15400125 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 1.039223033 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 1.02828146 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 1.017698825 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 1.026829544 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 1.025486141 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 1.023257839 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 1.01649126 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 1.020324697 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 1.020076378 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 1.014213391 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 1.046500906 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 1.019149099 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 1.011695199 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 1.017000995 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 1.014656521 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 1.025947562 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 1.017782591 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 1.120658729 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 1.017947846 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 1.01651953 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 1.023861944 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 1.031510272 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 1.024507047 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 1.021279385 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 1.017496617 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 1.015123994 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 1.014961931 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 1.024537696 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 1.02047238 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 1.013511369 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 1.022252449 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 1.01739128 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 1.015670198 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 1.017118677 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 1.017035565 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 1.022037145 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 1.017573489 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 1.016519003 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 1.013658218 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 1.020979464 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 1.013800118 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 1.023445899 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 1.033230151 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 1.019974655 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 1.018893371 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 1.028829879 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 1.014437969 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 1.020112277 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 1.015021558 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 1.019396161 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 1.014483775 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 1.01787451 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 1.026312204 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 1.01991599 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 1.017069466 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 1.017109005 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 1.016725471 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 1.022188532 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 1.019249622 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 1.017582725 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 1.020194874 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 1.01862594 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 1.042270695 seconds)
  done (took 79.819303154 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 1.139528676 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 1.888101734 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 1.246041496 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 1.172869335 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 1.450275539 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 1.994873375 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 2.007607008 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 1.995737866 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 1.835867344 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 1.827148578 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 1.17742755 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 2.015960823 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 1.886626023 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 1.254832356 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 1.116647412 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 1.99741807 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 1.159689354 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 1.878125704 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 1.277429437 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 1.105177213 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 1.141681709 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 1.289909506 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 1.293922229 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 1.610829477 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 1.21994479 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 1.993315041 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 1.834140575 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 1.115603881 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 2.003696996 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 1.127802861 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 1.106906477 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 1.159873264 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 1.239106777 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 1.128041093 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 1.994959657 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 1.107555969 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 1.996514714 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 1.83057033 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 1.993773008 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 1.194773164 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 1.435128907 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 1.143680058 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 1.267536535 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 1.343429339 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 1.593314663 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 1.130240358 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 1.830519491 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 1.829171026 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 1.130872078 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 1.998208513 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 1.164645786 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 1.99652644 seconds)
  done (took 79.67863283 seconds)
done (took 160.485470757 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.009771165 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.200854472 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 1.998349617 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.991692889 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.0440284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.019623411 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.99708205 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 1.99347092 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.45460653 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 1.997938074 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.007201703 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.020019008 seconds)
done (took 25.724688352 seconds)
SAVING RESULT...
DONE!
