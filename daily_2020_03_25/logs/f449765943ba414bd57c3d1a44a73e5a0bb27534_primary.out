cset: moving following pidspec: 3152
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.206788773 seconds)
loading group "string"... done (took 0.57478825 seconds)
loading group "linalg"... done (took 7.544497008 seconds)
loading group "parallel"... done (took 0.156427425 seconds)
loading group "find"... done (took 1.207666383 seconds)
loading group "tuple"... done (took 1.789714271 seconds)
loading group "dates"... done (took 1.263004741 seconds)
loading group "micro"... done (took 0.221859277 seconds)
loading group "io"... done (took 0.909492275 seconds)
loading group "scalar"... done (took 37.377438275 seconds)
loading group "sparse"... done (took 11.708452047 seconds)
loading group "broadcast"... done (took 0.939797889 seconds)
loading group "union"... done (took 12.159690137 seconds)
loading group "simd"... done (took 4.456019545 seconds)
loading group "random"... done (took 8.927856397 seconds)
loading group "problem"... done (took 1.830972091 seconds)
loading group "array"... done (took 20.6394687 seconds)
loading group "misc"... done (took 1.693688993 seconds)
loading group "sort"... done (took 3.260517115 seconds)
loading group "collection"... done (took 17.018621187 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51890932 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123702618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132994447 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119384992 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147141579 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117211399 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125322348 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086927567 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.828670502 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147070036 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116618412 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.398048404 seconds)
done (took 5.319398623 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176782079 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084047879 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084453473 seconds)
  done (took 1.3092264 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068832991 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126941173 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068985997 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070285303 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070004981 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070402703 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069148412 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06975115 seconds)
  done (took 1.686478542 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076457671 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071660095 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068832537 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071136194 seconds)
  done (took 1.427879444 seconds)
done (took 5.822140019 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.744544944 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210667093 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186279691 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.383968614 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128118562 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168871082 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6546244 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319061651 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186899773 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077644617 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108050159 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337104701 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120263964 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64506278 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079610287 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091703136 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140203646 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434479813 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069659288 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084851323 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091617689 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130924376 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090521557 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078176188 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149425221 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070307795 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133058438 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08286763 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069112841 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214339033 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175047136 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667082995 seconds)
  done (took 10.297532194 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100393731 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100220152 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07175987 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128577884 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099805297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071752156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077503011 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070966126 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09159253 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130513233 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093160465 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107638994 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068333848 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071081965 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087051061 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210940862 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084994488 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085762974 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074846181 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083051887 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115900748 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082796839 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085795355 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084815291 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130218032 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183405945 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102194446 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102489924 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071517981 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086838403 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119590959 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132878522 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070828461 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072270365 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128166579 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09693962 seconds)
  done (took 4.756493241 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.959444698 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14024474 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09081155 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131000511 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067630542 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107304 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068819278 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08201509 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204038129 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.417658242 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115458135 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.580971647 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110852681 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111763139 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104647081 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069618967 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070615034 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06906533 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.427284428 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100717795 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106582042 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081895159 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072185662 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070802077 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067006363 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069688115 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066647404 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070241469 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114383568 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077942305 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.303243149 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11932279 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069734736 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.904351467 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163561174 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068992522 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.235246549 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172589108 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094207333 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137388575 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071302055 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068024612 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155681973 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067174855 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072258378 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068632997 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088401475 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105214859 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120275651 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068469456 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068010135 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16429099 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067039483 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080685845 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.100699077 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157832867 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071849274 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069705323 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281084195 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09096356 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071864446 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06802136 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.165499513 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121393464 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069826825 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070067414 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070514387 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070822537 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379338488 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068852386 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.884815985 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075500871 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080059338 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072071406 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071478147 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07416383 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074424033 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089755142 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068761115 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076520897 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068357797 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068504732 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06884795 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085173566 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.361572088 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.17320425 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070547364 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068175738 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091794232 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097387777 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071717224 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068545536 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101117481 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070670586 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068833606 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069598185 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084704425 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072380916 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115349689 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070964389 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.083341605 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100844387 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067756238 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070932484 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067133419 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103181963 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080606876 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070053761 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.403420086 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072187054 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070332945 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068213154 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070177409 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068686081 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079825963 seconds)
  done (took 21.629937037 seconds)
done (took 38.783239336 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244714333 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078625771 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076146376 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075851565 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075618301 seconds)
  done (took 1.781232016 seconds)
done (took 3.001222471 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120065093 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097701564 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066949411 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099452887 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067727547 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100133505 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099620166 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078341097 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098949709 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066719425 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09631962 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066965946 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066899511 seconds)
  done (took 2.355056346 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084975916 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08660232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072309275 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084732316 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06649061 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084362086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084193046 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092979877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08388318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075355482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066296349 seconds)
  done (took 2.092890655 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084842959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085836357 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071390354 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084885281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066203072 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084869393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083943928 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087256875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083901484 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076303249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067060122 seconds)
  done (took 2.082282546 seconds)
done (took 7.736230379 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078615796 seconds)
  done (took 1.27532958 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.522658369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.644544262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081875599 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106763285 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183937328 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11250062 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.244854106 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087005466 seconds)
  done (took 8.350277304 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102688327 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070929853 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074006866 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073121522 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074141435 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070221615 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071639179 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07167086 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074238004 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070960643 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072876272 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073280673 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070965154 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074598955 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071872032 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070600173 seconds)
  done (took 2.463402728 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092949611 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092129377 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074825267 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076747423 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074207098 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073656145 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076736855 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074900239 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072512315 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074097162 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077164428 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075344332 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073432183 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066718915 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075789698 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078042474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072770038 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075811677 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076778388 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076883376 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076585645 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066673894 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074235361 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076259353 seconds)
  done (took 3.124341975 seconds)
done (took 16.420371564 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105225826 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069867508 seconds)
  done (took 1.377721605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081559676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082718282 seconds)
  done (took 1.374687334 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082285272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067583031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089830871 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079119119 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068194157 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06754687 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088287849 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068533279 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068016846 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067905593 seconds)
  done (took 1.958852549 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069990886 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077309431 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071443501 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082601287 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074901774 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066270425 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07310375 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069309089 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077930878 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065371296 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07337784 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084270624 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072845707 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086073205 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073002332 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071146264 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072614014 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069317857 seconds)
  done (took 2.544819975 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067897381 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068519666 seconds)
  done (took 1.353678137 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06935871 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066297272 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069079892 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068127293 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065610073 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064859651 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065812019 seconds)
  done (took 1.681937853 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357914594 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117482621 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300518536 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074044092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083128346 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24944199 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069548664 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073470962 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073216545 seconds)
  done (took 2.651916428 seconds)
done (took 14.166415677 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080971538 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08769953 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096799338 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368228581 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09350136 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06859107 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115562847 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17962068 seconds)
done (took 2.323302955 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213995535 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.653288846 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406889497 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202290566 seconds)
  done (took 2.485154809 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329659124 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089577225 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062483901 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069286822 seconds)
  done (took 1.781485013 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068761048 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071596046 seconds)
  done (took 1.366888606 seconds)
done (took 7.078007068 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068987259 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068454207 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066989974 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068860104 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066110996 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066164275 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08933619 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068241963 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068292592 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.068409919 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068729147 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06861526 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066213437 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066165595 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068021949 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068294065 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06588373 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17747311 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068347222 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066024203 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066039537 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069111561 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06598494 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067256736 seconds)
  done (took 3.007874515 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085231787 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067963708 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072918089 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072518331 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070680721 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073247087 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073328637 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068245483 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073163893 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070225917 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070932082 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070689118 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070174215 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070725471 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070591047 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071057153 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073218302 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068114476 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070466854 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070952523 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073142865 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068293438 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070928999 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072970611 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071010201 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070768678 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070280762 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068151271 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072840201 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071368198 seconds)
  done (took 3.37705952 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071647327 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066012939 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065730741 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072695311 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065713936 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066249416 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065201196 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065979108 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066651912 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065835203 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067291449 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065378401 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065670792 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066124235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066708488 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069988731 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080569781 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065744362 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065829077 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066269979 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069473872 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067866992 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066002065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06547493 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065644641 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065407134 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066445441 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065622156 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06735351 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065237117 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068997903 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069159567 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066928656 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074871588 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071007187 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065477082 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07011616 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06526989 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066739449 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065936699 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065559887 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065579893 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065752019 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072412627 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065964848 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066939321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065690398 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066931052 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066145256 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068764329 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066053115 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065512375 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067913746 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066956502 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069592366 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06522431 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066154497 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065597206 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066400073 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065374144 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065427627 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065650409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068102511 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066280884 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080520808 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0727248 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065830097 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067531298 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066582918 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068540187 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067563482 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080359863 seconds)
  done (took 6.100090826 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090093507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088642631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068208099 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067827956 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064148899 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066485024 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071403854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066090938 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067644438 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083707881 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066495106 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067457668 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067675271 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069599668 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06676094 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067500648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07455526 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06412354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0661835 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070014183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066615001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071241558 seconds)
  done (took 2.796176145 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147486902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072445239 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104831307 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078002127 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072022886 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076851364 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071872424 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0720026 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071803919 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070008597 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069937407 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071972083 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072240482 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069446283 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069660682 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069670135 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071973235 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069817172 seconds)
  done (took 2.633070162 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077633272 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068281859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08866961 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068085198 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068050734 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070838407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072171149 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075977834 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070742508 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068157036 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075990263 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070456915 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070544435 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067909029 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070635267 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068364448 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070751174 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068823552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075768316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072549292 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072279366 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076107165 seconds)
  done (took 2.821633199 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081346859 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069770405 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08254668 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069958955 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063879394 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066292723 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072113517 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068196138 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072464679 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069580943 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068059158 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066437837 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070832738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067793134 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070640375 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068006906 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069614428 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067893332 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070057822 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06414251 seconds)
  done (took 2.633496394 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086055764 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07011464 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069635549 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076507219 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06999178 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069766228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076559439 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070535354 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069890001 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0895698 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069554623 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070173972 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076242362 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076541602 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069719586 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07648048 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076547439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076069267 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070088298 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069990941 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089881947 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070238224 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076477271 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069961825 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069898465 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070118186 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069879675 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073992012 seconds)
  done (took 3.305765492 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068649025 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06869673 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065819613 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065956237 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066386348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066398975 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066286196 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066401353 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068321301 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065870262 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068807124 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068478036 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068776792 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067984487 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068081156 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068531316 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068172383 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066045284 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065988623 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065907148 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068412415 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068776263 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06835088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066114796 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065846207 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068149707 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065855991 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066330513 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068772591 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066205654 seconds)
  done (took 3.257475465 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077060078 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074438096 seconds)
  done (took 1.38947316 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065423511 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082099814 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065499558 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073022966 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071642696 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069019582 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074880217 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072112342 seconds)
  done (took 1.807247328 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082658206 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078506401 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068766543 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078585771 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07794474 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084293832 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133992649 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068563087 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075046967 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066851845 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081479854 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068091554 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074292008 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069523606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073611515 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074951093 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066205943 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072896706 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070128596 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066932842 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069059676 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077520389 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071558878 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063962518 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070014869 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089673015 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07890199 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06815419 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071632642 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075667 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07424085 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063829425 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068395603 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068659138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066762729 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077101092 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08200953 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071282397 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07709762 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069161075 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076686843 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063596489 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073183928 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075107248 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078529041 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06866772 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068790642 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063851639 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067072697 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071174007 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064161968 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068986251 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063791093 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075653831 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072018319 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079405845 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067800073 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070053119 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071676365 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071962396 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075311789 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070730392 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071657561 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067612401 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078596754 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073253541 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076656445 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064443429 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063020479 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066926219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077749623 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090397526 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074581612 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068717384 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069072588 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067178054 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071779675 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069344523 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073851052 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075137611 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068435719 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073549972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075453123 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06903679 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071069249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074682482 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066872383 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07088532 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06674739 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083605969 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066737544 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068831999 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066497786 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077821344 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071988254 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067427571 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06698097 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075063402 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0627988 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067587606 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067885311 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068688438 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077054236 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070978361 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071006321 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075577013 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074295605 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068746845 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069798303 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.189492547 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070581038 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069860731 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07632302 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0637287 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072310358 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070478441 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069874352 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077630345 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066887674 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068413684 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076394801 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074811116 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06752834 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066103623 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071887808 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067809857 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071324477 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076760226 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067081906 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064271542 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064378116 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071934852 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068519074 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07181389 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07233787 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07293895 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063762346 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066795004 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072826303 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076844522 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069230984 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07005011 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074172641 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070033496 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06739624 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075612763 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071089597 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068532613 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074438267 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0701188 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064354749 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071477715 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071230233 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067363467 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072588237 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071146717 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070601942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068733371 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067453144 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074083326 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069776323 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067897263 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068896805 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068215268 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078735159 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071109685 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064024583 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066064689 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075278653 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067268976 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068346827 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068154283 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070909491 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068656823 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06690348 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067868085 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070599968 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076410682 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071954744 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069073753 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074320847 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080464726 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067971176 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07102892 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067983989 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069158226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069336065 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077465574 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074695248 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072614151 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071438863 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065912823 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074190587 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076367463 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068606179 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066701186 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068869007 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072029693 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074398084 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072030244 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068845467 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066674895 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068942198 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07024168 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071019417 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067564444 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068036516 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072744953 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066840975 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072766937 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068175881 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077637759 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070507662 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063087943 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069370669 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066247085 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073496157 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063040626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066340773 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067273105 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067975519 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067031163 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.197298484 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064654463 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076115757 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07711533 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07040486 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069022305 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069057135 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075677249 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070483004 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072867263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072427273 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075163904 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079503685 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06944333 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072275013 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081827039 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068152924 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06388428 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07391002 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067513861 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068361592 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067435214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067040083 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072115634 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076187995 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075752972 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063221852 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071463363 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067032546 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06903055 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06396324 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073704227 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071313466 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069687505 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075698816 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068958957 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069532154 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072405923 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067993738 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068808498 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06992867 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071586134 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069143616 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070513206 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068453046 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071520782 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06845009 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066368174 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070181351 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06872393 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069776454 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073433166 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068485121 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069803115 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070704773 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069051881 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069271169 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070388396 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068618225 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071796571 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070075589 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069640435 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070895926 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064017244 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07568538 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068261694 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075641813 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069159289 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06627683 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074344181 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071031263 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073171698 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069505719 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069824516 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070418741 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068929677 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071661568 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076175103 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067464052 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079627061 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075793097 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069781415 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071570357 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069435358 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070316393 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068339851 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070104096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069038808 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069160863 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068334697 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073425861 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071719709 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069578326 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070392734 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068788433 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068926933 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069142373 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063211428 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068477162 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067933762 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06803755 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077277877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068534394 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068271022 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067385384 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068250498 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067065696 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065254851 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07395145 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073995395 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067371587 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073543126 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067487415 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069043213 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077517181 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.192886331 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068268675 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067968885 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068494152 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076579214 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06937816 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078218987 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069854094 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068870541 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066710354 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06992686 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067753451 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064027078 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067310094 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071972855 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068798201 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068140597 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06852132 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071709185 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069260036 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078144781 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068337324 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070756905 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068387811 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065943301 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068487557 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068944206 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071657495 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068681802 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067642477 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066925041 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069315291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069677952 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071278511 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06848737 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070961904 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075466518 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068823138 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071588162 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071132576 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063109159 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071663199 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067801421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067942566 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067963889 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072604482 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075210939 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069008852 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077246283 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068320151 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069811887 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068427459 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067126211 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06824836 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068216573 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068394162 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.0686926 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069437572 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076014492 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066553044 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072022962 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069391467 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069429221 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075396481 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06908822 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071973798 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073686282 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070136285 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070279674 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077235089 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072252304 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071995513 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069145841 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070971036 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074362262 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068914921 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074930197 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069402079 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06901856 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070796582 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067028936 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068411632 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068600902 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067887377 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074104888 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069111224 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068060234 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068537525 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067410196 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069970312 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07136274 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076621218 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071803268 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072291648 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06460459 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066626758 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06885582 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066534902 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070377388 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070678769 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074082154 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070593587 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069071496 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067406926 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077460272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07450521 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072188609 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066758036 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071626666 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06810659 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070339806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068927466 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068167557 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068453563 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071121588 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069008079 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066990349 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073432897 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07094073 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067827343 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069487019 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068652839 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067945474 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062938273 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067999714 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069157764 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07206912 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069904801 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067858303 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077405662 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066051361 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068266583 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069522263 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066244674 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071309296 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063043853 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069854358 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067483964 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06757768 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063052206 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067251653 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066234369 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069334345 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067453264 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063346209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077578553 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076022531 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071099997 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066849142 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064796917 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062524099 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062261739 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06673586 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066534757 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068532203 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075584002 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066109268 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066067401 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061873497 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066124319 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069190567 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069764983 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064001606 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062633835 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066748232 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069666277 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071333753 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065401677 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066146801 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069661247 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069047076 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064229863 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068180423 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063385556 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070481776 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077026462 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066609176 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067389593 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071951047 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073286217 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066960642 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062435141 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066846136 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070376272 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067657551 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066857494 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067911493 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080045084 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069254788 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065948619 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066034669 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069892342 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069244472 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074288096 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067312701 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066987507 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070297862 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0677483 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072274739 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069860748 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072542231 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069939015 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069646566 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06495664 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066772934 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064769333 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066469098 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06678048 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066899557 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069906038 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07179291 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066515627 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076205135 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074999819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068490524 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063366908 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06617687 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06666828 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062228597 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066726887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065415588 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065110584 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065169526 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065478056 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068047536 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070977179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067798986 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066386838 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067008546 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061065754 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069445447 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069187031 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067226216 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.304228895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070334071 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070795127 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075826666 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073896696 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069326087 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073343991 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073556337 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072728859 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066831773 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078639774 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070535582 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072918833 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070703458 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071139237 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071055886 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07488627 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074643681 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072207474 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072900348 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074403346 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072119985 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068259919 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068082299 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075838675 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068926222 seconds)
  done (took 43.78579712 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104081918 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068353407 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066135681 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066286005 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077417004 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067506922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066976533 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067912378 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067178664 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069551687 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06675936 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066505559 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0741988 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081261711 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076392873 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070822137 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066509702 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067295295 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066394317 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067693717 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074356837 seconds)
  done (took 2.873840375 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076555292 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080661869 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078785981 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085464927 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074700982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073699878 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077549265 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073510028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081621816 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075807437 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081123186 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073497535 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074801553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07497651 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075074985 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073331529 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08061457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073523451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07318005 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077161719 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073355748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077769713 seconds)
  done (took 3.040031595 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06980374 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068389751 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07091533 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064327981 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068718709 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065162688 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07264017 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066897295 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071453641 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06888908 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06858655 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068435374 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07083069 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064417668 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069189063 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067384259 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.1083951 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071555404 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069105795 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070202162 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06497117 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071222241 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064744191 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065914775 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069036306 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072405882 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070356243 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067605557 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069089576 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068520064 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069542943 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067348336 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07130455 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069956047 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069050777 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068595812 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06866111 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071569031 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064786572 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067472214 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069906241 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065845804 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069620958 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070517252 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067983558 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067855186 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070989646 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.0686564 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064358447 seconds)
  done (took 4.759349765 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080703802 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111832379 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070271216 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090396212 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081634497 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074567865 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072789583 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0921636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066732919 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067043803 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082911552 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081085828 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068782249 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072942272 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075505533 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068727266 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069256506 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067464151 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072274304 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068471566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071814707 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075814346 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082163118 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080185744 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071955637 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067510661 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067980225 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072993058 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079544804 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072740482 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072758118 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073879608 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082780108 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07417909 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067852588 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070540435 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083255205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069032899 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070578269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066520007 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070954426 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072815235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07508758 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084149803 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068627158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072929722 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068734314 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06600971 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079729283 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070991454 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075626688 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081162162 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071806784 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068428055 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07236454 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082479435 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06856662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066716121 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071161409 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079196631 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066137933 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071841582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080313563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07018849 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075782259 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080511411 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073449401 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072522379 seconds)
  done (took 6.553295371 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078026117 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097711814 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085419985 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084277809 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078335041 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078593818 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077899929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07768329 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078493173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08191399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078456496 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116547203 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073865651 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080193234 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086504756 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078127556 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078028064 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077746552 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078194121 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077880469 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078350303 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084017148 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07860788 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08471456 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081380539 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073890046 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078171873 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078080524 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084421224 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078158826 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081394179 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078302485 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07825164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084804925 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081659146 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077542251 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068857273 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092666862 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077398648 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077511771 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073023483 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083786194 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077663142 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073151471 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077326757 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077540593 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084011473 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081331374 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080425445 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081531645 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077034072 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08410963 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077834303 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07763709 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083727597 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0866458 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084186963 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084309328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077838705 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084018468 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083772985 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086493511 seconds)
  done (took 6.40265421 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083888195 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076181471 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08290742 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064578843 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069481524 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073978107 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066842029 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066853406 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075587494 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075428755 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077307264 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074065286 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07677669 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078178039 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073917224 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076872214 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073694037 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07438471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075969216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074459002 seconds)
  done (took 2.891524162 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077010653 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084615824 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068781949 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073358122 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071280657 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073617544 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070954476 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071992674 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069495088 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071921969 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078418375 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077598871 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069574706 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073738432 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07781178 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073243267 seconds)
  done (took 2.570319625 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084013679 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074482574 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080629242 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068783074 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068938504 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065373895 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068177342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063991092 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064970663 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080433505 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068328341 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079178846 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068928452 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06744153 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06518531 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073937061 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065808585 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065965816 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068541585 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079844609 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07223099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067160681 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071822916 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068414614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070673136 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072469203 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068108141 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068885254 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065789356 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068869026 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071224859 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071756286 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065344171 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06657944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068345081 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066635666 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069799699 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070633797 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075398398 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070182276 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068784755 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073078893 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070329137 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070991228 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064929827 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069609356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065245031 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07106069 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067003402 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070530478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068390132 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071203567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068627858 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075359421 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07096341 seconds)
  done (took 5.245337789 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081086539 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071595779 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064186278 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066396357 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071111099 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069354578 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072143393 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069149051 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070104185 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067139887 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070165437 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071644819 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069747806 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072299828 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069746613 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072175829 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064082126 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069735883 seconds)
  done (took 2.662695482 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073592739 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069053234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075054595 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068693224 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068611437 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070442242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064581777 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067478573 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066959421 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068767117 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06877755 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071057408 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066764357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071056499 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068400795 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068509682 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070681651 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06757676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068316384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064303473 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070626452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067155996 seconds)
  done (took 2.908720035 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093988667 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084632387 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139213573 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081191424 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086400798 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074229357 seconds)
  done (took 1.953007915 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093044459 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100912885 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069340452 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071103138 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077663561 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07170956 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071984319 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072155567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079161769 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077414846 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072308961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082217633 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079689693 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078798291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077446788 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07742187 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072452221 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072378612 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069062158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084288729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072778539 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079649325 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072498928 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072847007 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072591868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07903298 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080078993 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077754241 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072466059 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079492129 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077582051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072557058 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079925489 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077515379 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071693232 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079575927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07232748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08447104 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078148362 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078802719 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071504607 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077320116 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079594245 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07602758 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079634107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07311728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077622767 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072241923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0742745 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086233992 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077278844 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078981621 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077853433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080174208 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07976836 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08614854 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077734695 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079264953 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077440465 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077725923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078992873 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077876364 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078752869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07772644 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077219578 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079229314 seconds)
  done (took 6.511999524 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105769502 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069562812 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072446942 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077738998 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078913991 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072904877 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072674855 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072942183 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07256412 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069396249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108832974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072608954 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07914988 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078963378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072594088 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073290574 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072435293 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078978809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069438485 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086206013 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072717846 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079203494 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079223014 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079162795 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077841888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077613601 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07239136 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072746368 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072402739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072993388 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076716448 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072534507 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079004084 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069341893 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0798958 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072335608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072368278 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076699479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072118003 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077702285 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079027754 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084389458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07275053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072018579 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077735185 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072385092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072315665 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069652939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072313921 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069593534 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077027937 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077129154 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077378696 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078846822 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073014882 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072186515 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072467144 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072566235 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072401228 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077615167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078809529 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072394477 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086130748 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072871432 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072588016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07899674 seconds)
  done (took 6.437453883 seconds)
done (took 132.954364416 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195694952 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173105097 seconds)
  done (took 1.756761593 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071164287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098877674 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078097636 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130310691 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068450187 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102336058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101375554 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078866033 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068622735 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068439775 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068906633 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070711443 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133860168 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06879188 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068343985 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071095705 seconds)
  done (took 2.755838858 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099202929 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157168632 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101932183 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067431104 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099878402 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074211597 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068107675 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079103205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07268302 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068086752 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074313977 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072446903 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068110483 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07228163 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072541648 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074894638 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.0678852 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073908245 seconds)
  done (took 2.873665178 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097560124 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092548426 seconds)
  done (took 1.603364933 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159060457 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138654916 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205608483 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331146131 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155542449 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15127141 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142859755 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14330901 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120082471 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137023435 seconds)
  done (took 3.09272063 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09951754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148481531 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265154154 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116000844 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075213445 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092782324 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116955248 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08069828 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081129247 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081329568 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081100328 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078020793 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099677706 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074897674 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076575078 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078023916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103717929 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075389688 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076366361 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077464716 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100846033 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068797641 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07567643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075187321 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078365756 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079129895 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068777452 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068449635 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077384432 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076897768 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077881121 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091920853 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078484184 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10399411 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073106239 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105666774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078263783 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075304174 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076892895 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074963837 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079243549 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07943974 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075578122 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077926758 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06886863 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078159546 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069042988 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068818997 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079538376 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069898503 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079080656 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078108815 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104023606 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069662085 seconds)
  done (took 6.095575981 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108399658 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107635503 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072647007 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113635776 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104800554 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071215635 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105782382 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098906701 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108891726 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071957197 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070671165 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071897672 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08147474 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082236123 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116282279 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108636173 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07451331 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071744589 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108554946 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10858651 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070631698 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102772047 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098198347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108175407 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069592765 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072059238 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070690766 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072301574 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077663145 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078944331 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070772229 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081322073 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08519485 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07887136 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070050743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070617215 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070861919 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07994559 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080338143 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0801467 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078454173 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069424589 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070577835 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071421873 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071246626 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069960299 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079511447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081084264 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079060882 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07035053 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071944543 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07114406 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071786508 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080222397 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078250851 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081143186 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080084374 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070531147 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070561666 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072903031 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080530827 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080501629 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080434038 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071509757 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080590473 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07311905 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081166123 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084172159 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070875268 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072222733 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070875675 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070595173 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071946512 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078385557 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078522443 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072153217 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070862794 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07130576 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080219226 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079625019 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070264092 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077828796 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069833081 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070943906 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071879646 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071789108 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077587593 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079799423 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072179429 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07063124 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07015657 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069934736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06945646 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077419821 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079463458 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079222822 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078766526 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071169375 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078745074 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212488276 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072710711 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080039566 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071406425 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072241493 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071991757 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079210798 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078974274 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080032979 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070827149 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071816118 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07932306 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081344602 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070814486 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078888734 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080265149 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079361676 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069495037 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081968117 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071251358 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080667495 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070509667 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081160017 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070097654 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079806808 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071295363 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069882477 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070881436 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079886847 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072201338 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070496357 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071488795 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07066304 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079122148 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082004045 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072238738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079257769 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079096752 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071958496 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078993012 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070846429 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082264449 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070459101 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072150362 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069718883 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082341085 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071122542 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070624792 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070755723 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080343485 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070894521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080119495 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078465233 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069759283 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0823874 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081095459 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07767812 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081109091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071647896 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070183637 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070520165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070866999 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078502506 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079693196 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072004566 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070055182 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078054301 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080870954 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069694273 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078583703 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079227684 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079875429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071116937 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070690838 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081376977 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08106018 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079010082 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07888524 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079776898 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070614004 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078517823 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0790775 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070741238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083886483 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070594024 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082848183 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078373382 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077495695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078807006 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079700121 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079411051 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080366719 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08309421 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069601925 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070140699 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078821112 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069949639 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069932627 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077641877 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071692988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071489398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.218718305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07167385 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081595648 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070952198 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079998868 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069582301 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071995209 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08463084 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070591973 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071924288 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079520471 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07351671 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078516711 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081362014 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078918257 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070470908 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071746237 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080559243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079808465 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07075353 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070260873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072523601 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079004415 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07822534 seconds)
  done (took 19.041663314 seconds)
done (took 38.645416225 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.190599927 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143610867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.15683616 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112147551 seconds)
  done (took 2.099772846 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111598881 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097149158 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090225718 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06738824 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096747641 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06739663 seconds)
  done (took 1.976541005 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267821772 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185216966 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169160179 seconds)
  done (took 2.064737043 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.192226932 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177845015 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420293405 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255813137 seconds)
  done (took 2.590249942 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136715973 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086489046 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069301144 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084596554 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126267257 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153347589 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096722192 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120735898 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080196526 seconds)
  done (took 2.448606231 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140827 seconds)
done (took 12.765138236 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103150287 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.189030426 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094019976 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074241475 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098590774 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070301555 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092735047 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.216611757 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102322967 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120216543 seconds)
    (11/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080751053 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078014481 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081285173 seconds)
    (14/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090759694 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077862636 seconds)
    (16/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.168811261 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135056108 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.234977776 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076359163 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.161033077 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076362484 seconds)
    (22/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141893883 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.233884177 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192517817 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.179584009 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098782235 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074807854 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075163424 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076709941 seconds)
    (30/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079231488 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07926718 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075142487 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069124946 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.187945359 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110878946 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088836615 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075819578 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068616479 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.288029634 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.195957729 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.130159935 seconds)
    (42/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195135368 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.215440739 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187011383 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203820937 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.157237718 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.152525209 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.110659135 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203025595 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068338282 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181450256 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123104646 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079154825 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074703186 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15940545 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076284401 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.069475477 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075885677 seconds)
    (59/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077855432 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085687416 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068312654 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.159123288 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075641457 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08326241 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090175447 seconds)
    (66/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099964637 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092895316 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07798496 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06605704 seconds)
    (70/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094686708 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.174138675 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067905758 seconds)
    (73/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065406903 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076302443 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066689711 seconds)
    (76/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.112650815 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.173768279 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066333381 seconds)
    (79/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080217912 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166937187 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.219335776 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200339328 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056646358 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06897298 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07641788 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074712513 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168474033 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068396939 seconds)
    (89/309) benchmarking ("sort", Float32, false)...
    done (took 0.130278551 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095706757 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085188123 seconds)
    (92/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075098643 seconds)
    (93/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163150572 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09232354 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.221185573 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169431546 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090712339 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091663571 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078287976 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073945359 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054128031 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160182747 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090882255 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081698529 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075524465 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073357997 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.177709 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053887504 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.141027072 seconds)
    (110/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111665855 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074767248 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110149539 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053883166 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068440188 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075497768 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069028337 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055352026 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18097306 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152002128 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077593978 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074784646 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088060018 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066858876 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144405053 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075931233 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121809747 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054091285 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17733554 seconds)
    (129/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054909083 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100252591 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075884082 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.189314954 seconds)
    (133/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09984159 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075295479 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08827757 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06827315 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075886268 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.178752665 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073116981 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154472269 seconds)
    (141/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076274541 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077808148 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.072674782 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075754101 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055657565 seconds)
    (146/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054966055 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068015206 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129939199 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.073622237 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098778519 seconds)
    (151/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114368277 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066514288 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08916007 seconds)
    (154/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077490073 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177016132 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08404141 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075032005 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068427837 seconds)
    (159/309) benchmarking ("sort", Float64, false)...
    done (took 0.128598527 seconds)
    (160/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109960712 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088049591 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074438726 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067707304 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073776601 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110231265 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055100716 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075379885 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077049187 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075988137 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054208349 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09118355 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056577243 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090843976 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054644115 seconds)
    (175/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110673655 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067668386 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087583363 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077481534 seconds)
    (179/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065729718 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067421079 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.1361654 seconds)
    (182/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091383111 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087940162 seconds)
    (184/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070528528 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187958333 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054025934 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056394743 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086386982 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069390945 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053570259 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067580829 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067704397 seconds)
    (193/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054303823 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140497234 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056422226 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054810121 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13359506 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068425641 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152674648 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054197232 seconds)
    (201/309) benchmarking ("sort", Int8, false)...
    done (took 0.141938808 seconds)
    (202/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.0896727 seconds)
    (203/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053970534 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133405272 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069892579 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076493483 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06798402 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15349599 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153868871 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098209481 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173602603 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088845808 seconds)
    (213/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053096662 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080154257 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053691795 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085323701 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074246131 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088674355 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073509796 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067622702 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090416196 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069755559 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053562582 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07793797 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105037718 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090849112 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.112949481 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072725933 seconds)
    (229/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069251686 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069611356 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053139636 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073000747 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111357129 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073835827 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127941793 seconds)
    (236/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073217239 seconds)
    (237/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075328254 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077344997 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05530288 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134807101 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053567516 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05354012 seconds)
    (243/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054064394 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101005069 seconds)
    (245/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074116787 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086673082 seconds)
    (247/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054764634 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0657724 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07253428 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06814987 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06634792 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053158098 seconds)
    (253/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052980536 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054202895 seconds)
    (255/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063099196 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053472481 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.114389241 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063548176 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066322968 seconds)
    (260/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079850683 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065513553 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053841318 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075025983 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067002308 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053227112 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054681083 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053623774 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076519654 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054153448 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053707762 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154161314 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056102223 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055028681 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067785671 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074887115 seconds)
    (276/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066770005 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09147497 seconds)
    (278/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053098156 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065256636 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072625737 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068230938 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068000617 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173055006 seconds)
    (284/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069136034 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069311308 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067150311 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054551719 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053659748 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069752545 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067891949 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053550747 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068573501 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053778392 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07518896 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067073865 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074216625 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055009674 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070084736 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067641431 seconds)
    (300/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05434281 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07327102 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053554936 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053174752 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.09887035 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066381476 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054806034 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.358851971 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06251276 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097619641 seconds)
  done (took 31.175693658 seconds)
done (took 32.636689952 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085240682 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09611877 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079906085 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096769064 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085108272 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079923529 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077609136 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.0831187 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08500604 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086888631 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083467934 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060634252 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080291697 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080738204 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079966599 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095384894 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084622509 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078573519 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078425319 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07001332 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07847077 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070289348 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072473881 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05956448 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083165124 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076608424 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078890921 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078394004 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069753711 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069953906 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074158256 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078206512 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069878503 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084347311 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077786264 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077836538 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079142411 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080830318 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071258077 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070037247 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078790628 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069962516 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077494431 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077573024 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075983672 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075347924 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077418511 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080893842 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093065914 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071740359 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078527882 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078795561 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.08009656 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076945851 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07323398 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077293163 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074224295 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092569135 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076545524 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070774304 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078047704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07748145 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074954559 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077244706 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076519903 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079063159 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07976085 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07421862 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078455152 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075142794 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068433553 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076211532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072809694 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06863938 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079166221 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083136352 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067632721 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074864352 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075885759 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076427307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068482286 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070821493 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070217768 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074920178 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071558464 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057752584 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073014625 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075476584 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067608965 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076752214 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075816838 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075809469 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06999826 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079624137 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067849799 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073814831 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068921222 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068327234 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069908576 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072641802 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068342516 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071550654 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078751295 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069937295 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07513182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080909264 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068001312 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075392296 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067291174 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067720252 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0818566 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078032737 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06791082 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070127986 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067489643 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07577458 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067582157 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068260351 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067827062 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068034414 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07431754 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068426868 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070059349 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.213537373 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082449403 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068611744 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072637742 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069995952 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069608435 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074367382 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068419075 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067890768 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070593325 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064530066 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070282365 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068412178 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075907543 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069888312 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075892622 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06957813 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076080372 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073056722 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074376978 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07331449 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066754068 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062118774 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070457453 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070216535 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069860542 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067892642 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069565283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067680613 seconds)
done (took 13.077458924 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069027948 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131660455 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094448721 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094899292 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085787966 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069607632 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076878674 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096101715 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070198789 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098549205 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088419397 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086614816 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109920371 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067737534 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068995509 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072616366 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070053067 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081510122 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096940058 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087479293 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111873783 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06880002 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092590056 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08949932 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087860979 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092929186 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069752898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072620269 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072367882 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101400318 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089163989 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073401011 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07040258 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096396194 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092840592 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084054629 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068992198 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083507929 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069312748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068472676 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069999909 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096984753 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081502395 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08127963 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072533957 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078104541 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069626057 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083140666 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089290548 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080775535 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085817801 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099145431 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071586764 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084192788 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068064476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085597059 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078044435 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071194931 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069319082 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076261786 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068663015 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072160228 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081503581 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081396342 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072762296 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084579804 seconds)
  done (took 6.975644918 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085124174 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091951618 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084052369 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086529418 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067865849 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068859406 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06867242 seconds)
  done (took 2.149414114 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068959518 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08779197 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089003317 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089788246 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083241484 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088737422 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077951248 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069085244 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088703581 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070060535 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088388553 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098464278 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072932631 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075713619 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090516401 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069231313 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090682657 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069656795 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071916146 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090391019 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07141192 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097542295 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072611137 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069502867 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082194066 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069193131 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112573943 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07317803 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070785939 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07232356 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067864672 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105784437 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081686098 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076984015 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069128631 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083264832 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082813937 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067917717 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084494897 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077531169 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082157859 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069816404 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070568058 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067573689 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072890907 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078767698 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070267684 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07023459 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071903985 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087357731 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070519978 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082036028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071805417 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074365983 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071366223 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075201626 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078749594 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070784839 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087996458 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071189732 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084186419 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083366273 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081993887 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083517009 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071678267 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081839006 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082354348 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072160946 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07103939 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073105938 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083627928 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067780668 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07033737 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078962443 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071218189 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090565124 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090415433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070957863 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081713538 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06984962 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069509206 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069443603 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089884507 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074062929 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069130556 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072688432 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0726301 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067761842 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068310175 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073885965 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067708853 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070849123 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07210407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072074578 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072286374 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083848214 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072252742 seconds)
  done (took 9.092306199 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071658679 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070992516 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071768574 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070243257 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070537625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070446725 seconds)
  done (took 2.043883759 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091993919 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070904931 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080789865 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073704297 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101919378 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087154293 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08866708 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078730487 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083951001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080048695 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086946958 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088917023 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092392494 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074038504 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087708092 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073390636 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088442331 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076180998 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079609464 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075925675 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087108503 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074076621 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074354812 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082409787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077590464 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073690264 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079653167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079738901 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079231564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079407308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074026792 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077383206 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072698519 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078896679 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088056412 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072879874 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073390654 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078723279 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073685857 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080339102 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088503842 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074668995 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075896564 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078788002 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079066142 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072731503 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0791182 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080976861 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087439442 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07925832 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078626309 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073039277 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077117055 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078647705 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072472522 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078941351 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078945384 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087820567 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073708332 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072567946 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070590319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077023444 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078690302 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077840719 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079353477 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078354151 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073373673 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074514884 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075096369 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07366466 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078747398 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070705569 seconds)
  done (took 7.283676957 seconds)
done (took 29.123550402 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530777978 seconds)
  done (took 2.106034347 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594615325 seconds)
  done (took 2.200137193 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.955920435 seconds)
  done (took 8.556087533 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362706751 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465059754 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695925747 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13465948 seconds)
  done (took 3.295057258 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710443402 seconds)
  done (took 2.324452716 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22875977 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220412018 seconds)
  done (took 2.068192527 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375565481 seconds)
  done (took 1.977652744 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.093740221 seconds)
  done (took 2.700265797 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.232208548 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176357643 seconds)
  done (took 2.018658353 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450595753 seconds)
  done (took 2.058499483 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.794124892 seconds)
  done (took 6.404131766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215356838 seconds)
  done (took 1.866965243 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23565922 seconds)
  done (took 1.843327271 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.750849464 seconds)
  done (took 3.363613156 seconds)
done (took 44.402129934 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084881242 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086723594 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085921168 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082806393 seconds)
  done (took 1.933978833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078315523 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075909193 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078112525 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074384567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078323942 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074190796 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076126246 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077495997 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074532585 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074831176 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074972598 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074814972 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076855756 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076214935 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073285993 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076785716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077799777 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074570997 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077343665 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074490538 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072522429 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076947517 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076724441 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073613093 seconds)
  done (took 3.434510549 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080011524 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07463666 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076516565 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073746388 seconds)
  done (took 1.927890945 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079811292 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09113097 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090170387 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080776184 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091720716 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087255566 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07133438 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071460024 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072514695 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08007377 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070481299 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096065318 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08963939 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07977228 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081948359 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068272958 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070386641 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088046915 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080795679 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080617593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072498188 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080246061 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070920129 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090045599 seconds)
  done (took 3.554394815 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086475833 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100984563 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081708916 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09152422 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092776958 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067822164 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087497825 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09336857 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124881154 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067992507 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073070463 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06778831 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076085625 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067876878 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08280023 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110091284 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111069047 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071311224 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099167516 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068453908 seconds)
  done (took 3.350100394 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074716034 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071759734 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072235947 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068344706 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07880952 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074392864 seconds)
  done (took 2.070193165 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069919282 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070344426 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069554935 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069357127 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074025009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070034943 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068196175 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07017895 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070231136 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069771339 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06939491 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068456538 seconds)
  done (took 2.464239763 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.183085035 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071102796 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070444571 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06823778 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072964529 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068557337 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082661154 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070253587 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092554209 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069244697 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068799571 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070697067 seconds)
  done (took 2.616780025 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193550537 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077566473 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222916633 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147947415 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108433831 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111398441 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110524823 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110090606 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134715313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099218329 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158857052 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159641825 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106269786 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134101361 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089578008 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100786288 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149054307 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159142928 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105348548 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158926164 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139688903 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123522049 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142604339 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100852474 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104270634 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117628504 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073576473 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080674547 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162522109 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128903965 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139010491 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113307631 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091791298 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168319638 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16234136 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137116651 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144447475 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0852781 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102481218 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13057085 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189990677 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089415137 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300343784 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109764513 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082189116 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129792211 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115737195 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11731919 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103475422 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089987225 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140846678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174149632 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.12977648 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088138057 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121356837 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110307224 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110649053 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11138153 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169108506 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15277787 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125130703 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073313161 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108962067 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145960672 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12849924 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105836401 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120700154 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094297358 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129193682 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147999967 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119660278 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137351973 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113848546 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089455968 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117384795 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134131524 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124388746 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154934431 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12233901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075120968 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12001185 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099266227 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082070179 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143815388 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076897846 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167690592 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099059001 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105173131 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120594853 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106465525 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1070762 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151778655 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285139136 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103135921 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068514319 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105068233 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116897851 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139331956 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087980037 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105829656 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114022965 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.0785298 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129838658 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077309981 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120531808 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078098706 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119881507 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126658094 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078336228 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119616458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10228023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099802379 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127334926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152267228 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088413799 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081791858 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159550846 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119796182 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101951417 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137923229 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15063897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099911251 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099084537 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143261128 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164833638 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089672865 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15701737 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103946372 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08395311 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.0872602 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121032097 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10942905 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121101745 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083122297 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115828303 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159816682 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076693434 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095774406 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132980819 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079866619 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081375687 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104390186 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103628637 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095941646 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097691021 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101131055 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132527571 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2686794 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107350694 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122305 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098209984 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159502337 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088145547 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101628319 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102778965 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071721289 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127703932 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148195932 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079915815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154085125 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118205352 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113521299 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116084713 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084390922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133226013 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080164436 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073121816 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137227678 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108603712 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107468954 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144382516 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113778859 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120587081 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116062856 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128080426 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12649029 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126109583 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105512562 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088594768 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109981295 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124388015 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075036842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090595889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081448558 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104446097 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094942326 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083939607 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136346036 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120623429 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110673719 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109430385 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096977305 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141764628 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077541093 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12291979 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116386865 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094811612 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145107504 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144783051 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128448923 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098025885 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280539345 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072956107 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075481037 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087808677 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118537525 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083938474 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084042792 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111980017 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140622496 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123718636 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131213428 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119038845 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116438831 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147588362 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072127151 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118249987 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139214759 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118024568 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104250235 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090577475 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097771975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137637098 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104036982 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170520912 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111853065 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125567573 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148991018 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100765553 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080575442 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101311649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128671952 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102273871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137418726 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098315698 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088638012 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106560732 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079043731 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098292736 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123440728 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115896611 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131129035 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112102023 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130184098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079724399 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112236289 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118358158 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118709001 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066353366 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114799617 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152080035 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095067951 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114820924 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293571785 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079819815 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132628233 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16398764 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137996013 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085140009 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104573682 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117104061 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122577321 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115812634 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132983533 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104260237 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13222152 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107019288 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085325318 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087462051 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095435424 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102344506 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093840216 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102985684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110426421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095853639 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127500197 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102761472 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108575848 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115322892 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098509987 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092209169 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096954313 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16659235 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115717554 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162164679 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09912486 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137103543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155101022 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076647546 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080750147 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079096955 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134395601 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085389133 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127107072 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108447416 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115542942 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120795818 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13590551 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095828828 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071023323 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107311489 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129334751 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120742648 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097608925 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100643448 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153905444 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09671611 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22722821 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109897415 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11335957 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1024606 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161537721 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064328951 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10708047 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077411669 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08071932 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121589253 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143736051 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081877407 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099954095 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117107109 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110356315 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122935915 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097706262 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109934716 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122231492 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141809005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123609291 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089879823 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108453074 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124084832 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149059612 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101957141 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09704171 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166538157 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145332529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151393804 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086892141 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111615874 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112214507 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107097367 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134540497 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084326323 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155105962 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08298987 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133038042 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102242596 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089133754 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125358254 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109737399 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089003906 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140516549 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114080646 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083300498 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078706865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114032201 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116326435 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102930069 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07634805 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282969527 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075732565 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128799286 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153795197 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082057829 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103653414 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095812637 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081016343 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103187901 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101125592 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087238715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098498893 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162390383 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085758611 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141557022 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130326761 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109450713 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130175443 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101275173 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638475457 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078621176 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144656825 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113806218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162888368 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101480603 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11518777 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107490205 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118010187 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138588893 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101639625 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176252315 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128327639 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114109207 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0810579 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101562265 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102844595 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087649609 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109829459 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111074664 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113430844 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093390665 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113781789 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121444077 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083061834 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096341435 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149260773 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112729189 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1381495 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133026785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085100286 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114392361 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285028466 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081263254 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115970441 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144800494 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104047404 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099187692 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081522264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09862652 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152139753 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074732659 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151193495 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12013644 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10698422 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110664401 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107461816 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126325223 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10323433 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118696602 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090961189 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105960255 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111282263 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082719838 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078294429 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103209114 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10841145 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09782849 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096132082 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099097702 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144804622 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074069473 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098046457 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112711755 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138160126 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164548442 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087073923 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083895034 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116724776 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113051529 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110517835 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118957555 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080458512 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082374713 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080800617 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082027529 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106029309 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111455944 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112618647 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108298048 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155493372 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083718478 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225666962 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095324625 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103818356 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070806622 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079199921 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096277791 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247671259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104458498 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110839261 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152041729 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094639546 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090579324 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091576741 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076247835 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083854291 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122470386 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106571949 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115484484 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099604301 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064453575 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104414939 seconds)
  done (took 57.898886805 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109380683 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083509761 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097602866 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143580508 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122532849 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199480397 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156974442 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189270436 seconds)
  done (took 2.832428336 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069800943 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09551111 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102721534 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084138808 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068584413 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070080182 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.217632983 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082019763 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068401342 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094313712 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078919119 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070910885 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412272705 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068571417 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069746922 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065862201 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069420187 seconds)
  done (took 3.508767222 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375393128 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625774239 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.331989645 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078523858 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.901135074 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091498394 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.141653618 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134841885 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079998583 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54243293 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41358631 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129592799 seconds)
  done (took 18.581943165 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082277308 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076617533 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08940916 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089292839 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079550666 seconds)
  done (took 2.149571044 seconds)
done (took 107.970286122 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08354063 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.584037945 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056081706 seconds)
  done (took 2.401104672 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087782125 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086568254 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085498407 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083561237 seconds)
  done (took 2.081859645 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076295133 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077004195 seconds)
  done (took 1.885887074 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220605216 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16477116 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095571226 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083787094 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080215957 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081076005 seconds)
  done (took 1.981158556 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073663698 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076804879 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073600521 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077057971 seconds)
  done (took 2.03116621 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078285073 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055021601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056958081 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059956301 seconds)
  done (took 1.981801111 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086811908 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082696746 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079526655 seconds)
  done (took 1.980014935 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099660429 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087281682 seconds)
  done (took 1.918897244 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082660371 seconds)
  done (took 1.812107331 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09262001 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098404688 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126440841 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108799238 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13329372 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106802302 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08525673 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085697709 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077114604 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086745971 seconds)
  done (took 2.730048793 seconds)
done (took 23.101880736 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079172177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363511834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361929349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090606465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670758495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358468645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969394943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094385937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138683453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069924548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086182304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652837714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958735172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326746989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948218089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322399771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650529829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070175299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069632796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069937625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955686651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069429767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070231598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071002836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650013998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373244627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070908801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322873698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07064977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071868561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357763991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070823063 seconds)
  done (took 16.219209663 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08723247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118653285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074659937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08589305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072231148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07166967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073541498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070513335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120173713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069923598 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086671807 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0696076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073242686 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070059022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088688158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07041022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07120407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072732114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070438302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088220895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070118337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070439771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071339603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070071777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082660023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070470017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070457575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070762074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072467098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073476559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071414537 seconds)
  done (took 4.219212165 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11495635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123480435 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074648599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104478664 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111935813 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071556679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141502755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094838804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127702883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070153132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08683897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070460199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102370142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071173568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090175978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07092179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071473142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071590976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070107594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071018121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089377996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070023997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070772237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071585331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070719795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083854805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071036763 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0712962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071033647 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072267266 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073861677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070959115 seconds)
  done (took 4.449472893 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07428765 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076382704 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084200205 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08564334 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071347729 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073610456 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074900405 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071378848 seconds)
  done (took 2.3655878 seconds)
done (took 29.000177855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080173356 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070587272 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074243083 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089347831 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074911093 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079072279 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068873935 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076870504 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074017315 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074912537 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076828727 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070062518 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073425673 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069160705 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07583512 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070319879 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080542667 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074780706 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080438047 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080838007 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072158743 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.0753006 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077343221 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080526281 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080267942 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080664482 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079516892 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074976287 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070448091 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072838592 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078932208 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085297566 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071068214 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080827301 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070171363 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069748416 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07373019 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06999758 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080531964 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078473763 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071977618 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078553767 seconds)
  done (took 4.909809517 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088202158 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091913708 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085170434 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063505603 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067945894 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066742626 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089168609 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062030031 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061594094 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088263023 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058746857 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061557593 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064513124 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05668171 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062500513 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060104273 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063943028 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058307488 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061895732 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061585169 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089030961 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056706468 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079192697 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065106754 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059399031 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064495095 seconds)
  done (took 3.549559102 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075595607 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084379723 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090461875 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141007714 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111740493 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079223077 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080834103 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093827786 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094883702 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068830291 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073711851 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094449751 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088137934 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075180734 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069990802 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086191413 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086744348 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07099636 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075049474 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092184331 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08706541 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08723892 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091982107 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084871853 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069167826 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072321163 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073026337 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082822285 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072008162 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07805605 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072760256 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072960175 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071540164 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081068932 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072269446 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071661563 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094671476 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079553135 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079908478 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070195536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076702725 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070823839 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092430048 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123447653 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068790003 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075083824 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073170096 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078783428 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069041524 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094538392 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08074258 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069016945 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072593819 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068610921 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069518231 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072066442 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071335325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071757755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077647956 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074762499 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092053853 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073990905 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084825286 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069166887 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077506051 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068573669 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070627802 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068575346 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093637217 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071292931 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108454588 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070036591 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070698208 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077671433 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076937146 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075505427 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069876655 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084944478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079796071 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072367307 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079212499 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072592602 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071752729 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097090613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071928795 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071547538 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071060028 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07468372 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071722634 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070829063 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081518946 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069041727 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072035259 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085785355 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06914529 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07092389 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074925613 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073939531 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069191656 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079679052 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073894882 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070467208 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078826696 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069772485 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072777801 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081115319 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075191665 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068452166 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073281122 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074799095 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069913986 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070355982 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071597405 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070643004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077739937 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075151784 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073712335 seconds)
  done (took 10.916498721 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157060028 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148917621 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072824501 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141492016 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077833912 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079355662 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.142512994 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093221811 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070005368 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071323701 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069899993 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108670765 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104170395 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11461154 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079890429 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069981247 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092044489 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112517987 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145902736 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140509475 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092154402 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077688726 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072309699 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071288656 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071844316 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079275557 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086036665 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07830771 seconds)
  done (took 4.519203835 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081750999 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102723499 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076603299 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090990277 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090456374 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070052028 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071781123 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07259793 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085433357 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07966949 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069861585 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074397666 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076594914 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072468194 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070949278 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07628387 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075999843 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071213978 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073441093 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074590141 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08008425 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093092986 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073311857 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071488952 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074740708 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069795853 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066132512 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085417913 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071472925 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092990249 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06811086 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075223428 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083405305 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070958607 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070106912 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06997006 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070604204 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070278054 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07181323 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068631238 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068740851 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06054986 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069872185 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080497386 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082852863 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059529394 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074600482 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074790184 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074919097 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067288571 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072526978 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072956135 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072555112 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078357671 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073538081 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07457295 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070849961 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075516408 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077978506 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07069476 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067407494 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068654715 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07413854 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067246836 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084755913 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074393674 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068502107 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069736316 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071576136 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083003016 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06951008 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074404403 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068492391 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071880313 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07497873 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071746405 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071638306 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068941959 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069694649 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070460363 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058795023 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069892887 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056343058 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072356055 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06814246 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069069356 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069986927 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074929308 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081445042 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071413521 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075619072 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071328542 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069405177 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072765891 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062979893 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072603163 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079353717 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083940288 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070210644 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068092976 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081557691 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074671398 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06932659 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059044002 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073919332 seconds)
  done (took 9.512359135 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09076493 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071563445 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083452794 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089745997 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086960932 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076442811 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079513696 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0711755 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084401361 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075811464 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078339266 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069781591 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079736794 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079336508 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071509077 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079022063 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073227607 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08401343 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083299486 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070169847 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078008725 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081777286 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09055124 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081691577 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080215162 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081802797 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090354831 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.0788745 seconds)
  done (took 4.046183728 seconds)
done (took 39.20321492 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.845942755 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.002247369 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.829260394 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.142865974 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.90303325 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.853108499 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.034396764 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.824294865 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.020020137 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.861672984 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.140359939 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.924374555 seconds)
done (took 66.271554989 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.901556323 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.965670185 seconds)
    (2/2) benchmarking "String"...
    done (took 2.057325673 seconds)
  done (took 5.777394704 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.042605409 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.406975514 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.070079233 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.823815769 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.833126482 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.127728728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.612984283 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.332462921 seconds)
  done (took 30.961802419 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.984919839 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.048797556 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.515087115 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.543467377 seconds)
  done (took 15.897735042 seconds)
done (took 64.427932141 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.831964434 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.841795199 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.827221228 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.806585004 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.87948405 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.838600463 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.382660396 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.893064043 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.82194149 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.806050697 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.821189175 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.240569017 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.838594089 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.246979808 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.823158922 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.825948888 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.851040343 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.392266115 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.978245393 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.829008444 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.837551948 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.879245637 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.823504621 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.993881492 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.858912846 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.823690837 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226010799 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.831113836 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.435088628 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.822530777 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.853189458 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.334978869 seconds)
  done (took 206.247451082 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.823791515 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.654237519 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.743274488 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.853516817 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.224264858 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.005175764 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.924906146 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.281769223 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.825096435 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.841628771 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.011456931 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.823427365 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.027107142 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.777086549 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.851523634 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.898997995 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.976194448 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.028382051 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.861578663 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.99288471 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.826933302 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.800221877 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.751310846 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.996903664 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.842260544 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.896470672 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.848526991 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.829376761 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.019769941 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.939145476 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.858731398 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.86482524 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.013856177 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.698489866 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.846218692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.848820034 seconds)
  done (took 171.062682794 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.032577619 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.824375448 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.82427786 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.825546231 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.832851744 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.824686068 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.946568476 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.951869205 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.453229321 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.583512661 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.827524188 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.875443577 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.824682766 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631537686 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.824542411 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.891242725 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.836062445 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.825657242 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.841656877 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.850027219 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.827480692 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.826213825 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.951080875 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.837952363 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.826508196 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.832444305 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.825551539 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830879165 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.196594167 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.825947446 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.871391591 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.826741707 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831730992 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.065080346 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.827394906 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.825403267 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.679529219 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.035732719 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.919518364 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.828019578 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833083346 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.826719741 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.044382267 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.828793724 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.826026648 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.82636683 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.828776936 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974960053 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.825965918 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.950733564 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.825963919 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.312753233 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.825693034 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.826772361 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.49225235 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.425117151 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.829413143 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.827381243 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.829768435 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.8263095 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.828024668 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.833292657 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.480955946 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.900576406 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.827602589 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.830116819 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832848496 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.827670726 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.957393416 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.828520333 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.182026649 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.8850959 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.064065601 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947865395 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.829475359 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.894865855 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.919359803 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.828928043 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.827631337 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.828015849 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.828050448 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.908738513 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.828040866 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.952589333 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.836231679 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.830548367 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.879349259 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.898493219 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.82930572 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687350768 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.831497061 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.829882262 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.106227553 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.895597293 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.830569048 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.829437799 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.953570967 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.951568883 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.543464743 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.832079688 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.487652334 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.965090719 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.829340423 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.829268452 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.829711268 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.979785623 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.833308034 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.911324844 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.834499917 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.833445747 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.862022374 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.830994896 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.883172956 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.832651875 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.203726784 seconds)
  done (took 408.730598603 seconds)
done (took 789.88035653 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423720635 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.399274069 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.493398645 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413245932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.391255397 seconds)
  done (took 13.881440125 seconds)
done (took 15.643851368 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.920415973 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.925937123 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.853977222 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.921577997 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.851185184 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.921221793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903834391 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.85528275 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888676077 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.854131008 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892711889 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.855740982 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.842649661 seconds)
  done (took 26.248785525 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.067999546 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.288201016 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.906549702 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.077049188 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.881276138 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.080662059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.019208298 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.985485171 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.988605763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.850774333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.847065949 seconds)
  done (took 23.754580681 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.081142618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.087103174 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.913826159 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.080948274 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.885794514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.082737293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.00182932 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.994527226 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.990616586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.850751609 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.847555306 seconds)
  done (took 23.579165998 seconds)
done (took 75.344899206 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.8402109 seconds)
  done (took 3.603258234 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.870671487 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.046624918 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.850096509 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.845303715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.840646835 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.842174637 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.845925797 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.840276666 seconds)
  done (took 16.745294706 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.842238389 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.84038704 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.843932641 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.843534194 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.842502478 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.840203065 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.84058961 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.840554223 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.843274112 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.840991583 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.842098179 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.843039107 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.840315287 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.843552478 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.840495479 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.839540712 seconds)
  done (took 31.231341575 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.842807278 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.840575892 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.840798226 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.841113305 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.841156476 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.841214116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.840924514 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.842328172 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.840966284 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.840900615 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.842136177 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.84156912 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.841181317 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.841475264 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.840824486 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.841776053 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.842268908 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.841171813 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.845967533 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.84232622 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.842006498 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.841619303 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.841931582 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.842918795 seconds)
  done (took 45.968288095 seconds)
done (took 99.31274728 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.694124883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.537540181 seconds)
  done (took 9.996799847 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.847476287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.845239479 seconds)
  done (took 5.532122493 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.844478607 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.845606438 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.845244032 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.845952447 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.845457797 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.845102899 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.845129863 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.845560532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.846403645 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.846439135 seconds)
  done (took 20.222467557 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.84608029 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.847042122 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.84376061 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.844900451 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.845410206 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.843111033 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.844549539 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.846561334 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.845596068 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.843524847 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.846242917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.843673006 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.846496243 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.843105595 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.846080068 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.842986237 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.843488175 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.843974746 seconds)
  done (took 34.973906629 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.846527738 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.846856105 seconds)
  done (took 5.460200431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.844442633 seconds)
    (2/7) benchmarking "second"...
    done (took 1.843368708 seconds)
    (3/7) benchmarking "month"...
    done (took 1.843909589 seconds)
    (4/7) benchmarking "year"...
    done (took 1.844166545 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.844149166 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.845008467 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.844219335 seconds)
  done (took 14.676652228 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.847564909 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.989023306 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.048781967 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.52083256 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.847465176 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.850580391 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.81974566 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.851317806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.851783801 seconds)
  done (took 20.395122598 seconds)
done (took 113.024242919 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.745761209 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.840124729 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.102812448 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.898828574 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.865895665 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.181462929 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.850215872 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.113492448 seconds)
done (took 43.368936209 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.928741369 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.506375671 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.559680246 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.87052607 seconds)
  done (took 15.705570593 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.827450404 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.13889337 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.84708086 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.671508114 seconds)
  done (took 22.257884323 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.208905878 seconds)
    (2/2) benchmarking "read"...
    done (took 2.192718836 seconds)
  done (took 6.174609425 seconds)
done (took 52.838976712 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848676486 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.848864234 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.846273585 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.84833697 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.846401379 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.846223474 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.847315628 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.849093263 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.849016989 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.848936714 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.84908088 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849876231 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847597866 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847590368 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850541846 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.849679645 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.848092132 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846972272 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.849867033 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.847729736 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847971352 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850679195 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.847399138 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.848013281 seconds)
  done (took 46.131946827 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.850168471 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.848984579 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.84933913 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.850459778 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.847362468 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.851000282 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.850048282 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.847436611 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.850210403 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.850303146 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847168606 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.848757166 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.850341624 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.847848111 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850283719 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.847731088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.851535152 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847904019 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850089823 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.848565604 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.851186836 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849391158 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.848008837 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850830042 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.847894828 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848976039 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.851538272 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.849285493 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851660912 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.849469481 seconds)
  done (took 57.254971621 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.85552549 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.858614924 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.852038534 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.851973065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.851302002 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.852471835 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.853338362 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.854339508 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.852121364 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.851626816 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.852395807 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.852169076 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.851400945 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.852010328 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.852073924 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.852145359 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.852363562 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.852508623 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.853193289 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.852502965 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.853066249 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.852306101 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.852799324 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.852326786 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.853072321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.852149171 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.852070742 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.853535508 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.853146916 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.852736759 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.852863755 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.852471731 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.853057725 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.852723937 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.85403461 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.852373703 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.857070829 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.860298428 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.853821644 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.852828121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.853158778 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.853781781 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.853826595 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.854133797 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.853723739 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.853916311 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.853718825 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.8536938 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.852821913 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.854478745 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.854981476 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.853963442 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.85319424 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.85461739 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.853880004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.855856275 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.853945299 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.85470841 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.854841345 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.855234627 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.854534353 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.855640858 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.854717015 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.855322762 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.855633144 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.854922749 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.855958893 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.855132801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.85467796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.854522692 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.855280202 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.856384678 seconds)
  done (took 135.244930224 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.854701124 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853310199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.853210501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.852349054 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852994586 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.855553466 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.852930282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855081723 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851958077 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.854497739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855951961 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.853992359 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853018154 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856434631 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856158089 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.853780593 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.85637386 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853314426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.855151445 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857187783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856000119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.854025655 seconds)
  done (took 42.57390599 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855586108 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.856846722 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.853893275 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.856659211 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.853895677 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.856740691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.856066005 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.856560806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856449201 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855123227 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854055991 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857018101 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.854858535 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855344347 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854724504 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.854951599 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85723876 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.854524461 seconds)
  done (took 35.178351368 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.856785743 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.855162296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.859369006 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.855086139 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.855372469 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.858476926 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856493554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.858902598 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.8586338 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.856483886 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.859060517 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858319474 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.858877356 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855335252 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8582719 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.856062626 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.857901579 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855779788 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.858649818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855679463 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.855157198 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.858485053 seconds)
  done (took 42.636704022 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858588899 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.859812556 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.856344491 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.855503863 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857033961 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.858209132 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.859620762 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.85613903 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.85832323 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.859178 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856363424 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859093519 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.856945774 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858225353 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.856697589 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856992205 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.859195882 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857794928 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858454434 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.857722413 seconds)
  done (took 38.935795426 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.859412605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858895482 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.858634015 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858958097 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859537697 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.858882154 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859563525 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.859172173 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8592946 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.859148633 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.859180595 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.859437417 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859981605 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.860938701 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860238007 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860408278 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.859632642 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859693635 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.859590815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860455018 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.860323494 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860798009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.860374162 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.861008317 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.860744862 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.86098154 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863033702 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.860205854 seconds)
  done (took 53.858999249 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861377107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.862473747 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.859150007 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.858705045 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.859659326 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.858670247 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.859206321 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.860539475 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.861743174 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.859267626 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.861425763 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.861368407 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.8619254 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.862802339 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.861618898 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.862161556 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862047324 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.859897804 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.860141052 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859337414 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.862409528 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862941871 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.862352288 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.85991 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860391309 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.863745549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860541906 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.860108387 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862918375 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.860501312 seconds)
  done (took 57.612034629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.881329034 seconds)
    (2/2) benchmarking "in"...
    done (took 1.882001335 seconds)
  done (took 5.546741301 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.860266804 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862605308 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.863357921 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.860599081 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.862039494 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.86448981 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.863826617 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863226622 seconds)
  done (took 16.683759504 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.861179794 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.865068732 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.865105802 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.864571473 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.86400192 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.862135553 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.869089786 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.865313172 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.863554199 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.862953169 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.868647139 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.869835995 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.865665691 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.863450562 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.863489167 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.864518621 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.865524658 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.863791633 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.864160312 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.865727 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.864334589 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.864755015 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864500697 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.863174006 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.865460616 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.872912684 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.866682241 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.86557039 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.863781409 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.868023231 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.862611966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.863460934 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.865241643 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.864596481 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.867517657 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.865353184 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.872054591 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864752709 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.869305574 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.865790952 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.86784395 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.863519146 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.865973703 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.866240073 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.866358164 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.866506891 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.86734207 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.864215599 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.86496004 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.868120552 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.872720911 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864346399 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.865275678 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.867427661 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.866260819 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.87292473 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.867742214 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.869409368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.873249046 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.875739529 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.877558869 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.873480697 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86605331 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.867167674 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87491041 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.88715416 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.873785312 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.865712701 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.866806917 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.868103908 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.872501576 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.878639906 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.875184893 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.867788449 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.868280508 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.867325323 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.867137218 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.869362927 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.872600886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.869774838 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.868553465 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.867470003 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87694474 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.887642287 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.866491662 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.868092895 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.868385179 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.868491085 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.868058107 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.877577821 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.868386875 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.870039906 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.867274085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.868654018 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.868279741 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.8691691 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.867205176 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86855217 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.867886904 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.870515678 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.869648081 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.871926297 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.87627513 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.869230691 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869266083 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.874560831 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.870611979 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867970498 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.875230734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.871971233 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.869519492 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.86950557 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.87427109 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.868736374 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871172632 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.876531792 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.870135023 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.870754795 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.870321058 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.871887082 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.878645198 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.893236692 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.872007811 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.871409352 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.873905527 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.880707318 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.870777148 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.871515058 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.872154587 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.869067094 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.869498794 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.871826064 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.872924858 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.870339143 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.870513729 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.871126298 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.871878571 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.872210369 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.870955647 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.870638733 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.871618994 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.870651051 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.871149595 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.872356212 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.871945828 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.873007874 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.876996272 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.871106539 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.872052376 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.871739736 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.871008438 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.87388866 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.872382614 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.873808817 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.872164803 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.873660009 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.869871704 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.872438943 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.875309886 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.8740915 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.87360562 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.871765842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.87510165 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.874017698 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.874135035 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.871190557 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.87179881 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.873674727 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.874635247 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.871022262 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.874732409 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.870760612 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.874440303 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.87970446 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.874303398 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.872430355 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.875074886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873582554 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.873104245 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.872885855 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.875005696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.879525404 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.873852874 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.878302052 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.873314474 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.873534069 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.875744204 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.872728078 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.87209032 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.87417759 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.876690157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.8819316 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885848272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.881126744 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.874035809 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.879179612 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.875522051 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.878213893 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.876751845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.8737906 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.875947021 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874292217 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872978972 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.873743535 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.874545306 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.875379755 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.87281543 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.875407271 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.876015952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.875277101 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877228088 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.875744148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.87521088 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.875479535 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.876858418 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.875758269 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.874641486 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.874247286 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.873223419 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.875089802 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.877888797 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.875647612 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.880738822 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.874742242 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.876764136 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.87777559 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.874055081 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.87466192 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.877475382 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.876068766 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.875376202 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.881200064 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.876060231 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.875375718 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.881471869 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.874691493 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.875381107 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.877323381 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.878999934 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.875115974 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.879152996 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.885426782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.878011128 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.876848268 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.876654239 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.876451199 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877814304 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.882434939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.875422976 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.875338549 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.879103288 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.878307126 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.87614448 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.878345841 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.877903876 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.877808242 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.878820174 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.87933176 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.879183246 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.878261998 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.878784106 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.878311265 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.878443105 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.879737545 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.886684301 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.882145337 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.877366548 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.879323298 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.878957905 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.884208758 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.878094681 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.877290299 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.877869481 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.890354829 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.886373293 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88464977 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.879597099 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.880645305 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.883333278 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.878094674 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.882017792 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.87811683 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.878961037 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.877631654 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.877714038 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.877847115 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.878371676 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.881182636 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.878907021 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.879207707 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.885065986 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.8800374 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.879259207 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.879643198 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.880644312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.881206123 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.877391979 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.881088487 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.88185109 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.882284381 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.879534551 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.879637412 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.885473587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87981038 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.879202584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.879182397 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.879797366 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.879112138 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.879473137 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.88140652 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.88353996 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.888491567 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.883273155 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.88894619 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.881145295 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.888368151 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.880418025 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.882870822 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.888118143 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.880654006 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.877968945 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.880257168 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.881511471 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887794121 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.881566263 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.881567837 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.885407818 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.881507447 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.882517304 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.883476419 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.881602793 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.883608762 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.883035266 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.889554478 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.882735821 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.883825618 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.882819075 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.881113692 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.882248668 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.884291083 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.879814476 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.885002934 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.882275611 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.88342911 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.881265832 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.882481762 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.883838675 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.882423505 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.884213818 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.88155263 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.884605011 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.888097945 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.882200149 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.88822483 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.88555056 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.889517064 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.88225248 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.889433057 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.883867484 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.882874389 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.883854055 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.884651865 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.88373398 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.883034696 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.883931938 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.884930226 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.884230771 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.888957259 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.884599669 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.884143746 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.884050178 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.88553596 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.883664117 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.891697814 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.905563842 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.886052948 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.888941128 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.883374897 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.884386647 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.887862949 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.884651443 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.882808395 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.886692889 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.893314997 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.893060271 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.884404507 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.885380091 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.884265638 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883988707 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.886610302 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.887381087 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.885368637 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.887157171 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.884641655 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.885824355 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887054115 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.886914722 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.886222451 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.885830858 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.884936007 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.893747673 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.885910474 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.886644819 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.88517157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.886777166 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.884956508 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.884664191 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.886323531 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.886057657 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.887376504 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.886948562 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.891248173 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.891529218 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.887504014 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.885111936 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.886703572 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.886607432 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.88601157 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887377756 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.886999242 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.887170431 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.88708115 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.887585995 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.887311223 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.885502255 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.889107136 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.886046866 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.888966957 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.888881379 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.892388574 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.886302988 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.885810561 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.889174373 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.889528288 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.886241376 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.887353651 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.893609048 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.890293889 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.89602667 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.896222842 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.891148578 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.886368612 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889614337 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.894155405 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.88463637 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.887369245 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.8888756 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.889812191 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.888918859 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.891183073 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.889946177 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.895292522 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.88825799 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.887109064 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.896000308 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.888887148 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.888741934 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.888369391 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.891445963 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.887401388 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.888783077 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.891595719 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.888761179 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.895510201 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.890200677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.890522017 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.889722631 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.886692959 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.889125587 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.893058598 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.891662081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.891744917 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.889484477 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.89020127 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.890830248 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.891767186 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.889300827 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.888285868 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.888445386 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.891773044 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.895239827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.889677812 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.892856906 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.889982853 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.890755547 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.891007828 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.892629612 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.892629614 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.889345153 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.889816602 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.891006261 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.889372745 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.89313389 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.889212295 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.891586217 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.892789125 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.891233377 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.893642495 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.899984018 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.899376304 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.889366214 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.890281195 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.891018833 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.893655629 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.891560057 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.891446301 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.891287529 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.892663291 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.893868984 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.892796338 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.893315892 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.895085902 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.905741538 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.893656784 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.890865857 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.889940717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.894625256 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.894652271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.892120162 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.894632395 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.893748422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.895070838 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.900067287 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.893070634 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.899018752 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.892320893 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.89206293 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.897921859 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.895263342 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.899819452 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.895537016 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.892806108 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.892981065 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.897185122 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.90754947 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.895386825 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902619153 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.921531233 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.892667613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.893753109 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.894893789 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.892543378 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.894572992 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.894873151 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.893847168 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.89536747 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.895840223 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.893599569 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.894837347 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.898361682 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.893487309 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.895617374 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.895210813 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.893167911 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.894625414 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.894308326 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.895341355 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.895964006 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.893956437 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.894440692 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.895044125 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.892849357 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.905471042 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.903516034 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.896557335 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.895420697 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.894885577 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.898140276 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.897393784 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.904800266 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.903330071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.895293713 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.894701233 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.896172072 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.894916946 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.895146067 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.894944771 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.894741283 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.894555502 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.894560234 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.905935807 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.90349098 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.89919681 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.894826861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.895806975 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.896757625 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.894819591 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.897156987 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.89671897 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.897107474 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.896494232 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900184208 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.898160715 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.896878715 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.898520357 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.904715044 seconds)
  done (took 1123.224903247 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.894962124 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.895354398 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.896158111 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.895413297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.895267859 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.895130164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.896911517 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.89589147 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.895455076 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.895765033 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.895465514 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.896276581 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.895316078 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.896517256 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.897124257 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.897284304 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897112363 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.896233811 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.896563728 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.897118338 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.89624341 seconds)
  done (took 41.633591784 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.898685747 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.896679434 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.896336842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.900357797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.896944596 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.89948497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.898709354 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900625098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.900323066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898447872 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.900569109 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899274003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.897484337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.897788429 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897657884 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.902066401 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.901543865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.897939767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.900537957 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.898375224 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.900610509 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.898544264 seconds)
  done (took 43.596813486 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.899141934 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.898916534 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.897118277 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.898350147 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.900543096 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.897523112 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.898464263 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.901675921 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.901019613 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.898782155 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.898392146 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.899312201 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.905607097 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.905674355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.900316912 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.900797006 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.044667531 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.899363284 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.90016518 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.900676396 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.898887644 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.902703093 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.898752009 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.898807578 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.89871973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.90064302 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.901515127 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.90199461 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.899925031 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.899534511 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.905080591 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.901464013 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.899504598 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.90194334 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.899239406 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.900600866 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.905511106 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.902173624 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.899751678 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.902343839 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.909266841 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.922160079 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.901484235 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.907475807 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.902643928 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.903486765 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.902894618 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.908359547 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.900672769 seconds)
  done (took 95.143921341 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.902612186 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.903938386 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.900319539 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.902466333 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.902695292 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.903353288 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.903847757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.904751781 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.900894137 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.901006547 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.90376698 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.901660164 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.90095721 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.903497803 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.903865941 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.90130476 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.901651705 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.902135772 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.901499925 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.900376322 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.90221335 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.903604063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.904159149 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.901718784 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.90426102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.901173502 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.902162151 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.904376953 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.901561534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.902169927 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.904167782 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.90309698 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.904587484 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.902918686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.901833158 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.903955876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.904783468 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.902195648 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.904545269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.901554287 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.905035311 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905126916 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.905654855 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.905455229 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.902306061 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.904328609 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.903292931 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.902162026 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.903557927 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.906477736 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.906353993 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.903817341 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.905543267 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.903501547 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.906138678 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.90629159 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.903181097 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.903391089 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.90677645 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.904851404 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.904368502 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.905998809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.904368866 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.906592507 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.906485249 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.904234038 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.904198178 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.906081398 seconds)
  done (took 131.267335019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.906085408 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.905176751 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.906167521 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.906840507 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.905670459 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.905677094 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.905852331 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.905928093 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.905669312 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.905392659 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.906970354 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.908730228 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.905406974 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.907353231 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.905719237 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.9061462 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.906943421 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.90566293 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.906420028 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.906107426 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.906857288 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.906367069 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.905662561 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.907511357 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.907104399 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.907188049 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.907743269 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.907208088 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.908192229 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.907556196 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.907632767 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.907336902 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.907230798 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.90796307 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.907932125 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.908089582 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.909285123 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.908441838 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.908281127 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.907466088 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.907534796 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.908462696 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.907624485 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.907247976 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.907859815 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.907795942 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.907788063 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.909249381 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.910860509 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.907632073 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.907692183 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.908609825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909346174 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.908038091 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.908051859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.909821843 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.908694833 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.909259967 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.908483527 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.908504293 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.908232107 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.911447751 seconds)
  done (took 120.090605674 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.909651163 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.909923435 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.908112097 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.90671224 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.909319267 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.908010775 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.911333747 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.911032077 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.909919928 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.910318083 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911233135 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.907606222 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.909463118 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.909729665 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.909179309 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910286463 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.907637555 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.908117162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.909775716 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.910495671 seconds)
  done (took 40.016757589 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.911823244 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.90997133 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.909690078 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.909028816 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.910819742 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.910073923 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.912355503 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.912132281 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.908451513 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.910886361 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.912582893 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.911373 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.908490282 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.910122252 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.911211766 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.909189051 seconds)
  done (took 32.398294386 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.908624569 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.911834333 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.91071145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.910787154 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.909770282 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.909537997 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.912175927 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.909189563 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.910184781 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.91307325 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.911623997 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.912452349 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.912213135 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.911393569 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.910406268 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.913985244 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.908584798 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.909844113 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.91331467 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.912294916 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.910878297 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.910980645 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.912646563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.912923579 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.911382944 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.910278133 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.910176822 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.911572075 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.910371537 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.913620202 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.912264647 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.911936381 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.91196437 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.911231697 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.91253239 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.911841657 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.914469713 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.913063802 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.913836284 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.913935085 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.915318452 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.913271619 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.913455214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.915093851 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.912210217 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.915501269 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.912810105 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.912512064 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.913028835 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.911881069 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.914974388 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.915003479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.914603528 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.914569352 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.914378718 seconds)
  done (took 107.004460022 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.915219661 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.914461456 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.912695872 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.914061517 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.91463698 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.912764216 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.915072481 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.9121493 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.912249559 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.915324318 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.914465923 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.915584209 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.912563824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.916217625 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.913793867 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.916611473 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.913450332 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.913979379 seconds)
  done (took 36.289208279 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.913699813 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.913648816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.917374176 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.913507866 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.913741651 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.916059256 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.913793349 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.917087265 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916897383 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.914312247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.914061291 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.916718616 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917634168 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.917037796 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.914845086 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.914403504 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.916446742 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.917995885 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.914885656 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.913822362 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.916559972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.91659201 seconds)
  done (took 43.975415647 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.914872449 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.913973101 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.929543923 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.934649884 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.935419606 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.94958649 seconds)
  done (took 13.413404801 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915746768 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917558773 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.91436467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917211703 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917935515 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.915113427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91501427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915526098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919515934 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915493161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916293321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91805566 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918040849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915183209 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918414092 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917812481 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.915392778 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915879095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916454322 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919160844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916657457 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918605261 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91687464 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91634512 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916990664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915465996 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918713626 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916037579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916131356 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920225064 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91974424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915907594 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919763764 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918020936 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920158845 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919379475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916870829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919861838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918859753 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918272853 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.920148225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920418762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919433867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917724222 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919455002 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9182054 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917183948 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917988635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917210647 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919948465 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919892916 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91727756 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919597235 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.920422307 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920697196 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921602395 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918858687 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918435925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920202178 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917936902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918078766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921120834 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917686037 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918379193 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920021752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918332131 seconds)
  done (took 128.427114925 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918953509 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.919064263 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918086942 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918276435 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919572434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919216873 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918728386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919455686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918813736 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918559694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921064306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919919679 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919047878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918828144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920002455 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919397959 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920053345 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919709702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919878166 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922093882 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919745046 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.920360551 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919993577 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920366757 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920826366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923531417 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920617206 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920104086 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920094504 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919958461 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920856331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.920564137 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919968826 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.919690594 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919843332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921052275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920457075 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920822242 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920455198 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923432332 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92063399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923239435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921057136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919850788 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921705746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920108914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92059853 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921107634 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921578001 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921117339 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922482654 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921625164 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922065506 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921627879 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920900891 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921736296 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922467066 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922219134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921843297 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924960593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921607998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921558329 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925900209 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921523822 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922139362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921809335 seconds)
  done (took 128.610925841 seconds)
done (took 2618.527477386 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.00235193 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.975953044 seconds)
  done (took 15.819550702 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.08409886 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.036552779 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.920626378 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.925030965 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.921750726 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.940600143 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.945210167 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.920415428 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.920672673 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.921708467 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.92183108 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.107645391 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.91776411 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.920689697 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.921763083 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.01563821 seconds)
  done (took 53.188290918 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.924478413 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.923644027 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.935818843 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.926702007 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.924303434 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.937751668 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.959098559 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.927123483 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.958408205 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.938940696 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.993400169 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.936499112 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.923972846 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.973770756 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.941477925 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.941309071 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.016405744 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.002266415 seconds)
  done (took 36.928914835 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.002080278 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.935175008 seconds)
  done (took 10.788132056 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.942786757 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.923754093 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.953961207 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.940128267 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.944844558 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.928059799 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.946198098 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.931765256 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.938025719 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.945036954 seconds)
  done (took 71.241769707 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.931996622 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.925808015 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.926497899 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.925528055 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.92009045 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.922712169 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.924802637 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.926551912 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.584191233 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.963329024 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.934522653 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.931244615 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.927290967 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.928603142 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.927212313 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.951800261 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.028847766 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.926665805 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.926255161 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.932492617 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.927267193 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.979691254 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.941430895 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.931436563 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.956023855 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.588236392 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.934149246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.933151696 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.05021329 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.927146589 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.926393043 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.927436225 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.926412081 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.31146392 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.187083521 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.925035889 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.938936764 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.932236212 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.923776903 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.042220272 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.92522301 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.930910987 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.670113184 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.164481792 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.024712363 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.967748897 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.25820213 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.943964025 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.926140767 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.953856978 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.928684032 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.927287121 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.939556814 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.414394763 seconds)
  done (took 135.402762966 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.923597896 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.272232958 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.092011731 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.923783035 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.210060382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130064608 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.922384743 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971079339 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.922208196 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.156436006 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.177962511 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.034439637 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.923652866 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.923053088 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.920789826 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.920064196 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081826936 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.999415103 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.923401198 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.921849164 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953482567 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.168813468 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.049154368 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.924527654 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.953192288 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.136429164 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.046802295 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.02941244 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.712442788 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.920271675 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.9888622 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.923359963 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.921332179 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.921135436 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.080992111 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.020183673 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008057931 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.923863634 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.923214699 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.921587614 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.688887001 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124843204 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.020161229 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.066715037 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075869131 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.131313644 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.705898411 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.921725237 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.666548688 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.088810253 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.155649544 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.160444273 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.04956089 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.926167417 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.26671947 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.922254143 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.923002144 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.175163046 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072869761 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.025429317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926756958 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.92252781 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.922635057 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.226035419 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.929940052 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.022689941 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.928259708 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.922966012 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.023324775 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.029021434 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.070096063 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139250763 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.960158691 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.647501434 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.190962923 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.17494898 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.994038147 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180327313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.92993299 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.923341079 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.005279957 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.768685245 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.18106482 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.216888768 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.183702986 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.964826466 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.66031829 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.923916295 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.154709058 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.152135163 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.193686931 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075137738 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.163301705 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.248174635 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.924839153 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.92457747 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.141252983 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063859837 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.928549092 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.27734591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.159026624 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.478957464 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.94817052 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235427371 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06440756 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.92880569 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.572054267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.927744107 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.159329871 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.970386855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.92814579 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.927397697 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.149211833 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.925453494 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925266753 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.788328073 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.990630407 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.930815206 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.162393329 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.933453368 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.199468768 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.932079853 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.176388022 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.970017766 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.960811157 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.105197197 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075214841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.929765695 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1749577 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.177473487 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.047633569 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.202120553 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.812593311 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.92813865 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219775638 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.929938014 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.927091014 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.100531482 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.928726324 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075096466 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.931026589 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224962662 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953311393 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.161242105 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.930869233 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.188642071 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.965776402 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981754778 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.933179451 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.056054171 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.930589396 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.762240342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.088179798 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.931806766 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.929460858 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.48564316 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.930839622 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080770623 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.167177818 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.9540086 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.003568183 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.600991384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.927768861 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011495691 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956083647 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.325353592 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.929267228 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.183030947 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.932318554 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.929142466 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.929460068 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.227673336 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.168546557 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.932037193 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.930863343 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.845845351 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.928956566 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.928520621 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.114219066 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.277759029 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.928889521 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135443203 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.933453086 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060291454 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.935921867 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.007752021 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.267381463 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.930245319 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.929399817 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.928781501 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.929452645 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.928855351 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.140597405 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.956872555 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.446751354 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.067930857 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207225022 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.240828048 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.178298834 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.974142578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.930639802 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.187684845 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.928986968 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.992092908 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.929874828 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948646694 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.160176097 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.929483406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.188582411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.205496368 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.783740223 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.97434511 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.925515924 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920702501 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.922283617 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.070861029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011096243 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.923563484 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.918982451 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.03595315 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043782335 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.13227093 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.921089446 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.953489634 seconds)
  done (took 915.837211862 seconds)
done (took 1241.051712106 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.916026852 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.916182348 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.905233786 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.91676661 seconds)
  done (took 29.496897633 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.920789054 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.918279402 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.919998614 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.919413463 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.918571194 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.358061075 seconds)
  done (took 13.795724697 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.947079497 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.913431816 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.916507998 seconds)
  done (took 21.616039277 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.985797776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.298648252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.023952563 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.347516533 seconds)
  done (took 10.495001695 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.919020869 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.918883651 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.91902967 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.918888684 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.919128643 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.920584029 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.917514438 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.918654655 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.920434731 seconds)
  done (took 19.113524972 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.964512588 seconds)
done (took 100.328077938 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.944471942 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.074961146 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.953870684 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.002243219 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.853463131 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.080352655 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.941870594 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.140367197 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.235964496 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.010938154 seconds)
    (11/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.652706551 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.024698786 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.067003038 seconds)
    (14/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.949327074 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.954212344 seconds)
    (16/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.05014259 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.029657433 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.908821058 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.100942276 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.350294714 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.967927455 seconds)
    (22/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.931532529 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.917806332 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.080044399 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.072829271 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.330889993 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.030832377 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.172642722 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.96485642 seconds)
    (30/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.934362914 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.058809235 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.199147565 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.936512298 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.993107798 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.008398881 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.376763098 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.114555711 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.33250546 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.04777445 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.248354518 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.953794649 seconds)
    (42/309) benchmarking ("sort", BigInt, false)...
    done (took 6.934244604 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.359116344 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.295676707 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.320247187 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.187767359 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.161414243 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.756211973 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.991563925 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.152696364 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.138797196 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.008156882 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.944833364 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.026925268 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.938686233 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.969772586 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.631406698 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.966500432 seconds)
    (59/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.936138046 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.289514261 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.096454195 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.328646913 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.965287112 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.776478968 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.266175244 seconds)
    (66/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.214317668 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.590232089 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.269543586 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.033559973 seconds)
    (70/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.97710136 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.226456465 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.941606206 seconds)
    (73/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.170599226 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.969213901 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.211431866 seconds)
    (76/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.128428163 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.867976323 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.230330292 seconds)
    (79/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.4557144 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.099301315 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.963077229 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.351411487 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.928449854 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.418079003 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.02792013 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.323274572 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.943333576 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.943984781 seconds)
    (89/309) benchmarking ("sort", Float32, false)...
    done (took 5.785978272 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.920963728 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.445050059 seconds)
    (92/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.05152519 seconds)
    (93/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.117613047 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.599549048 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.932815896 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.648907069 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.629493325 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.878952861 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.944533785 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.599070785 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.187690273 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.079383995 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.767458488 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.082435793 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.187997987 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.046314329 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.129703502 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.076082999 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.236892834 seconds)
    (110/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.186395131 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.966092457 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.030192388 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.294103644 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.58252782 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.969241744 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.949602511 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.924712495 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.394434525 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.04325936 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.102481528 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.024688158 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.259839549 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.050707457 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.942463164 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.013057257 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.810481108 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.763614517 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.946373087 seconds)
    (129/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.025700781 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.048327878 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.020393471 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.311648016 seconds)
    (133/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.151555764 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.152044606 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.870413939 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.312036102 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.976941981 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.258732236 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.03906557 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.173928697 seconds)
    (141/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.97416591 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.941387272 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.360408815 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.209462532 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.902727506 seconds)
    (146/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.03872991 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.350324962 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.070522012 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422633757 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.097361018 seconds)
    (151/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.508389296 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.137548636 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.095834136 seconds)
    (154/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.983574768 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.937544461 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.792372129 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.203369558 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.276873422 seconds)
    (159/309) benchmarking ("sort", Float64, false)...
    done (took 5.676732227 seconds)
    (160/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.086489729 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.883615225 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.20019355 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.262449486 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.964689523 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.092605434 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.360506639 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.969376921 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.066675689 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.951585501 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.228002162 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.257415806 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.398593778 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.144600887 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.107968372 seconds)
    (175/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.167954259 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.129939912 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.865840301 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.936565913 seconds)
    (179/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.076197247 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.328038451 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.947197771 seconds)
    (182/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.97914524 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.964551942 seconds)
    (184/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.03458329 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.514469906 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.151545646 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.931715668 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.160148768 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.130787881 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.035925828 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.64861516 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.282165065 seconds)
    (193/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.016222447 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.948572343 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.934608104 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.086945123 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.952182261 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.94650792 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.44098955 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.937820508 seconds)
    (201/309) benchmarking ("sort", Int8, false)...
    done (took 6.061466917 seconds)
    (202/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.950626869 seconds)
    (203/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.146838251 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.950604412 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.0156896 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.080763233 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.032737612 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.04808165 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.050622124 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.245351672 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.95245658 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.111736761 seconds)
    (213/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.56731059 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.534542541 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.945438363 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.892783053 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.983335413 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.96446058 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.017258087 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.944860124 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.165982996 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.039134925 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.318686336 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.465756529 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.94338824 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.051018175 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.009915916 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.217845996 seconds)
    (229/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.085732257 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.318819834 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.320903811 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.036603058 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.933732466 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.276493887 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.057210216 seconds)
    (236/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.154955167 seconds)
    (237/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.798238316 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.959405094 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.116353352 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.85285172 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.119456068 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.393707217 seconds)
    (243/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.04674044 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.025189218 seconds)
    (245/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.976147667 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.880867754 seconds)
    (247/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.353025226 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.094906404 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.042133314 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.049633713 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.213788632 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.317019869 seconds)
    (253/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.064595289 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.355479901 seconds)
    (255/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.398985203 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.874963229 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.977825143 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.402954033 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.119005607 seconds)
    (260/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.875238097 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.057465604 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.065293943 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.966844981 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.253027307 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.059493672 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.939881573 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.26706001 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.119066635 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.258376365 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.257948276 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.028661969 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.227496774 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.131854584 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.955697486 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.389029119 seconds)
    (276/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.889067837 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.079329547 seconds)
    (278/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.099276771 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.20211584 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.9797294 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.950634302 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.125781148 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.951503245 seconds)
    (284/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.037422237 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.210715924 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.313882626 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.228114404 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.144529788 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.093822311 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.951141763 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.134183526 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.076088466 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.045173069 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.969438984 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.302571749 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.781920216 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.347568872 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.988184762 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.950039687 seconds)
    (300/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.514143512 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.988778487 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.19296435 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.140969899 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.035919491 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.25813986 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.938651474 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.35970096 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.422661845 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.978555537 seconds)
  done (took 1031.923128175 seconds)
done (took 1034.077300427 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.979807764 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.967691935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.952850694 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.972306849 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.061417513 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.978713797 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.960706549 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.954182582 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.995989185 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.998647559 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.945575298 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.973954249 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.949515331 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.946622247 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.946864833 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.960578978 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.263892927 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.984195312 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.961802776 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.954437608 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.960794564 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.941410084 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.995068318 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.968540076 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.945730998 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.944930618 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.945654079 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.963815182 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.051767523 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.941842611 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.943641008 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.951123385 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.256242529 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.975268792 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.932712664 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.957260301 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.949318042 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.949042856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.940355828 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.967698571 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.335769796 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.979444976 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.938507269 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.933933197 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.934195189 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.938224342 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.935402874 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.939919325 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9451225 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943512263 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.324769449 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.992311118 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.934149766 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.928694042 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.938899857 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.928914651 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.932198186 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.947439528 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.948521247 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.941329462 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.224467525 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.964073525 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.930180595 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.942685991 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.931546851 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.354268532 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.963493779 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.930314521 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322546146 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.973030287 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.352261974 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.976390649 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.923484926 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.935277551 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.952419169 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.235806289 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.951377384 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.920215191 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.925395523 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.915523964 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.929013083 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931554407 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.9240993 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.917178551 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.929980279 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.943383821 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.927189834 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.919341291 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.923007319 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.932008894 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.921031616 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.923705361 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.918954712 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.907167764 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.921157055 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.914450938 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.914625071 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.913976288 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.916139416 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.92183732 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.309308356 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.969656927 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.907038841 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.906879854 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.907443781 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.921418024 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.306924445 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.952755507 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.931125576 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.955212409 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.908679401 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.203970787 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.946608868 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92250877 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.913628563 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.907901514 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.900727415 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.202706249 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.333760602 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.96309236 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.904194261 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.900041291 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91973018 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.904076949 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.898019538 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.216993944 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934913113 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914487514 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.021318022 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.909516136 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.93033888 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.895875095 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.900847 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.92959067 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911606771 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.927366077 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.899563388 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911794776 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.914811816 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.891426411 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.904570766 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.90444794 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.897199909 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.90029295 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.886944977 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.922017136 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903910437 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904477002 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.912380829 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.013407205 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.887028868 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.185591271 seconds)
done (took 301.917676043 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.962997257 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.881045753 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.984833888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.883938652 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.961979692 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.968408386 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.88182671 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.881769996 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.882776235 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.250398637 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.879622302 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.88062883 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.875393088 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.876333571 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960242591 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.882497426 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874669185 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.209206941 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.877789988 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.947743265 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.875764853 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.87470549 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.877116759 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.246791633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.868717423 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869150146 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.946736881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.877740695 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.212419362 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.876696668 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.875363819 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.209592164 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.964486714 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.89657121 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.884087954 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.879674424 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.952048799 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878072644 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.956401609 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.951122385 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.966883019 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.909798531 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.865730749 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.863829191 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.874344749 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.867300566 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.865511175 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.896426804 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.860679544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.8640761 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.197399859 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.876166472 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.863804289 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.862444466 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.863048431 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.894143912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.862922633 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.865772086 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.95304037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.862965993 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.922914011 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.233624926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.232349259 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.86407294 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.861573045 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.862072128 seconds)
  done (took 184.498446762 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.928213968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.941083497 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.926961318 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.865743842 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.911300294 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.929279006 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.866634103 seconds)
  done (took 15.151530548 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.867081387 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.865372798 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.914913648 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.914020297 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.863091248 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.008748393 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864410922 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.873234908 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.86286888 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.914649421 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.863903922 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.865337535 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.872311562 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.860268365 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.913604415 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.874650525 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.979471457 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.865155314 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.864277704 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.014316909 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.864068126 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.872108627 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.916268356 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.874321235 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.864770067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.869492069 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.450111284 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864792334 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863251465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.865378694 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.863676666 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.904662223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866241569 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.859925773 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864405625 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.979744642 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.86445133 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863922112 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.866341967 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.857768504 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.866722878 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.866716665 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.86647203 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.863925591 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.867295918 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.886885513 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.867453937 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.866861114 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.866964914 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.867182155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.915469708 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.867580766 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.86493186 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.865538297 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.920910128 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.874867072 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.865402968 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.864363398 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.867930975 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864276291 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.016301922 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916235067 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.867207088 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.915878363 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867799793 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868539534 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.868704134 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.867739193 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.960813301 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.86871907 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.917213041 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.865729532 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.026867774 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.888880143 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.86963032 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.868848716 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.868583883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86742439 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.859711733 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.873754537 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.866630164 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.869423554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.873527291 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.876668122 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.866205125 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.980401984 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.975606775 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.866786383 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.879769428 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.874842402 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.867795036 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.920716738 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.869469749 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.867336097 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.923853082 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.984593436 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.921774276 seconds)
  done (took 205.470358443 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.87247666 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.875548289 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.868839475 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.884041334 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.868473668 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.867595665 seconds)
  done (took 13.025320534 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.870161472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.872242691 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.869810531 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.87123364 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.868417867 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.869912762 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.869442119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.870670601 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.872794941 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.870644211 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.870545357 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.871261175 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.871140909 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.868733454 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.8696721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.872538716 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.870855978 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.869186404 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.8711145 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869875596 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.014559515 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.869843987 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.869153382 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.869791591 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.874715477 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.87200952 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.878295581 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.872651463 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.872207896 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.878645197 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.87412684 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.870790699 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.870386904 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.874692324 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.875131175 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.87007507 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.87559694 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.871774322 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.870739857 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.871588622 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.872249214 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.871196548 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.87281571 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.872346723 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.872406718 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.874370414 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.876732493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.878587928 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.871993855 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.873410567 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.873719857 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.873039876 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.873473454 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.872859375 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.873733038 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876194313 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.876133189 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.87234618 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.871518239 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.871054587 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.875091003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.872518461 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.873263188 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.87663562 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.881436311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.874830314 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.873274621 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.875770483 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.87282621 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.874449713 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.873880774 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.872430786 seconds)
  done (took 137.764652685 seconds)
done (took 557.73814794 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.007405605 seconds)
  done (took 8.800762866 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.02953662 seconds)
  done (took 8.97098478 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.520853386 seconds)
  done (took 10.421707445 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.011179864 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.998199697 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.989651843 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.987332094 seconds)
  done (took 29.913053623 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.087472214 seconds)
  done (took 8.987515764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.002808744 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.979724707 seconds)
  done (took 15.916133698 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.04887755 seconds)
  done (took 8.953582578 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.101852297 seconds)
  done (took 9.026533687 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.994061091 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.006622383 seconds)
  done (took 15.911369775 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.956163391 seconds)
  done (took 8.850219311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.533194259 seconds)
  done (took 11.514634346 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.994753515 seconds)
  done (took 8.990683209 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.027431346 seconds)
  done (took 8.920146251 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.078464702 seconds)
  done (took 8.970113773 seconds)
done (took 165.941532304 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.971923627 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.970798888 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.970806786 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.966984893 seconds)
  done (took 29.770241835 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.003968305 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.002495205 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.005393359 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.015273293 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.006565987 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.003210607 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.996754193 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.996226047 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.015546371 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.007372724 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.00642824 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.008490668 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.004032208 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.997216442 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.006645542 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.024089321 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.016059625 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.005996907 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.997657599 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.007337363 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.971805148 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.015297111 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.008086883 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.972138404 seconds)
  done (took 49.978810828 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.163947264 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.041033917 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.121333379 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.021502107 seconds)
  done (took 10.233505084 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.022012642 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.02379115 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.035302958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.073811991 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.097129438 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.03288844 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.997314212 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.992209917 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.978906632 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.025405211 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.10005461 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.018997513 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.109632505 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.972806617 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.159729707 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.971726554 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.971988056 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.024880331 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.076544177 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.089823725 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.973509546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.023979908 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.027443312 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.020048376 seconds)
  done (took 50.707213342 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.969514795 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.97849983 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.976622052 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.971178111 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.967328095 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.968157021 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.973617342 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.968917849 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.989569463 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.96749432 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.964654427 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.965083618 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.965208539 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.965160043 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.963420535 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.976460845 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.976642897 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.964196719 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.971008175 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.970073386 seconds)
  done (took 41.299987612 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.956228534 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.80871699 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.307664736 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.21267709 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.95765991 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.956489646 seconds)
  done (took 32.08002915 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.976588861 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.969628511 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.96223769 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.020714749 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.105632774 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.970350671 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.962161529 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.974911702 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.013043053 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.029283946 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.986469489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.992708228 seconds)
  done (took 25.843873987 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.960098462 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.959954802 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.96187657 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.972124424 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.972030931 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.968963675 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.966807794 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.95250554 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.97562354 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.975415391 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.964475242 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.968871892 seconds)
  done (took 45.483243348 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044294513 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.837496282 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.621097337 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.661984536 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486310965 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15989226 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.466939711 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122650709 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.953516498 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223056649 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558708586 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204082355 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209857076 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957640403 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.030326254 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.418435704 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253519669 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182009291 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984790671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63477818 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107060739 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.593035123 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.749133477 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114873141 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195709968 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.11522414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.24621901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.95052074 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119427808 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02351484 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996253908 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987566844 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259267613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201892712 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118802779 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996291284 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637726231 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.702014756 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.975794787 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.714065676 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.618384277 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.123798568 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99545227 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98822225 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.918456118 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.595055737 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170549624 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.992465802 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.688561601 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.988703859 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997239568 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076873513 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.990668988 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.803976067 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937884348 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.266075216 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.985225419 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991454218 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.556960713 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.067722993 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.695150583 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.932716472 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.078848424 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714389485 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463001296 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.143919949 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.992065822 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991952168 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921093717 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.677066568 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111836759 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132580961 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.007685006 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.637449092 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299320468 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.659806511 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.070634833 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275467509 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.863549064 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.93335268 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215429109 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94491843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921787827 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.845247726 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.921562051 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251098918 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022945125 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.629849042 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023186214 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15837456 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000187736 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009801863 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995851736 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.212151477 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.868362633 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99180356 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.533173214 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275375461 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012195214 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162878125 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924037309 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.994163573 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244207656 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.200190251 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314890127 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.458653109 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150056012 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992477936 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.080950021 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.991008387 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008919639 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.264981091 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055632907 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.067985987 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121603265 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.942916516 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283636451 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.015890665 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.168885139 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.59767471 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257372445 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.314032897 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240170018 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073542549 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.999806069 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.993048057 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.728403272 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.618168104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.214921744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.990495009 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.566179418 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01119595 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.991921411 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.925310058 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.620961068 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.611195766 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.096703038 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.214806519 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.016863818 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267460351 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.925456551 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137227783 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10715121 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.215109203 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.649502657 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.073998502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250545778 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.570870811 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332230275 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013858231 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012186973 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11177701 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014913689 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.529989326 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257600143 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.997086488 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.997650641 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.726276947 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.073000173 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993971529 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.99825648 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788791187 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278319206 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02585377 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.005886692 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.92618206 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.007520284 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078849206 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000010469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002932796 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.52178436 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742898286 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.005782522 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.658300345 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218431236 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003088818 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.669584212 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183558383 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.078981469 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26924672 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062193808 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.928548788 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.698078604 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.697884908 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996662371 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929388409 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.995023532 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005033941 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005963452 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.190644178 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275069656 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.046387233 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.721940136 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.111180235 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005037801 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.999410474 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994975496 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.517663779 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.074155963 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.702504402 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013817238 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131250482 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.00837444 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.927932006 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.99840323 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999477245 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.995101346 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.949821203 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048933218 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.719416529 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330420096 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253295849 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.640924389 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015218309 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.692564552 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.126383986 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.022689037 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.543136823 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.158708877 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.002223474 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080751654 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.005445858 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.671824351 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780057706 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.564452194 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305496568 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320561157 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442799336 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.59938959 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.224099414 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169692802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230350765 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524481976 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058466699 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173579874 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939916976 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082859513 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.654843897 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.357475031 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013446559 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224703085 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383681113 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.604504195 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160269929 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208231145 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032506686 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.008840093 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924667135 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.517593697 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152175191 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.525463895 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225069371 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166840257 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545811229 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.107365035 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.995727225 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.471970516 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079953841 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.707310724 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.358297126 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.620768204 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.620817708 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371501903 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.999949268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.442807522 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35426335 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431105557 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.096683849 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9339521 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009518089 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01110993 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.995854286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.978040531 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.876650423 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.253827511 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009663972 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232544586 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35343197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275546695 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.916092718 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.004763982 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000210672 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298008496 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.867038035 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134431969 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.54779744 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.481341218 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00707073 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.932717981 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933135734 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.701826328 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.008781755 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974326415 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2209875 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.102684115 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951317167 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.583315658 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213661114 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.253900925 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.014454488 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276591598 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282417088 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.730792004 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029971422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.100359148 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.536191133 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.75479189 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221481929 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23480925 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796987394 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230968198 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.658021032 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.967183009 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.998471698 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214648655 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.222694117 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.59737781 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250404888 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.727960718 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.015246411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381330826 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06546392 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.600422343 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215516701 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.092532655 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010154231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082051814 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010454192 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.012714723 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.012102621 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048831002 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.607441183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.136026444 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.017044058 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093124422 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.08332617 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.594571762 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.012438089 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282334567 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367973339 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339796943 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067951937 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.003788892 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.004642907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936584866 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141110037 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447391235 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277831149 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.134340342 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.141057341 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029714669 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.534071057 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36437961 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330552439 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279037398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.897384943 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005556487 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.097717019 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.226322157 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015327759 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.214334749 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227851854 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315665685 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46988738 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.208609982 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293669576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278106564 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372631251 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.006002728 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594652666 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.009305224 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.541503537 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.041240021 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614907991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294072583 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016007953 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219579736 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026898489 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.201966606 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.458479914 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700161489 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371678372 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.990719067 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070031129 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289714053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411415035 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328663413 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092232592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022918187 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.719184011 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149442825 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.863612524 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.237797498 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.01276631 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221787052 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.723613192 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.02143468 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290086405 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325926438 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.010878148 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.847791252 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021081001 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.021369786 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.236185079 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272426837 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259824742 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021894916 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.021245785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.829588733 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28977927 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081062967 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9464825 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.016402426 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110889507 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.259183933 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033077972 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.530146723 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.715511325 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307599699 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.927220706 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035283604 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484457446 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470468337 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351128711 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.547882639 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241098958 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.567753658 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.940532552 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.402226339 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.018102282 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.488983023 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.404812218 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.017924233 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.582979815 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140078445 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.288463802 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.346583304 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.026254462 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815017923 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.059623187 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237128947 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603316219 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.955735192 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.019236648 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.073041198 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.015675233 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.143692814 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026635804 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.897878354 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909982258 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.866922515 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506936493 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.020966129 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.002449615 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.550700886 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.642641063 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134317829 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171228912 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.028652492 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.7382019 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.30782089 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270407784 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.577957364 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.095490771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.018602945 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016547143 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941484753 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.213061019 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.209721572 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311899342 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.434580107 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.140741928 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020441182 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.231383174 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226415056 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.619529021 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174097252 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479099105 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143073668 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.941625991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.728799049 seconds)
  done (took 1741.035815363 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.03712647 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.032746817 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.026465536 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.073970299 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.035295935 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.114873999 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.063878932 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.097399123 seconds)
  done (took 58.416365131 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.015284574 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.191191651 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.022982393 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.015723851 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.029549885 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.015014765 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.18506629 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.027852725 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.032131183 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.024703897 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.017054353 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.019673557 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.294506084 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.040623799 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.017598304 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.404566994 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.029599199 seconds)
  done (took 77.326376522 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.015791319 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.392495399 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.03929998 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.039847813 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.989788257 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.020882507 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.036911838 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.045359149 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.01896772 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.196501265 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.360750124 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.03240735 seconds)
  done (took 92.126723167 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.033721918 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.022979487 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.023150561 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.02413025 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.024165387 seconds)
  done (took 12.073672892 seconds)
done (took 2268.294761434 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.253671178 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.204501443 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.25191048 seconds)
  done (took 6.393986191 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.165363591 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.215075081 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.332621134 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.339381739 seconds)
  done (took 10.995532671 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.319300322 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.392176863 seconds)
  done (took 6.650000626 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.349146487 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.042186239 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.436591734 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.023629941 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.023849454 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.026060062 seconds)
  done (took 23.01692703 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.024879107 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.02710098 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.025444454 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.027858426 seconds)
  done (took 10.043277047 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.005481355 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.712203867 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.005183425 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.026127097 seconds)
  done (took 21.688639 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.771605035 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.150490865 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.770774488 seconds)
  done (took 9.632631528 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.580926358 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.238730519 seconds)
  done (took 9.760085753 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.182771802 seconds)
  done (took 4.122168139 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.052837549 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.296586578 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.541117366 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.543468454 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.631054231 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.870644121 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.344660156 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.257741376 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.477659769 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.476248935 seconds)
  done (took 26.432366155 seconds)
done (took 144.758031155 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.369932205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.053933243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.224350331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.376634022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.258705171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.224563079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.23975391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.371839691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.061283346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.046531095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.383444051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.259703068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.19253394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.04494769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.195510717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.041241718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.251173922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.388754705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.061585088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.301345041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.250691957 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.028643964 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.222643982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.04360263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.255548843 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.175348596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.574894302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.048686028 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.202966706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.58654799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.180231332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.448792812 seconds)
  done (took 173.307113101 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.023622646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.023738706 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.024256078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.023619957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.500657098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.023634378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.025236159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.02374582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.420693334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.412031616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.025126193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.490980484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.024069127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.023680324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.023709233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.024001877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.585677797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.023337297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.025134257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.023975012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.02372641 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.327080628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.024538299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.332497612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.578137046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025007257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.025278367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.025691666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.024731565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.024306681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026552951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.024806938 seconds)
  done (took 214.178100602 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.024013591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.026557299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.027365616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.026074813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.026581734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.026142293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.026087567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.026092873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.635693658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.614793306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.026957818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.026837708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.026319352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.025208389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.027205632 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.025373944 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.025603939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.027220965 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.026557416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.026651411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.026557159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.603133648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.027009516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.622819857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.030740154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.033001473 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.02617578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.033713705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.036257977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.038190714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.042046299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.026120992 seconds)
  done (took 225.214924401 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.28488027 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.034892438 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.035938199 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.955567688 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.036152876 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.035275702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.027980346 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.288591901 seconds)
  done (took 20.662485278 seconds)
done (took 635.314289765 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.506374665 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.353088706 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.215581904 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.059925329 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.35984479 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.090369427 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.055105807 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.120791292 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.672771558 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.128936869 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.730788241 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.078238582 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.815171138 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.086266804 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.179079235 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.114397101 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.642359357 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.741779569 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.231204967 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.156980504 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.228014753 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.981008561 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.138967568 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.69692437 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.832087489 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.031411199 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113269278 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.65245496 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.067244078 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.216007509 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.815813707 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.348150475 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.068848646 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.052237034 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.111035975 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.091191171 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.314081277 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.067298024 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.1747153 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.78590299 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.165074374 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.581752679 seconds)
  done (took 109.820573969 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.024586109 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.021606668 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.021192871 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.022246354 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.021144117 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.022716228 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.020885398 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.021363314 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.021402214 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.021026481 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.021603953 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.021410773 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.020463147 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.021669863 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.020441938 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.021012235 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.023358781 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.023322232 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.020976432 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.021477712 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.022698466 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.02192511 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.037828879 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.022349541 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.023483106 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.023078393 seconds)
  done (took 54.543093634 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.038520706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.185459941 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.276147875 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.058346286 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.035267836 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.040415487 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.054351354 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.045585562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.03839867 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.038516076 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.128912313 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.04658987 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053722279 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.284647588 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.054874006 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.04137626 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.040896156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.03685837 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.193019502 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.053940031 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.057197326 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.045390453 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.057223196 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.051681365 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.03781822 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.03876095 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.040505296 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.483581676 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.047559628 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.128516152 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.083655591 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.060743841 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.405108032 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.287745613 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.095256841 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.051484469 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.040800035 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.13120838 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.045160112 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.037193272 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.055791739 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.042912327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.276462366 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.528741877 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.055845513 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.041596396 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.492477083 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.14353954 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.080138173 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.049151646 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.279885428 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.058899942 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.043512498 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.041029355 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.0768706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047052107 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.040311311 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.334119836 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.054145704 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.057889728 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.048154419 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.040023483 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.201075495 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.050962324 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.189032515 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.050895577 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.048817388 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.041335549 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.282289625 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.058232188 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.524834327 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.056636844 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.043655615 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.136758093 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.193537947 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.520455641 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.054091998 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.199677855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.423004947 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.065692074 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.047882172 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.473239668 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.069314739 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.048105948 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.044408862 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.044975139 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.044011598 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.143281941 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.05666065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.469647837 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.53521881 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.349946984 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.068359738 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.055180147 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.041931621 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.330261029 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.053968193 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.045041742 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.271920733 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.540394086 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.059173404 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.049188398 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.521094029 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.060605009 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.06269614 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.052827418 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.284500944 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.059539478 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.090203959 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.044533172 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.048291419 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.043822676 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.060006185 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.049879706 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.04589125 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.517727949 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.155200821 seconds)
  done (took 251.894703338 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.041972787 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.042122109 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.036992426 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.05743566 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.036518093 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.041706587 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.036803511 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.037194773 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.042375156 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.036402482 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.036239725 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.038238963 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.039120416 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.039357968 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.053329559 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.044058419 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.647689071 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.040752791 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.07597346 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.038787874 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.693244319 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.044844991 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.053312254 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.038243548 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.038478099 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.040611454 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.045437151 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.056349206 seconds)
  done (took 172.434082789 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.046569748 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.158863944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.066187633 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.072356413 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.056679082 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.045191611 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.068037351 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.059905133 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.050620116 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.044149513 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.044236603 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.105419974 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.058692369 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.144715861 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.077097466 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.078336502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.146978267 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.056165529 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.045205438 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.046679071 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.073299439 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.04096282 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.106381862 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.17142197 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.069940373 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.161554678 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.052905882 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.047896712 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.04479539 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.162098459 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.065108115 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.10971218 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.074073032 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.063947797 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.167991947 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.164359234 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.153839726 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.078612783 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.0501033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.046109384 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.046388779 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.033066761 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.162165357 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.069639831 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.045929777 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.151003634 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.071805648 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.05024549 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.057714734 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.047271731 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.060250988 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.066294875 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.115898747 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.180513235 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.086109096 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.073948446 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.070264803 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.336528173 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.05621095 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.144612292 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.041605782 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.167718929 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.07469243 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.035575653 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.050468849 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.054848527 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.07987214 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.081839896 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.152044352 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.057657845 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.14636336 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.08675164 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.057488036 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.050148203 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.05262329 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.164405266 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.168406258 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.08696603 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.087181862 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.080501744 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.04411032 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.048629714 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.036938984 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.065592054 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.054572338 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.168371237 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.169653828 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.060624033 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.051955354 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.052941398 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.052767578 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.074988103 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.175047089 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.090255147 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.142052687 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.11869757 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.125536871 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.066928693 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.063601761 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.055298259 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.113256078 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.069483665 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.062417535 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.386361012 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.120361888 seconds)
  done (took 221.513640403 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.529123372 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.105411066 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.10733533 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.366189509 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.409157273 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.980040079 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.09899488 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.101263163 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.122802069 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.291697392 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.166241219 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.119486296 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.086515086 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.073891753 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.099617335 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.122819216 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.109833214 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.437731713 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.196887912 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.218014192 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.082348106 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.376486484 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.371600238 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.490545771 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.136633223 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.452925852 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.761215716 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.24723878 seconds)
  done (took 66.632821601 seconds)
done (took 878.788100374 seconds)
SAVING RESULT...
DONE!
