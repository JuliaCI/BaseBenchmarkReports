cset: moving following pidspec: 17667
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.416141118 seconds)
loading group "string"... done (took 0.594306751 seconds)
loading group "linalg"... done (took 7.354304679 seconds)
loading group "parallel"... done (took 0.163310119 seconds)
loading group "find"... done (took 1.17145849 seconds)
loading group "tuple"... done (took 1.807465884 seconds)
loading group "dates"... done (took 1.255483168 seconds)
loading group "micro"... done (took 0.223203319 seconds)
loading group "io"... done (took 1.026476134 seconds)
loading group "scalar"... done (took 39.098299217 seconds)
loading group "sparse"... done (took 12.075490232 seconds)
loading group "broadcast"... done (took 0.945147989 seconds)
loading group "union"... done (took 12.593555214 seconds)
loading group "simd"... done (took 4.542308146 seconds)
loading group "random"... done (took 9.160643532 seconds)
loading group "problem"... done (took 1.846870698 seconds)
loading group "array"... done (took 20.872762256 seconds)
loading group "misc"... done (took 1.718686445 seconds)
loading group "sort"... done (took 3.332605018 seconds)
loading group "collection"... done (took 17.486054413 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526771029 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125477435 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118334094 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119274996 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148120486 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112553877 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125335361 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085809963 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.783840933 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148536584 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117676186 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429943416 seconds)
done (took 4.068189508 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174900791 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083361504 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082477329 seconds)
  done (took 0.208706773 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064787528 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124028966 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066764972 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066916162 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067123712 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066933817 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067018981 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066870891 seconds)
  done (took 0.570638558 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073458251 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06958546 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066310157 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068548371 seconds)
  done (took 0.32535065 seconds)
done (took 1.412460079 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.797353216 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211373322 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187696087 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414124776 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134226297 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16363006 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641047591 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311982396 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189099203 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080580297 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109575717 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.331638717 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11181516 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632311023 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077683189 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09066013 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138562153 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435494929 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067846122 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082567877 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089457324 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128186409 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087898397 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074699252 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14606432 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06780813 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13686148 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079570883 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066188152 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214702291 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172886185 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65897189 seconds)
  done (took 9.20491776 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096625617 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096622343 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069696956 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123489336 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097940605 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069689392 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070958442 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067709005 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086931669 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127939728 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088967061 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101667637 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065809998 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068775773 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085025744 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204771467 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082953461 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084724843 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072991039 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077640353 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107617683 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077707785 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077502388 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078715255 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130995695 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180448474 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09923521 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097195168 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067888182 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079647171 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114969836 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124601926 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06558749 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066320592 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12397216 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09450214 seconds)
  done (took 3.548856799 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.005094811 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143076692 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09073636 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134374996 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06514768 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10933006 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084824668 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066296836 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081824963 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210185791 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.389336276 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.596845046 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111290466 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10387457 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067217187 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068135016 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066831926 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503624082 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096651518 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107443118 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081932185 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070695502 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069213079 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064502254 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068446791 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064807845 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068899674 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110444506 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096166949 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.314309242 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125785282 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068904369 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.040910244 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071485431 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126247424 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066164414 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063237198 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10039088 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222379129 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14541935 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068396912 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063901846 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153113435 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070147053 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066785202 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083569874 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104011482 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113895994 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065775294 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066448449 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164906328 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065178233 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079777773 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.673247926 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154211309 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07834199 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064452471 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.252673312 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087852605 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070115682 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064827242 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.203760441 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133807328 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069193559 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066970966 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068131917 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06958465 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360047191 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066753721 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.229919563 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068006598 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0762224 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069882839 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069701734 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073633469 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072655439 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087987977 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066699761 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075703813 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065779401 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065864383 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067511228 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083724897 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380305243 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066640293 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068375894 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06469397 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089119466 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097715061 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066616801 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065338561 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100532239 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068241602 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066186174 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106890018 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06665374 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08333349 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069828881 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113159849 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066503983 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.113380311 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067505076 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097927946 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069155175 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097830452 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079323261 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067453625 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.410043155 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064144559 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063982695 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066785824 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064087046 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066391274 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065568052 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07780795 seconds)
  done (took 20.320003528 seconds)
done (took 34.123482629 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244137575 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083384814 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080443653 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074072971 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075241857 seconds)
  done (took 0.63477101 seconds)
done (took 0.804654782 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125717889 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101935221 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064626097 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097822845 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064544526 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102038474 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10184714 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082680749 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102019 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065250267 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097705988 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064750043 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0641008 seconds)
  done (took 1.209185729 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083298131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084141547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070098665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083154632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063634375 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083904667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081629106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089254247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081782873 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073115701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063634433 seconds)
  done (took 0.925531175 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083049902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084712633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070780532 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082121862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063670312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082378391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082562729 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086365649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082419401 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074746855 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0637432 seconds)
  done (took 0.913469517 seconds)
done (took 3.108500725 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080208928 seconds)
  done (took 0.107462514 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.597458931 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.12602393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081727002 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111867374 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192479423 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118611218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274541085 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087432895 seconds)
  done (took 7.822438178 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090286871 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08450172 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068715846 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068693747 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068595624 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071938903 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072797089 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069649741 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069244524 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071158425 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07180496 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070556616 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070933459 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071435756 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072791706 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067961437 seconds)
  done (took 1.35055206 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093459364 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09193876 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073383804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074984346 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07240599 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071464327 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074666008 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073994166 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071632147 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072116952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074780835 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074067535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072285513 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064874589 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07400146 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07539144 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071719203 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074139993 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074403267 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075122746 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075073482 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064472763 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071202804 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074342554 seconds)
  done (took 1.944329002 seconds)
done (took 11.281433211 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11808734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072778892 seconds)
  done (took 0.219942329 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082617958 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083620982 seconds)
  done (took 0.215994024 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085401485 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065326717 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091209758 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079437686 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066692611 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066081691 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08853423 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065858609 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065937691 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065367301 seconds)
  done (took 0.789277992 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067663091 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077443638 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069837412 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081465766 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073831579 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064406044 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071904739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067564962 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077875732 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062626179 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071532588 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082674266 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071292639 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084565165 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072550908 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070020055 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070676407 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067484915 seconds)
  done (took 1.364540206 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065448181 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067392087 seconds)
  done (took 0.201161179 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068921061 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064869333 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067157369 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067251625 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063452022 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062522929 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063765527 seconds)
  done (took 0.505571196 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384610589 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113172721 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315338489 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072921356 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083947749 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259508737 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065562243 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070580976 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070433319 seconds)
  done (took 1.532134312 seconds)
done (took 4.907220884 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080255519 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08563274 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095750694 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375786958 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091135686 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066171374 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114070241 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189039211 seconds)
done (took 1.17330983 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21217779 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641376617 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404296574 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204555103 seconds)
  done (took 1.29852307 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344630634 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089040049 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058512183 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067469161 seconds)
  done (took 0.628600722 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065850731 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068770019 seconds)
  done (took 0.189505108 seconds)
done (took 2.397182853 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0688392 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086313936 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065135665 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063836286 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063569437 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065813594 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063714734 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064592413 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065816122 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065638346 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067028224 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066453154 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066284433 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066261726 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06532679 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063292955 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066221244 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06335063 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063652317 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067051579 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06365737 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066202275 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063800331 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063963815 seconds)
  done (took 1.660913161 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084063487 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066620593 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071608939 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071906649 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069702085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071689376 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071327407 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065898234 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07139269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068029817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069884167 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068923722 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068515051 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069486482 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068661419 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070229882 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071200899 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066247614 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06895396 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069895574 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071649226 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066190457 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069238019 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071331066 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069811907 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070761411 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068463456 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065957041 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071487942 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069684228 seconds)
  done (took 2.173414662 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07091632 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062696975 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06425686 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070665811 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063458553 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064738817 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064228565 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063985278 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064636485 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06340115 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064145338 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063204502 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063641293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064845198 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064791992 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067256534 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078598676 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063869848 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063897548 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064263693 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066426772 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063288682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06323384 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063932295 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063220148 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063508475 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063745129 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063480486 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063858972 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063469541 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067055578 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067455974 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063049501 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070880602 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06742195 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063441244 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067549348 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063006978 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063938711 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.0628522 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063661519 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063233559 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063186761 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070220452 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063454555 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065054436 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06368305 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06462252 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064089742 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066618886 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063092491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063229078 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065375584 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064936418 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067597371 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063490101 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064077333 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063210954 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064024033 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06326156 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063310475 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063282313 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065924298 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064263653 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078979544 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070399097 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064054447 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065357558 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064043845 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066150577 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.179127587 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077132281 seconds)
  done (took 4.900190796 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08931709 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087031318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065700474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064826651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061369629 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064122121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069829957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063598944 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065728592 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082124475 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063850637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064599513 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065822735 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067368287 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064326952 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064906453 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072449136 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061739009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064235348 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068823838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064506051 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070778853 seconds)
  done (took 1.619205826 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156519364 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069754919 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104893617 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076098987 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069588072 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0755548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069477591 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069485116 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070441235 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06674176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067609321 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070390931 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069962561 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067269827 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067621876 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069624496 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071041374 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068123636 seconds)
  done (took 1.453250158 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076281602 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066352123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0872562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06630174 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066288781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068402661 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070374642 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074640186 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068604037 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065876342 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074117752 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068752866 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067979903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066092001 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067808711 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065871624 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06829178 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065722643 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074169692 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069928934 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069990186 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073864878 seconds)
  done (took 1.615401844 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079131169 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068172844 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080712636 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068544849 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062065473 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063775521 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069806316 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0662667 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070086612 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06789945 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065597916 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063604347 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068747206 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065523218 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068316501 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065232851 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067873075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065586386 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067611188 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061408209 seconds)
  done (took 1.429291161 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086585025 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067977666 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067571422 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074555777 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067929099 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067426724 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075077959 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067690822 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068377308 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088904116 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067846687 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067919778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076033436 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072314202 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067279384 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074668908 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075541645 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074819994 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067212591 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067571915 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089374657 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067391483 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074882329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068234878 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067110738 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067541939 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067559841 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07273501 seconds)
  done (took 2.088147237 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066402507 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066695259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062760471 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06273992 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063150704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064546461 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063661973 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064019669 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067178098 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063450594 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066189323 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065758504 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06591774 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066383506 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066028391 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066070336 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065762392 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063395343 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063110957 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063723717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065813415 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066499556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065381745 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063525464 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063868936 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065840645 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064256827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063020911 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065715079 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063019622 seconds)
  done (took 2.026344828 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075199626 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073813944 seconds)
  done (took 0.223543202 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063226151 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079754755 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062861322 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070398204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069518428 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066463638 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073018315 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069781056 seconds)
  done (took 0.607444059 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082842556 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07736526 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067724699 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079194623 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077389684 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08402575 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135247778 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06717094 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073212782 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064596317 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07979619 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065772978 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072569408 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066259849 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07252767 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07281999 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063438139 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073078571 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068834923 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065315747 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067031013 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075234121 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068548201 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061951375 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068071067 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089639456 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077926297 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066001435 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068994675 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073637132 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072618573 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06067139 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066292138 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0663886 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063908479 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076102173 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080472906 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068806013 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074543165 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067318114 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075761202 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061341383 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070847392 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072600665 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076518761 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066591024 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066149056 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06049833 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063746704 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068207795 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061073004 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068752312 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060174975 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072990526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069444767 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076690365 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065571367 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067516149 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068855957 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069047439 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072784253 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067980114 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068873858 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065364095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075472213 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070096338 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07441997 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060672854 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059758859 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063380194 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075672872 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089410019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072774283 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06633417 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066769851 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063241885 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068814119 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066330732 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071402614 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072635845 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066062184 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07124265 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073349014 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06629738 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068170913 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073961744 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064054308 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068549498 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06355193 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082685814 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064846147 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063759663 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063566928 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076647005 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069424508 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065728778 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064439795 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073588781 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060185942 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066702681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067277396 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067163908 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076390282 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070074869 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070705861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074384362 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072635101 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065403277 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068406545 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062072577 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065917232 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064340874 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072067718 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059321 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068090165 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065968976 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065821417 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073104251 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063586832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064973546 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072625625 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070452764 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063466828 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.188143385 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069935607 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067094055 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07007295 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075355136 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065358521 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060801038 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061495342 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070019183 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0659169 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070523755 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070398112 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070446296 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060433967 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064104842 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071598398 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075069278 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066186884 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067862678 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0734093 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067449278 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066691786 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073076126 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068662336 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065427415 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07207746 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06762708 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061151628 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069154811 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069346802 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065287494 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071367218 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069676516 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06869961 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067542306 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0648017 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073241765 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067215596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066203381 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066493774 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065001838 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076661288 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069102361 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061330917 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063719185 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074777518 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064201197 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065334553 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065207816 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068592112 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067021224 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063891128 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065898431 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06823454 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076250633 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070134581 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067146826 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071359066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077601384 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065888144 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068570877 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065870279 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067947468 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066699733 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07503828 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072327622 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070460307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068657032 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063068607 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072583569 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073728272 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065750768 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064096631 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065431057 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070077773 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07196388 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070426915 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066702583 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06468376 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066676568 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069210413 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069337206 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06562393 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0655462 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072026365 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064131663 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072743602 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066520318 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076628538 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0694529 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0608635 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068770961 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06424754 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0721571 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061177112 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063978194 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065223312 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066817055 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06488646 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068281606 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059892958 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072745373 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073269917 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06688901 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065404928 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065754339 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072982488 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067330001 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070256106 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069198301 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071789761 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075942081 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064559695 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068351157 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074981629 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064890335 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059472522 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070334129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063170477 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063896882 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063873684 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0633697 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067793799 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072333258 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071333434 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059135881 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067489564 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063728849 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064425159 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060354759 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069462077 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.067896166 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065755017 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071629575 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065439902 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064820901 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068476021 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064739149 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065521375 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066310673 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068049685 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06540321 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066321811 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064488886 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067755185 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.0642594 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062772608 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066640618 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064657791 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065870389 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07000991 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064511751 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065180526 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068070745 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065226404 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06582472 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065646282 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064324084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068490136 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065904335 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065528532 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067428835 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060066517 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072056164 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064059175 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072411003 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065861886 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06138552 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07062906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067579875 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069739778 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065438493 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065415978 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065682056 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063379966 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066468191 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070707855 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062357833 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074098975 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071038167 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065464098 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.066738324 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064823152 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065793915 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064075227 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064724772 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064449544 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064770624 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063756162 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068258157 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067217789 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064651285 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065633392 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064088984 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064997245 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064626868 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058467017 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063804776 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064557923 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064399493 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073414922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064407362 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064814901 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063138007 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064747971 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063063844 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061331979 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069831973 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071399832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064769709 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070391433 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063933061 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065700181 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073532424 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058472773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062008327 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062200596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062473721 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070794815 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064474982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.072661661 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064725983 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063162439 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060592152 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064797445 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06382843 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05964257 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062046295 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067472817 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062904991 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063291536 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063279508 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067224586 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064356452 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07211998 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06314113 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064174047 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064429284 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060756541 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063042896 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06353986 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066608559 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06450996 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06226343 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06146981 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06424562 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065258124 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066326763 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066956261 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065491365 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070267008 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064598761 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067537999 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066117513 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05957229 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067358393 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064726654 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063900295 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063386738 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068078713 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.309862299 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069263864 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077731887 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067798304 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069318971 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069144331 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065639417 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068915287 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067590844 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06836715 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068233789 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069220833 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076522844 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066550032 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071510796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068139394 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068567846 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07454463 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068681539 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07151195 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073636982 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067585797 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069714964 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075978753 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071590708 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071464821 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068253954 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068923076 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07367807 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066565368 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074399512 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067167297 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068962416 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069165508 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066051286 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067246199 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066994964 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066724055 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073503575 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068764898 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067128759 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066227533 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065068075 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067742961 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070097242 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075290995 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069126082 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070627344 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061888313 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063611063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067771564 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065102675 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067902546 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069834038 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072907931 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06930984 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067314853 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066475616 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076036783 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073086571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070754509 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064490242 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070748866 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067560298 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06930925 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067921865 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067192381 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067749216 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071451046 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068693748 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066655082 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073125363 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071075498 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067480026 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067889497 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067778557 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067285448 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061891792 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067608075 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069201673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071252443 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069008123 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067204722 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077075503 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064301197 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067437663 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070630741 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066278332 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071332879 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061775259 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068947062 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067887883 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067921403 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061927464 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066036748 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064635952 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069715292 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066538376 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062590163 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077508777 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07551958 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069790449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066158174 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065050333 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06147768 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061482903 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065762408 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068083356 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068319865 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077306441 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065670704 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065613579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061848928 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06671249 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069637445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069376011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063785564 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061419204 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065802871 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069378881 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071461518 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064812088 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066308329 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069259089 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067982002 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063832832 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068927274 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062813368 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069579427 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07851479 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066432288 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066409329 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071903663 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073452341 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066096261 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060916779 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065923616 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068627824 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067646632 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066832555 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066136295 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079543651 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06764793 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064271864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063834504 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067225563 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064610652 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073283999 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065792675 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065637847 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069647735 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067064661 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072673317 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068866338 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072159886 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068416719 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068176606 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064450045 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065470995 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063128916 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064028447 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066045475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065216555 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069033671 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072050381 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064575169 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07518107 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074149969 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067132708 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061989435 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064392193 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064881918 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060109163 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065466918 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062853508 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063513695 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063425292 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064266588 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06623171 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069645111 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06615289 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064996599 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064829461 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058803031 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067372086 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067312556 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065579187 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061828281 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065085445 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065317881 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069025 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067466594 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062577145 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066937983 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066565188 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066081858 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059748436 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07106883 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06397076 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066559906 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06452788 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065002357 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065305182 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068391407 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069309833 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065795342 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067296184 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068816454 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066588867 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061951882 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062142123 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069754553 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062980663 seconds)
  done (took 40.842314236 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10786333 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064112742 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062984979 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063494243 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074487037 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0642044 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062888906 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063199196 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063535106 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065779592 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063274678 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062335864 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072014863 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07904607 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074427361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067620344 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061768488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06360478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061558493 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062662939 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071180026 seconds)
  done (took 1.700304105 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073381119 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077231765 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075622534 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083549062 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071072712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071354639 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076046558 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070504534 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078511265 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072938223 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077678741 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071069607 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072157683 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072772044 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072908152 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07040352 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079046219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070731222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070220949 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074776286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070610043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075838427 seconds)
  done (took 1.709675748 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067797271 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065305712 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067705914 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06048949 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065538178 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061394537 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069186828 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064073671 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068467514 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065403909 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065431924 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065854445 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06823111 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061403233 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065419141 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063709561 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107991099 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069862559 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06553572 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066593295 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061126447 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067256573 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061315136 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061253268 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06493456 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069468255 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066121618 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063323161 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065359869 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064777005 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06586641 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063766537 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067809701 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066194634 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065834017 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065139905 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065132517 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065653446 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060762651 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063069958 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066622056 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061603992 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066984493 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066924221 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06311096 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063060913 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068000467 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066365009 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061296855 seconds)
  done (took 3.320440345 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078333576 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109519986 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067586647 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090727374 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079556878 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072864585 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069363778 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089541251 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063120649 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06506591 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081631257 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078138435 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065282072 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070846378 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069405058 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065344439 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066923085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06417032 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069070555 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065061662 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068838242 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071781068 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079552247 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079290276 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069064393 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064731472 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064601043 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068949445 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078738392 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070128057 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070452478 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070486784 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08099482 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06771945 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064083893 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067876408 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082008699 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065472364 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068051273 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063740968 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067433082 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069967681 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072036154 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081291912 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06553369 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070445224 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064935433 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062099765 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076985683 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067077219 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073303636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078599363 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068325179 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065178485 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069594655 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079483967 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064906509 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063500706 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067719375 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076482954 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06258471 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068266681 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077848204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066566121 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071727839 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078098367 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070221611 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068711381 seconds)
  done (took 5.103333167 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075641677 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094466287 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083665134 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082754343 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076278522 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07568814 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075741677 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076463486 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076030547 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080313939 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075051284 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114636634 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070668935 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078044028 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075559524 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076054689 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076343323 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076004872 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075782323 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075040265 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075438131 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083827728 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075495935 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082280782 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079669069 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07132081 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075357555 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07512714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082623924 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0749303 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088163214 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075779178 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075677529 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082738217 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078970715 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075289262 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065421542 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075174609 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074914604 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075016675 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070598499 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083706468 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074908056 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070360308 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075133967 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074207693 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08226954 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079940588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077129022 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078963754 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074625661 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081939478 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074342683 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074447006 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082183526 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084552776 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08150029 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082143385 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075514736 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082065543 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082370989 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085093896 seconds)
  done (took 5.006171178 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081869746 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073756044 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081202089 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061094061 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06344465 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071918833 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064014232 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064060388 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073856702 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074820005 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076067933 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071136288 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075034703 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077064812 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071484062 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074166015 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071541009 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071258793 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073631523 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070692698 seconds)
  done (took 1.582310522 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073765447 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082561337 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066748801 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07102238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068926735 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072267911 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068547013 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06883095 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066505566 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068581814 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075961404 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07542789 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066642651 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071203913 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075887008 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071769526 seconds)
  done (took 1.2298935 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083378247 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072335814 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079673074 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066149173 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066444264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062041232 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067253036 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063080826 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063663042 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079601736 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067107191 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078431152 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067668567 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066193093 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064369254 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072009454 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063530331 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065059073 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067622188 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079167591 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069092926 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063716464 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068699602 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065730037 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068105839 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07052906 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065705213 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066344407 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062920595 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065259857 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068850465 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070002787 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062362058 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064476354 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065173077 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063393247 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065190945 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066571954 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07182283 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065434657 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062915829 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067207407 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064903657 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065938548 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061536122 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065696275 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062091756 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067262082 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063118028 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067407581 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065677456 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067779992 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065425898 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072004863 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068477071 seconds)
  done (took 3.791497656 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078615884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06884308 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061239148 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064176932 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068903129 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066733076 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069811971 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067635391 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067625655 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064063949 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068146934 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068335732 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066873894 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069041135 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067292393 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06928249 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061547276 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06631574 seconds)
  done (took 1.330668422 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071334709 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065471843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072901559 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065720265 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065883266 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067818224 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061594809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064474774 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063767035 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065519613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065607848 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068640827 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063930738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06872467 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065927304 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065747974 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068375608 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06424367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065646883 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06214132 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068332902 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064338018 seconds)
  done (took 1.534854468 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093300985 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082447963 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139917044 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077849758 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083898299 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070812889 seconds)
  done (took 0.629507234 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089866055 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100730817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066273038 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069957239 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07583292 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06940994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069689998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070332778 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077757734 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07612706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070176394 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079613966 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079790439 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077588324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075836271 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076879811 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06997978 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069931518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065897382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083205762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070487487 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078853729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068818681 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069760692 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069975344 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076682673 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078359334 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076459949 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069399016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07913643 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076109772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069547529 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078590966 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075738051 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069037108 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07746473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069775416 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082643851 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075419502 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077581905 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068456415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075884812 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077832076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074895763 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077663921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07036363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074416801 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070595073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069481072 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084970676 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075052383 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076478303 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077692049 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077951053 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077372278 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08455267 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07615538 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076646258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075225532 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075474205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076923768 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075035362 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076819456 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075578275 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075942015 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077220121 seconds)
  done (took 5.053528824 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102448757 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066386967 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070381903 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075868049 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078047568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070247474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070114131 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070947322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069397648 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066625301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108971299 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069880624 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079109299 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078132335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070615652 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07021213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070787139 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077936284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06664945 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085698102 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069630304 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07794621 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078341706 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078007595 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076083602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076293528 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069872368 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071119238 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070188239 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069920938 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074209124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069638749 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077669371 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066865802 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07748345 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069856988 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069536823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074883584 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070114629 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075282311 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077570539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085147061 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069028081 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07042016 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07649065 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070261849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069930046 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06604923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069242857 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066164934 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075198754 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075156943 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075365761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07689137 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069666088 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070181704 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06923898 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069184531 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069395032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07522141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077051366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069634258 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085165046 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069514987 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069485708 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077276611 seconds)
  done (took 5.022632281 seconds)
done (took 97.702913049 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18785757 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165356671 seconds)
  done (took 0.391059082 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071166496 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099139367 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076106174 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127452595 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066433922 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100195721 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099737614 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077872411 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066615216 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065908303 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066063628 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068955453 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131979834 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065888356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065697638 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069586009 seconds)
  done (took 1.382475031 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098882369 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160938999 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101309869 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065658443 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099672382 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073201945 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064924143 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074827446 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071137861 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065640362 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072735642 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070785937 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064612418 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070184506 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071211959 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073562274 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064712242 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072053066 seconds)
  done (took 1.514270135 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100901672 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091603473 seconds)
  done (took 0.275714568 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158867276 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133073961 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206219258 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351586505 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166308015 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148386074 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146736095 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14346118 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117097083 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138627906 seconds)
  done (took 1.773627854 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098606704 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153997888 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267228497 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117380708 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073317688 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093869053 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118646248 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078812685 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080907546 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080444466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079994493 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076009497 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10048233 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074048419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074047261 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077003403 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103433725 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072941598 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074130032 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076385314 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099878465 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066152592 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072833631 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072866354 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077532442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077010693 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066187185 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064668969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075719509 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074527496 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076852844 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093156402 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076874217 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107523711 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070984089 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107110832 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07756925 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072413974 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074160643 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072433954 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077790858 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077414671 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072485131 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075748207 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065183809 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076088342 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065743877 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065228601 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07727657 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066814078 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077117579 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075747476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105392561 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066568363 seconds)
  done (took 4.70148903 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1034136 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106420354 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071044308 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11323356 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103544815 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073131991 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103836627 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095577523 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105872845 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071035222 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068898736 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069774733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082629637 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082826812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114942069 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106499936 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073883127 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071790772 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105816044 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105514752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069233317 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097420062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091076101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103897973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067519339 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070971984 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068058293 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070413328 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076743824 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078977761 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069790643 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080618016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084421298 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078231677 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067359611 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06795536 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068869009 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079754858 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079270825 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079086847 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078067899 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067631362 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067823046 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069626418 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0699034 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069293122 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077861733 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080158932 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077864403 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068781032 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070073856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067659219 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069037082 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079332043 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076995619 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080871703 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079094326 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068350232 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068452959 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072235025 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080279337 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078530878 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079372673 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069559387 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078235724 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068291282 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080300234 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084227095 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068895991 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070092731 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068573232 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069379349 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070118162 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077159734 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077626919 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06961722 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069318377 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068593491 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079798324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077798917 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06793755 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076275535 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067506634 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068574137 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069989471 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069435448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07790879 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079467328 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069636116 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068116962 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069469609 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068184996 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06675195 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07653269 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079916019 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079261497 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078751127 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069810567 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079129318 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078591832 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069991947 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079209716 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068503177 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069955784 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069704037 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077834275 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076796698 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078603028 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069051759 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067961385 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.211440076 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083195666 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068086517 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078304575 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080667257 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079762488 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068498419 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08153335 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069256453 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079589446 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07005152 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08072021 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068824791 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068523648 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067919237 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069208387 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079875856 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073566457 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068525006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069720124 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070021901 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078937274 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082691655 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07069387 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078925609 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078754644 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070570149 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078793178 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06871271 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079288269 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07033765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070037949 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067124669 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081348654 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068740753 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068748083 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070037786 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080762558 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068629085 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079959071 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078112844 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068932859 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081208529 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080319858 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077613826 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079968592 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0712191 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068194497 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068731199 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069777642 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077953597 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079374658 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070202863 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069008036 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078560665 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078794175 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067543677 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078171181 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078083374 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077842975 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068440964 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069973522 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080257128 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08047145 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078057418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077592839 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077835403 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068256296 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077211566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078028759 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068091982 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084963168 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068024135 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082545736 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078698994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076526863 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078478257 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079703864 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079571084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07959332 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082702679 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068250709 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067903928 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079240459 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067875734 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068997695 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077844289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06943993 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069142375 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.0825143 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068340829 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079551336 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067995021 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079152832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067661931 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070113246 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084146504 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068879422 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070090505 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079744027 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070127214 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078254797 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080711203 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078731758 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068374815 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069957897 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07907333 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078066646 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067588547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067426957 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069319465 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077302162 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212210646 seconds)
  done (took 17.433512568 seconds)
done (took 27.615490338 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212820116 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152022826 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182394533 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118004682 seconds)
  done (took 0.794325804 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116244912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10110393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092633204 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064863061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097990123 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064658146 seconds)
  done (took 0.623586789 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310793823 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210322082 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187058075 seconds)
  done (took 0.784863054 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202028344 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189367963 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416395092 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261169112 seconds)
  done (took 1.261203861 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14520721 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089485965 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067160365 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083910571 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132655896 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159726759 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099912572 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125455917 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078552713 seconds)
  done (took 1.113288449 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149259456 seconds)
done (took 4.802542874 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.21321861 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.243392927 seconds)
    (3/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09365619 seconds)
    (4/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080174156 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.124783851 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.198640376 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1465588 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075747252 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.143081496 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107587882 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072043372 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101635886 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078791789 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153010788 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.115997901 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191177269 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073591891 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108065302 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.176505043 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215457378 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228011681 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073243815 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151173691 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199066192 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190985545 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.223003988 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.187245063 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123221159 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063050412 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141079828 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071291211 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069453602 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 0.140892657 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164413861 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.198508393 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10320895 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089591461 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153634214 seconds)
    (39/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.111861001 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073298823 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071247024 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06191764 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089627223 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081689747 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152813848 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.103912744 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072536405 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.206433966 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.203122932 seconds)
    (50/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10944506 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113642685 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089379784 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051990875 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065137326 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181533301 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052307222 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109768856 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181593969 seconds)
    (59/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051987178 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069638486 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098414734 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072829834 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072207096 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065278838 seconds)
    (65/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141176318 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068118763 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071523454 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066960335 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155198869 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.202261852 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109566852 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051553033 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076356284 seconds)
    (74/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073574484 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064766926 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174811603 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051632089 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092749327 seconds)
    (79/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100303702 seconds)
    (80/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.151088492 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139066582 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098067053 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.175362709 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061261295 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080474242 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064824096 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.206607353 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08915588 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18230092 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052201411 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052957722 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076825241 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090800112 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092240471 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091917821 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215731816 seconds)
    (97/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051312512 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 0.066323423 seconds)
    (99/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.11255336 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07610862 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070853729 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073865304 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050551403 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090239976 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063747645 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078266388 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079303207 seconds)
    (108/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063431747 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052599333 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071728259 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076317791 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15023154 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075365681 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.0840744 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053962691 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102135214 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166080355 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071841627 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092617037 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072952883 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050555784 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075056019 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07713948 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096074839 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145005225 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162429286 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 0.130255953 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073195352 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095573796 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051016466 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195690525 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067820016 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.136235221 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073416897 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078439503 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064688121 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064852077 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074612869 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092887991 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148851387 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073864352 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082916608 seconds)
    (143/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076621512 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074589818 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070839568 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.108364619 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07372472 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068665395 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185228422 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.160498455 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067499285 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054074143 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073837889 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067461019 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075055896 seconds)
    (156/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075396087 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095948112 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092235183 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067330396 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071007513 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050234519 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05251361 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067250803 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094700031 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05259454 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076238845 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071254871 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075244456 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078604335 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090982704 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125826785 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101339606 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079517493 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077372812 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.161327111 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088301379 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052840235 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089739431 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052671494 seconds)
    (180/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069523335 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092568612 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199323308 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086783474 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051079977 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139977574 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052074517 seconds)
    (187/309) benchmarking ("sort", Float32, false)...
    done (took 0.132893709 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052808953 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078855299 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.156341613 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067153254 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074268812 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15824858 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142514257 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076493214 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175877637 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054725992 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074610379 seconds)
    (199/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053654249 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066735667 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068108193 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190508805 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068506869 seconds)
    (204/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076129389 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075124832 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.225587688 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066390851 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068981047 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076964894 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087350271 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066237758 seconds)
    (212/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120992738 seconds)
    (213/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061287177 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067195302 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064539072 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072314691 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072468638 seconds)
    (218/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062195576 seconds)
    (219/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063040361 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124624254 seconds)
    (221/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052663323 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052066475 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075022796 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073434257 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065837179 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051888177 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062568242 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068487414 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101621043 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050374379 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070659086 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065403341 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07143151 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114714566 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08855359 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06704093 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065250076 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063850469 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068171986 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154966017 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065716429 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071898578 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067338128 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077030342 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139409759 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065663118 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091237565 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066944527 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068245218 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.0719694 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.272831196 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050381874 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050492406 seconds)
    (254/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073936243 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050525064 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177576384 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195254121 seconds)
    (258/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05144355 seconds)
    (259/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110472068 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066171325 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051587901 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087577849 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05065942 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064872167 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072049517 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155838417 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073437538 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072299603 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051192388 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10918948 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079854852 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050579983 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065008478 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089989249 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08689638 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05163997 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051024932 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051882217 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070001914 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053337297 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065212883 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160944132 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050541378 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095870512 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087411282 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073003456 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063688761 seconds)
    (288/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052872033 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063385382 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072585121 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051539438 seconds)
    (292/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051194896 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053632279 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066286622 seconds)
    (295/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050714572 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07869646 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088234523 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071057943 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132852703 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050471019 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063981206 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070531225 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050600024 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065003806 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050783856 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065740268 seconds)
    (307/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050701949 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073141638 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052007197 seconds)
  done (took 29.684654362 seconds)
done (took 29.781096448 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082454323 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092002741 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074144662 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092829045 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080472034 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07543146 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072703069 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077972885 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079746741 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081580416 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077523483 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054047648 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074319779 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073914924 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075186865 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091695105 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078707752 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072712996 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073374804 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064132002 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072825578 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065519739 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066774959 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053604842 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078470299 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071267398 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072639568 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073963926 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064938826 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064881913 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068277845 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072913514 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064725953 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078458573 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072365884 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074209579 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074654377 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076379711 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066331555 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065154634 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074042017 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064976812 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072452985 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074099291 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071296065 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071501128 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07243265 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077887225 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090485228 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067725075 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074544328 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076718105 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075786039 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072333326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069538285 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072935465 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071088758 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090873863 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073339124 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067024532 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073543197 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074460906 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07089291 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072113184 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072398361 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075430533 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075204489 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070753119 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074036596 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070827724 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064547508 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07262786 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068287209 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065016362 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075822321 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076755521 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063277632 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070668873 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072207079 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07037141 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064166223 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066725307 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066429655 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071191219 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066241296 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054044876 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069198331 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071684332 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064120964 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073156017 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071412453 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072303338 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066939723 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075689801 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064793784 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07066017 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064969235 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065147961 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066344896 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069193743 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064282655 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066794293 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074602102 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066528483 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071287133 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078718273 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064823835 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071695801 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06441646 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064247964 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07944248 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074518198 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064950109 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067367267 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064106373 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072199289 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064409375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064907709 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064677335 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064723422 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071159739 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065550366 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06734744 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07264164 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078005316 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064719407 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068571072 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066782636 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066167529 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071847807 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065563222 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066651048 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069090147 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063877264 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070093118 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06686851 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074836404 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070289407 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074676844 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068693152 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075155413 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072578149 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.212479747 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073753713 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065014864 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058773285 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06830615 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06661639 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066965988 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06488255 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066425178 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064792958 seconds)
done (took 11.124946805 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068183962 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143244544 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09785847 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095449995 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086145081 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065979456 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0765067 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101752075 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067003651 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101250358 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087419594 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085640153 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113887256 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063579243 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064996867 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069368764 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066911142 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081146575 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101138309 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086146284 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116132596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065184672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092639049 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089847693 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08780613 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102861837 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069670601 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069904378 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069599463 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09217581 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088129478 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069331164 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06646003 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098630301 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094519415 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083833875 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065976174 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083664521 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065889907 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065019931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067035179 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099349418 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080643665 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080865665 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069984802 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069016206 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066129234 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083491839 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089912362 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079871975 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.0867998 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100683792 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068150011 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065356956 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064023727 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085513201 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064552043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068902972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065520996 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067678533 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065108977 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068659385 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080500833 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079567578 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069316002 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079272984 seconds)
  done (took 5.371783936 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083667746 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090640137 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082480399 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083293894 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065075236 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066184001 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065371992 seconds)
  done (took 0.68686074 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068617948 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089768479 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091758376 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092490202 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083425664 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090960374 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078243355 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068454836 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090618989 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069428701 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090586139 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103756529 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072198019 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076424182 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092623847 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066203251 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090366864 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066065412 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069684916 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089813711 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068501481 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095093544 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069340104 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066265282 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0802983 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066099706 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114051044 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070675236 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067710033 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06913094 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064268271 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106744144 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07960591 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074208447 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065762418 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080007121 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080087807 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064137962 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083297871 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077071403 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081549466 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067569994 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066765043 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064500789 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071887136 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078816761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069917165 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069417253 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071676201 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08950357 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06928022 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082376134 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072538044 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074842173 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070142198 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075527543 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079828219 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068943541 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087762526 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068459128 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083458433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082586311 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079417288 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082130792 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068189465 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079609042 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080204808 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068413128 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067698037 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069489491 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082274631 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064075575 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067197195 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076489707 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068473675 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08895672 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089002084 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067755376 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079154605 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066733324 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066169682 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066195406 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089223472 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071582393 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065952696 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070025235 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069859357 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064542323 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065383061 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070140287 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0643901 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067808056 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069026408 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069390407 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068955788 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083112271 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068643853 seconds)
  done (took 7.449122299 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067637807 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067136205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069427759 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067571056 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068132655 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068200299 seconds)
  done (took 0.581705971 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095534538 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06927791 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080081269 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071167066 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104696554 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087063065 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087275916 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07805162 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083746255 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078870227 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087022184 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08948645 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092933257 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072107649 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085486483 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070775851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087430007 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074918056 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077998625 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072327151 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086573725 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071820925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072060763 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082119738 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076228561 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072277359 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066806371 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078036992 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077559293 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078115186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071578702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076069864 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070363749 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077861162 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086132038 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070252451 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071163685 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077057611 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071729385 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075868499 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087413274 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071123448 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073820779 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077213046 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077921568 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070357686 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07681068 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075036179 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085267638 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076206815 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076066168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070489371 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074634401 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076681854 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070273742 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076732645 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075879651 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08696434 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072106538 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070092639 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068141031 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075744921 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077778882 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074964439 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07810105 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076478524 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070044652 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071609163 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072201751 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072532958 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076226925 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068240723 seconds)
  done (took 5.63857663 seconds)
done (took 19.819192343 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536068671 seconds)
  done (took 0.580728599 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618828104 seconds)
  done (took 0.717589438 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.834389806 seconds)
  done (took 6.920599859 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404507752 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.521114038 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720266606 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132048991 seconds)
  done (took 1.883543862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.697169901 seconds)
  done (took 0.816686 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217630427 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201679009 seconds)
  done (took 0.533460246 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375333667 seconds)
  done (took 0.456616192 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143407678 seconds)
  done (took 1.223635351 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258320832 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175841126 seconds)
  done (took 0.526153955 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475337077 seconds)
  done (took 0.558834062 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.886637315 seconds)
  done (took 4.971432447 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213657519 seconds)
  done (took 0.356033655 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238358341 seconds)
  done (took 0.314012067 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727719585 seconds)
  done (took 1.804127781 seconds)
done (took 21.813846692 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082098633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08184631 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080744192 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077425593 seconds)
  done (took 0.364936451 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079214051 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074643861 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078583121 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073381601 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076589176 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072427901 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073315934 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074626534 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071942876 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073432102 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073090524 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072186651 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075556567 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076472181 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0726582 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076941594 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078238031 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072267167 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076329622 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074609123 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072028488 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076495457 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076037158 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071993015 seconds)
  done (took 1.869881319 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077945585 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072674229 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074985375 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071599131 seconds)
  done (took 0.396083406 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079702203 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09528997 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090022736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07742103 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092330992 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085720626 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068486044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068616046 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070030489 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077046129 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067478285 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095836853 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08787978 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077605191 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079053195 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06550537 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068711286 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087260183 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077553358 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078991647 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071076365 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078492544 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06884359 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091478308 seconds)
  done (took 1.978847067 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085519276 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104172449 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080606968 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088983493 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090855851 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064818874 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086523191 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09171832 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125859882 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064757856 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071732502 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067246114 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074936311 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06734264 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083843447 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109226663 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113158779 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070276323 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09734279 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065059257 seconds)
  done (took 1.807830226 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072817466 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069024346 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065018479 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069199279 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076294821 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072442331 seconds)
  done (took 0.52509086 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070020554 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068289779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06705126 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066900333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072591754 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066698403 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065968752 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068322615 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069314359 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069851431 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068237991 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06779988 seconds)
  done (took 0.899722602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202792524 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068062442 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068488839 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065068252 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070632388 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065992577 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081691389 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067453443 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091787881 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066797441 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066801618 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06860937 seconds)
  done (took 1.070473541 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207604144 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076445982 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240051058 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149987897 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111772182 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115473169 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112234704 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114332642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141310643 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101607275 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169129961 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167589868 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107137656 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1371941 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088237468 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100012988 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154313707 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162781192 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105055664 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166264371 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144458263 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12473253 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151207955 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100462952 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10462649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1209936 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070216358 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079156547 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168937979 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132783349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143154944 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10985135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091518384 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175786874 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170064055 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140551299 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14705439 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084643351 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104737027 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134792157 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200599879 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088173532 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162102746 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109147549 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079812041 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275360789 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120146405 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119860551 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106210865 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090498199 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145217382 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183193779 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13711799 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087158764 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123169459 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113106064 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114311927 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114161521 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181675185 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16090363 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12769724 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071144279 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108079784 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152922299 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133354503 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108031136 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124302073 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091268827 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133488218 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155011659 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119501529 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143660497 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116146401 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088101222 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118435543 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139626978 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126698168 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160233206 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123356348 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072436192 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123326266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101017526 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080079863 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144734819 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075051802 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175923436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098625682 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108862942 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125745287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109979567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108456459 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160232746 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144502131 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102864858 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065443654 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104041843 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120257936 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291132897 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087910177 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109440578 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117663915 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078057087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136964924 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077777756 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12625063 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079006762 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129627662 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13013916 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077745013 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122017989 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103758376 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100523901 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131622387 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161817798 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087178696 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081515963 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16871051 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121514012 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103154061 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143437399 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155937283 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101296604 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099447354 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148754391 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181575816 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088499544 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162832531 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105664082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082757768 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087157036 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122445671 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111138987 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12327914 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081044734 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117233033 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168015141 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07471226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095251367 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133215078 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078199803 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080289133 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105502046 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10474553 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095376411 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.0998573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103170307 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136600034 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12367501 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105430421 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123827978 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097313242 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168959236 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086622159 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100703501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102998297 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068573248 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.283220011 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158071917 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07940087 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162815379 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122574014 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11463171 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118976962 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0829346 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140630445 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078601596 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070392375 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145366189 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110159838 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10918278 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151677792 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115736103 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125654603 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1181262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131935336 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12998684 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130001265 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105463311 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088356048 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111119084 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126283505 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073331994 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090516684 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079266523 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104163831 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096850671 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082568721 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140552268 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123394478 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108648471 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111358515 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095808679 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147087886 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075359301 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127525705 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119187513 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094767768 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152223459 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152146309 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131348064 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098633675 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137183493 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070280982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07354602 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087642157 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123054933 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081686734 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082697256 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115355255 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14666236 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12819454 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13326581 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121485095 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267383089 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155347809 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07000419 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117601149 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147517898 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120293073 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104651224 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089798487 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098359872 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142890911 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107541183 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181632018 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116303616 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122987009 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152481225 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100356956 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080035898 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102775616 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13595634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103365652 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143977794 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098739774 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087602679 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109932418 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074130638 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0982451 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126719303 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117162668 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133779936 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114397524 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131265875 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076958845 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114396755 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120473563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120573564 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063430822 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119781009 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161084 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094449123 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118683998 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154720839 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078517482 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134274462 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176212484 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144657083 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084532139 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107054526 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118577185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127942228 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119039113 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139521846 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105726584 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285024716 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109283736 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085849607 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087994095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097220014 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104646205 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09459249 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106280375 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113454811 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095475322 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131646063 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103072442 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109571176 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118567437 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09767936 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090439955 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096052095 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177891186 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118412278 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171402848 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09927314 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144462625 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163167957 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074098102 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077979394 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078382504 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140203977 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083053066 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12946933 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106641709 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11664446 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123000616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142303583 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094544966 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068158768 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10826797 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132300532 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12329466 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097796482 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103030553 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16252058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100949762 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079000964 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113027124 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116750545 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102552676 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172089136 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061616509 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105749712 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075973043 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079849775 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127982441 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152364375 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079791259 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103624722 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121635066 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111057106 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127844219 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099796583 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107955407 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276155499 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149808967 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12861955 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08975283 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111873336 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129200828 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156972362 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105431195 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096931419 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174199158 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152874461 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159865864 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087317398 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114521759 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114796892 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108801144 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138703517 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083095571 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163146281 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081809543 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136706873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1031799 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089195659 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129188863 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107377441 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087825083 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147299006 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116366059 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082344148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076642547 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116685084 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119387513 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105117576 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074721345 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13794785 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072729238 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131293543 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15949556 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080515992 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107162825 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095958367 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079070913 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10567614 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101395103 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087687158 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099855109 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173276904 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087365751 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149504173 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13227648 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111753748 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135072216 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101158026 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.788710485 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078153913 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152894048 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115941307 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174722204 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101133426 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118356832 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110041305 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123453332 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143896816 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104105484 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177752628 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132294498 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11665344 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079097812 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101107215 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103046757 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087306873 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107056416 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113072482 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114285644 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092902383 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115600805 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124564174 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081747391 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095439217 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155328704 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116433585 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14338332 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140410678 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084906634 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117242834 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137264877 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079853423 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120354919 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152081478 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106303524 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099387321 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08023974 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10012303 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158227653 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072778275 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159015205 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1193635 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109815928 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113274216 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112336099 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129418806 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105584675 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119970608 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091082301 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108485648 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112124392 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080573586 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07540248 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252860278 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113724497 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099521615 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098340783 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098227298 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151222305 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072240782 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098043195 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113990262 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143916861 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175005287 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088644434 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08259643 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117898193 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113357156 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113323195 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120776031 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078424119 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081061679 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080844144 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078144746 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109196049 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112076256 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113771504 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110708606 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16221019 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082636203 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227594209 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094879328 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104287835 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069241237 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077742371 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095546674 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09738859 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106007053 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109223783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157917158 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.0953509 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089384478 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090881639 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073312147 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083079592 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127752169 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109387208 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117430944 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098538289 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06233217 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107350596 seconds)
  done (took 57.335045008 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108193038 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082290716 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093538467 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143239683 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121713774 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202411289 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153410272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188615596 seconds)
  done (took 1.278658624 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0686712 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094922488 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103194497 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082999921 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066431281 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068122961 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232233924 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080877407 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066448648 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098898962 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07787657 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068604786 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427751254 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066352959 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066853944 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061160916 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066934997 seconds)
  done (took 1.894276863 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385697415 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.606345665 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349171026 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071923287 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.479604787 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083759867 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.154817598 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127262962 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072092 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538290083 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.404343624 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126388022 seconds)
  done (took 16.515394522 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076970265 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069412773 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083563548 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083276498 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072067617 seconds)
  done (took 0.477395314 seconds)
done (took 86.507770498 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083006886 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.613251139 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052935178 seconds)
  done (took 0.778547756 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082833144 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084797077 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084680208 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082998722 seconds)
  done (took 0.438041887 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076962689 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077367966 seconds)
  done (took 0.240110296 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232116552 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164549019 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09592762 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082169072 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078451561 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079653198 seconds)
  done (took 0.337376309 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075006761 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076367032 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072885357 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075871274 seconds)
  done (took 0.382470605 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080248061 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054349148 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055100717 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057451608 seconds)
  done (took 0.331773691 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089311147 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078857524 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078853131 seconds)
  done (took 0.331877186 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105417691 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086341082 seconds)
  done (took 0.275482965 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084052774 seconds)
  done (took 0.170091647 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104060157 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101732073 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131463589 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111371306 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139379429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109173103 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084776889 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08554281 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076758554 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087499801 seconds)
  done (took 1.113242194 seconds)
done (took 5.063382669 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081650021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46227843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359770509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089992609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667504396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356105778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.023036258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09298652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115722679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068199695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083716993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64719609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.013511133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419069243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000460687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323881873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648476958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068872046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067577693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067770528 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004822005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067521324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067384014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068719359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647609038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372145112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067626991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318839083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068671672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069640349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354579319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068261043 seconds)
  done (took 14.885414988 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070510173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119349584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072563697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084577366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069890881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069802706 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071014438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069260293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120172499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067808211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085540125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067575213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07182521 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.084984477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087791582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067548737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068972288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068777823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067731177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068322245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087332142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067357256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068685062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068264162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06797537 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07978612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067718442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068432327 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067581857 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069909943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070995882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06883015 seconds)
  done (took 2.524675704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113738106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123608154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073441041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103085308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111330096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070142547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142641704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093273724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126309593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068517461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084320822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067283802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102602856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068667544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088261261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067973139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068386894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068259752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067478549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068259507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088150682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067455704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067842537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068070169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068202985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082010624 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067902436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068177212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067994289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069844811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071281189 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068499419 seconds)
  done (took 2.748408385 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07225083 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07578805 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083214094 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084113229 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069051027 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072917968 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073346415 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06877266 seconds)
  done (took 0.717152117 seconds)
done (took 20.979522401 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081792487 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071404967 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075027978 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082927395 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072826563 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078774722 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068686929 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075860589 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072879412 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07384649 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074211127 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067331336 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07117058 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067157331 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073162693 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068345788 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079001874 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070984772 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078764089 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079579582 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070943826 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072579965 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074452772 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078542051 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079529319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078922394 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07712982 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072852932 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06904551 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070138935 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077619063 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084983747 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07046173 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081787797 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070044167 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069647595 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074410406 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068488459 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081212738 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079526925 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070606962 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078216554 seconds)
  done (took 3.186077431 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08808261 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092676407 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085149442 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062559728 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066891284 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066113843 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089152566 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059815432 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058984282 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088387062 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05526747 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059387889 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066253762 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053941014 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059890244 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055999895 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061832851 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05532001 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060097528 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059548079 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088861545 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053056235 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076947902 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063822932 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055564385 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061232918 seconds)
  done (took 1.870160055 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07469442 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085490192 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090074001 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130523358 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106956217 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079737777 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079739429 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095249248 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088521459 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067087389 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071283025 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092432574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090376724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07368004 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067411503 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086435423 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083472963 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069515191 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073150601 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095272801 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086755399 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085196443 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095928495 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083103584 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066700836 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069458245 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070551393 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082012619 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072635534 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076646429 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071401522 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070205155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069348841 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079456257 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071061154 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068557203 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09217258 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077427266 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078791077 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067042763 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076094785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06846894 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092616873 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12524954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067957665 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073708449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.082588009 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076961023 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067904106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088227055 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079603612 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06808924 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071003704 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066622883 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06750827 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080700745 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070250967 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069943937 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076881415 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074150462 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092947237 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072905945 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083282642 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067813309 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076242464 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067190878 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068187752 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066729344 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095878889 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069036363 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111210401 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068835516 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068985675 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077206012 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075929955 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074299769 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067913642 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083125435 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078110222 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07119555 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076915718 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071338455 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070556861 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091853173 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070513204 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069506257 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068917437 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074948353 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070086078 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069078826 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080763507 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067198396 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070894879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085090458 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067542299 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069123357 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073662709 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072052454 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067704177 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078573696 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073032486 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068849912 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077370563 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067610912 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070953671 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080541779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073961729 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066628133 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072187757 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073234352 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068510306 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069234797 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070413795 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069466368 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076475885 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074798357 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072806507 seconds)
  done (took 9.120279382 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16334678 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156856717 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070657311 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150966711 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076937735 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078601602 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150837857 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094600633 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067742427 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068226401 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068765161 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111290216 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107336271 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116485856 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078860688 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068263949 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084487007 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114863867 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152716778 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147202402 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084706258 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077622631 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070132326 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068846508 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070889308 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078605159 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085100761 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076683561 seconds)
  done (took 2.943679734 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079522358 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104371191 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074342885 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091598151 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09073991 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067344786 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069598915 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069142958 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081262852 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078152525 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067299027 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073091249 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074716626 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070889022 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068988333 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075645655 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075115721 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069586398 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071877162 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073702219 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078838936 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092560252 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071208197 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067618749 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073372203 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067031604 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062940803 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.0841719 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068741077 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095746579 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065848093 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073005943 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082372131 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068652859 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067215529 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068168559 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068055169 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067118916 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069128437 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066347621 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066217385 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056904145 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066904542 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07973826 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074657206 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055684843 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072313375 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072874987 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072387394 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065264416 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071382889 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07005428 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071061083 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075385422 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071827503 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07287485 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068736661 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075441301 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077502331 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067517071 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06456163 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066784695 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0722344 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065231102 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076617581 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072828182 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066045573 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067674286 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069335027 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075049131 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067417619 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072115563 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065085015 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069939518 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071959786 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068802032 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068894352 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065959782 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067984131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068336974 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054890485 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067632657 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053117723 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070821713 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065405829 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065801338 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067884515 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072174589 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079291618 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068880835 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073591614 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068241867 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066560195 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071176144 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059989992 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069942082 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083064258 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082422877 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067476916 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065662861 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081104782 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071779971 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066270852 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055358838 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072424991 seconds)
  done (took 7.625979283 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090565119 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069820516 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084372015 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091229606 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086950146 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074862118 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078386628 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070773192 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08488354 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075314785 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078471118 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069872921 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080737552 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080134537 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072449331 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080145088 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074755886 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087350671 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085885214 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070607828 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078712978 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083880971 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093453218 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083639194 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080395439 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081313855 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090258442 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.076587121 seconds)
  done (took 2.442173198 seconds)
done (took 27.278654442 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.135918434 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.339565362 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.141224154 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.498484859 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.22734189 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.988121231 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.259861217 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.133365856 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 5.279995035 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.200206321 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.339067767 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 3.312182379 seconds)
done (took 44.916837868 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 5.182981718 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.269191527 seconds)
    (2/2) benchmarking "String"...
    done (took 0.364054781 seconds)
  done (took 0.693837011 seconds)
  (3/5) benchmarking "replace"...
  done (took 1.342340978 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.695131346 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.381841787 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.133137339 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.134570302 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.4689071 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.949415996 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.648271152 seconds)
  done (took 17.472350608 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.260412201 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.407419707 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.919742996 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.914764281 seconds)
  done (took 7.628552224 seconds)
done (took 32.481482048 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.140980695 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.166073742 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.142140584 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.112082433 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.189738385 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.141905888 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 5.202492172 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 5.226492209 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.125750689 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.119504423 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.162300115 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.573492814 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.131270496 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 5.240669216 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.128179305 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.138807377 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.172684227 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 5.689557166 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.28256563 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.135958511 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.137701619 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.167714526 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.132016388 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.140046598 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.131306365 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.125668845 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 4.569937259 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.130090123 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.742438991 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.127723344 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.159267373 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 5.258704586 seconds)
  done (took 149.098647029 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.12850416 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.387132862 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.428971362 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.129497398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.792797807 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.287640818 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.237613388 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.814389321 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.128402771 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.146621716 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.256780822 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.127156405 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.274854888 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.125762349 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.160798258 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.216128571 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.425428202 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.291112714 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.160325282 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.303188916 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.141084743 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.068196024 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.044913186 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.252166287 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.171011047 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.206752905 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.140027047 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.129758857 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.329678786 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.408699301 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.154633115 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.1509632 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.255930458 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.998203204 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.153558464 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.137191213 seconds)
  done (took 109.625227456 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.505052296 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.129949336 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.128387638 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128848756 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.134376225 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128780068 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128442789 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.249456242 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.253031958 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.749871366 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.658311099 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180336652 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.954064489 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.124667271 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.19651702 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.137520685 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.126213734 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.143632585 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155327516 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129173901 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12910753 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.253177723 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.138655572 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.128027344 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.13566681 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.12923667 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133916744 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.50065097 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124818144 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.158133252 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125617414 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134446732 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 10.18570447 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.373113042 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125734878 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.129008696 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128646169 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.015460839 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.212473175 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129048736 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134977822 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.12948115 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.349686649 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126849703 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.129885141 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132451452 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.296463507 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129660199 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.252022513 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126490069 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 2.626300628 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126119075 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129778614 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 20.735077938 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 8.823600865 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.131236714 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.128376405 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.131323838 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128873417 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128526525 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.134400373 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 20.770075538 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.208784971 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.126228921 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.132052266 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.134170949 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.129408543 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.175839825 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128203706 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 20.956969639 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.187714505 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.250195745 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.24978363 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128363579 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.196044748 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.220474405 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126775338 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.128194514 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128076438 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.128494912 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.209354246 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.127159083 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 2.250729092 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133773434 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.12984415 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17924134 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.199580851 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.127446082 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.024715418 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.128909576 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.128081321 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.42828404 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.193697677 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.126826989 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.128327134 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.128132548 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 2.251328904 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.248899026 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.910138474 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.127879432 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 20.837657 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.13608277 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 2.265866949 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.126388618 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.313820996 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.128550859 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.210839084 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.129094689 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.129863698 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126949354 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159600127 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.127815347 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.185330304 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.124749599 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.502363314 seconds)
  done (took 213.54383264 seconds)
done (took 472.859247905 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.778729672 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.73420438 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.846305625 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.757409377 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.727951786 seconds)
  done (took 3.894556016 seconds)
done (took 3.952223372 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.209555533 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.214167933 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.145618205 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.212873317 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.142881005 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.214496577 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.192349577 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.150330935 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.181970025 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.154042813 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18214137 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.153626269 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.139763494 seconds)
  done (took 2.344694091 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.362689946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.367278811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.204939001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.367179478 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.179332371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.365847502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.294958996 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.282056421 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.282115599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.148489291 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14262422 seconds)
  done (took 3.05374731 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.36572499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.372409762 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.210488705 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.366313027 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.182234344 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.366565204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.300317343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.284734459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.282303329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.147928988 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.142874832 seconds)
  done (took 3.077476168 seconds)
done (took 8.536869646 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.136791605 seconds)
  done (took 0.187099022 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.16321443 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 0.316496526 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.141782951 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.141010803 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.138753444 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139516302 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.140951514 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.137939996 seconds)
  done (took 1.377081737 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.133196621 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.138122524 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.134107506 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134408343 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.135078736 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.137342141 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.136962312 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.134152626 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.134355125 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.138257941 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.137459573 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.134862824 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.137542358 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.137605407 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.138101283 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.133981271 seconds)
  done (took 2.232388396 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135584331 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.134318087 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.133694151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.135184376 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.133663891 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.134926943 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.135347046 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.134853491 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.134344125 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.134567242 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.135110453 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.135587658 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.135044604 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.134239367 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.13427863 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.134791005 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.13484523 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.135103354 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.139803933 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.13389706 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.135552856 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.134147545 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.135359838 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.13594434 seconds)
  done (took 3.298895519 seconds)
done (took 7.150560488 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.933896918 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.642226361 seconds)
  done (took 3.627303623 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136768371 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.136112021 seconds)
  done (took 0.395363311 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.134880954 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.137707689 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137517741 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.137078083 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.13644618 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.137765714 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.139024129 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.136846075 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.137549741 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.137811094 seconds)
  done (took 1.428000183 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.135701722 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.137638176 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.134213515 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137279022 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.137429439 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.134497657 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.138029119 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137815688 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.137613837 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.13469937 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.137260506 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.134248029 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.136854804 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.135333331 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.137055462 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.134183276 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.134230622 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.133831945 seconds)
  done (took 2.503947491 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136674394 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.137289585 seconds)
  done (took 0.329399337 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.133091764 seconds)
    (2/7) benchmarking "second"...
    done (took 0.134715919 seconds)
    (3/7) benchmarking "month"...
    done (took 0.133742047 seconds)
    (4/7) benchmarking "year"...
    done (took 0.134388364 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.134555073 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.135204013 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.135324672 seconds)
  done (took 0.996609379 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.136470772 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.294226859 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.364545753 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.82486024 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.134742446 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.140331643 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.117604444 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.140541758 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.143285181 seconds)
  done (took 3.352146641 seconds)
done (took 12.688107233 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 2.91685246 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.127685789 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.515940388 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.209394847 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.149352222 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.453840699 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.146701892 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.435867727 seconds)
done (took 28.013424591 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.191986369 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.68078461 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.744056536 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 4.64455923 seconds)
  done (took 6.122428623 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.11326216 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.661795246 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.177903774 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.708050412 seconds)
  done (took 11.722384032 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.501245024 seconds)
    (2/2) benchmarking "read"...
    done (took 0.484564942 seconds)
  done (took 1.048406601 seconds)
done (took 24.143499289 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135650728 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136687005 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.136694773 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.133835085 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.1339488 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.136565665 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.134098951 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.133545375 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.13765228 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.136848513 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.133795585 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.136513301 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.136982708 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137420345 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.13607141 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13462911 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13748839 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.133810259 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.134257743 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.136317046 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.134562523 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.13664396 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.134399674 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.134268494 seconds)
  done (took 3.304212727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.135649659 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.134902936 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.136623885 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.136796779 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.133954991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.136752646 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136593693 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.136375945 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136786527 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.138128718 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134894711 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.135665875 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.13722461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.138308351 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13685238 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.135073572 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.136847654 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134239629 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137150991 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.135966376 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.13741283 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135059337 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.134508343 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13740719 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.136318909 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.136681771 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137415134 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.135263346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136993055 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.134453407 seconds)
  done (took 4.142753756 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.139964868 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.146305191 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.137038308 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.137409769 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.137534898 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137247249 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.137779074 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13870481 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.137091466 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.137385716 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.138883809 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.13761822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.138246515 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.138639697 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.138945988 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.13853401 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.138474242 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138931851 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.13932844 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.137497617 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.138872161 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.137430138 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.137623437 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.138367623 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.138490221 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.138474422 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.137203664 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.137463074 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.138098931 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.138107591 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.138738079 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.138805218 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.138971442 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.139402188 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.137296925 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.137931946 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.14169689 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.145765854 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.137604328 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.138386868 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.137399571 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.138904193 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.139381132 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.138880949 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.138484468 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.138935347 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137896431 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.139126316 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.13770958 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.137329729 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.137847126 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.138271146 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.13820464 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.138638984 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.139175514 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.13926634 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.137234102 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.137552291 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.138065846 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.138576922 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.137228886 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.138375992 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.138335945 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.138764885 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.137706069 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.137475025 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.138087958 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.138386827 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.138158416 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.138650013 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.13815528 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.138147968 seconds)
  done (took 10.028945377 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136440583 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136302614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.135527765 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135110905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.136163699 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.138095079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.136340502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137909637 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136192674 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.138956113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137793434 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135918006 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135204433 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.139308487 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138567666 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.134944127 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.138160773 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.135609345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.138156958 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.13805826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138995439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.136602339 seconds)
  done (took 3.071043912 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136631274 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.138208258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135468879 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.13827933 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.13534097 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.137532922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139219088 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.137671115 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138243722 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.135742816 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.135533149 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.138034532 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.135269002 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.136273512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.137686753 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.136646142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.138489795 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.135681819 seconds)
  done (took 2.522534041 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.134280746 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.135585599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.138248597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135952764 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.136629704 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138323605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.136478958 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138943962 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.13834632 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.136468552 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.139837759 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139092398 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.138564741 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136422438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13981546 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.135713636 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.138747588 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.13617463 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138817088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.136760641 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.136320813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139525736 seconds)
  done (took 3.081813923 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.138237431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.139131174 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.13667765 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.136852683 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135753472 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.139067303 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.137861534 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.136125746 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.138842949 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.139033084 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.136399188 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.139367562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.137215918 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.137198956 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.136356137 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.137027365 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138099197 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.136910993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.138952542 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.13675028 seconds)
  done (took 2.808545404 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13839689 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14049817 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.139849645 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14015686 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140138646 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.141164247 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140570892 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.141299132 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140679739 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140453281 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.140062714 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.140839869 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140176229 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.141239647 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139979585 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139997359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141042217 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140320605 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.140017656 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140967653 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139657848 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140180865 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139694454 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.140050347 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.14155817 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140092562 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140606169 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141027327 seconds)
  done (took 3.988019591 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137621361 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.139139218 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.136083184 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.136851201 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.137712356 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.137089474 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.135903403 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.137586321 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.138661224 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.135458876 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.137450409 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.138750725 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.138978381 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.139193641 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.138010756 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.138788726 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136765292 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.135744835 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.136318213 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136338138 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.138493293 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137228496 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.138767509 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.136637759 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135815831 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.1370992 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.134813673 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.135772122 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.139176393 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.135715323 seconds)
  done (took 4.176454667 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.156324337 seconds)
    (2/2) benchmarking "in"...
    done (took 0.156980195 seconds)
  done (took 0.369663602 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.136060126 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139585863 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.139462865 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.135905429 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.135804704 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138507565 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138038616 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13564622 seconds)
  done (took 1.155651588 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138090172 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.139257039 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.139091693 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.139244425 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.139144819 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.139667099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.146457217 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.140609721 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.140045024 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.140287834 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.144260726 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.144560028 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.142058788 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.140356195 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.139594275 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141354959 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.139300196 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.139682187 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.140192698 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.13963477 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.139349733 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140767789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.141825058 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.136204169 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.1385027 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.148132281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.143638757 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.138834845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137239922 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.143904044 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.13815265 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.135945795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.139227125 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.140251105 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.13922414 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.139581722 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147834472 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140901655 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.145820078 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.142626189 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140502803 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.135911815 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.141763401 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.141104383 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142192109 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.140326491 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.140271899 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.135481896 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.139921773 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.142341431 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.142494714 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138692182 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.136236888 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142156735 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.140308583 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147616079 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.14182296 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.142264911 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.148030982 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.148574269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.153052651 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.146685902 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142595794 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.139144318 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148014413 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.158450224 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.145889993 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.137915761 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.138435116 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.140105663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.148134844 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.154035704 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.148176593 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.141767648 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140461279 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.139555015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139338674 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.139952578 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146549797 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.145420098 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.141867785 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140356142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147657585 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.160135842 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.1384793 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.140042268 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.140608398 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.140255669 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.139910166 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14996583 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.144315084 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.139940863 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.14097489 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.139137434 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.140473675 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.140761381 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.13914649 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14072385 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.137134937 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.140224257 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.141190094 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.141990659 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.149374848 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.142375273 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.141248572 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.146764442 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142189605 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139330671 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.146442013 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.140318716 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14136725 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.141410432 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.145179757 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.137483269 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143029114 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.148733218 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.140617276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.14238156 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.141359125 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.141240152 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149388524 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.160996395 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.138619166 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.140969104 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.144063375 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.152016467 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.141846502 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.143687118 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.140591631 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.136820615 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.136253795 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.141494499 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.141585765 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.142038628 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14085501 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142257853 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.138099494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.140518871 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.141289858 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.140412121 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.143495235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.1401734 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.142134832 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.142421725 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.142131357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.141621029 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.146487554 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.141838125 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.141558818 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.143088995 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.136550189 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.141131325 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.141333395 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.142070481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.140616937 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.141023424 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.140276537 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.1414513 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.140278601 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.140177048 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.140350283 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.140236505 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.143321295 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.141605282 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.144032153 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.14074086 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.137903892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.140693148 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.140065572 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.140135811 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.13996022 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.13903698 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.142856586 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.147738297 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.140594236 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.14164215 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.143543278 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.141766886 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.141528914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.140640298 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.143025033 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.14782784 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.142843779 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.147855 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.143731503 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.141902275 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.141743682 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.140812541 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.141274715 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.141335524 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.142551237 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.149481748 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.152971299 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.151625107 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.14111579 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.14381271 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.140637976 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.144817802 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.143972994 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.142643207 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.140433226 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141421947 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.140288857 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.141513569 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.141597387 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.141883374 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.140774586 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.139692165 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.14058363 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.140696215 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.141087317 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.141944413 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.141067604 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.138678574 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.140665558 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141511218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.141309435 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.13881489 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.141468673 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.141099475 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.141427323 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.141919582 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.148410753 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.13938972 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141786234 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142723706 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.141829648 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.13977222 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.140823334 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.142618393 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.141777203 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.148026379 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.14187322 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.141601886 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.14863955 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.144601527 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.141440409 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.143903604 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.141502319 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.138704829 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.143315736 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.149418013 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.141011285 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.14173868 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.142157851 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140632404 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.14041222 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.148076367 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.140382202 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.140816948 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.141101865 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.14362051 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.139155895 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.142682967 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.143162812 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.142751886 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144162367 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141624707 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.141246715 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.141566502 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.14177884 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.142027765 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.141712463 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144373169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.149483478 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.146602096 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.144106066 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.143142661 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.142847242 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.143603631 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.141625717 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.141556832 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.141750074 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.153951311 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.151972046 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147343399 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.143658575 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.141830343 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.145516813 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.143218284 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.144520415 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141683211 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142485611 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.14053237 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.140667186 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.138316525 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142497072 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.142014556 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.141990852 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.141667209 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.143335245 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.141074792 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.140425038 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.142403964 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.142857822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.142016677 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.141681531 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.141884098 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.143989847 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.143100752 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.142089692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.141906835 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.148560357 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142743624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.143591085 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.141505218 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.141860107 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.140394137 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.14365369 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.142913682 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.144886085 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.149162074 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.144732817 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.150589434 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.143028497 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1512727 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.143525405 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.144711084 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.14802198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.137922793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.139627488 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.141447924 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.141669592 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149164261 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.142757342 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.141688728 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.1440974 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14053212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.141626515 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.139901318 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.140369282 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.141642183 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.141077689 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14865033 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.143009556 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.14515543 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142930454 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.137064388 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.14179727 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.141825525 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.140249455 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143768079 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.141104978 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143085139 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.140771546 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.141127888 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.140580483 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.141097225 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.141145238 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.137078611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.141089846 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147562109 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.14250746 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.143766779 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.141918074 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.147524896 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.14278087 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147919084 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.143366854 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.140516367 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.141689612 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.139696838 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.141925189 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.140468395 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.140976714 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.141375543 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.140478061 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.143112643 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.138951155 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.142917139 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.14214259 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.142476455 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.139371986 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148955514 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.160355369 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.140977686 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.143460355 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.137687012 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.140514963 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.143888696 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.14059698 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.140665783 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.142066324 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14702284 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.144910481 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.141263863 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.141085422 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142505233 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141366277 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.140487402 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.140689067 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.14175312 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.141487021 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.142025969 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.140960832 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144261365 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.14560818 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.138485275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141755515 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.141583755 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.150645668 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.141820358 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.143580534 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141826149 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.140521678 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.141247764 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141849752 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.141899622 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.141016013 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.141900404 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.140857111 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146430343 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.144990792 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.143949729 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.140303768 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.140834764 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140508656 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.141413304 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.141311734 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.14293819 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.142541797 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.141662744 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.141818722 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.142915905 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.140528259 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.140808479 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.143207539 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.143184764 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.143155501 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.146200143 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.142040387 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.13818236 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.1402677 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.140072642 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.139342065 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.141184106 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.148163351 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143469414 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.149158371 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.149404789 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.145062917 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.142160214 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144618404 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.151210459 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.141135827 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.14233702 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.142303662 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.142991198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.142915377 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.145912988 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141621085 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.149954106 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.14356644 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.141261157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149513714 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.145613471 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.142402101 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.141372417 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.145937295 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.141731783 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.138239301 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.141919015 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.13933916 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147857165 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.144351056 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.142187763 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.144541038 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.138303796 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.142234009 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146396143 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141292709 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.141331565 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.136500157 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.141529199 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142750527 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.142191897 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.137815962 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.141688249 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.141511831 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.143494942 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.148961924 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.138006741 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.143226162 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.142158177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.141619759 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.143047895 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141869883 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.136038052 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.13785864 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.141850829 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.141401582 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.141602865 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.144238718 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.139890981 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.141728724 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.140762456 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.142082917 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143963005 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.147362047 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.145957896 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.13664273 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.140808801 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.142805587 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.144984068 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14216323 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.142200582 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.142993441 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.144010917 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.141550828 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141593286 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.14202539 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.144144875 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156254291 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.143016256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14278665 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.142596184 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146396887 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.142041688 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.139136905 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.141854612 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143967146 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.145018459 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.148764598 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.143955359 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.149266756 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142833173 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.142239077 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.145079086 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.145294677 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.14845776 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.144656937 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.141434332 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.142732452 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.146819381 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.156062253 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.141442422 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151247202 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.166753772 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.143384046 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142911306 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.143718732 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141563911 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.143094745 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143771577 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.143339932 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.142643366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141334517 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.14218539 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.142630123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14670125 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.142266216 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.14124233 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.141003255 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140477092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.142981785 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.139277454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.141438085 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.141535582 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.141689925 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.143072445 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.14251397 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.141929673 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.155036547 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.151814726 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.141878781 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.142272664 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.138426742 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.144761084 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.143790285 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150249452 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.149885479 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.141766027 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.142295732 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.144953831 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.141952332 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.139443269 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.142020631 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.141186943 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.141697035 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.139433153 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.153827895 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150052815 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.147137225 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.142233903 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.142605721 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.142982868 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.143129867 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.143047368 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143373347 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.14400156 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.142896063 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147233938 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.141310421 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.141700059 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.144400896 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.14567189 seconds)
  done (took 85.15059496 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138929005 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139079844 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138914922 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.139109829 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138977646 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139099493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139296466 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.139355845 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.139861615 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.140556549 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.139398109 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138817556 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138536193 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138604614 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138645945 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.138980316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137961 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.139085571 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.138712705 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138833769 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139340004 seconds)
  done (took 2.978261723 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1400866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.139420727 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.138735517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142335901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137054211 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.141537174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.139393862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141531657 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141677001 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138799395 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142409518 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142188245 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.139285189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.137311411 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138729229 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138795513 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.140282384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.139286606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.142105486 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.139188726 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141450202 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.139231494 seconds)
  done (took 3.139328577 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.142251201 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.142339485 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.141656676 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.13898375 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.141965203 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.139435502 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.142303839 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.141650376 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.141430188 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.142788308 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.141243603 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.14366018 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.149048769 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.144252876 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.144929602 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.14227918 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.28595755 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.142311782 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.142142026 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.142308867 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.140709103 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.148308736 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.141704603 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.138783252 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.142016157 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.143492088 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.143250006 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.142153214 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.142517359 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.143908993 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.147097048 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.143013139 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.142326102 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.145021552 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.143054569 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.14252182 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.146896576 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.142844305 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.141161999 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.142453953 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.151381686 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.159130056 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.14345852 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.148878937 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.14466034 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.142738472 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144830079 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.148999159 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.139363655 seconds)
  done (took 7.238820997 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.142412322 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142113883 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.139123478 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141930283 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.143738407 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.143121859 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.143191901 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142397832 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.139959749 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.139588684 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.143369192 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.140141591 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.140105184 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.142344614 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.142234961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.138886669 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.139685734 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.138944739 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.139121585 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.139848282 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.140116486 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.142013433 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.141906813 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.137827426 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.142659495 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.137487964 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.140061498 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.141876713 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.139144363 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.139380318 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.142971157 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.143089122 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.142848427 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.140615771 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.139377407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.142565356 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.143459338 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.139875265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143023512 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.140123739 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.142227685 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142230801 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.1425628 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.142398307 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.140640184 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.139540301 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.139097258 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.139702784 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.139735121 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.142488148 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.142564776 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.140132022 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.142850998 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.140302338 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.143266942 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.143438857 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.141139844 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.1376412 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.142942191 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.140384657 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.14066406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.141907464 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.139654023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.141542275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.141920195 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.140910486 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.138578731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.142219749 seconds)
  done (took 9.655767331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.14186679 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.144115384 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144504906 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143572716 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14521505 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.144392494 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.145143908 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.14531943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.143119015 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143292821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145241978 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.143502715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.143578483 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.143628338 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143603035 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.144458351 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.143626156 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.145163351 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.14416659 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.145035968 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.144413956 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.144388448 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.144035763 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.144831381 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144903099 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.145264509 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.145227591 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.143442162 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.146141355 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.145016222 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144015688 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.14507824 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.144612087 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.144619723 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.145046213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.144408134 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.143878742 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.14422093 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.145378432 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.143832463 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.144182176 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.144721244 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.143379603 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.143766253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143181723 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.143482157 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.143950982 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.144309329 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.143848413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143730444 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.144224212 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143523591 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143396026 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.144994452 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.14498047 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14466253 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143832118 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.146227775 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.143152943 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.144685891 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144406213 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142536263 seconds)
  done (took 9.005219185 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141667899 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142506954 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.140570767 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.139110235 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.142414728 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.140717877 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.142722831 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.142014837 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.142539113 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.14284333 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143683943 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138670528 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.140435375 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143022666 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.140504117 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14076342 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.139982355 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.140537996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.143962956 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.141726256 seconds)
  done (took 2.88965253 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.140426981 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.142592568 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.139392544 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.142391894 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.143593963 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.140554031 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.143438741 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143016168 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.140030328 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140639974 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.144171487 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.143883154 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14061816 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.14228243 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.143097592 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.140792233 seconds)
  done (took 2.32989064 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.139438294 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.143792613 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.144691309 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.145441533 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.141657845 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.142034805 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.143331359 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.140687907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.139982687 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.143855441 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.143162463 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.144417322 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.143482628 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.14385448 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.141158965 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.143602634 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.14096501 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.140725261 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.143698795 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.144062705 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.142624415 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.140308526 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.144091844 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.143641797 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.138258781 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.142002637 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.141373853 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.141737217 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.143692812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.143108006 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.140696163 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.14124513 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.140638023 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.140820273 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.143197921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.141964119 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.143549904 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.143854469 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.144154046 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.143864479 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.143923615 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.140041866 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.143420156 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.143406419 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.140472759 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.142978649 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.140561476 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.141670136 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.140570597 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.141378933 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.143049043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.144653165 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.144800934 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.145315223 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.144184159 seconds)
  done (took 7.899728997 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.142919195 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.143258104 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139903778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.142908045 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.143450775 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.141565598 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.143506576 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.142307834 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141293892 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.144149155 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.142320674 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.144629017 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.142458513 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144164491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.141517741 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.143282503 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.140740236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.140723654 seconds)
  done (took 2.624225153 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.141004929 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.14130993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.144841956 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.140832616 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.140985031 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143215712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141050545 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.144327321 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143813818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.141777138 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.141215249 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.144160121 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.144540845 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.144212137 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.142982623 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.141188761 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.143298784 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142979686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.140824414 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.141725625 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.145416285 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.145455239 seconds)
  done (took 3.200737455 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.142023971 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.143538095 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.158396385 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.158043775 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.16342769 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.17091509 seconds)
  done (took 0.995411591 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140775545 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144328439 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141669267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144721126 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144189867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142262922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142247721 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142044174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144487403 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142775549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141751876 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145265138 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144221452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142525229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144540269 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143981049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142033759 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140702717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141976123 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144464378 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141443361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145108578 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141516571 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141766777 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141304379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14188722 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144363543 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141882313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142127849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143341771 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144428869 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141398791 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144236974 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142563829 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14419657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143780687 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14248743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143827331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143569056 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140971633 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.145343663 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144191785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143656261 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142111655 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144517334 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141026039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141577966 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14090167 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141108999 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145195415 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14329417 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141737333 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144217029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143566226 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144695311 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144527791 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141972507 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141993195 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145962855 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141313865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142931835 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143819666 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141874202 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143155787 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144535668 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143299458 seconds)
  done (took 9.500491315 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140744415 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141874943 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142048379 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142640609 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140645716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143435075 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142500467 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142713869 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141442408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142488567 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144523989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141027896 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141158538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142047605 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141322047 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141885143 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142546809 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141950722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142063778 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144260724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141742207 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141675881 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142366456 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142069655 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142061057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144844006 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142329929 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142080416 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141704096 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141681078 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141551108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142491326 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142601919 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.142316474 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140688864 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142953812 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142004371 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141893322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141987428 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144865092 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141536588 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145293618 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141194727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141096719 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141905056 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140803174 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141050915 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142526306 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143502437 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141342088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143427116 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142176197 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14184388 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141504505 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141344392 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141429377 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141443344 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143320756 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141118596 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144141586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142098087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14205803 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145337627 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142923645 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142942992 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14287547 seconds)
  done (took 9.451002711 seconds)
done (took 194.764969967 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.175131138 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.202177485 seconds)
  done (took 10.431718838 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.306235805 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.258747981 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142489315 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.166522033 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.138132283 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.157852488 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.159671958 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.138046489 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.142712894 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.141839492 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.141992003 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.328361529 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.16030792 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.137744114 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.141793181 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.236894377 seconds)
  done (took 22.967576422 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.14316173 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.146588529 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.157141218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.146908468 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.146067399 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.158212485 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.179436727 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.145338348 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.178050364 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.152598649 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.211535053 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.151194311 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.14437932 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.19388736 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.153651254 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.157911432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.236750888 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.216071063 seconds)
  done (took 3.077444306 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.220905652 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.144088566 seconds)
  done (took 5.433870358 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.162308769 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.160373401 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.230856306 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 5.159042686 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 5.458920257 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.457592386 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 5.175687784 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 5.16979495 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.165520039 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.138388054 seconds)
  done (took 52.345833841 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.151949597 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147375587 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.147058659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.144181467 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.140467131 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.134366421 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145912757 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.143525969 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.814397757 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.188143309 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.155315761 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.148892468 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144628558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.145858466 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143375714 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.169474364 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.280682124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.142542331 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.144188667 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.151138444 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146118776 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.22612488 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.158655624 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.14680893 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17415688 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.817140338 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.148037876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.152420593 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.271374741 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.142312207 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.145845696 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.147021932 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.146723036 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.534353982 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.449887185 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.144044767 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.153395207 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.151839994 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.142572532 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.284671171 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.147871876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.15259279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.057996951 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.448527071 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.253779099 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.192320664 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.516623343 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.159706608 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.145978536 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.175938019 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.149861683 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.147822626 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159468129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.660915127 seconds)
  done (took 37.905684029 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.139023021 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.403729325 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.297401482 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.140233889 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.42703873 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.345446002 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.137569822 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.190545013 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.138060924 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.36918497 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.29972331 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.249130202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.13787932 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.140457686 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.134220949 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.133990323 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.303304504 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.212656391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.136307637 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.136062022 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.17100444 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.386396264 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.266145186 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 5.140583523 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.159067853 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.353148298 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.263207542 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.246262598 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.417613393 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.137333006 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.205646638 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.136160131 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.139460223 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.133722032 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.295607614 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.232211772 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.224597065 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.136565547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.136660693 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.134331095 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.81403356 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.338430051 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.232845336 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.28009041 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.384600344 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.342602694 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.923507417 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.135661859 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.875919716 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.30065641 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.373826727 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.372130997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.260313596 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.137669875 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 4.646154235 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.135603482 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.136751544 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.373034041 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.365503419 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.240702545 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.136548626 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.137555084 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.135318214 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.385500474 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.134172707 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.229025527 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.136194514 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.131948965 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.234938468 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.238030282 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.365106755 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.34843224 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166395495 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.438145302 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.618045591 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.38902829 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.203162805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.368059738 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.134778463 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.131210123 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.225147966 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.985418997 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.293158655 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.385816934 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.39015772 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171169272 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.860425086 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.135704087 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.36824527 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.358319207 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.443407409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.378532815 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.287179855 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.263872658 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.133018343 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.13528918 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.383873143 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.271390485 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.135283774 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.498751529 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.370400887 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.705571299 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166738949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.484136197 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.267184987 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.135083434 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.779428321 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.137958078 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.363518805 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.180199142 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.137516897 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.135920708 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.35360858 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.212347336 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.135876173 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 3.765850966 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.200225358 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.135865868 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.370548353 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.13508222 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.400432582 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.134223162 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.377244548 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.491321908 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168706819 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.359922729 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.377451146 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.133348576 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.402022638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.379300175 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.249871496 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.357157453 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 4.760276143 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.137558749 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.428914491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.133666938 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.134534434 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.309942279 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.135962962 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.313238857 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.13460461 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.477572939 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158313966 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.291369857 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.132981499 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.394996611 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.168466372 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187324378 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.133963892 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.267937383 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.136376593 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.067158576 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.292095795 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.138239007 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.134349976 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 3.796867567 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.134829865 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.292353964 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.372136214 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156864305 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.211192963 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.803716959 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.134173629 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.224631616 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.159018608 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.476778198 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.132575628 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.291813369 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.133686902 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 4.676291461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.13446826 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.380920744 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.326915048 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.137554281 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.130915249 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.046697089 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.13273402 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.134800382 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.297886826 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 3.966906152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.131169186 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.340940853 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.13478782 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.267823943 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.137943958 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.208055222 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.491208205 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.133021825 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.133916171 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 5.134749236 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.135954666 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.134553325 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.397665268 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162161622 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.661147241 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.276550331 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.40738504 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.458517905 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.389799603 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.178044765 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.13531759 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.380558979 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.135762649 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.19729226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.13529795 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.158817626 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.372773262 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.13530414 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.349039927 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.421262933 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.072746563 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.183747661 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.13309577 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.133282481 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.007925186 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.287940958 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.225359679 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.133416437 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.13443872 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.254539991 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.260119509 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.34617283 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.135602521 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.364643077 seconds)
  done (took 513.270688644 seconds)
done (took 645.491855922 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.135020872 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.129212449 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.122244988 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.135142121 seconds)
  done (took 20.574969548 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143804624 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.141947974 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142251968 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.141496899 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.142624239 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.142455625 seconds)
  done (took 0.912727281 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 4.191259741 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.131203985 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.134774645 seconds)
  done (took 14.514592169 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210364845 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.522520251 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.252471344 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.574180388 seconds)
  done (took 1.617611262 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143859951 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.143826315 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.142601417 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145247187 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.145550663 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.146026504 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144452021 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.144121903 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.145978752 seconds)
  done (took 1.36085453 seconds)
  (6/6) benchmarking "26942"...
  done (took 2.450601324 seconds)
done (took 41.489602514 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.330448398 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.597063222 seconds)
    (3/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.240950461 seconds)
    (4/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.134574586 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.882564067 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.203987255 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.122280514 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.228016292 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.161630546 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.471915886 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.269438694 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.522559423 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.176781577 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152384218 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.970880522 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.138131515 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.160716049 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.309837142 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.347149291 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.418794785 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.52018259 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.157032883 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.135250878 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.460006502 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.597073937 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.598673598 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.439496162 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.121367068 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.113843515 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.050090705 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.390874549 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.19754868 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 3.122630575 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.232638571 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.311124059 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.805456616 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.517300171 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.606291967 seconds)
    (39/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.290814214 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.163051259 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.245806352 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.737172601 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 1.095623829 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.048579169 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.335184381 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.77913506 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.166046162 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.334977141 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.222532659 seconds)
    (50/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.353246968 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.12362727 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.507011966 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.602174426 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.46403729 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.13505642 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.424937144 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.277951714 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.441681774 seconds)
    (59/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.613154529 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.261339057 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.265210177 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.249739567 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.397888594 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.812120455 seconds)
    (65/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.153684179 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.117087977 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.616705148 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.192319147 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.369713488 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.618539428 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.621183105 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.464419167 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.13804354 seconds)
    (74/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.803044125 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.519412765 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.133901593 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.468916506 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.932021404 seconds)
    (79/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.27864077 seconds)
    (80/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.409735556 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.243263099 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.27814429 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.239711526 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.300656721 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.648971327 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.524176947 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.301168081 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.268316767 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.136678531 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.475978106 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.118644563 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.240562531 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 1.321242198 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.156281737 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.380991201 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.118113836 seconds)
    (97/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.565931807 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 3.829572165 seconds)
    (99/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.34326095 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.216004674 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.159380708 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.244023504 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.241172361 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 1.052589631 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.229389291 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.14003525 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.230542073 seconds)
    (108/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.309331982 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.320327409 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.220687731 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.145507949 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.137510356 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.160560719 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.835585619 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.120528826 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.28631248 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.321331683 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.294435717 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.827790475 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.362385937 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.455636508 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.136549178 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.095979383 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 1.158007824 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.135235842 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.674524396 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 3.910251056 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.161914185 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.134513797 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.534643603 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.121087628 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.334608537 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.581958607 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.157353136 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.823324963 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.463091022 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.2225548 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.413263991 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.951092732 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.13325796 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.35183151 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.272908274 seconds)
    (143/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.123311708 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.385676608 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.2036462 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.326827549 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.264316965 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.186527509 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.136649876 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.389330772 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.433537738 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.119630168 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.307440167 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.359714177 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.163544758 seconds)
    (156/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.137564101 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.450572507 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.228794872 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.374566333 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.35385059 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.484259902 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.121280719 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.969855304 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.308630124 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.42835604 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.15515991 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.13828135 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.265215826 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.221493633 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.138340304 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.314967246 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.209171571 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.647461742 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.14264459 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.720990541 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 1.212354318 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.38358301 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.303573131 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.41827966 seconds)
    (180/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.220015968 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.154796123 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.444197914 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 1.075522567 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.487361662 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.139458989 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.629609646 seconds)
    (187/309) benchmarking ("sort", Float32, false)...
    done (took 3.87330945 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.507082026 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.225767343 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.122004016 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.055603266 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.160382453 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.368804514 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.138616522 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.17079656 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.245562886 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.121392528 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.423702201 seconds)
    (199/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.458400235 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.472826063 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.138482835 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 5.805619927 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.273849819 seconds)
    (204/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.242582045 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.162958912 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.195282489 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.139472605 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.388957903 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.223679624 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.15306673 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.434717919 seconds)
    (212/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.136810485 seconds)
    (213/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.333272335 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.22564772 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.217940523 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.302744359 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.284439371 seconds)
    (218/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.418322908 seconds)
    (219/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.675866251 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163453792 seconds)
    (221/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.523736597 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.111370609 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.946895207 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.362429998 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.45830559 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.477252327 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.402054778 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.201472642 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.211584171 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.559819081 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.15271059 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.134825917 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.332552409 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.25381844 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 1.060887278 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.134362193 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.368119554 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.182245399 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.245891905 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.235415818 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.139158282 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.2966534 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.135438412 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.252484732 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.124495942 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.37792572 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.497775212 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.277670544 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.37173441 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.532940467 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.119705465 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.308904077 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.207662195 seconds)
    (254/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.154980414 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.418083194 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.138091419 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.565527618 seconds)
    (258/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.120226001 seconds)
    (259/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.469062772 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.144528184 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.302537167 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 1.073567932 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.425524589 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.231322639 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.16466236 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.240577327 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.50366321 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.163094578 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.164974138 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.402986856 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.971429914 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.067963273 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.47644489 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.248162254 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 1.096408428 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.677949086 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.267290059 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.303765765 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.165010411 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.887715068 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.411447752 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.333531132 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.308878116 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.12690571 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 1.404702994 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.222585574 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.221668378 seconds)
    (288/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.122343514 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.745692834 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.857474191 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.275878588 seconds)
    (292/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.272697036 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.455847289 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.251058791 seconds)
    (295/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.990008193 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.709508404 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.18272299 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.170226619 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.25572164 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.723066775 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.221628573 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.157033415 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.284085225 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.521812288 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.053368369 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.136086082 seconds)
    (307/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.366765482 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.157943853 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.501034624 seconds)
  done (took 469.283357581 seconds)
done (took 469.397038387 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.172502737 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16443319 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.147758199 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.17094114 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.261047651 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1760775 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.159991427 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.150708596 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.195866426 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.197809293 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.147874679 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.175110067 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.150139905 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.14794234 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.14747414 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162682161 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.456944358 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.171413236 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.164891556 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.157697405 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.164594042 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.146501276 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.19863131 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.174693882 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.151491925 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.150601937 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.151076 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.167471096 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.259733457 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.149654813 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.150046725 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.1593995 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.456469118 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.169199021 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.143070219 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.168446018 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.162641371 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.156571605 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.152953747 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.180398486 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.552665974 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.181552796 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.149075139 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.149016884 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149075462 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.153097472 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.149908859 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152883802 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162199306 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.161679931 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.545358055 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.196622579 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.151790725 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.148684579 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.159548619 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.148460931 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.15204769 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.164449551 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.170487381 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.164810052 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.448596549 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.175909751 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.150419386 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.166551859 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.15612121 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.581266466 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.175639105 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.152190258 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.550485198 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.185670471 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.583130369 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.19061895 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.14799032 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.163819045 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.179013159 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.455464858 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.165979914 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.147640936 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.15635501 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.147705693 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.158265516 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160073669 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152286323 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.147660939 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162901533 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.17674286 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.158974615 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.15104519 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.157304184 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.168115232 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.156216426 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.160150644 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.15189521 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144528865 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.157721231 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.152415303 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.152131313 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.151883203 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.152926636 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.16001265 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.544910799 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197944844 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.143585766 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.144013415 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.148334111 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.161532354 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.542550351 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.182197513 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.16842414 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.193891642 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.149226083 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.448971159 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.175113206 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163096902 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.156731255 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.15024783 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.142240535 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.448086681 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.572030639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.197175935 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.148751443 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.146035171 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162521215 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.149053764 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.143617119 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.457640625 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.172148222 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16065047 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.267960844 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.157451807 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.178187452 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.145170645 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.150024796 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.177940945 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162850106 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.179368364 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.151979844 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164632472 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.162968579 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.143422943 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.157907376 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.157465452 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.149330247 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.154514644 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.14363765 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.178622451 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.159796824 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160145735 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.168230568 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.268545854 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.144192449 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.449005469 seconds)
done (took 30.443754255 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.215868587 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.143467554 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.246292972 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145207272 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.22776873 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.237987599 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140819679 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143117055 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143112527 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.516215683 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141305869 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143779962 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.144473681 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142881548 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.229390918 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143456562 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.142962767 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.479701352 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146009319 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.217386084 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.138904207 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141017877 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144018154 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.518535572 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.142093008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.139927906 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.222181719 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.144442813 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.484123032 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.140216182 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.13771723 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.481667278 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.241562811 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.162388012 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.157393268 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.152714114 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.232454895 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.147758249 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.232934902 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.225831047 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.252696376 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.18698115 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.138020985 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.142618577 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.148288895 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145885289 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.142378709 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.172978291 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.14273469 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.142957938 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.478470906 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154044778 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.153721819 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.141725991 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141852318 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.168598546 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142866404 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.146108585 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.236313925 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.146690363 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.212096882 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.517035647 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.514524799 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144301286 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.141386573 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.141185749 seconds)
  done (took 68.73053321 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.210918115 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.216805657 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.209891497 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.14726325 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.193615283 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.211336658 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.147005141 seconds)
  done (took 1.395240319 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.150951298 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144008668 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.196276142 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.194162219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.14490004 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.296326386 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145830479 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.156235939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142349227 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.198081046 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145401625 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144779085 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.150674349 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.144101846 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.192508893 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.156663041 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.259614226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.14641836 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145326164 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.295649945 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141974263 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151806032 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.199808913 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.15587675 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145483821 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.151204102 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.737510218 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147220223 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142014059 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.146641004 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143771005 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.188358636 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.144076695 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.140628069 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141828152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.261741352 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.144870567 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142979952 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145126979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.138510232 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.14458382 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145060225 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.146827875 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141851908 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.147096682 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168617039 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144526598 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.14493332 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.145923736 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144423731 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.197349164 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144911288 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142337401 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.143822303 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.201759818 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.152827177 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147991519 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142473388 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146754706 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141573271 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.295739399 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191951898 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.144599755 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191768794 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144081474 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144942239 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144591528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.143514661 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.239702956 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14485181 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.192818757 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142020387 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.304180227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.168505496 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146957993 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.147778243 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147316687 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146771986 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.137354658 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.152166247 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141349062 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.145281279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152427268 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141553794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143595068 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.258813289 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.252078107 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.14213702 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.15757751 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152324728 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.142562047 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.1993227 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14638446 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142293349 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.199505045 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.262196926 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.20003995 seconds)
  done (took 36.810955913 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.150252943 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.153679255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.145786497 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.161959349 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.14562966 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.144473273 seconds)
  done (took 0.959481407 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148014834 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.145342915 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144206694 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.145190148 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.145452368 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.147167678 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145989068 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.147674411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.149357812 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145624871 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146299923 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.146446671 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147073846 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145480176 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.146933515 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146295039 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.145025464 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142575999 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14704011 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.147500196 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.302627075 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146668566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.148492282 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145893836 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.148642167 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144833647 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.154414552 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.146807864 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146712539 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.154832146 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.149440263 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146409459 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.145309444 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.149642915 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.150186296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145923011 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148279969 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.147846177 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142395602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145778175 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.146895633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145799916 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.145291511 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145996162 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.147731716 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.148408002 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149143594 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.154108342 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.147837572 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146318201 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14680221 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145233868 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.147314977 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147235134 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.146763578 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.152644292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149331386 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.146345104 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146556593 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.148436772 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.144911071 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148482506 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147676845 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148915306 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1437919 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.148349036 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146917643 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148812046 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146880127 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146353232 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146400758 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143001353 seconds)
  done (took 11.812497904 seconds)
done (took 119.787941961 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.324731551 seconds)
  done (took 5.379254537 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.305702107 seconds)
  done (took 5.415721967 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.595428137 seconds)
  done (took 6.657953048 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.161758111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.151947344 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.148651789 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.142207153 seconds)
  done (took 20.68530377 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.222060969 seconds)
  done (took 5.281759361 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.159593268 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.13464478 seconds)
  done (took 10.403300823 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.279616575 seconds)
  done (took 5.340576192 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.25011789 seconds)
  done (took 5.333245147 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.150077298 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.170207991 seconds)
  done (took 10.434546623 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.124164604 seconds)
  done (took 5.183594429 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.723395636 seconds)
  done (took 7.934474681 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.150130695 seconds)
  done (took 5.341989691 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.182802183 seconds)
  done (took 5.244467576 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.138654784 seconds)
  done (took 5.19753976 seconds)
done (took 103.89337302 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.139278598 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.136877997 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.134636389 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.134563951 seconds)
  done (took 20.603336055 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.180746442 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.180837649 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.182010872 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.189788195 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.184024574 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.180731046 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.173262337 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.172617295 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.191471271 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.184748029 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.180937221 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.183424742 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.178984766 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.175514967 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.182580216 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.180466476 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.192094586 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.181894951 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.172728908 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.187677653 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.148282674 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.191829028 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.18404434 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.148006858 seconds)
  done (took 4.370870139 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.346352556 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.218042355 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.300711884 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.198085497 seconds)
  done (took 1.122726042 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.199536521 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.199463321 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.21266581 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.251721617 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.27506907 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.210655714 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.174611053 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.169183029 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.156395587 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.201261563 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.27566411 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.195994511 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.287276041 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.147746019 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.330398073 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.147942972 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.147678003 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.200544581 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.250820167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.265133236 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148480407 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.200934185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.203818836 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.194377565 seconds)
  done (took 5.106567729 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.145576002 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.153917428 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.152978589 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.1479679 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.147379014 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.147286929 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.153479006 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14907007 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.168374866 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.148494951 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.147319164 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.1473434 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.146436216 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.147157695 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.146322872 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.160070823 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.161030877 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.147144544 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.149947688 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.153683244 seconds)
  done (took 3.08124624 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.140823697 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.994079786 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.492464224 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.396183197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.140184066 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.134740175 seconds)
  done (took 19.358174555 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.159110847 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.149069792 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.146458376 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.200748459 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.280892596 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.149163423 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.1473955 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.154062173 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.188148983 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.207105508 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.162820612 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170222229 seconds)
  done (took 2.176072442 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.142236226 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.143055407 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.140796828 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.159194705 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.158375251 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.151508895 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.155271498 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.140332031 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.157596576 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.164004901 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.154589565 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.158853043 seconds)
  done (took 21.887416435 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230274133 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.03134965 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.224296107 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946078334 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638401428 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.348495922 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.666304613 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.507276077 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.160499966 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.412591778 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.178653113 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.379076787 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.393811762 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122826064 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.220751555 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.623974509 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.455018067 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.364750037 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181918399 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861553716 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258791986 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.483444803 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991181172 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269467869 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.350744945 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.271097549 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.402463395 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.098570693 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281912476 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177065895 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15144613 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141568248 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.415519095 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.52500188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268815727 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149436751 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833023243 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.884321681 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.21657651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.865222962 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.077773072 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.266028099 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149653455 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141629585 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075764297 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.478600791 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.567483116 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.162283455 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.853840988 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.142651252 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153698932 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229948671 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.146245256 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.959312103 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094669361 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439518134 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.139277629 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149118764 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.708866072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225626303 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59680687 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.16466314 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.337108587 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867215984 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.602646945 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.297543376 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.145114778 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146938684 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077954057 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866763736 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261052342 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287345309 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.157002052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792306103 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.442131789 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23743164 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21805954 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.422081967 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.776179117 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.163759451 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.370465062 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.093223588 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075836536 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.002039141 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.076334439 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.41065007 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208738412 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.783215257 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224271918 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.48792307 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169971827 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157611263 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148941065 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.366105468 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.706302231 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142093181 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.919232594 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451073875 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158660382 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.480261032 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093833864 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140232596 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399229237 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.354554924 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.206562431 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.708251543 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315360897 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154211782 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.218202604 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.898159801 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239835069 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.416413053 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20697695 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221420151 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269672641 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.101388744 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.442619825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.202423846 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.304952243 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.206656904 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.399427344 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.462660233 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.460597293 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205327993 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.143858609 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.141935409 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931915825 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761801169 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.407012334 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143133097 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.457218762 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239297633 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.143985429 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079548597 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.706826933 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.16584803 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.243189484 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.365491675 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.920105535 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.502848243 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077426978 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2893769 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.253067629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.359576271 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.791182551 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.227618158 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.398422396 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.44920032 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.292498535 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240194905 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162579014 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233187077 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165231192 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 3.391171534 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.482971178 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146933156 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.147049558 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884727163 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.215814797 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146516286 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.146942097 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999952862 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.44504218 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.169939248 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.147982935 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.03111911 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.157209571 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209658304 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148503107 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153942728 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.666861004 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906335622 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172010548 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.735279605 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363622085 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153808348 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.861100477 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.324884295 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.22485994 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.448511604 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206951576 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.078628779 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.855437229 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.835831757 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143951871 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078106215 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.143670418 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152708295 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15432584 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525068558 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.417782597 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.192825631 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96059019 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.254784118 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152479781 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149251931 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14346691 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.662174758 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222420687 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.594252766 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242641319 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281003446 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.158263524 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079337279 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146781091 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148478669 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143406084 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.099305541 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196976305 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908875876 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.599441373 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.412576796 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793438173 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18101268 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918886379 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.27172087 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.163441106 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931638702 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.030662745 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.227149981 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204922037 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155537049 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898939639 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908350491 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.707196699 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.4663152 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.462601188 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.593925351 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 3.45060411 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.498512975 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.483185375 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39389744 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.673006644 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203093237 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.492949272 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112993995 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224857226 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.799456319 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.499913602 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155445069 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.372496456 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.532642318 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 3.029321295 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296791763 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.35592624 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178909214 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.871946756 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152817062 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 3.343732147 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287463411 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.994677424 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.351872452 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.48964776 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953330924 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.247577549 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.143058695 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.859060872 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279292489 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.874443429 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510274156 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.483834236 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.280554563 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.635427828 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16440618 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.588433078 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.498542129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.276785188 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.313653945 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09751504 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155329125 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155127093 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.1432793 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.119309023 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.009666682 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.402592863 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155226109 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379922054 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.234979792 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.487918622 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.10739963 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150170657 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144277418 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.441985963 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.795896164 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.353811004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 3.413427614 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.693772608 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147978074 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078102892 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078842281 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.837187068 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.14611491 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.119895333 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.366195699 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.348160964 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094531998 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.480220815 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.434801141 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.397993681 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157422446 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.43514475 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.424823777 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877610455 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187978124 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.244124683 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941397496 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.2552094 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.412724661 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.379675184 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991851171 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.390840624 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.201139594 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.025659721 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.14365969 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.374118869 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.413474068 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.184385213 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.387573938 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.878981139 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.156155982 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.514420038 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208197235 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.203653978 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.306932579 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.33704606 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154207574 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228658395 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154181885 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155531084 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156048188 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190653654 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220407121 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.273031012 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.157406926 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232986529 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232738316 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.719795726 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14674853 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.440452332 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.508344681 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.479312107 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208511464 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.14503395 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150180639 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078117154 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275857417 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58947384 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.418069408 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274293471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.437315546 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165163813 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93351035 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.341373579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.437472626 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.420014534 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.039429459 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110187624 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.23254796 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 3.411552886 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155286444 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.355312032 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.377008445 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.479469544 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632316884 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.20398107 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.563632082 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.435982125 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513060188 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.145056044 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736780756 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.152752475 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.899028563 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.232650785 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216477775 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.419741188 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155505102 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.532477573 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192474763 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 5.342594913 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.659850221 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00099674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.503763736 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.12926732 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221485839 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.424068687 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.554321664 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.464939359 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214958162 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155394079 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.867995512 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281650054 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 1.044307959 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.431756346 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144667081 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.355760293 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.85340613 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154401584 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.424040392 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.458675614 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.140003278 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.063240672 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179457054 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154168284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.369178201 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.414293422 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.431933342 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15421357 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.14589352 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.960129119 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.424554976 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212738323 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079768432 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.143663508 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24572101 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.404314708 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166625722 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.832338691 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.855286041 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.442518417 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.081416567 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166037127 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.47152822 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.574634121 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.486100157 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.669765144 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.370304907 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.72089521 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.909197699 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.497613335 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149592006 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.489906901 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.500810059 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.148233413 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.587884688 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234481604 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.421037164 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.46976557 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.153703899 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915265671 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.184326925 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.367575253 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739840935 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104229386 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.14953673 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.203082148 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160051056 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276789633 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151805639 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.090676617 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944851867 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.944497401 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639629376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145244173 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.136236049 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.944738061 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.664806706 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229254867 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28972918 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161826185 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.854331133 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.437515261 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.400187817 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.585364518 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.19567989 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.149820734 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145975814 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074162409 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.34545851 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.52427605 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.442555148 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 3.42983389 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.232432109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147753298 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.360915898 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.356424007 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.208983308 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295535919 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.467632738 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237535737 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.913340595 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827081013 seconds)
  done (took 854.150544531 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.145141649 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.148300796 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.138389448 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.18344425 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.201012634 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.206674723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.155866458 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.208960735 seconds)
  done (took 41.449805948 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.14433065 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.340110408 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158056246 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.144421566 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.179340039 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.145372661 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.337197255 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.149062903 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.201847645 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.15478236 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.145132918 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.145272646 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.495106857 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.166217538 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.1453963 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.133142675 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.164782811 seconds)
  done (took 43.422267065 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.146524207 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.342902055 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.176044881 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.171519122 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.117366459 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.153936728 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.081661444 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.187213357 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.141194227 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.361117064 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.479329539 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.192843661 seconds)
  done (took 67.614447563 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155428432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149158381 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.149894192 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.149578617 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150280537 seconds)
  done (took 0.824436681 seconds)
done (took 1085.231458631 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.547673244 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.366039115 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.374314151 seconds)
  done (took 0.801896679 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.292380461 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.339965565 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.463117757 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.483641771 seconds)
  done (took 1.668265437 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.43802503 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.535884343 seconds)
  done (took 1.035196244 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.508516701 seconds)
  (6/14) benchmarking "18129"...
  done (took 5.155313191 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.536221035 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.143559691 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.143799531 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.14231196 seconds)
  done (took 15.496399571 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.148531536 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.151684157 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.150058316 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152605775 seconds)
  done (took 0.66467116 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 5.127936922 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.885833313 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.125819029 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.146325441 seconds)
  done (took 12.347280253 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.896275625 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.548903812 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.893455235 seconds)
  done (took 2.401450532 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.702904783 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.119233336 seconds)
  done (took 3.883837929 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.398687661 seconds)
  done (took 0.461018905 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.176320978 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.419802234 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.70751845 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.673162796 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.757044588 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.954397587 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.425879878 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.365417598 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.573393451 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.596919861 seconds)
  done (took 5.721448693 seconds)
done (took 51.290514489 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.503585814 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.522674867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.34380953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.478432834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.3637194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.345516497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.548698985 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.461855838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.972590372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.970125853 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.514257297 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.362360489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.496871605 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.510070912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.504613091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.378521091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.375220171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.526410354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.212967683 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408165524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.557794297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.099815116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.355619769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.112806898 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.363121097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.294861325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.693625864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.377926051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.368237913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.700672438 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.292180494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.563141226 seconds)
  done (took 114.638124565 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.127046182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.13973629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.139684491 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.140397664 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 3.53290154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.140804336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.140248368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.139151714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.108900355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.090159286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.140054873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 3.507649238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.141745427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.139751469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.139607029 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.139589494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 3.292301735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.140462193 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.139321864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.138571101 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.140557685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.360448405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.140338178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.376942972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 3.251554496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.142741562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.139753327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.140053409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.139560793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.139189275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.141102677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.138989166 seconds)
  done (took 149.935944265 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.145425118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.139963223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.141218938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.140694976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.141390438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.142476603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.140737417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.140052145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.745232657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.743149938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.140306506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.143002608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.142919153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.14028127 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.140970977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.14048087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.140052719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.141555931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.13976437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.141374653 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.143599205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.924714722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.139989758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.935343554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.140427502 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.143548521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.140377211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.140304692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.140194417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.14067204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.14126372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.140117814 seconds)
  done (took 163.368748097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.358139655 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.154042156 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.154432306 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.091575603 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.154695033 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.15416098 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.092544749 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.351273603 seconds)
  done (took 3.576956394 seconds)
done (took 431.586970423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 1.609959719 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.449030935 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.327777703 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.17508521 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 1.399127371 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.208300057 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.172244663 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.233600848 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.89215853 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.240606653 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.848180513 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.186432057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.941222294 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.190997855 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.297573469 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.222516067 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.711125648 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.802305983 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.340928992 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.213973235 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.345035536 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.127937255 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.24119453 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.928711833 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.963406112 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.176335126 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.337780844 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.719786361 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.177407593 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.332673774 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 1.905179917 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 1.553185217 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.184156124 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.163505731 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.219051709 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.200325885 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 1.512870297 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.181310077 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.289207271 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.933515149 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.215197965 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.784142522 seconds)
  done (took 29.014667057 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.139533624 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14016243 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.137047566 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.139942611 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.139441202 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.140181324 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137804717 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.138114172 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.141547975 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.139337312 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.138924232 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.140840172 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.139325393 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.140264387 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.138400732 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.139108792 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.140947469 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.141802832 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.13737303 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.138867288 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.139715369 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.1381939 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.154888673 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.137445738 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.138861048 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.138035602 seconds)
  done (took 3.718497135 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.153107095 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.310799948 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.405090921 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16671304 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151622365 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156832433 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.171886574 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154585672 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156732439 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.156344014 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.249890266 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.156409183 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.174438795 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.409885345 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.163394172 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.152817825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.15504191 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.154385565 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.313696509 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167293178 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.170669254 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.154915234 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.172283988 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.164226436 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.153962171 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.579953158 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156504523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.621128074 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.15829047 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.246789493 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.193832852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.171538159 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.572462577 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.417837243 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.200824227 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160425984 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154520138 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.247791967 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157624051 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152339963 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.171554314 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.157265409 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.410076172 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.634513236 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.161784993 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152270943 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.644559249 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.255666275 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.192016384 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158283494 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.409173707 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.16498006 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.156474763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.155684154 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.190074101 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160565577 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.150870396 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.477636619 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.161068154 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.169246053 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.157595912 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.154652155 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.314384746 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.157275218 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.298824774 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.158817771 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.160087026 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.154244323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.406670411 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.164016849 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.647078543 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.161633782 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.150843407 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.248454585 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.30314286 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.652577421 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.161926917 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.311554162 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.585807611 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.171603934 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156043174 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.610125869 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.177853337 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155735621 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154360425 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156145676 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153848611 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.197993504 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.169114054 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.570683874 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.651913418 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.488493537 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.17777019 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.162531564 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.151642127 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.47535035 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.159200407 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152824524 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.400527885 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.653725316 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.161919558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.159486635 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.629359773 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.163720591 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.171504165 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.157138379 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.410541042 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.163758404 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.198546226 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.155899616 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.162787028 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.157596388 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.172857241 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.157601419 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.154160892 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.626878528 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.262006991 seconds)
  done (took 29.853436558 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.147224006 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.143422261 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.146495779 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.144141936 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.14680824 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.153031151 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.147373952 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.147652879 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.154013569 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.148075424 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.146993211 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.146960002 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.147297542 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.147664455 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.26866053 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.153357485 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 1.754534267 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.148685847 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.145682118 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.144030523 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 1.792055926 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.153234579 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.146566801 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.143543895 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.149517231 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.145630902 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.156111411 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.259808601 seconds)
  done (took 117.694877564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.153833009 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.266219045 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.166454355 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.179781621 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154590533 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.150077216 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.176168089 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.161882576 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158298154 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.153232917 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15188778 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.21328355 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.157528531 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.25014086 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.179156011 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.182161152 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.250688656 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155438337 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.151892546 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.153530327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.181809936 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.140597133 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.210790243 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.2697956 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.163739442 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.265892477 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.151360847 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.154404042 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.15266379 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.267177729 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.16093108 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.208233977 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.17509778 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.165901104 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.269260234 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.261858537 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.25343961 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.179814908 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.154110308 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.151865678 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.152559455 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.142238942 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.266003208 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.164483294 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152893184 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.256369658 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.164313638 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.153552943 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.161399031 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.150233378 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.164696029 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.168725903 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.214111156 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.277258455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.179156211 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.176674675 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.176468719 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.431647241 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.167061107 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.249727081 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.142254154 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.264387815 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.16543934 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138294859 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.151628263 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158835261 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.180632721 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.181008493 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.250038305 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.156632857 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.249669275 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.183378062 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.153907792 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.150646041 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.15315712 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.26586962 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.261078236 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.182767043 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.184265545 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.176155101 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.144878485 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.152509073 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.139896727 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.168427512 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.152445882 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.26461822 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.26201897 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.157503645 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.154211572 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.154051359 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.154852804 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.176181922 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.273448269 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.180352572 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.244768153 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.215000829 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.220682276 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16305973 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.16374514 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.155025011 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.213502559 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.163018138 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.162227806 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.483136527 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.225986233 seconds)
  done (took 20.238776048 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.60257656 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.231349833 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.207376713 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.476355181 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.568758212 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.989416635 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.197398091 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.199909812 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.222141548 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.382572644 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.269119354 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.219761838 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.183587627 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.171971699 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.20078711 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.222569802 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.207074875 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.515086704 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.319677586 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 1.279658121 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.20181578 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.486554515 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.521227776 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.626001079 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.233667702 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.535050245 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.883000916 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.361687779 seconds)
  done (took 11.586033016 seconds)
done (took 212.169156011 seconds)
SAVING RESULT...
DONE!
