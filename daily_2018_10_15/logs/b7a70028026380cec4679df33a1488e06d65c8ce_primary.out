cset: moving following pidspec: 28002
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.225001745 seconds)
loading group "string"... done (took 0.458347779 seconds)
loading group "linalg"... done (took 7.521484033 seconds)
loading group "parallel"... done (took 0.168499629 seconds)
loading group "find"... done (took 1.1438313 seconds)
loading group "tuple"... done (took 2.075967206 seconds)
loading group "dates"... done (took 1.318070428 seconds)
loading group "micro"... done (took 0.247770098 seconds)
loading group "io"... done (took 0.651838489 seconds)
loading group "scalar"... done (took 40.504569978 seconds)
loading group "sparse"... done (took 12.398047655 seconds)
loading group "broadcast"... done (took 1.106817756 seconds)
loading group "union"... done (took 14.063254874 seconds)
loading group "simd"... done (took 4.752264955 seconds)
loading group "random"... done (took 9.62869081 seconds)
loading group "problem"... done (took 1.990799836 seconds)
loading group "array"... done (took 22.372989119 seconds)
loading group "misc"... done (took 1.430529173 seconds)
loading group "sort"... done (took 3.572280886 seconds)
loading group "collection"... done (took 19.333539303 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515223311 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136157761 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13159728 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145933791 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202835324 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142104393 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155852955 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113475113 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.964110816 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186225325 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152499125 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510263615 seconds)
done (took 5.11567712 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.220893205 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094583644 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10252778 seconds)
  done (took 0.868717033 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077180219 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144937477 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093879888 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078158372 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094125052 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076815961 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094761585 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07627873 seconds)
  done (took 1.332685442 seconds)
done (took 3.184661476 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727029917 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277725563 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204972802 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466810203 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19567759 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212990877 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674786105 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343080502 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256857943 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100151804 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142648795 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386706648 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136283545 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685221702 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08909271 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121865622 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178364386 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459930874 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081586765 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109903844 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115884136 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142764281 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129995602 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090559056 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185142577 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083182567 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199152463 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110201898 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081382695 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294908886 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201141732 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685323451 seconds)
  done (took 10.892107354 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111824588 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134647207 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09780995 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137611564 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133389347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098526992 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083867485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095750021 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12083648 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17464894 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113929276 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13523432 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094022436 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081153603 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113813432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243460218 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120468609 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102535096 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099902518 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102197422 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120577321 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112227721 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107313415 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091278027 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16532103 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220301142 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113174242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125206629 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095464653 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11333049 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144812462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141756096 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095981717 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080546415 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172475679 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123857027 seconds)
  done (took 5.113894899 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191145293 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122300068 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167567868 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163711129 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139097435 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158936714 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112677485 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243835956 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.116937071 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164321315 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.154415306 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144264191 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116534935 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096164195 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081708097 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092025874 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080289884 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.652995658 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162326269 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132857975 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096918921 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10398981 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.0987254 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363180632 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089034026 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098754186 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083949511 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084129749 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161650923 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081576071 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.157801072 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101930146 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09981617 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131307903 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190759209 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127360129 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117435885 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095967731 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077484838 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193357512 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087769609 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097416869 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102261872 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13455664 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132960086 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0970361 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080842802 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216918888 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079766558 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112978744 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.924599612 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181118154 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091046595 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097661045 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.3248468 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099343836 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097482168 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077207662 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259505264 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18358597 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097662431 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080015278 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096419974 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081354505 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400922492 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084732328 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.834208533 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083896024 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107410629 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082162077 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095553224 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102877969 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087035369 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113613341 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076996471 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096200999 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080455034 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09596912 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078221346 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09893952 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105911691 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084699359 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097071507 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148001878 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.092831416 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097205318 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127347029 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098908139 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077356938 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130791163 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098531414 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079932359 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132505845 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098100614 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090316062 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093704756 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140984872 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082599044 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095526941 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17147803 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080485243 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127166887 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098360656 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113023912 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11131883 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098588315 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08375975 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095684368 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07645708 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163920346 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078975356 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097018259 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080345136 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11010728 seconds)
  done (took 22.597732801 seconds)
done (took 39.2820075 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.335610141 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104890588 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102102738 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102982008 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099679525 seconds)
  done (took 1.509194009 seconds)
done (took 2.232744609 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295904382 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17127898 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094751553 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165666327 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092841839 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172307297 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158859477 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110347311 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217715205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0771401 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162174995 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093741971 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075480807 seconds)
  done (took 2.654569249 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09649756 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116650637 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084142632 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112410229 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076903441 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111089903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092164877 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116761834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10909393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083925435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093125497 seconds)
  done (took 1.823999662 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095661998 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114332772 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081865542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108916185 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076544395 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109553655 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091047174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114403312 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107948969 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083982565 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093450418 seconds)
  done (took 1.804570934 seconds)
done (took 7.007576997 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091462339 seconds)
  done (took 0.820312971 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.918016694 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.932096756 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11307886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149729221 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.295816139 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189700623 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469734821 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123855298 seconds)
  done (took 11.132902132 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.114760799 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100363882 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099086869 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095200329 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104095877 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083091926 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101637773 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097440919 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085931681 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099583905 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084046722 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100618802 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100722238 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083991316 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099660168 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083190628 seconds)
  done (took 2.31728184 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119420603 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117255325 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105947585 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107526899 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086117469 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104357968 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104653826 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087943507 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099911404 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102924052 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090063723 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105054101 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103170831 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079329455 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104860872 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107245606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08521085 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104979091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105785705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088859021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106060169 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095726535 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086777525 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105910894 seconds)
  done (took 3.244563641 seconds)
done (took 18.24297191 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159879865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10755952 seconds)
  done (took 0.989402937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095603952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111850047 seconds)
  done (took 0.939818157 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098221669 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094395515 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121579236 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108210299 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079185039 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095848319 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117061532 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078899057 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095137397 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079165952 seconds)
  done (took 1.710225346 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082009605 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108062032 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10110269 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093497757 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104558908 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093771104 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086749833 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098485248 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109712448 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076378127 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102002697 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114151661 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084027094 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115145574 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104333743 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08274929 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101781811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098353386 seconds)
  done (took 2.490111681 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079256447 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096142932 seconds)
  done (took 0.913252988 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081481568 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093957257 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08197929 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096010821 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09382421 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076334245 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093887203 seconds)
  done (took 1.351547257 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469971514 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134882124 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251131642 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084138527 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118552093 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300637804 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096500212 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083426217 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101927013 seconds)
  done (took 2.432962337 seconds)
done (took 11.561201052 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093032897 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116470607 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111507507 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.461631175 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106873866 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096130065 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158845709 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246857666 seconds)
done (took 2.127387089 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150356016 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323649998 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11300093 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066886889 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095259344 seconds)
  done (took 1.34329608 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08124671 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10036733 seconds)
  done (took 0.926309989 seconds)
done (took 3.16097437 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082457991 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129468844 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080777458 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09837408 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07686301 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098028333 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076957545 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.094723092 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076862336 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095866253 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09578578 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079565024 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095917258 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.078791533 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096395309 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077011381 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093365961 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079857785 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094135468 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07675688 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094525698 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079113488 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094406468 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07664569 seconds)
  done (took 2.908071369 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099959685 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097967726 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10262644 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084835523 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100623724 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085354811 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100691339 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096503001 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084745165 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098064944 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100627156 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083608916 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098412139 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083901524 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099091966 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100565132 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084725576 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097187134 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082043025 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099422588 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10227254 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080286013 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100288508 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101610945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082673562 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09991905 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082004775 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096350849 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101486254 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083669065 seconds)
  done (took 3.562670291 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086572479 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093363228 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077513313 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100614789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077125452 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097489915 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076378076 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094365373 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077987651 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094521297 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079567472 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094053118 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077591043 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0947712 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078950346 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097689061 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106415581 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076802326 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094506565 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078067516 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098081742 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077160625 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094544165 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076489493 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094879381 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076920676 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094462943 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077241952 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09528133 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077221975 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098012519 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080776844 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094826026 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083977943 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097253923 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076474415 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097676458 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093565652 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078370707 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093683653 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077431224 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094439272 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076924589 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100463566 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077811488 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096284225 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077549939 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096605325 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078006263 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097608307 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07741112 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093729927 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079397646 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095423253 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098269946 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07772123 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09560879 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076652903 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095666283 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077639772 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09425209 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077104425 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097561676 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077474703 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109671349 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08429772 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094270621 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079746883 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095834818 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080288071 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095967992 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108308732 seconds)
  done (took 7.096970838 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082342249 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105233983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080271951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096796957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075625058 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095369147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097446745 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078647987 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097337626 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085007999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095808004 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079406545 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097314199 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107577278 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078781325 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096805162 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084360584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092903829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077724259 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098534242 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077923385 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097723445 seconds)
  done (took 2.730585699 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206438427 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104146369 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140633913 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105470532 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081769532 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106088456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101035127 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085988832 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10211011 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083218077 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099615882 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102492093 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082823914 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099134112 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099642667 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084414407 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100741371 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084667359 seconds)
  done (took 2.626665536 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091827983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09761542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10186342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097044852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098207114 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082936787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10389891 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106397561 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082924388 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097566027 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090301299 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099427649 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100562352 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080358154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100355242 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080338579 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100037289 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080523616 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106794107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103988854 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103418659 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090662508 seconds)
  done (took 2.85537244 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095990213 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100056744 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117716947 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082390622 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094737194 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0789599 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104919624 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080928705 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10515916 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100299457 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080527216 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096611046 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087713551 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097425661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102978444 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080498396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099775628 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080368106 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100268513 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076466628 seconds)
  done (took 2.617740047 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101404751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099374775 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098973804 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091532047 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100207476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082201214 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108002959 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099519336 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081581241 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124840132 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099199428 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08125638 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108398332 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105198211 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098876333 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090642729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107857128 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108062429 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081683395 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099910434 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124423511 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082296217 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108619469 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208319234 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082379598 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099590076 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09925451 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088028857 seconds)
  done (took 3.622861063 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080799868 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098287518 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07802497 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096257457 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077933387 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096064622 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077825044 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095667015 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080542795 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096209138 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080874656 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09763133 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08086123 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098528253 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080958724 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098337243 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082868629 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095903254 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078204044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095792722 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080850201 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098643163 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080974966 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095079908 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078708096 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099135321 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078034691 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095612632 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081051049 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095117202 seconds)
  done (took 3.414467171 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090322386 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105689566 seconds)
  done (took 0.960699049 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079242953 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114142469 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078355433 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102142511 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085592946 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09908764 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107426477 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085657444 seconds)
  done (took 1.511814078 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095955644 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.10990775 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082620113 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110323005 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109452835 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094617628 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159664224 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100397762 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087443986 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096982209 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112370737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080313547 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104488401 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081123745 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104970958 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087208812 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096168877 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087082887 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100516499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097178821 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082638294 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10988096 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084605933 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096037938 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082476696 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109342439 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108321204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082816869 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10233977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.1076707 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086344011 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093336075 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081329463 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100313753 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079951226 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108097311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111144533 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083964996 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107780612 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083132528 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109421964 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093769414 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086158988 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105794049 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092010105 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099459893 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082203219 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093327551 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096443576 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083012655 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094979653 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081401079 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094013377 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088718741 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103097951 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112318468 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080241267 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100608694 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084575481 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10234384 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087065167 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101082516 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083987188 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098450009 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105677362 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08532558 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106827905 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076678926 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093176378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079780603 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107670843 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122182164 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089599619 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100838811 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082311837 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097001681 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103150223 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083464809 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106255307 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089712319 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099022805 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105382687 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089704387 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099553517 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083610705 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107350123 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097900508 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082766039 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097104363 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09589836 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098358777 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079465827 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09710935 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107839719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085255061 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099610768 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079658218 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107676589 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079778621 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100914792 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083170769 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099937396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108625169 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087604812 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10490997 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106812903 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088480259 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100484743 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084815354 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096304642 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083663582 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102568997 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105855887 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07585826 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102839519 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082871235 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100393449 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089330941 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097785946 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081594825 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107053877 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106762261 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080023243 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095852699 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084434589 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09990463 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085146182 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106495453 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097493839 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077007126 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094855551 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085591144 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099265236 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087286459 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105260309 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102637476 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076400361 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098040555 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087575955 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107417629 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099819194 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082090159 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104697961 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083924495 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09922187 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087101132 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101874337 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080178906 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103530888 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100802057 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077418237 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103630466 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083958993 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097909241 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085616605 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10369057 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102313374 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08307633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097963428 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086890403 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100618088 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081711499 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100172823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098149279 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090339266 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102252748 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077437998 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096978566 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089528618 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097657262 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082081814 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098148065 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102243438 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083170523 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098394034 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081043353 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100698298 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112338621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08734896 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101476926 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087026905 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10981377 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081614839 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101704665 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099086225 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083149467 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100942801 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088874368 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105381636 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105212363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083841247 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096351341 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087517615 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107776827 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080964338 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098664983 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080634173 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103286496 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106343118 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084947233 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101211803 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08026351 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100789704 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103575063 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0850867 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101159929 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080594448 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105026105 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080957981 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106941095 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101340436 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091041297 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104144044 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077296913 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103975591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098731479 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087875416 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095706426 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079970278 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100705616 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083772695 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099648597 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0855626 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094432132 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088951166 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107808117 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101016184 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081499681 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100456901 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091037237 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101923981 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085670399 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103970094 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106067994 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094423553 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.09970748 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085533587 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108780916 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101433559 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07645366 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10734299 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080368102 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099726725 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08120544 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098777062 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085508506 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109365248 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104364031 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075539827 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102892023 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080412202 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099456168 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077924332 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107345476 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10424866 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083757493 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109301564 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083294757 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10171439 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104736978 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082411324 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101126574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083800663 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10288665 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084192145 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103292216 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08160418 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101808845 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099379358 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079346121 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103187108 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08247779 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100324876 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087717174 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103560163 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082511713 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103056437 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101934589 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082717005 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100819152 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08158541 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103543501 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082924858 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101512775 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084282889 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095989366 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107362575 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082405579 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108538116 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083560248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09780769 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088025009 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104098717 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105932891 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083593122 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101902008 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084156185 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100735919 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084926525 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108939058 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097995966 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091745812 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10613184 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082840681 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103552121 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082887843 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101627473 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100107041 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084299568 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101433465 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082614694 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100620291 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088041111 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103390346 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08247831 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102685873 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102560713 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081864958 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102165468 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077200814 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09985237 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081563385 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101335454 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089467199 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101630786 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103810642 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081270331 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102114783 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081902665 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097318136 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091388742 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110913264 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102110814 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090941958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099814687 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084595739 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110326947 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095420253 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080767825 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098993312 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08020309 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109956914 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084072413 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108977556 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100861868 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081765035 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098534522 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083409249 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099921501 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07703552 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099295857 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086024081 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104088158 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081036923 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101711353 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103578995 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084634205 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108597755 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081179211 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103455193 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082958113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098687414 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080692684 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10028957 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104379065 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084106575 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099475069 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079940664 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101038282 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084637043 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11026101 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083274673 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102878701 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089613979 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100579272 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103848376 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086213765 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096350484 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085262477 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100650951 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082511751 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099376966 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105312915 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086238521 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102496975 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090137566 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101951702 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083220633 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101317287 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099393172 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083194065 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10142243 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08304431 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.1007938 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083219136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109312162 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080647269 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104046478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100779665 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08307227 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105837388 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083730057 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104003411 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108641828 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085684732 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10293332 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089375356 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105490221 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0861713 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102992867 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.1029188 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08928773 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099473347 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090540891 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101580631 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083156303 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102277135 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080533317 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100844339 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100608042 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081532965 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106158118 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084840043 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100710872 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081948401 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099780224 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084975977 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105219358 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108646689 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085868029 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104020128 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077955052 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099025295 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084705088 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099748173 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083602329 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105328135 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107388695 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08529122 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101549116 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081785763 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10986202 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107725045 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087952616 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098861948 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087644471 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102739211 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085075233 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103320201 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082973682 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103609934 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107473431 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08462838 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101466191 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090898618 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105004736 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084115387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102925851 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102023634 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082857999 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096935485 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083281855 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103759032 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089121867 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104029275 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101767337 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092162709 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101312419 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082606544 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105337081 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082365574 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109120692 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096708296 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083529382 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102930348 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084575051 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097124944 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082840009 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099899135 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085522389 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100378153 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078522619 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110807676 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109011838 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085412303 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101110052 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081703706 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096870818 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078612286 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101837177 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08397841 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103762996 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110447807 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081886961 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100796142 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077810956 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101990386 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086697709 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105471577 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079772707 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097809801 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101078785 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085206093 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108848353 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081343716 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101873438 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086656372 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104689018 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080737243 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106358112 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099100946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087050077 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113138779 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084617825 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10284551 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107110497 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091214916 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103273809 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078794895 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103297745 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085295819 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102927112 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104207434 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084415928 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115597789 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08627364 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102122733 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082408978 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104125002 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102093485 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090762807 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10351205 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085474999 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106822512 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08459649 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111767013 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105300592 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088989765 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104281564 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085433105 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100806292 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10239474 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081386173 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100915119 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084892324 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103469042 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088299221 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10979719 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102136499 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093213297 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109947529 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088315991 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098736656 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082504085 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101860868 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078955409 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103901032 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099812655 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081656418 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100288216 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08292498 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102579883 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088818396 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104192686 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084965808 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103626723 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096443576 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085174298 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105312512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084795955 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099546443 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083423426 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104168869 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090106329 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110237198 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102570578 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085147079 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104014049 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084686658 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097957487 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090422311 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101923624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08523413 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102227775 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083634085 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10484956 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105928359 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089466897 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103978122 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085237121 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116261361 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104921187 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081054949 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100048483 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089031116 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.1012666 seconds)
  done (took 57.342292466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145715643 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080528147 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098556927 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078505758 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11328992 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098995874 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079316233 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099074464 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080071243 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101318645 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078982473 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097944692 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108386025 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123659903 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09253063 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102846315 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097519459 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079582234 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097497604 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079941736 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108763626 seconds)
  done (took 2.857638684 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104651433 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116563664 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114441772 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118325269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089181845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113910202 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113272357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113949958 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098070404 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110712797 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117768336 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115188892 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090810998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109895912 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110042256 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092120161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117380993 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108270539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114658513 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09458238 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111984744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113231514 seconds)
  done (took 3.203913102 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083349372 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101824845 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085009496 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097747007 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083053801 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097225117 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086929618 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.09991477 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086799777 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101907887 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081545803 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102055233 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102924754 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078871811 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102068545 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080985866 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150099932 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106672309 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082490997 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103887708 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097820957 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085392039 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097927161 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079106335 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101836294 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087403179 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103257901 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080839691 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102141598 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082255731 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102777737 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080637362 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10412416 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102783526 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082760424 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101716216 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082835612 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102025491 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07880725 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100031212 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083182409 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097797719 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083848653 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103863962 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081209953 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100955836 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084402485 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102608576 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09754219 seconds)
  done (took 5.423912181 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105537951 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159399834 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085475995 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141286125 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120037309 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111905734 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087405813 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141282337 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102403696 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082800515 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121123483 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119291122 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103705816 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08851722 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110829265 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102706581 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084969809 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102966679 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107395762 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08303827 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107706217 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09054202 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119160998 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116431406 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10863516 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082993886 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103300864 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107850816 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095678014 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10877203 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107825928 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0894275 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120517468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104585356 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083199565 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106289965 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120185265 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103806184 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086357205 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100676499 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085876276 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10821842 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109613668 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100730141 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105384416 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108450785 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083334701 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100148923 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115670703 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086892827 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112169726 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11900107 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106812627 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085224058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109617652 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118986404 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083780074 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101490885 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087123949 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115546442 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10031529 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088039553 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117343922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105456079 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111009989 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097704041 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109094237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107421498 seconds)
  done (took 8.057481645 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095098105 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110580974 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120053187 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121148768 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090384626 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110250648 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11018314 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090620281 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110231183 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116842237 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109389169 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132876855 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085319123 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11325813 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110366589 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090774017 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110993486 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1102851 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09040577 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110586259 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110826643 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119843956 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090133776 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12005334 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141188115 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105066139 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089842971 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111341951 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120211326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110922044 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122753385 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091322368 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109922197 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119613772 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123831865 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090177709 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103572695 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110109078 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090986015 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109893324 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104461296 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119562075 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090489116 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104876018 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109774892 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091329092 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121181216 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123663554 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114222496 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095150037 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11142203 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120704885 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109503228 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089867568 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120039358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146597579 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11975454 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119950145 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110649127 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119307919 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100417822 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128823096 seconds)
  done (took 7.630471497 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107823189 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114418134 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117701159 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099977682 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082232256 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108045836 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082141155 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101689262 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114535316 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094019985 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116670572 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108201161 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111818029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096377943 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108790586 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111349867 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089430545 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108849123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113182519 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107475028 seconds)
  done (took 2.924297951 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092599012 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123636926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08436355 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111679421 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107969799 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089683547 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10633918 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107585215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084875844 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107446848 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096388065 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116260081 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106260141 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090555823 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116274942 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111793718 seconds)
  done (took 2.481263326 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096220986 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116362781 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.11967467 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084569116 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102831677 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080718811 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105043978 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100648884 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080867306 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120494985 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084045033 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108352305 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105199179 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082775529 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101316173 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087195981 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100458024 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081708014 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10579991 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120178555 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095730565 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103912677 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104352672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086869428 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105232964 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089398411 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105809747 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102820779 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083652522 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104576263 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084937617 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112583977 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101441252 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083925976 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102723852 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081768438 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104679737 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084340406 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108744931 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104208375 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08349792 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105090602 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084841872 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105607828 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080040196 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105006933 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100496001 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090587411 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102832868 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0845625 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104756919 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105933644 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086193213 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114620464 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088620478 seconds)
  done (took 6.204480773 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100905914 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108304772 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080121614 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102080742 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087911125 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106668295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107889133 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087787131 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105938577 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082832168 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107274411 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089720672 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105892142 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108946629 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087155872 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108641276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079733242 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105784197 seconds)
  done (took 2.604927844 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09207079 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104419367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092399141 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105216849 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084214846 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108182483 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080108435 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103667451 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102992855 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085890513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105279336 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087540855 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102491087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087007918 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10540931 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084977286 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107481189 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103054963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085134997 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101058187 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087993551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104020945 seconds)
  done (took 2.953742083 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121919839 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129810638 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096304468 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230432002 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103490952 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13127779 seconds)
  done (took 1.655755772 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111100098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120157939 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105596739 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106868025 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115218847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106670479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087496864 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106482794 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117056061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10136335 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107617045 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117528494 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117322663 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096635192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114527462 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114468935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106822752 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087964669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105538039 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12768469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086976801 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117769445 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107642625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087168361 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108155669 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117464805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117651978 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121190625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0877864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117687225 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114671745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086435387 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117800517 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121991291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108636225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097216874 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107686105 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128775958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113547831 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097205361 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109371781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114362787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096860034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114646327 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116875299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107815684 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093404318 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107555574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108006138 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135810854 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094194708 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117652594 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114262426 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118190736 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118719807 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134981896 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100944908 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117596687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114704794 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121670155 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117328109 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092787786 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116810454 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123060105 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115126903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116465711 seconds)
  done (took 8.123876774 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102733443 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12544507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107217775 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122050395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095943512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108010665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107815212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087314645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108339073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10660457 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151684688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088173213 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116984789 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116541403 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107714972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088291545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107999886 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116892587 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086922501 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133841767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107916924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117536501 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116442001 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096450971 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121618723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114695356 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10822799 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087165701 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108207192 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108068004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093177931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108415979 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118498365 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086363397 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11747058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108552658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087376727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115287668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107848521 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113326492 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096796549 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127356667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108159088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107278114 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122191087 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088470615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10769927 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087268352 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108177487 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107078623 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121643729 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102185156 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122845472 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117475814 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108207974 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087703097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107944367 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10889575 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087455131 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115010398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116545731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108568052 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13614959 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088131316 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108518091 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117273987 seconds)
  done (took 7.988320963 seconds)
done (took 154.100846526 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101912799 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140438969 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095624462 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168229407 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106266439 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118204181 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137684022 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097433378 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105951319 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084927926 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106416105 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087026232 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171107502 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085290095 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106533554 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107107837 seconds)
  done (took 2.67603944 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200217075 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253736758 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102075286 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106480699 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088539432 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110048029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10462293 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091271494 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109475218 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085378917 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108893862 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086206316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105305197 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085685533 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110510134 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087977043 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105807596 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086810196 seconds)
  done (took 2.869880809 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114484108 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145554751 seconds)
  done (took 1.112430052 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119216303 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179483639 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295325411 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154589538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118515189 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126180202 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156314861 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129921698 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195737275 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122099912 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122319999 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096913248 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140404624 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115386906 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093724946 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117350788 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142246993 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092218807 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115138543 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115527947 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115718693 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106466546 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11458286 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093585988 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179992196 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119947864 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085140154 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107111984 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116689002 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09431806 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112862545 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12379108 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098318376 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174562963 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101950419 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176503017 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097883054 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112222445 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114403908 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090928374 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119201928 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117369617 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103866212 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118402253 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08673049 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119481471 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105936892 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086318557 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115246183 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097626713 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115388163 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112838828 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154887618 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117620022 seconds)
  done (took 7.498930946 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795854803 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163123187 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089587323 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878466084 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138979519 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104239348 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778731812 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133010362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23701953 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758702807 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134466636 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121785393 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22696691 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237244773 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.981488276 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311804816 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669141026 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101506582 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149529597 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152264253 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120216763 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137696209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129820247 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429098923 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095117407 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112899372 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117952083 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099531867 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158061286 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126085141 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114669278 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178135122 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269807842 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183214149 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11496982 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089105192 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112696467 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170835518 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266489227 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213584051 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179753621 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086830921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112112395 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121469569 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110980689 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109080655 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163420537 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19514126 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172534579 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092256108 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122479908 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119802812 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120701972 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16472174 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12150683 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298138799 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311881271 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113195171 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120320451 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105177343 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262979842 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123415831 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223561696 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116311267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21195234 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112175671 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778270112 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19079272 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090085932 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118404499 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118808826 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094959871 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121696049 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167515384 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407977603 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12435894 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092691811 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112234719 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204535637 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126347146 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112146243 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162311568 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115624969 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098776405 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126316543 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123460535 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169977789 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233852519 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124691276 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119500657 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094195278 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126199362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115899184 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213728817 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216934898 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161292295 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210141054 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123212102 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186201091 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169164523 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098816127 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194644372 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096852908 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126490532 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123638673 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2150661 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146563935 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12259777 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094457364 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118788963 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148326677 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126941187 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096934613 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191189164 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45897125 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166692889 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109781339 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127250457 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097700062 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182880693 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096219898 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262645735 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122497596 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169013521 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119217247 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087753565 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120172865 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163657043 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123587436 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121004678 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101054294 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120116818 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234674102 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219341932 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124300912 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21861306 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18295095 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118824897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172041914 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122428581 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16757267 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120492872 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121643214 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094999787 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795076335 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123926859 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098413579 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117704535 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187349922 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112599223 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102755769 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125436616 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108994706 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789098047 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127952441 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121391365 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100918414 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120013204 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120727114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11714781 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094523251 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161614347 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229616168 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123758262 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118693333 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102453004 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182319643 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094505067 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124895636 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125122436 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124593473 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100066466 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115583894 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124482082 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170913895 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162789778 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220954199 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.588542124 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089629491 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124483361 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227471223 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089562144 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28723944 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120416975 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224450724 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165938767 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120397777 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307202626 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166257984 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187523873 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127902586 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173754533 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086790353 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119076335 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163384933 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112810169 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117431016 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162360272 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125690498 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101068627 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957958631 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1130101 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229831091 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109329984 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170962459 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116154532 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098566265 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294340308 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111709535 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107569879 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187289188 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093058654 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126093148 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.866042602 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103559809 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123503608 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118244052 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221310207 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163440289 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118990209 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098631124 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121989225 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163738456 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210687 seconds)
  done (took 44.224594838 seconds)
done (took 59.236473488 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279348293 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212301552 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257121706 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173032894 seconds)
  done (took 1.88702818 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170988605 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148229168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119486772 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106755483 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148708961 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084227207 seconds)
  done (took 1.659292789 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353478131 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269196017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237331293 seconds)
  done (took 1.740446053 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286663095 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250987843 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355275919 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417663073 seconds)
  done (took 2.309461081 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208312596 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132524902 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111258343 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103942898 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195390244 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248560908 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140987369 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200804409 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121906 seconds)
  done (took 2.393661863 seconds)
done (took 10.870725044 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.15873193 seconds)
    (2/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.249626554 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116802838 seconds)
    (4/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089884152 seconds)
    (5/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.234588836 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.287311809 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.19409356 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.146707823 seconds)
    (9/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112939171 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10272961 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122619949 seconds)
    (12/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129633723 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116723579 seconds)
    (14/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.190203102 seconds)
    (15/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.119144289 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115682143 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.167007497 seconds)
    (18/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.206831162 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159404065 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135735548 seconds)
    (21/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217109703 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.146132282 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.170041805 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108868796 seconds)
    (25/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112895611 seconds)
    (26/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134151351 seconds)
    (27/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097262417 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.224585638 seconds)
    (29/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12071779 seconds)
    (30/286) benchmarking ("sort", Float64, false)...
    done (took 0.173802338 seconds)
    (31/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092042721 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118392622 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086065159 seconds)
    (34/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.173746619 seconds)
    (35/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.193023432 seconds)
    (36/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.149931604 seconds)
    (37/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130167053 seconds)
    (38/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121089129 seconds)
    (39/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16980549 seconds)
    (40/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120973882 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116059218 seconds)
    (42/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.152383182 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186485272 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200319644 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094015851 seconds)
    (46/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120856738 seconds)
    (47/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066574946 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.1273045 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.2021774 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089120792 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137034219 seconds)
    (52/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.077577888 seconds)
    (53/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.166168459 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.172874378 seconds)
    (55/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111706765 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111045618 seconds)
    (57/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.21410831 seconds)
    (58/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091674345 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.247102244 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13667246 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119216178 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.161556128 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125491498 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08559395 seconds)
    (65/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.172781615 seconds)
    (66/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192968139 seconds)
    (67/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123482624 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149481687 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 0.109341906 seconds)
    (70/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.155264372 seconds)
    (71/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100369552 seconds)
    (72/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123350954 seconds)
    (73/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191200706 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.160751321 seconds)
    (75/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135540647 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09219023 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121068327 seconds)
    (78/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183218198 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086382982 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138558299 seconds)
    (81/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.099409277 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.17506799 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179427728 seconds)
    (84/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117530608 seconds)
    (85/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189125008 seconds)
    (86/286) benchmarking ("sort", Float32, true)...
    done (took 0.207598818 seconds)
    (87/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124375273 seconds)
    (88/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140593289 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093221126 seconds)
    (90/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.170482129 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111982929 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111093527 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19034086 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117527483 seconds)
    (95/286) benchmarking ("sort", Float64, true)...
    done (took 0.232407926 seconds)
    (96/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094369544 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221148291 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175056129 seconds)
    (99/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089598067 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105873661 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066949037 seconds)
    (102/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.190679746 seconds)
    (103/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066138063 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.088446056 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111278746 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116329107 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.185684589 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.140502864 seconds)
    (109/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.089152055 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 0.179976307 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095601732 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136838369 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11101427 seconds)
    (114/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082782999 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093750959 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116273447 seconds)
    (117/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066243801 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11593676 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.136667439 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066924961 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109941613 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093851856 seconds)
    (123/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107713185 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092279594 seconds)
    (125/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114608505 seconds)
    (126/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09004226 seconds)
    (127/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.150885718 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094898043 seconds)
    (129/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110247839 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164883757 seconds)
    (131/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112119595 seconds)
    (132/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.089836424 seconds)
    (133/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.06694491 seconds)
    (134/286) benchmarking ("sort", Int8, true)...
    done (took 0.222642657 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116154589 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.165379013 seconds)
    (137/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.089960353 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.0683511 seconds)
    (139/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109502432 seconds)
    (140/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233861214 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077503617 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086179391 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117587114 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124617749 seconds)
    (145/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07543531 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085803425 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110179072 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109371183 seconds)
    (149/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090704687 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118155451 seconds)
    (151/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066400743 seconds)
    (152/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184774839 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082906934 seconds)
    (154/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116114637 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087935453 seconds)
    (156/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177894407 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101410385 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136686314 seconds)
    (159/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090042527 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066985378 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06802336 seconds)
    (162/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088230526 seconds)
    (163/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232687238 seconds)
    (164/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094881572 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124887689 seconds)
    (166/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066516397 seconds)
    (167/286) benchmarking ("sort", Float32, false)...
    done (took 0.173771052 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.186826422 seconds)
    (169/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068491439 seconds)
    (170/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121682039 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.142331995 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143989636 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092943869 seconds)
    (174/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090952498 seconds)
    (175/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068035899 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109599531 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097204332 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089784811 seconds)
    (179/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.163777667 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132573395 seconds)
    (181/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068165359 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099073337 seconds)
    (183/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093570441 seconds)
    (184/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184385773 seconds)
    (185/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067155173 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.223146264 seconds)
    (187/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119454443 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133153962 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109394941 seconds)
    (190/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121151514 seconds)
    (191/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097523827 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11041829 seconds)
    (193/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113991041 seconds)
    (194/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122678396 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08659222 seconds)
    (196/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090981565 seconds)
    (197/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.111799066 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117557549 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117433135 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096692671 seconds)
    (201/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112408382 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150994647 seconds)
    (203/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090991066 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093503495 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10865978 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086851774 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116158716 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067815378 seconds)
    (209/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15463287 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088677893 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113798644 seconds)
    (212/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076858014 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108546514 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.289446539 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0761607 seconds)
    (216/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089580465 seconds)
    (217/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06748927 seconds)
    (218/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109685655 seconds)
    (219/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077284891 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069103155 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109925732 seconds)
    (222/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066496068 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121856988 seconds)
    (224/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124182471 seconds)
    (225/286) benchmarking ("sort", Int8, false)...
    done (took 0.187461457 seconds)
    (226/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091173774 seconds)
    (227/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097303274 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091731727 seconds)
    (229/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115760024 seconds)
    (230/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090374214 seconds)
    (231/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090162368 seconds)
    (232/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.094033181 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087490914 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10884829 seconds)
    (235/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09194653 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13664803 seconds)
    (237/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08651374 seconds)
    (238/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.15589845 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11542669 seconds)
    (240/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.119511295 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115864628 seconds)
    (242/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067277402 seconds)
    (243/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067624921 seconds)
    (244/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090501482 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095047816 seconds)
    (246/286) benchmarking ("sort", BigInt, false)...
    done (took 0.217398673 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091875744 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086215376 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111190194 seconds)
    (250/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066611446 seconds)
    (251/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123442095 seconds)
    (252/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095306963 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090376064 seconds)
    (254/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094809533 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117563939 seconds)
    (256/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092997545 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12721643 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086391239 seconds)
    (259/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090796624 seconds)
    (260/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066651597 seconds)
    (261/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170699133 seconds)
    (262/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076910711 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117233584 seconds)
    (264/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068133887 seconds)
    (265/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066845201 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109473071 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085308604 seconds)
    (268/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.08957048 seconds)
    (269/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087342629 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119348586 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067395139 seconds)
    (272/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.089193082 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093563761 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111480292 seconds)
    (275/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08757108 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.1083938 seconds)
    (277/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093491367 seconds)
    (278/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068087029 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111142676 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115732564 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068356395 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068403479 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110390826 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089662821 seconds)
    (285/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101358252 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086837498 seconds)
  done (took 35.968326944 seconds)
done (took 36.851563211 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099517514 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14823513 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095872972 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135535118 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123345969 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090911316 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118837839 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097498443 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123686779 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124029584 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097708387 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093809929 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096772737 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119541345 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096412703 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138130941 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123277756 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093404292 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118920791 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085972793 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117867718 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0862612 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111874743 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069898075 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121262905 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093128746 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115391461 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119294959 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086202705 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10971704 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091527985 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117172973 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086660647 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123151572 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093624446 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118422822 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095862156 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119871261 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111650961 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086472538 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118012975 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086668774 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116230943 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095318328 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116182521 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092669649 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118109299 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099133589 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138301718 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115738319 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094625095 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121961502 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095930685 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117784684 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091068937 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11964759 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090754141 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139612141 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11921543 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091716394 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118598448 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093976824 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11622486 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094368492 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118863089 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120515797 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098507684 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116004035 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096755118 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115420684 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086269626 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118136107 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090124248 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109901464 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095106221 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121622768 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109509355 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092278115 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117009627 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091502421 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109266982 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089107661 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111319641 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092735955 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11243028 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069630061 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114232341 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092936709 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109854009 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095715962 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11609891 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093709079 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111901018 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098977767 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110199186 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092135842 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110668265 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087264865 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112737113 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0898229 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10986092 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089228273 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120259439 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.11286281 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093192493 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123783908 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086834023 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117089945 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085820917 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110181436 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101811925 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121886388 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087178156 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116779393 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086204226 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118874964 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086063493 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110566588 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110752434 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086911253 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116961098 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08673094 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113170861 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094078999 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124587894 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086608917 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114484937 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090544558 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111662084 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092207422 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111726103 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086870707 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112571105 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077621163 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113328626 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087051837 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118220602 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089213286 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119588867 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08858113 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120665854 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09123333 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116893263 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115953916 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086136217 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074333063 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116759854 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089007638 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112909497 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086571619 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113812597 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.0866935 seconds)
done (took 16.879663554 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087196762 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182671116 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150613739 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141864732 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107231798 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111488887 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121386774 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118685801 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113080297 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142636047 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110557817 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131226808 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148082524 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086535749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112159829 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0913807 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113229411 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101865569 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145586936 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133131391 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162349702 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087090905 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145908642 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134826205 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120692518 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104101507 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112126585 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091385605 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114856392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112250504 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131673218 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114663319 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088389166 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132973907 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104241406 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120031223 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08757717 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119451765 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087458014 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112295455 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140688948 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132782941 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09346945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117983754 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090880667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114037829 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088977259 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121161163 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097962161 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115971612 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126247509 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155793299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091403444 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121300259 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086202142 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122146132 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121253962 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089891166 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11180221 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.08980061 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110662661 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091203451 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126911779 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141049336 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09176992 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121142876 seconds)
  done (took 8.581031863 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103710751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139734366 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104985202 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12965322 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111198706 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088016028 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112129766 seconds)
  done (took 1.736890788 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088624733 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134941785 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110507121 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135710093 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132471019 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11212694 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123415832 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087607784 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132222769 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089978287 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13457238 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14980957 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090027386 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120902992 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137521198 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.0888695 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136417257 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088632113 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117498455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111992353 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116606992 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135355865 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090857002 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113022008 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102527559 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11338787 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162110902 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093643833 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114406062 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092305341 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112270346 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150494256 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104025199 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125023304 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088776597 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130039371 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128155667 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08731144 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125715929 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093741466 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127751287 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089091227 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115463178 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087487728 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117648693 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09935113 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117565301 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.10649011 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116417215 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13313343 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090024715 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127334125 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090047287 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118123467 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09083151 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119236901 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099292056 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114750476 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13345903 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090417599 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131008486 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105734056 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12705824 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13130082 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091504859 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127998193 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102782782 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116724604 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091239955 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117789246 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105697498 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112666449 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090325149 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.12451829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115607055 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112817676 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136326568 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090691539 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124220422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088321145 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11404815 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114431538 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112387743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118327331 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089484914 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117535179 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092177264 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112282234 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088340466 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117352765 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088108371 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11495611 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092137985 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114228797 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091137664 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130267304 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114945578 seconds)
  done (took 11.80586588 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089885405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114599785 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092344901 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114737638 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090733476 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11448997 seconds)
  done (took 1.577245931 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116173491 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117031812 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103812179 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120447069 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155785016 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104280115 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128980294 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123129751 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107597032 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127664364 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129287486 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105262778 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135774555 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121887265 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103711685 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119815932 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103244513 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12506891 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127265753 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096683488 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136947838 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120436888 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09694845 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130992239 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118264305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095267847 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124404052 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103959451 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126855889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123916859 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095584013 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119088506 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096251092 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123371917 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129349871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09572682 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120364566 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118524093 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100182634 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116901356 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104238552 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121734442 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127516319 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093477997 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123622484 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1209994 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093729005 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124970377 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103163424 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118718225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118744174 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095849275 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120091536 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094314123 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123097544 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125369537 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094151896 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129652931 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121046273 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096152273 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11938506 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093410097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123856944 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117485242 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105192308 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11978843 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120947781 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096328711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121721302 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095755064 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120156148 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09327575 seconds)
  done (took 9.207491705 seconds)
done (took 33.85332547 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685101962 seconds)
  done (took 1.643669998 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.811629084 seconds)
  done (took 1.773230851 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.82603858 seconds)
  done (took 17.814760334 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490085496 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.574024986 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.974237103 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176195393 seconds)
  done (took 3.175290648 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.944756602 seconds)
  done (took 1.923797606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28166935 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234159507 seconds)
  done (took 1.480332085 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767974389 seconds)
  done (took 1.744238895 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360774623 seconds)
  done (took 2.327432267 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322613639 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183808349 seconds)
  done (took 1.480938768 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546192141 seconds)
  done (took 1.522081427 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.61056096 seconds)
  done (took 11.591321829 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265040314 seconds)
  done (took 1.255311855 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299554428 seconds)
  done (took 1.280814783 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.481598341 seconds)
  done (took 4.464748204 seconds)
done (took 54.448680359 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098899263 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127156749 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101873022 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124015944 seconds)
  done (took 1.425789845 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101149598 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12063342 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100951721 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120154984 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126142744 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095286043 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12333038 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101251704 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120887049 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096196831 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120933297 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11914999 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098091209 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122660956 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093133129 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123979261 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124118202 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095937336 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123840614 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09634887 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117919602 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097562158 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12408439 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094443458 seconds)
  done (took 3.643974011 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100020337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119217558 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096039046 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118074407 seconds)
  done (took 1.421885583 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099713056 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131190245 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105635717 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125600573 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131399653 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105729736 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117253935 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092458022 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119255159 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100503309 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11561469 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139412337 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105941265 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124410113 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101330096 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113323164 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090603227 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131173049 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124655688 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101069108 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118565337 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100040861 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115108168 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108588358 seconds)
  done (took 3.702393319 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170531443 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126646883 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138198211 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095851926 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159586058 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14088667 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087933251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140560402 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087836203 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131127871 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117536471 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13267907 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128658879 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088866769 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113982558 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087698787 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128581644 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128394296 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091131978 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127572947 seconds)
  done (took 3.416289823 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098571073 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117508683 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08869782 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116062448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099360853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120902807 seconds)
  done (took 1.631047 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091219436 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114642022 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090242508 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114145105 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094387704 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115409496 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088478017 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114692681 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090341177 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115283698 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090262398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113075917 seconds)
  done (took 2.222466461 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.5021919 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118820485 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120071826 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088629477 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121493745 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089243368 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128870481 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092675812 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141962648 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08887405 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115618719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093546772 seconds)
  done (took 2.691368762 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236991477 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125465097 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282451208 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364250557 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155741362 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165859601 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278295295 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160912053 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1959812 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14903441 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229115686 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198034169 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151566459 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190677356 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136896609 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144602346 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189727484 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249759652 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152312038 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210788556 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205732947 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167386234 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17947802 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152238067 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111603345 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192039971 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095501863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129834261 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231075108 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179002323 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188118784 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16056845 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146514589 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234329676 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246319087 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194962837 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27917207 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134068499 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166312671 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142582924 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263846341 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138994289 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233439883 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154939059 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10581038 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221450989 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16542628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17595683 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144902333 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138257628 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196362039 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240912421 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192748091 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138366634 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29883406 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148344364 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158193035 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189078697 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251626461 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226975907 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188128949 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121009186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188113125 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191876111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211260837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152042811 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182535328 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1473483 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182921995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18935444 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166042416 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203426676 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179821881 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139196804 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169647516 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172064336 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172796495 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257316386 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184683728 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122724776 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169866422 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147906288 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130353843 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167449416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124886524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213745645 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143670419 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163613822 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208090666 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158960713 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160429938 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2220678 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183988246 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148942841 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083566107 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153025304 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154239445 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176491074 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139220279 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158762182 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1569433 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129521518 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170380452 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097402531 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210385337 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091515165 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172951977 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210856219 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10041018 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162054712 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15378844 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150743822 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176395909 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197503345 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140552351 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133390926 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209772161 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178462159 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141363707 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177036679 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22859803 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116660167 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148491575 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225488256 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243349259 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112962986 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228691994 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152301471 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10818929 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133114481 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180200144 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156075868 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161108084 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131937162 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182685065 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23171237 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098277289 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139377245 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194072602 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134105342 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131880981 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154199632 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147312811 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110847397 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142641946 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145265251 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176686908 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17813921 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154962011 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16604166 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149394033 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249209457 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139085093 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150865604 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148122465 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094505226 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191921871 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226027111 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102742814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231380637 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17063885 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222649201 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169082359 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107414859 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176725835 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130442382 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120538193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193745744 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167111216 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161573847 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196764096 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220830529 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1790478 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208696545 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165970144 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174592619 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163985113 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156058261 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110225083 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160119893 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157356862 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123998084 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138880501 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106762195 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149601044 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142555034 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133058049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196868762 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169681295 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215399774 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158940327 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147400105 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180361138 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100876057 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20173768 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178989104 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145310702 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197783383 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192426156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212927736 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116667011 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225839577 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119712349 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098298188 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142047484 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169703714 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134949645 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107337987 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162637827 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208591723 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181533273 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173559222 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230966012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175752667 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190849822 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095128974 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167722367 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183077776 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203902568 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154602651 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138063939 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151092931 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177050003 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154326562 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254924532 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167469896 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17532067 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233315774 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123231824 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13145056 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149212188 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177021955 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152293359 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174564788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14630563 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138937796 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160435794 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102235117 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187729236 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185268258 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163611631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185901484 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149615095 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210941857 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100567005 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160537895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159567966 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165094678 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10883218 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174232718 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201590194 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147155703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16648172 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214813546 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103315898 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304884764 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234164512 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193927194 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137875626 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15418971 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160549385 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162153839 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169086988 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178718572 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158082256 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187015191 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15906556 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135908545 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139601667 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148696729 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12419159 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133012183 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147863514 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177472813 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137945861 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187091653 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15448488 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160165755 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17172058 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150859374 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144064688 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149752961 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216128497 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182647741 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239857474 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150320663 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178362496 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20573261 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126938377 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13082011 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107248548 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17819912 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13616654 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218743402 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.1876015 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199031968 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20759811 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178882298 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138240175 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093228679 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158010868 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168860591 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227006665 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147966414 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119501577 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230180254 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108858905 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132016254 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165859757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286393175 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143686526 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221186523 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080899328 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279740366 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125266442 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104800133 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162312627 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234138892 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136245035 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151973881 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166965958 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161399019 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162116535 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149640958 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217187973 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210607475 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226420674 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185019973 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104293998 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156046719 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202602857 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193351974 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154895487 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137772424 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205783747 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194261712 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222990757 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113563997 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195699689 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166633839 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157366315 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186645961 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134233611 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206082586 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134285964 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190384382 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151658897 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13860726 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17587803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213165496 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113436106 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215897063 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182512417 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134855939 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104632047 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192234088 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179284277 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154016361 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098960497 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208891134 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097860109 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218541563 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233195736 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133395652 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155311044 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14563041 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107230838 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153609074 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157563144 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138745146 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163874462 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201905562 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134238513 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190280827 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228919356 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170880773 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171489561 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145917758 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692793633 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131206092 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194597508 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146921576 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204622717 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151303989 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17219483 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158420496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168937976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22091126 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160776452 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22927597 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191045401 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177005131 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132967324 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157325675 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154355567 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143927927 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152327429 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168863889 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160870461 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145611084 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179141148 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164297869 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133623283 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112843774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225067863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119907755 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213595302 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178822695 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110486249 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199577287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187024987 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133947604 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180036634 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234549881 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113588567 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149073758 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133528762 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150702037 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258867131 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096809825 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216254588 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185606752 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159124135 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168249686 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147210609 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19226623 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156402443 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212107783 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115251985 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158357441 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156674231 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138725307 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130724692 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154526536 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167507554 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121902062 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186605528 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138212128 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19314503 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124766977 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144950449 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284376136 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176306003 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243705057 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107575778 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136137896 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163472823 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14947247 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176857308 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177534004 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13583973 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134138996 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13576115 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129156112 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111326864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154701338 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18915627 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190626149 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207327796 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136127542 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276334503 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112501201 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155766349 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114543921 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104577794 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149908259 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145982938 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155321323 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191908339 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261018614 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14658471 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132070315 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148556199 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098977774 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13459377 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162192135 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165195526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179881445 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143142715 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081011049 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154681567 seconds)
  done (took 82.13430143 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163902459 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131979688 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146436516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201622706 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174691969 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268841455 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209102839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25283605 seconds)
  done (took 2.630522077 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096466219 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144826442 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157025058 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132978497 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091511047 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119306965 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341071327 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132463838 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116158402 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121807962 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172295723 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09373401 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.543884622 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090325835 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119422207 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107073506 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092239556 seconds)
  done (took 3.749629532 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.188278381 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497281325 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.01860515 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19357737 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15970276 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.116542733 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.705536246 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094344486 seconds)
  done (took 12.054361011 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114908258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135613578 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12278058 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151706591 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140403139 seconds)
  done (took 1.757009183 seconds)
done (took 123.46164634 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097586862 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126756059 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097002963 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.1288772 seconds)
  done (took 1.521307646 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094328673 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070729866 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100260076 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074841767 seconds)
  done (took 1.420324009 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188387449 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167542093 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38219337 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071455866 seconds)
  done (took 1.570296382 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113793012 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131968179 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103967337 seconds)
  done (took 1.445237244 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106042957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128863534 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102913901 seconds)
  done (took 1.43112653 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105079817 seconds)
  done (took 1.197801678 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107455011 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136540282 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108904564 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135791458 seconds)
  done (took 1.581828615 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097516153 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126123373 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108507459 seconds)
  done (took 1.424836996 seconds)
done (took 13.031018408 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106043963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419378816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411629017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109358915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719856947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379639149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03786544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145401991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164866207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093563395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137800857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673681762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027965422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374133026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988228642 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372586397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679412159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120876321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090497427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121903804 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021751701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0917022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120818867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092473781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703540881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396519251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123045958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371165338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092703515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125779367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383030646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122644781 seconds)
  done (took 16.900823916 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095145474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172833574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097892066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122597876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12233213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09363076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123697392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094161454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178031003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121942678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109589182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121321849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12471987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094626783 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140265298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09445387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124303664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092773058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1212711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094265132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13960218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119990105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094340879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12077489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094433567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134736187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094150609 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120513384 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120049178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098222634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127364025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09428676 seconds)
  done (took 4.782450484 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140695265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181609551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127023195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125671401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166953638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122971843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197437397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117403955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18215804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1221227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138719574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09259917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155288915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120797071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11362229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120904639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096449057 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121772177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092530696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122112462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139015375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092813101 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122454532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093621613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121725405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108132345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124134275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12089606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093080485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126693679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100233518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123826185 seconds)
  done (took 5.120118276 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097060282 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125282248 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108745282 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137130696 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094308244 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124788366 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096944298 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124231228 seconds)
  done (took 2.002006108 seconds)
done (took 29.892687726 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110301023 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126414217 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106533672 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134182472 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101400718 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131408756 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090452553 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13327821 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132461299 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101673643 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136698151 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091944723 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121748126 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091166572 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134927982 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096908232 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131811005 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101046445 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133161806 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130775633 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094071087 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132378629 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102785124 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132585114 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103522908 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132335721 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136278977 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099225446 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.1221314 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093960231 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123196917 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102890484 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123465877 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105322099 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126493043 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097116359 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123472054 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093346438 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132561783 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131727326 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098942373 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132935854 seconds)
  done (took 5.96009376 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.1103019 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138128821 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104403024 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080184617 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116433936 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079899244 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136483282 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078915894 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109196395 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106789771 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074168667 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105552237 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078420379 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101279717 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076933928 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075219355 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107997609 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075484739 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075759985 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105972605 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079251533 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072099329 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107338897 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078222424 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07390819 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109204383 seconds)
  done (took 3.560862249 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101748513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133539018 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112985662 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182406906 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159378887 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099574834 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131736328 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139329898 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108633897 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12047631 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09662101 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148764492 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108941264 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129410457 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092034706 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13634902 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133972203 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094299653 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127139774 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111962223 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137707613 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101529086 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140294016 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131325194 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092971547 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12217484 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09655419 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133757071 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097397335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131164122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097279203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124998895 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12248926 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104752846 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125227251 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094632269 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141560575 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103446245 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130971456 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120673802 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100624012 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121491163 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113689917 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160501501 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090926915 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128764625 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123187763 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103156866 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120979803 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110114434 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129875906 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091199284 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123835897 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091204678 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121571362 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106037174 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123770484 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09429799 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129812624 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12596036 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104631291 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124555394 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107304212 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120944734 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099187496 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121930026 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093159668 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12004185 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142875794 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094487502 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159952869 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09298478 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124270068 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101064284 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12912383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127478079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093615019 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136642853 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101537692 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125837675 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101901832 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125963176 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094933744 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140250307 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123452336 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094916788 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122033867 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100460691 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123712398 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09414468 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136218901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09222564 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126039124 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110096452 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121770107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122579298 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099387812 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125172016 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092106931 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13496523 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098234459 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12206395 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130927372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094257665 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124044184 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102158504 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126227664 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091197563 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126474647 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099378559 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122667377 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092815106 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124917334 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093597176 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131743965 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128274239 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097273297 seconds)
  done (took 14.751644891 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226377523 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213996743 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205994734 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.290211612 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135041678 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114074347 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209615769 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155899096 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12403412 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159083636 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170616572 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180072242 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169461409 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181760531 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170402842 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09327212 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142044202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134146865 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243665183 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257046987 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143408211 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100353606 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162710265 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157814661 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136553103 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131873988 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109734011 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133502488 seconds)
  done (took 5.766660174 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107894133 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155336605 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097870363 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145091379 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148538861 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092731183 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127999328 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093366331 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134838011 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13521865 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093055823 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12984977 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099681082 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131709046 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122958153 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10238218 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131110498 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094377092 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125832913 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097016045 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133017927 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101422561 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126393413 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120932458 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103825298 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122451305 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086816257 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142507594 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122597698 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116334508 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120682451 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102485038 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136434496 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093802235 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123295158 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094392069 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126291308 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09494586 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125421898 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091335615 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122270074 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077402401 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121622035 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136416249 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099393451 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07956265 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129326399 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128078214 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094713086 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120100949 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096545751 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124820471 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096229537 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130554577 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095631296 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124409301 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096327578 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115279359 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099957175 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124943524 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084523933 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121210339 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098269452 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119013023 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101283454 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126931564 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09106543 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124804118 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096550653 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13017984 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094437715 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129343198 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09112455 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125350859 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095226954 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128003805 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125765916 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092492479 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122294423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094683778 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07520984 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123069135 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073518446 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126032691 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090813679 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121929647 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095087555 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129814313 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137517931 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095144634 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131370724 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094013524 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122454123 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095389143 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113625887 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096110831 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140486631 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140914661 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094066111 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121627197 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107554699 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126834831 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092332582 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106874452 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102313653 seconds)
  done (took 12.934664643 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130108024 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153186908 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125102723 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112067151 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156649825 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157556415 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100188947 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130160995 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095482492 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142609817 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093651364 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131721586 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09343212 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137999178 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15727102 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10316723 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125647754 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107521071 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128175794 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169278099 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11189546 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142897288 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11021997 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124493094 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128069831 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110250446 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16072853 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10748085 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136005066 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141715725 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107110104 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160238238 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143189065 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099262422 seconds)
  done (took 5.469788398 seconds)
done (took 49.534680247 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.220370181 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414122085 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188324023 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.085106835 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.254791606 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215602674 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208993276 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189840916 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.252176401 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196879936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.462524441 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.755289672 seconds)
done (took 58.558250753 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.262881944 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.419028977 seconds)
    (2/2) benchmarking "String"...
    done (took 1.61332894 seconds)
  done (took 4.147029304 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.888344504 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.13193869 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45330855 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189268873 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.190967737 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.48192686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.918975565 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.571332899 seconds)
  done (took 28.05116814 seconds)
done (took 42.468046171 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19597344 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.245210103 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224795211 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170777053 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.32176674 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.21368106 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.49020307 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.439659915 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.194916731 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.180083936 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.216920467 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.191846409 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.216416244 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.483313586 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196005684 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197313179 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.27132943 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.62045348 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594578133 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.198560735 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.227984969 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.220759573 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.211295822 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.195953957 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.238310276 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205559314 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191878655 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.192409046 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.772738276 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.197855051 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.207491429 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.678056203 seconds)
  done (took 191.526183561 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191667 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.244324083 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.327538914 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243912965 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.82210046 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.388856572 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330794726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.888885952 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.205673499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.203341108 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.511742456 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19198928 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.573812998 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161823915 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221871155 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.256863547 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.495341276 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.535158971 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230348645 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.372249513 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201935339 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.617709988 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.550432409 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.418098448 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.203519536 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.203095374 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.205383869 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.228645357 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.387549972 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.436356742 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.229592681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.204141181 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.814841727 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050951686 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20809634 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.217218588 seconds)
  done (took 150.694198749 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19441025 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196372582 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192896803 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226803564 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197208788 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.775335883 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777168543 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711576726 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.652051429 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.575799402 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19589914 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445966829 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193145846 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287996234 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20463968 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192736475 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193767856 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211244463 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239576191 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198066887 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196898084 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780872592 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.208243736 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.26741898 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.370229705 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210447691 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228206288 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589618505 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195178757 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231276748 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531553835 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241560719 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198145484 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.570358422 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.230047027 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310438975 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198480998 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227037409 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194169921 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.480279529 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197062867 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196982324 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202405107 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873817203 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197335261 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779798918 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199821028 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146024286 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19448545 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197181208 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.537220723 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.854564204 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215870771 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196512733 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200498226 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198529449 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200175423 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23425138 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.548691512 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296006295 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214039307 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201548773 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234049259 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201770958 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.249438321 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199860805 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.424884574 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26497332 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309722582 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779823813 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200880257 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29901777 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318275571 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200934004 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200793137 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200839685 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203659882 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.196834937 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31020504 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201471691 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.602321413 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.377465173 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213229211 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.582321666 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302143764 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201020852 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61657947 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200615998 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203094633 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.009604629 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297578968 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19828152 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197111905 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196740127 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609076536 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.201125751 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462379226 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788787643 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202266675 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.546687211 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203582599 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624963095 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756987622 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.849134892 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204207602 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31415581 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378032979 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.216475427 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201726696 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.584103881 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207919235 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259180741 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200981868 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597412345 seconds)
  done (took 365.142078604 seconds)
done (took 708.488202569 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.805063143 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.794837476 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.906371643 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.789962814 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.752790393 seconds)
  done (took 10.171020084 seconds)
done (took 11.292337009 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38453018 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384514177 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260940391 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.386033587 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231925206 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40555412 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365358135 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220161564 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299627172 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284385858 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298425189 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252915014 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230849514 seconds)
  done (took 18.133009355 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506198287 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.563654829 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262448222 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517380804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239241538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527694267 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402973887 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426684784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412333443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231272937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213397669 seconds)
  done (took 16.428701967 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533058219 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573076231 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26788505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525879045 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240799912 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531294977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404372993 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425644343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429202918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229911148 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215419507 seconds)
  done (took 16.498726286 seconds)
done (took 52.186098266 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.216288035 seconds)
  done (took 2.338987553 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245238241 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.405952494 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.230896883 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.221262804 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.210299493 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211895028 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220499064 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213499502 seconds)
  done (took 11.087812987 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210765124 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209972694 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213200262 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212475346 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210298275 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.211092953 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215300014 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209076811 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211802281 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.213200829 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210518769 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214155338 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213697648 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.215497441 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.20843842 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210825164 seconds)
  done (took 20.518010501 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216449227 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209408476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213335526 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211347814 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210761259 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210890559 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210084744 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208654754 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210860196 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211443419 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21258707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210877419 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210845537 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209169835 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211531304 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211207989 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215914681 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211987352 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.2183341 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212319335 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209051532 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214618113 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214665517 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210240251 seconds)
  done (took 30.217752072 seconds)
done (took 65.287919937 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.85055992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.932478957 seconds)
  done (took 6.914615019 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.219010623 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212283474 seconds)
  done (took 3.567356922 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215741557 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21680255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.217013127 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215839552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212741509 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213591927 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213405073 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217399283 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214822338 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214673389 seconds)
  done (took 13.283810395 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214295869 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218672071 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215152928 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217487437 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214562985 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215298804 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21752617 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216635783 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216202321 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211336662 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219533103 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215326298 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.216823777 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21078031 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213631492 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213968933 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217062769 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214502377 seconds)
  done (took 23.01208235 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22091951 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.215106996 seconds)
  done (took 3.57157764 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.216636988 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212922119 seconds)
    (3/7) benchmarking "month"...
    done (took 1.217730386 seconds)
    (4/7) benchmarking "year"...
    done (took 1.213229314 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.215295262 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212682521 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2163445 seconds)
  done (took 9.642754835 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220659376 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.399199364 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.476197761 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.825673785 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220795256 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224158085 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.097881728 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218566024 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.225872821 seconds)
  done (took 14.046096802 seconds)
done (took 75.166548257 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.231986976 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228701613 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.472716218 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.234002493 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244058089 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.511892631 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.215871091 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.340979231 seconds)
done (took 37.61602691 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.224098114 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.201551566 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.042865968 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207912513 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.295693108 seconds)
  done (took 18.88473 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.269042847 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552846267 seconds)
  done (took 4.962015383 seconds)
done (took 31.205348748 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217574183 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213694149 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220067425 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.2235889 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.217839134 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217057277 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219384578 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.21867096 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219750449 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222064114 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219237133 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.221223882 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221492469 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.218173362 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222758764 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220208398 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221543669 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223206517 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218427803 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219031921 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219749295 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220210478 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218694159 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221857282 seconds)
  done (took 30.415050717 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225165858 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222905438 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220042301 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224041169 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220919032 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220184076 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219695623 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218303754 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221828018 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.224291599 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223496541 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21906628 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224221609 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.223637123 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22464304 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220580398 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222647291 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222055015 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222583636 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218500178 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223108072 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222826587 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.22207035 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225720013 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218371829 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221727989 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220979926 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221048384 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221132287 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223617141 seconds)
  done (took 37.800057358 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231837418 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.230937017 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.225413759 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225709728 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223251053 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221198432 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223950549 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224490396 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223673501 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.225209335 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225674192 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222852615 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222497394 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221931858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225696777 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224586331 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221568068 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221913665 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223594417 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.227378363 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.223057788 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225728703 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224533843 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220238587 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226215838 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223031341 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.222887472 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224906184 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223489335 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223730548 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226526144 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.227476423 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225766879 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223380532 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.222393469 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224680823 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231870809 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233179124 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223618548 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223786119 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222993972 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.225458058 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225936216 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222399289 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224556139 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226367429 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225404059 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.222462244 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.222767293 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227855777 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230073628 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228002685 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.228663992 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226139445 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225714207 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228197083 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226516454 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223987839 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225264786 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224661753 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226044381 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.2255005 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223696006 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228617942 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226657564 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225458731 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.229215854 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.229967489 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22477861 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228348081 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228578278 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227311827 seconds)
  done (took 89.374492762 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227805076 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227142826 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22356752 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225029774 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227430115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22786618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225691125 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224894295 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222429429 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229865255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225523065 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226738992 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228550587 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231635662 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226901087 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223434949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224397055 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227737979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228095996 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22693348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231085959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228276994 seconds)
  done (took 28.135243527 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232794852 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230414649 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229510991 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231338425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227821732 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233431872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226935696 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232628255 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2336906 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23103879 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228217432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231923472 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227568192 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230066259 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226791021 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226091832 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230905494 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23172731 seconds)
  done (took 23.285980934 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230993094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232158795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231218408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230162161 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228416752 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233675106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231207758 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233422052 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231001028 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232184104 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233712825 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233657315 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235631208 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226532088 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231628635 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226540937 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232886174 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230158349 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230700795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230061742 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228119222 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232676372 seconds)
  done (took 28.235265265 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234744939 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233531514 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228620733 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233235874 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2337464 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234671916 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233380044 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226773389 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23022825 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232001701 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230885623 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233575972 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232398902 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228420998 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231765524 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229028872 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234863346 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231311944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232419114 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225791729 seconds)
  done (took 25.779695954 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235781862 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235978755 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233314232 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232024403 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235294014 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230858818 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230347536 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231009826 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237300981 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234571679 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234541034 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236106869 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234817404 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230788999 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234029561 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233413028 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233040296 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231615136 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236905881 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233472346 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234099345 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237926613 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235954958 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236883842 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236003719 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234358431 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234623173 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234795922 seconds)
  done (took 35.709036729 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235306178 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233235963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231778022 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229171229 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.231609121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230348402 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232333501 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233421314 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23178733 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230756191 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231545503 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.231506939 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231081292 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231539454 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234136018 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23162736 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231297862 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230949571 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234553002 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231029137 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.234576592 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232435131 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236803879 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231731379 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231052447 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234663333 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231411292 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231199964 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231801276 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229431063 seconds)
  done (took 38.111774811 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254981592 seconds)
    (2/2) benchmarking "in"...
    done (took 1.253889138 seconds)
  done (took 3.657138535 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229374716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23425775 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23371809 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232561583 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229871527 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236246936 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235837783 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234432777 seconds)
  done (took 11.015383245 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234779175 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237270306 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233044385 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233300717 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233779293 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235230576 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241495143 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.253079349 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233269091 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237034288 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244200694 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247384651 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236760543 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236086059 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236711441 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236272116 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236202951 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236722262 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234174517 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236224566 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23531917 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240666818 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23958984 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236321052 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239163241 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244937245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.255355877 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237284992 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23599189 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23786727 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.234448371 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.2354037 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237206941 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236920366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236825037 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237718094 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244909156 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254656537 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247885951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253574298 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242907878 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235653611 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236761272 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239807158 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23829994 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239156985 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240515248 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237318188 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235832062 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239452218 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.244795837 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238515609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23336317 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241347396 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238653576 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242407723 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258528523 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240230683 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247805943 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251933659 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271436152 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260564574 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243378323 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237891352 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249087359 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.26748452 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248984739 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255915298 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239169576 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240688799 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246639196 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272229348 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263149127 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238743024 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244589845 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24349322 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237728762 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240594983 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247415526 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260699812 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237634429 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241960959 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25215852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271664802 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.244730183 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239280315 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.240167485 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242846816 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244364672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250483285 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258565087 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241948234 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23899678 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243452106 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240053646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241873874 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.24035299 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243524461 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243489185 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246160963 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243933687 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246140449 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25292634 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241899508 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240902937 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249639546 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.258292787 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240796946 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250122902 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244882464 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243738275 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244319795 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247493831 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242142988 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25116522 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249433838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247030989 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246745559 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242842289 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251575314 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.271536695 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244553293 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243592803 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.251153338 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256992766 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242261695 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245605135 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243988815 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240968004 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242217281 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24697263 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244072004 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24820787 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249843272 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247546174 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.244482772 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244664101 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.246763863 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244843951 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246640939 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244674984 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243749971 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249420636 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.250555912 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.2503372 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252075384 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262774382 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248878384 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247513704 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.243555296 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244575446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246871082 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.247025262 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245431086 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251076504 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.250964772 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244925614 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249096529 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243814907 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245917412 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245352502 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249178425 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246588168 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247564829 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247864106 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244232349 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245138095 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246394933 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245028124 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25232177 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246829983 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249241628 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254798018 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24988223 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245963002 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250338764 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24565676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24806392 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248721998 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.251568793 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257240147 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.247505893 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252610308 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269545349 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249532072 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247656051 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.253826298 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250644465 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250591703 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250880446 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258234333 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259067899 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278648164 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249949517 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254938224 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.253971044 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257136246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252277244 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250602592 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252780049 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249041062 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249379001 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252128577 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25461373 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252490351 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.252335421 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.254353702 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251727432 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248519556 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25446087 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.254328309 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253454949 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249040821 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253267634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253521998 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.254845555 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253347064 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252431319 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252163965 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259738334 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251385793 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.255007126 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.247269211 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25150954 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252683791 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253901899 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253384051 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256692408 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259185455 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.254899664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255349663 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.267684395 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25343164 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263866153 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274918108 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253647017 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255805018 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25847867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.250395893 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257625781 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265006362 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259188813 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259263459 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.2569695 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254819601 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250436616 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.262034762 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271976853 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256426814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256672375 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255395939 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249736004 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256646458 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259055469 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260515943 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258571158 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255598756 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257910314 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258784436 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.257181185 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257538486 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260724491 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259510994 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.266866055 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259717442 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254872124 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.260003996 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.257250216 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259818377 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.255431575 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.26115415 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26059379 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271063342 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28358406 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26770324 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.282030256 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260443766 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264233708 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277663348 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265850793 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258467858 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256552817 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256769263 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260079786 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255981757 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25621821 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261062058 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257622157 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257746068 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263289352 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.25865723 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256357624 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260161989 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258981696 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259259681 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.25464638 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259123395 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.259275223 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257966811 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256038147 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25786432 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262666632 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277578279 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258572446 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.257814766 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.261304384 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.263732595 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264518947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.258372776 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260835931 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270586688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266747806 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271801038 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264144096 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270638021 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259741669 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263355407 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.27043486 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259019932 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260861966 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258270991 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25944155 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265543993 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282430014 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261759156 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266198777 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261876477 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259678038 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26006145 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257181501 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26215399 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261888336 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264227606 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.280020077 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266400499 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263555585 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257436474 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.262293938 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261189357 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.258229901 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264530225 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264859751 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.267714626 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.267062527 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263438277 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261359331 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264194505 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.263937255 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260873355 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265981384 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270915319 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285770607 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27453531 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267377023 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270015739 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284076394 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274014811 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285747184 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26504652 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266224156 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.268291759 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268918802 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268837489 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.2684154 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266440659 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.270766766 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270484144 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268287771 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.266599179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265705389 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264469858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267288006 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279249521 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291150841 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.270072504 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269497776 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26534541 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270907588 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273485362 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272274815 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.269106251 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274359699 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282103576 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278484203 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.270257832 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.272092843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271859616 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270808535 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268035341 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.271801711 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.271104827 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268794103 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.266284581 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.271347009 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266857539 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268788928 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268943494 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272059064 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.273198369 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281601603 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292978955 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268792845 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271295663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271247629 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.275428239 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271543223 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272074335 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273364785 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273843992 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272871088 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278941726 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280969579 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272098067 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.270548964 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271387669 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272498665 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.275093463 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269926752 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265194141 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271128904 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27302812 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.274449195 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272532882 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.273347096 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274028711 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270124656 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273449513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275528873 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279462406 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2749874 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268610118 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.273345448 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274988733 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272045672 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.275169 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28139683 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299759979 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285400264 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.282979113 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.278726989 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27246079 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276916666 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282514188 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.274104716 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.275544141 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.275318827 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273785342 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.27289793 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274944838 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27562469 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280218739 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.293999399 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270601321 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281523263 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292756347 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276199655 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276247079 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277547609 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.275253745 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.272372133 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272826881 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272703783 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282813898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292803104 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276222698 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277734283 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273141175 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273949307 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276703937 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274405273 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272109514 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271783239 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.274801893 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274840895 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274024791 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272579843 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.275131239 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275701985 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.280748124 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27979 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272152314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278287128 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27363851 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277639057 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278525851 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275007494 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275252394 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273612168 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275892969 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277946101 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275008911 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27859468 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.276021517 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278744694 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.27864134 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275836559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279642277 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286050448 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286806339 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.276506871 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271375643 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.275954323 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280057735 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275705495 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273600202 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276291235 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.278904972 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27708047 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277398308 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.273877348 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.278495474 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292925961 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300148247 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279207861 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277420123 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279029303 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.274259209 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.272967309 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274767923 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275464537 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.282922192 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285042085 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279678418 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283634375 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294492632 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276716528 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277665655 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283002796 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285208092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278598094 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277394307 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281219319 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282408475 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290215324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279082916 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28976535 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304250747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299100551 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279817563 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27802861 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27844995 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276444992 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274975048 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278575207 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.281074816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280608676 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.280726674 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281339217 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281365301 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278416299 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278704655 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276743405 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27817353 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.282649676 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275953319 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.279021374 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279922672 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.276979411 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277388382 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.282647727 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276968382 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294434984 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.305705631 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.278764807 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278698706 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.279069694 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.28292496 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280577803 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289562502 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289957313 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.283620289 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284104826 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283491083 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28134803 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.280565101 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.278102874 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.278522723 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284953565 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281923789 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294503926 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309903596 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284674908 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280661976 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284458544 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280134054 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281623531 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282973055 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28387393 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284593059 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.289005678 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288235857 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282624444 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283617336 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28663787 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292863537 seconds)
  done (took 753.66589176 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283435583 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281897785 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279909479 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282264015 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279184485 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283499457 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284627431 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283376079 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281874233 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282574803 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280871981 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279647627 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281614699 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280598252 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279059996 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280792861 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281627151 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280936733 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282478935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282289061 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279424265 seconds)
  done (took 28.1132352 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284396822 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283561796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284456668 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28667377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283667053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284876819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280788503 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283605864 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280559081 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284685401 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28460202 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284577045 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286044881 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282089068 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28372834 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290418768 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.287400338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285405043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.287310395 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283995768 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28882963 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283899083 seconds)
  done (took 29.463434376 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289288622 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28802806 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.286113698 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.286889965 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.288871895 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.286252221 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.288518262 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.288705497 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288115425 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.288660759 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285481911 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.290734615 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295027816 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292047201 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284536447 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.286817115 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.429217988 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.287052398 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.290821503 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286792813 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.282547227 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289987765 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.30601619 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.283485627 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.284779221 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288640839 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.29040188 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.291409996 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.28670594 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.285511694 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.28725589 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.284710981 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.288646785 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.291659876 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281673062 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.286077739 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.293943654 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287313523 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284742834 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.289996406 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298279454 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.310441831 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.289006436 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290982656 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.30583671 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.284375063 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288667245 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.298020106 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.286865595 seconds)
  done (took 64.529208405 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290430976 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.286700178 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285550325 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289629199 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288757059 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.285508111 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289449018 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28369224 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285087004 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284127764 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.286057284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289516181 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285583898 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.286490766 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.287666714 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287256197 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285115002 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285697661 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.28684791 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286802092 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285103018 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28725554 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291138971 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.285802061 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286382068 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286019945 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284317164 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.290009153 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289000688 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.287581411 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288766177 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286743653 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.292685313 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286961423 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283793423 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.287586519 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.291964308 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.285505852 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290831472 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287038978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292919788 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293607676 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.292797378 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289329511 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29003326 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290774737 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292689808 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.292853614 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285506688 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292358452 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293714913 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.292675476 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294484387 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290285032 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295605793 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.295125932 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.288660296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.286697756 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.291910991 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.292195949 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290087111 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.294809859 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.292560001 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293556498 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.293724205 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291288437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.292660512 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295892401 seconds)
  done (took 88.87499412 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296721288 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.294453807 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291796554 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294710338 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291726582 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29351347 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292584623 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295350725 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292793479 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294005334 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295689233 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295159174 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.295077136 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294487412 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294208109 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296407404 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291489722 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294219585 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291714014 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296435704 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.297854171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29439395 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294076735 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29387184 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295044488 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292732081 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293302495 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295163111 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296090463 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296537024 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296901691 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.29533252 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29097695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297208006 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296667681 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293804028 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297974333 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296867226 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298214628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296448225 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292262636 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29462372 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295115954 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295143184 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299404321 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298431288 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295931628 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.296307196 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29814962 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296456822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.295883694 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297338892 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298542637 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298310383 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296282955 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299203633 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299508319 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294289123 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296882746 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299650007 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298617215 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298411573 seconds)
  done (took 81.535045611 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298376306 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298469449 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290410208 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294106178 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298193323 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297092125 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296809744 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.294818152 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299658584 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299654917 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298213384 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297348591 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294819539 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298166025 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297159603 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294627091 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290392983 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295012212 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299311126 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295989672 seconds)
  done (took 27.14229392 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.300164708 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301464925 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294609249 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298924985 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.301152948 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29650002 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296844117 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299443876 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291981367 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299607059 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302021264 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298259779 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291603094 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297838832 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300729066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293967543 seconds)
  done (took 21.980402718 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.298381491 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.299108846 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301282296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299075586 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.298622974 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296924665 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.295925015 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297215746 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296679427 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.301254416 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297540516 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.29963795 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30023814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298238429 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.2993024 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298712126 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.300618182 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295447612 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296142136 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.300232696 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296630276 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298567105 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300504708 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.297814972 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.29916432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295859105 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295290599 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297094112 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.301494519 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.3037281 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297794307 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296951561 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296482561 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.298203136 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304126264 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.300620734 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301958812 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303024278 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.302590769 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303740401 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.302160988 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.304181059 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.303819391 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.304100325 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.300773998 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302584348 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.300872457 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.302036247 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.304630251 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.300934835 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301426944 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305009264 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.299971985 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295318958 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.298711666 seconds)
  done (took 72.704581921 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296574239 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294339115 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291365754 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294330539 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29198724 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288551871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29467928 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291897487 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289999828 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293241209 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292144588 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293003468 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291008229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290494454 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288914824 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29125014 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28855492 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292994998 seconds)
  done (took 24.464027832 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29222785 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292964507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290836929 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289468465 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288321702 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29253791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290129749 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294089205 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294901978 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291672792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292963647 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295159414 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296181605 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294839408 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291639993 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292120896 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295636568 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295848156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290060545 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291492148 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295056198 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294900082 seconds)
  done (took 29.643297215 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.293677486 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.290772609 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.295618832 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.310415887 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.313384431 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.313400527 seconds)
  done (took 9.019064307 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307794715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302377828 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292600085 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297012403 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296682802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293135213 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291173389 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293175968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29761277 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292591048 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296657344 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299493891 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299013972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29684208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296757981 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300074162 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297207376 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293972262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296441554 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296392439 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290475323 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29852998 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29450257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294160931 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294200725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29530249 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299357516 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297821355 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295589421 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296286995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296970668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294557102 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295935431 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297281852 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300778326 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302699961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293959081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299402308 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299867383 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299060858 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302304478 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303990516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29668753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299277675 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300055934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295479387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295829343 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29828185 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29951325 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30257603 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301479945 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299043015 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302555226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298732193 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296881736 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299836676 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298954899 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299907423 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301545954 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296412958 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299629667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301322202 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294707741 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296273157 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301567649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297808831 seconds)
  done (took 86.892038928 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299791693 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297455621 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296315027 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296532861 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294885057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297632871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295048825 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297511374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295554708 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297620592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300211715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297075682 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296222459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29633744 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29708946 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29931467 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294136246 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298103872 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29846377 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298580099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295676689 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296531064 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294901948 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297323543 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303105192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30009406 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296858135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298620083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298608422 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30016756 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299189042 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299461018 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299870098 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299050845 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297209869 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298412391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298428365 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301462896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301839325 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30265447 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300673262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301054621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2960745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297823446 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300045773 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300860777 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299711255 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295965982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298611465 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300307833 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299975465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300674003 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299060854 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298669974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300060609 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298249676 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30050107 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300622518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296403307 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300813903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300897511 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302173122 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304751985 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301260206 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297576537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300298206 seconds)
  done (took 86.931552987 seconds)
done (took 1757.620573809 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46520125 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417778783 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299480944 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.348098666 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298643229 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.321202036 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304952207 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300461152 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300347221 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301625573 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301697744 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490732691 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.295275947 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302362788 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.302345735 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395493175 seconds)
  done (took 42.658735329 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33138545 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.307666641 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424496405 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32917375 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.328790276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498711347 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360945302 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307973135 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.489989186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351367469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.91506773 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331443419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302952786 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.459489943 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.325436737 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.495294958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.565395468 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.938799907 seconds)
  done (took 30.279010498 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.778866413 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.305568859 seconds)
  done (took 9.29614438 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323282795 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305720815 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308150621 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306041342 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296328517 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.296080011 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306443183 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.317116833 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.132687131 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.441667426 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31239973 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.318492923 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326215076 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306767096 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305751941 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341891744 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462704261 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307109864 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.3021471 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310811785 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303977505 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.393317196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349484622 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.312034106 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435299298 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.15170684 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30579764 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312055555 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.440577383 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306493102 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307463757 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307045113 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306098541 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.249411194 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.862480492 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.325069642 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.333264416 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318015024 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.301985778 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439705127 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305616116 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314228752 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309003823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.84193288 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.440776756 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433834724 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.599708456 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330541342 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309100882 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372007537 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308121313 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.305997616 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.353060312 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.098085354 seconds)
  done (took 110.933341845 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.325176393 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.706150905 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469442693 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320352669 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.114481076 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.980556327 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319094612 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.608307667 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.376361457 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300797926 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.597510311 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823773791 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317119582 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.310706656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.86372958 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357962894 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30096692 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.207191801 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.316427513 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300974669 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809929137 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30752811 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.323614571 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.462983195 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338496021 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76959668 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.800606953 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.829266783 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318993327 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.303770967 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786633682 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31946827 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.318098071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300092475 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.569916677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67452326 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658767132 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.324984621 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343652817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305415166 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.315756386 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761226675 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.670213671 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316449604 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30112602 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768732762 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316979153 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.30530276 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.303940068 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511795108 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.989816162 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302279461 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.739747423 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304321331 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.66792114 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.306749544 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.349341367 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799601028 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31773811 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.480851575 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361584148 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301683097 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307525592 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304039001 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306505655 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664297694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.644213492 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307865616 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661936622 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797498559 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318014001 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853458361 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.228556105 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328009833 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.407799056 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309077457 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.006054855 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807293988 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334759882 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304057126 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648500404 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.321189419 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589734798 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.319270687 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324250982 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815062562 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.311281073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.367243725 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.305532603 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.326481553 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.06747875 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308696811 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.5935585 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.37174991 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303916033 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304424458 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.312691564 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309176264 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307834542 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.306655919 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848072399 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.326653142 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.283569478 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324486163 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305379741 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32801131 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.307100697 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.304296696 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533755313 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.736951216 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.323392242 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308245086 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.306097553 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.323796518 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.477324472 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.309481241 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.62745581 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325026036 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308525597 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312602728 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.109760053 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347375361 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305837216 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307385273 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.227777774 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.511898132 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.326976145 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323340106 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30665005 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327000314 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.597838173 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327922341 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.386435228 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.312977714 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029058346 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331002907 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345775509 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.648421593 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31639954 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.237109053 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.338871664 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308714228 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596669682 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.578251846 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.573069278 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316942165 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.306989866 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.009639914 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.343368409 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459330906 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325795566 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307754275 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508676549 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.766453798 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310237869 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.942705179 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.308858114 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530493912 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308418934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627032998 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817726634 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323419856 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3105601 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031435704 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.012672512 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.147875679 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.315500166 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.592203091 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.285959632 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.795746461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.312865523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309862281 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.899787139 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313845911 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312075014 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.312161574 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.310275778 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37998801 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485331703 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.711013037 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310143989 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.775999695 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363432861 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323156552 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315379827 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318134599 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.656241931 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.354312213 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.314152045 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351891841 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.315343719 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322436518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.793823146 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.283035309 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.313773857 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465659085 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970647329 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.331941601 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312546237 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.858740774 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.528002754 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.876935808 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391035729 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.63762319 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.331037539 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.352131263 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.034482728 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.369791907 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840882181 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328881862 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318385654 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931079969 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.327087876 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.666305605 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313758586 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316580954 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887809998 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32952524 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.313737631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.588883743 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334727641 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595532023 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.316567552 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.317332711 seconds)
  done (took 1107.502461445 seconds)
done (took 1301.881174785 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.316418854 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31468985 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.302564995 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.323998158 seconds)
  done (took 26.484693895 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333975387 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.321436652 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.3222194 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.320135261 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325050877 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.319217855 seconds)
  done (took 9.170851538 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.57360455 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314623876 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324561355 seconds)
  done (took 19.442882927 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.535459228 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.638562985 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.670675905 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.574437527 seconds)
  done (took 10.652084844 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320319525 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.319118604 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321790594 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.326511866 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330794168 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332609794 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.323945365 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323401131 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336402509 seconds)
  done (took 13.162957769 seconds)
done (took 80.141592323 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.366322886 seconds)
    (2/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.804074867 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.360042163 seconds)
    (4/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.379190401 seconds)
    (5/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.296506824 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.917435661 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.049426514 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.736272339 seconds)
    (9/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399036457 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597966137 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.37375746 seconds)
    (12/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.651813347 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341058698 seconds)
    (14/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.95707096 seconds)
    (15/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.985045945 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349760667 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331002733 seconds)
    (18/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.500609814 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.297360038 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.7363984 seconds)
    (21/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.313259502 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.291794523 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.766657391 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.056650234 seconds)
    (25/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.037343321 seconds)
    (26/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.345764053 seconds)
    (27/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.32424037 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.315249379 seconds)
    (29/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.412640919 seconds)
    (30/286) benchmarking ("sort", Float64, false)...
    done (took 5.66661337 seconds)
    (31/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.786427199 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427336757 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.678331865 seconds)
    (34/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.33472621 seconds)
    (35/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.297145187 seconds)
    (36/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.716250601 seconds)
    (37/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.704735317 seconds)
    (38/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.403568187 seconds)
    (39/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.296659936 seconds)
    (40/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341355156 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.430825917 seconds)
    (42/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.704274277 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.409219861 seconds)
    (44/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.751980361 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.59621525 seconds)
    (46/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.322414021 seconds)
    (47/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.938687318 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.1427027 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.29969281 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376873306 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.837731743 seconds)
    (52/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.96717069 seconds)
    (53/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.188485751 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.297931916 seconds)
    (55/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.337215497 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.441162935 seconds)
    (57/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.369812461 seconds)
    (58/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.441562205 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.232711485 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.916569862 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.375285506 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.800680709 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.446349417 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.730152905 seconds)
    (65/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.597410336 seconds)
    (66/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.3005561 seconds)
    (67/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.332010843 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.576603571 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 5.561727695 seconds)
    (70/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.29823164 seconds)
    (71/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.460716092 seconds)
    (72/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428387868 seconds)
    (73/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298277027 seconds)
    (74/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.367760593 seconds)
    (75/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.345964877 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.408637244 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.322610393 seconds)
    (78/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.307617714 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.19268605 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.319995188 seconds)
    (81/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.71217425 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.312262347 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.412699072 seconds)
    (84/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.400974047 seconds)
    (85/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.000386673 seconds)
    (86/286) benchmarking ("sort", Float32, true)...
    done (took 6.323808151 seconds)
    (87/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.738737212 seconds)
    (88/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.649761748 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.340721331 seconds)
    (90/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.300421923 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42925117 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.921098687 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.301687096 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.524568263 seconds)
    (95/286) benchmarking ("sort", Float64, true)...
    done (took 6.31902249 seconds)
    (96/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.337517401 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.441638626 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.318822822 seconds)
    (99/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.418758041 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.302624672 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.340451686 seconds)
    (102/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.338204464 seconds)
    (103/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.098523444 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.5742829 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291325583 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.131066849 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.513152501 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.341607545 seconds)
    (109/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.187363168 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 1.845322613 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.361891651 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.32139754 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352885209 seconds)
    (114/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.816189954 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.587106593 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.118020957 seconds)
    (117/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.274549415 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.61868675 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.321765345 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.182887783 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.995430761 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.349970957 seconds)
    (123/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.423933643 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.117750536 seconds)
    (125/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.814380629 seconds)
    (126/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.385222302 seconds)
    (127/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.692361842 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429295866 seconds)
    (129/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.335614531 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.306505095 seconds)
    (131/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.41094054 seconds)
    (132/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.533259692 seconds)
    (133/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.965645245 seconds)
    (134/286) benchmarking ("sort", Int8, true)...
    done (took 6.331563774 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.557394895 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.453870004 seconds)
    (137/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.304273473 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.31842196 seconds)
    (139/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.217635186 seconds)
    (140/286) benchmarking ("sort", BigInt, true)...
    done (took 6.329603473 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.47589616 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.146856681 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348693891 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.683277351 seconds)
    (145/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.699349909 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.692389678 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.24594919 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.324891862 seconds)
    (149/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.365093496 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.34668656 seconds)
    (151/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.619839476 seconds)
    (152/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.313043164 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.324932008 seconds)
    (154/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.366034757 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.324824502 seconds)
    (156/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.327973784 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.902342591 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.871472856 seconds)
    (159/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.257696732 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.322780942 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.851039531 seconds)
    (162/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.137676709 seconds)
    (163/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.342890073 seconds)
    (164/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414659966 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.050087338 seconds)
    (166/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.590966255 seconds)
    (167/286) benchmarking ("sort", Float32, false)...
    done (took 5.35624249 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.308165016 seconds)
    (169/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.334876748 seconds)
    (170/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.426863092 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.347764315 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.252920615 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358031794 seconds)
    (174/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.98754104 seconds)
    (175/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.307232295 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.237476468 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.367193622 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.603283896 seconds)
    (179/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.820838334 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.998969562 seconds)
    (181/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388860762 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.691868295 seconds)
    (183/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.351878627 seconds)
    (184/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.558256958 seconds)
    (185/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.30928571 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.44477563 seconds)
    (187/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.353039183 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.323543353 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.391304641 seconds)
    (190/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.337927016 seconds)
    (191/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.417645955 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.325015029 seconds)
    (193/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.209121847 seconds)
    (194/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.455671405 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.00096676 seconds)
    (196/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.309592611 seconds)
    (197/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.192351664 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.42950902 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561791388 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.972495684 seconds)
    (201/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.391416676 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.311778289 seconds)
    (203/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.206287117 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358523255 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.799704476 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.13058077 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.355875488 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.589928155 seconds)
    (209/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.3088745 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.352770511 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.391104918 seconds)
    (212/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.748318673 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374333675 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.309283752 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.906872709 seconds)
    (216/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.163998102 seconds)
    (217/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.324787283 seconds)
    (218/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.631507616 seconds)
    (219/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.143896643 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.31109083 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.870589874 seconds)
    (222/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.179949432 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.378955085 seconds)
    (224/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.578000474 seconds)
    (225/286) benchmarking ("sort", Int8, false)...
    done (took 4.444339115 seconds)
    (226/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.311117888 seconds)
    (227/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.394905611 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.927127698 seconds)
    (229/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.714611737 seconds)
    (230/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.311735233 seconds)
    (231/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.33557783 seconds)
    (232/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.433604788 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.332419788 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.554463977 seconds)
    (235/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.473661747 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.347798632 seconds)
    (237/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.335530248 seconds)
    (238/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.432256701 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.354690938 seconds)
    (240/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.721051364 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371739232 seconds)
    (242/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.910485316 seconds)
    (243/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222459304 seconds)
    (244/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.315721032 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.716194791 seconds)
    (246/286) benchmarking ("sort", BigInt, false)...
    done (took 6.333038766 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.324310554 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.749902108 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354062873 seconds)
    (250/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.785542087 seconds)
    (251/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.705028601 seconds)
    (252/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.357295777 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.311973686 seconds)
    (254/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.340848962 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.356923555 seconds)
    (256/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355780437 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.847610526 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.993007032 seconds)
    (259/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.311668825 seconds)
    (260/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.890997174 seconds)
    (261/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.316201998 seconds)
    (262/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.149412052 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42366055 seconds)
    (264/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.392712315 seconds)
    (265/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.338692237 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.434350625 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.445334867 seconds)
    (268/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.095868737 seconds)
    (269/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.346090373 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.177529101 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.312988306 seconds)
    (272/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.524050689 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.388475865 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.450565868 seconds)
    (275/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.431594522 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.455696315 seconds)
    (277/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.420837475 seconds)
    (278/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.320001874 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.349565449 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363127415 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.857559398 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.315630605 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.41317171 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.484933977 seconds)
    (285/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.119082122 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.329119525 seconds)
  done (took 942.90595901 seconds)
done (took 944.137341374 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365948154 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371009872 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.343742416 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.365611916 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465206635 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.367259863 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.354777841 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.349272934 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.396525406 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.394909406 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350195923 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.368212912 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.351903048 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.349633154 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344409382 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365447081 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.44201021 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351058403 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368510016 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.356439805 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.369562715 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.348906409 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.397960111 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.369262388 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.349805976 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350628092 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.357900556 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372294101 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463005976 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.353857933 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351160552 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365095474 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.440579078 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343450535 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342429369 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.372094516 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362974735 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.357010831 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350273152 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.384105802 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.869921428 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368804078 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354960514 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.34596173 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.34875545 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355121702 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.356597809 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354742934 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367420263 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367480859 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.856190431 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.386678233 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.358467184 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348802784 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359003468 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356702067 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.353370079 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372435885 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.375028887 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371947418 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.424738411 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.352710021 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349452456 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.370978427 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361263406 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.892148801 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.358950123 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353714468 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.867945965 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367931693 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.889809349 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.379231405 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.349282835 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370502001 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.384722975 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.440330339 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344648261 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.353116252 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.364583007 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.356443417 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365591982 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370553779 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353689293 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350714461 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37377955 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.3751606 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.363189358 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357277567 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360192542 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.377522952 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.362622672 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370132441 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353625653 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34493514 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.361600916 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355475054 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.359492798 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.358538503 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.355960352 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361857289 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.868469976 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389932837 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348335659 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347951979 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.350599729 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371411939 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.862987314 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.375041198 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.374927661 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401443756 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355690334 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.433607906 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.361124541 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37859028 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.362177512 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353788098 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349315014 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.43558067 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.858711984 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.387307311 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353965436 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.358177764 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375105741 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352471915 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348284483 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.447404745 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354652696 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373306289 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.481729039 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.366088986 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.39009402 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.35968514 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357208373 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.375742137 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37597554 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.392671353 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356970064 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377217828 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.373949146 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352914271 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371614269 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366346859 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.359796149 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.359064952 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.348209576 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376404115 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373473213 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375975723 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.378511212 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.479628771 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352977225 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.437271388 seconds)
done (took 229.539746844 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415586432 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.350555073 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.443408992 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.35467558 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.454236567 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.453194109 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348941486 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.350108474 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.346850546 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.73178106 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348533861 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3504568 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.345046879 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350642591 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.431527767 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350688408 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.348929233 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694431574 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352994121 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451919493 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.345536548 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354738429 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352864925 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.738450456 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.346027259 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.343913602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.451165373 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.356740001 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699261267 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.352634893 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.354926717 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.702844029 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.459772799 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.3714401 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.362742658 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360851843 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452655204 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374443987 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434738772 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.435935837 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.447568491 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.395826195 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.352888224 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.354402367 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352963015 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.356996881 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.35090819 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379299494 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.352210288 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.351927545 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697202534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363283581 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35475836 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35273611 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.351333125 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.383214546 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.354411922 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.354696077 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.46109808 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358983313 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.447192649 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.739876626 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.736844601 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.35430799 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.351317207 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.355443832 seconds)
  done (took 149.892927503 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42135895 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429471445 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.474831189 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.370098889 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.405835396 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.47915188 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372124011 seconds)
  done (took 11.211532834 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.362668519 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358752964 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405579212 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404281842 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35778958 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.531876907 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357417358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368199497 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353956326 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411701442 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.361561641 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360182786 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36379599 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.35147963 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.404742525 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.367346585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472871241 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358993653 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356247281 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51774493 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354739725 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.367843698 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.416015701 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37189802 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.364512566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.363477497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.201985917 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36141619 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354742644 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356291096 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355164439 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.47249011 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356044709 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.353663447 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35549412 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477015188 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362657471 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35514133 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356980286 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.356383769 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359322011 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360029223 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360514649 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.358151553 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357754506 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.384130974 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.359928839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359064325 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.361498899 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362745283 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.409900332 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361493103 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.361273509 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359769272 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414628666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36561759 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.360806818 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356181068 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358743984 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356305428 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522514154 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.407433003 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359487706 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410462568 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362823689 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361571682 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360992666 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.359885656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417007706 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362466494 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408359908 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.358404294 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.547282559 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385161542 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361247375 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36177138 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.366551033 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361641705 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.356003054 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367887278 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.36096186 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362531572 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.368651273 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357388375 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358253069 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.617896739 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471402877 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360839166 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.373036321 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36548997 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356844244 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414215224 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360886048 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358179785 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412442238 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.475994642 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.421773641 seconds)
  done (took 156.327806135 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365244986 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368458307 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362567534 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380498683 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.362587027 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.360239248 seconds)
  done (took 9.463704483 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364510068 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366648338 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362554088 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.362999674 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.362789571 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362346164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.362053712 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365490125 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.368386575 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362480482 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.36723074 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370616485 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.367025543 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364562783 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.361887941 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362601236 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363185024 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364111004 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361869946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365694025 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.475715911 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364564417 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366097863 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362952109 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.373749465 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36577203 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381278747 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.366513535 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362581386 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372822431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.384293509 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366147704 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.365615162 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373137984 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370683284 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367799382 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370174646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.370983724 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363014425 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367888392 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372395147 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365667321 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365633148 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367934133 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368144591 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371312549 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.37623392 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382957137 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.365793708 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371054266 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.370099804 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366951511 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.369076349 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.373897266 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370989256 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385411128 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374513391 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.369464201 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367632113 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369197181 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.36786319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367217915 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369028142 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37415104 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36983482 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374933839 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.368096235 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372513342 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367645217 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369438027 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.3717059 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365148075 seconds)
  done (took 100.909618777 seconds)
done (took 429.062621792 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.446551995 seconds)
  done (took 7.713301888 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.53703709 seconds)
  done (took 7.816933142 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.776036845 seconds)
  done (took 24.056654131 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.398004102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.505852378 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.376766036 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.363353402 seconds)
  done (took 26.921849451 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.438904269 seconds)
  done (took 7.710673564 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.365627364 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.36011619 seconds)
  done (took 14.004932319 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.523799656 seconds)
  done (took 7.796498462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.366952598 seconds)
  done (took 7.647053186 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.362664682 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.380312257 seconds)
  done (took 14.030578021 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.344888634 seconds)
  done (took 7.617769078 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.644884078 seconds)
  done (took 12.924163303 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.363727382 seconds)
  done (took 7.640477562 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.444052624 seconds)
  done (took 7.718965537 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.80386363 seconds)
  done (took 10.079778381 seconds)
done (took 164.951478955 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.36386821 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.364888199 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.363276469 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.360887251 seconds)
  done (took 26.723423731 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.402448144 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.404586637 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407919296 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.415630614 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406879083 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406181167 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395544458 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395454299 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413522647 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408218433 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.406360286 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.407602033 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403813665 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.399099676 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.406526475 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405612009 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417559471 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405583853 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396481168 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.408871657 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372663592 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414390034 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406279616 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.372552799 seconds)
  done (took 34.955675984 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.897333922 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444188624 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.528638801 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423080884 seconds)
  done (took 7.568756601 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.423359118 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426788723 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.435939877 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.478215427 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.507053028 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.436040697 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.399413263 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393934931 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380839578 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425966229 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500390252 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441634341 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519665349 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.374012457 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564110346 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.375684265 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.374845885 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428860709 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480333773 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.510249268 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374327422 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428828025 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.434790238 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.447256536 seconds)
  done (took 35.836460696 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37624163 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.395471088 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.37346058 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373339144 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.383189961 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.373778758 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.375741164 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.377347911 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.373574803 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.379107565 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.371245543 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38763 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.37584654 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374057522 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382298969 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.37325385 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.380654216 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.373497027 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.372129097 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.382667608 seconds)
  done (took 28.832403163 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.372587085 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.845243496 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.721711641 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629376229 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.37219924 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.377527092 seconds)
  done (took 29.602349556 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.453069555 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.609293636 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377208597 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.76424243 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.853456162 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39378583 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381176778 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.631560999 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.980530526 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978886872 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.447597585 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.447144489 seconds)
  done (took 20.605401317 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.386404963 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.378110562 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.391489597 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.392901383 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.440061069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.398699409 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.384605194 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370769792 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443727637 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.456306156 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.402989784 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.441394883 seconds)
  done (took 38.169871461 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463559441 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426163076 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.447313712 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386758145 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102844992 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581531069 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437543456 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15248053 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404701366 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650836719 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388893416 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471494715 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63637362 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375740538 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38229518 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.433691609 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626061828 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907857021 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38307975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.686335961 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406393819 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378393225 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.799338788 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63736883 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612620407 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367286129 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642010371 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159101312 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690220628 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398903068 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389527718 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381419431 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65444971 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077627867 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499676689 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611038157 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409939982 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.008805684 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.375262728 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.679997736 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386643895 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404305112 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389416951 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379622567 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315230929 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383055717 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126395533 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.4033539 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.091857933 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379701586 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661774021 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481880368 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.383552469 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.955438562 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46318255 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392623914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384179346 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47625392 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97850641 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.990593886 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398313693 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.319965446 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387077284 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.687551239 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057753694 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403806361 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386262729 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385218137 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317989157 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.678942126 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40200799 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520595128 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.403092088 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043866997 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179097526 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405585522 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317611896 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979582484 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402110268 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.321175328 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612634172 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15897545 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323509344 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322660608 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316567638 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144373985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396553965 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.01573395 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408420368 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185767632 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639775108 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424469933 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407453888 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606677556 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.261541242 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381731808 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.393346334 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505300544 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401652533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11647386 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334119606 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386952508 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64250546 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593894573 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384084349 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.453551987 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942695114 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423732059 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408040845 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384135143 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639303247 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.047876438 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419970779 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984458046 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404034985 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159607028 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182244323 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405630773 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.391347709 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388525968 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676374534 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.201345828 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273850567 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453587852 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382507132 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3835535 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.726792179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240180253 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.543173917 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.602256231 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422206876 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398919844 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.386712789 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34262044 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.386024551 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391982118 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.182544809 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609829867 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392168109 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665686391 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320776959 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523250603 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402080659 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60924283 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.654876519 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.407342555 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648348453 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394942507 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400283056 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401019062 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404618639 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484772146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40805108 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.382376449 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649842678 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.389198263 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.391444879 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.732307499 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.169896301 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391203264 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391054947 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388851299 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034592591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386420084 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391467735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.62767055 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.404001807 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455207356 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393193455 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62319124 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.788647333 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420498969 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392958569 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.386031797 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615034835 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40002239 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.690930747 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471876878 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.917887163 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056377333 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424149783 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.322938841 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.098313344 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.082085483 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3906371 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.579973817 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387097801 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624791528 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426859295 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396985456 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034071662 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4103181 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.73034253 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.399259546 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402891553 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.396555523 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391102068 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.792771775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029218404 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404019376 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.40319371 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536339594 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405456365 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325774643 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.907992162 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396268415 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39023027 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166150819 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425301078 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.734127621 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23602838 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66723625 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388432395 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673340345 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.834134669 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429985984 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.393638973 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392318172 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405198783 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.396648407 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398193153 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.403796624 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.70331406 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846698779 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965038101 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229942303 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024140897 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.761702645 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.412525163 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277712921 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191336645 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347640382 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054041287 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644619948 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202455743 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370495906 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929894239 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.687390798 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24919162 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680108627 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625596755 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.835238067 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.431342257 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6823973 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608517342 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428165793 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401776585 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325457558 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.690221989 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985465651 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419307074 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473969334 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158190239 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411906962 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175950812 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.453975235 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.220894804 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846665282 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95238406 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.821920406 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392948445 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400106493 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263088972 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416461781 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924428354 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078703704 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427735154 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.93215163 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357835283 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632754088 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42773939 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.392115273 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.172435354 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.395466466 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654848056 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679304833 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334186698 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393812743 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001050221 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.276947725 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.404443005 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397710637 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196856965 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408171692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71159862 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.40405674 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.822786907 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422095535 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332273526 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32993349 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.090491891 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405340907 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36843633 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933421629 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.422636727 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396078311 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415393837 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251671178 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656438043 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.410201902 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045361867 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644281797 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4162442 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418870572 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402752599 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401009298 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.382037758 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28065227 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633778541 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478927255 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644528174 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.488485335 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.301954399 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87529475 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608606403 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.299719071 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400442208 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654905028 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.125744612 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.398417137 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207834921 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442874283 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407098932 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419108603 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403933096 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417303661 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488684976 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633530862 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.429650292 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.408951707 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841967905 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4201046 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403325732 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.414004893 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492814496 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02776485 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.814423033 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.174051851 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045488575 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24033112 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.076590135 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703764412 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403737121 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408278227 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332841183 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546016835 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927335323 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671752629 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519467682 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.413293851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422050361 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413829428 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41248758 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614999843 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676477117 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276776715 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411716231 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088932618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.30613889 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412509934 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.613934251 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95960253 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006331102 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.790418884 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416018944 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143420776 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691349747 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492506079 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40149558 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995969423 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.425868608 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.221337271 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.411353555 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400396562 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550618006 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684952083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111875039 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432071624 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.562374049 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1759232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.734933659 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660850146 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.95274426 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640143875 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073599679 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.198741925 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669055854 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469819932 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639076285 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.546345163 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548035912 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.414501076 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305092349 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40393884 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251613507 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112869467 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413256701 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055817909 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687437681 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.405118991 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.400879825 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427272902 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.412983439 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628250898 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169351296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632314362 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41433252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410345875 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.977880734 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057892373 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709814782 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341645488 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.406533345 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668918811 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661318707 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430615384 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.856757456 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.11503011 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009352885 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.38306361 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426468781 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402122411 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19635592 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054851173 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.845273102 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978535258 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069239978 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414554899 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680647558 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407376644 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403962759 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704243965 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409961256 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417057409 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644478111 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.07532825 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266517994 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.429135034 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.905352551 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.345403375 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633949824 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452142984 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359512841 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41232099 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.86409379 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430849441 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525613341 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415944291 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.411631468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407954565 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.141817778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70741019 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.41032039 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.398538408 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.400219894 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419038443 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505945862 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000414064 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431465962 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082572969 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.756648254 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663216101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419819465 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390127338 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411046786 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409023445 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133123451 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383786392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40622779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031189866 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.424256901 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.421647496 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412358496 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625786764 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620152449 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406946558 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64855019 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431744491 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425310068 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.309666101 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1820064 seconds)
  done (took 1699.475553434 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450183185 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.443612041 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.451220536 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.43032856 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419372973 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434864948 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.494784686 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46944604 seconds)
  done (took 52.90952584 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.413371305 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.565542595 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.442852547 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.413932318 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435114719 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.41902847 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.910780668 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.438996906 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.417524431 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.418594308 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.415078087 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.425704059 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.116765432 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.421769365 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.409904065 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393914969 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.419937102 seconds)
  done (took 66.800217889 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.056223452 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.766022506 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.671866241 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.42367622 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.437861844 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.424757651 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.763769012 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.44321826 seconds)
  done (took 55.304688029 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426222558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.42783257 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.429535086 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.428887509 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.429467951 seconds)
  done (took 8.458358403 seconds)
done (took 2106.527708986 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415474143 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.417280733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.416102743 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.416742693 seconds)
  done (took 6.98161842 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.392666298 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.12830127 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.391017444 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412032592 seconds)
  done (took 18.641302682 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.421064715 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.442477924 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.184381964 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.074045812 seconds)
  done (took 5.576950645 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.156683364 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.169990352 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155340656 seconds)
  done (took 7.798370797 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.406344295 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.411294194 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.411040221 seconds)
  done (took 20.541748322 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704744916 seconds)
  done (took 3.020153764 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.555071132 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.60604483 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.749952124 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.765139717 seconds)
  done (took 7.992575285 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.796351623 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.80902882 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.598010086 seconds)
  done (took 6.516581817 seconds)
done (took 91.251656601 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.492281822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431914449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.610996604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.464609937 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.63258914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.611205521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.715385089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.435552242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.168647849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.962354333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.468235215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.633408437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.665586383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43231054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.666023571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.433644763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.635482268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.541773915 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.157587877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.357384507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.728055736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.100133591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.298584747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.325415606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.643969932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563659411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.697829412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436367478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.328257345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.916373818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.567236615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408880113 seconds)
  done (took 196.84328634 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41472741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.409075949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.43842397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.416123336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.410916894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417580393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409309337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.427611392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408696461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433108373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425558816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.411296188 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.426922026 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417126065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.407424691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.444345955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426516083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.413620519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409613816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.410017799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429774496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426068712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.444381583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409202408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424173406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.409644013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42731839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41144859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414214725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.409140492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414488959 seconds)
  done (took 206.728648316 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41009637 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434387207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409872102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414358025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.410381074 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.414007312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429407572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.441785467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411932416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410486638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.43084095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426439644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.413981937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.427704823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411353617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.411426056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.414815199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.413465593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.414591513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.421033241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414501496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430119192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411237745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414239263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415763288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.432741923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.427621555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412052491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.441466583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412380063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434752945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.416617374 seconds)
  done (took 206.75586652 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.609374056 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.419672944 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424376087 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3602575 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.419789128 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.420127007 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414796076 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.668196856 seconds)
  done (took 15.056092031 seconds)
done (took 626.698125778 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.819677593 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.533758059 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.626717642 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441266575 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.251886995 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.459508095 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.440409104 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.627990003 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.371366637 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630248741 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.762784133 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.454212307 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.91687445 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439124453 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.708841975 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.547331212 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.3232334 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.449635391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.771948498 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.013395052 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.710434029 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.945036255 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.639032754 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.362233081 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.930560671 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.953088581 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.225812093 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.337421266 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.458844971 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.778098016 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.15678735 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.484112664 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.507012743 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503106157 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.560982552 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.541411619 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.463162115 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.501745385 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.647177685 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.757731564 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.019412608 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.188824367 seconds)
  done (took 96.585081186 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.405513314 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.407553065 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.404424286 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.406353958 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.408710854 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.405896309 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.405915086 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408325714 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.40758031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.407542291 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.406135278 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.409438732 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.406443107 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.4084564 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.408805752 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409966976 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.40758064 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.410545966 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.406738387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.407428609 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.407767968 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.406336724 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.407525487 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.407289992 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.40711659 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.407567166 seconds)
  done (took 37.917167269 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.423972285 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681949892 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.86275214 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433660701 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429020956 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.430002895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.514898668 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42898529 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.428846997 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433175475 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587857737 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.429171359 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461892722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.897051862 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428715281 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.427692205 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426771873 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42461107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.696039008 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437427098 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.537235892 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.431330455 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.517003633 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441301674 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451168209 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426422345 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.430222239 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.004133314 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449865955 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.592405469 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.293896872 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.513613933 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.984541964 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.898262384 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.294401887 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.432158874 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430427262 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.600279631 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430023648 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.427457705 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.512443272 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.432351072 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.875340099 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.123330776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.449332854 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427235944 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020998211 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.614564562 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.703810807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439399261 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.900586901 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43495539 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.429170399 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427820359 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700485826 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44122578 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.428679108 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.059001173 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.457648456 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.517423143 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433519573 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.429679613 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.705070383 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434416514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.693890519 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.437119435 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.436625437 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.447954084 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.878326996 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.435764229 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.142949277 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.453941775 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429266227 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.594727582 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.693453879 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.067258433 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.44996064 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.708762684 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.993768357 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.530096403 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437628699 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.999477454 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537848469 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437667479 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.432158594 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.433571312 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.431345119 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.480284996 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.513868811 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.087287313 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.145123245 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.087478283 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.542284294 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.448744865 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.432612712 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.052918771 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451808616 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43059774 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.862188231 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135286604 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.451979427 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.439591887 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.137085531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.454458194 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.522046012 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.443627364 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.873498604 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432698482 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.482118828 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.432864639 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438527137 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.457606836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520294705 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.441459287 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434078339 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108813664 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618432129 seconds)
  done (took 189.060111247 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.425974725 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.428506319 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.426462986 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.448594528 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.428867698 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.435070638 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.429601934 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.425469595 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.434941073 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.425165073 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.429359039 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.424383384 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.427787098 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.429480506 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.459043233 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.435937526 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.042072018 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.431890554 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.42983998 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.443771105 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.255749763 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.435821351 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.430591362 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.432009046 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.432346401 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.433154233 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.436039989 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.432273028 seconds)
  done (took 154.886234464 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.435427221 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074097564 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459738832 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.580441515 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.464976938 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436143875 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.581294732 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.501683222 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.459826224 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434596928 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.433431267 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.770514597 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.442931499 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.023793205 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.650287698 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.603180984 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022878735 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.458189948 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436319448 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.434696545 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.583143978 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.447261037 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.763620678 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.046747489 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458637977 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046752893 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.419803859 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439301686 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.438652157 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.049434461 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.456193996 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.766793915 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.523828521 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.509474811 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.067995994 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.038643125 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.044174668 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.602448497 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.438073094 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.437242422 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.438126146 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.420795489 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.082604115 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.462086422 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.439430018 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.070827047 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.462591021 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.438147649 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.442495933 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.438813359 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.504308781 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525370703 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.809560925 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.087571365 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.547441176 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454958999 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.578920434 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.811163134 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.443077383 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.025472734 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.424811373 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.08583927 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.4622573 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422377665 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.438150846 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446040584 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.604937558 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.585397489 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027428623 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.462215772 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.025690728 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.626233029 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439780668 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.436180562 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.440076758 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.087141746 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.051437673 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.625831075 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.585190308 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.655872434 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.429951183 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445854902 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.433472522 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.530153441 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.445630615 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.090164078 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.049752269 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.46205652 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442290475 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442510346 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.444808895 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.635949784 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.111167477 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.549447871 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.020927197 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.80916761 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.791585128 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446128162 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.508011903 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.46257076 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.791329469 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.449426517 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507463165 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.880909993 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.789133217 seconds)
  done (took 173.007999599 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.69936401 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.788387457 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.54788084 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.60886695 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.08860619 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.036337145 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.775923269 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.590006783 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.56133825 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.723950966 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.718057256 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.547899506 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.67374232 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.524232934 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.188761942 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.537425246 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.56492188 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.601376875 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.615992143 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.53442509 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170705902 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.742157981 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.638702729 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.528748563 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.545670061 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.25281973 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.028307496 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.988742142 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.631022081 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.88298927 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.00742843 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.613690659 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.493210232 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.176698353 seconds)
  done (took 69.973245119 seconds)
done (took 722.7510283 seconds)
SAVING RESULT...
DONE!
