cset: moving following pidspec: 32734
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.962522392 seconds)
loading group "string"... done (took 0.608504333 seconds)
loading group "linalg"... done (took 9.749260353 seconds)
loading group "parallel"... done (took 0.183117959 seconds)
loading group "find"... done (took 1.527276859 seconds)
loading group "tuple"... done (took 2.191226104 seconds)
loading group "dates"... done (took 1.530669488 seconds)
loading group "micro"... done (took 0.236981592 seconds)
loading group "io"... done (took 0.596286882 seconds)
loading group "scalar"... done (took 47.750157133 seconds)
loading group "sparse"... done (took 14.306212489 seconds)
loading group "broadcast"... done (took 1.265961396 seconds)
loading group "union"... done (took 13.19818132 seconds)
loading group "simd"... done (took 2.741537889 seconds)
loading group "random"... done (took 11.06138326 seconds)
loading group "problem"... done (took 1833.499189774 seconds)
loading group "array"... done (took 27.767352912 seconds)
loading group "misc"... done (took 1.207908712 seconds)
loading group "sort"... done (took 4.017255274 seconds)
loading group "collection"... done (took 20.296412881 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.760518288 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14309084 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.217790016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.37822319 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241183192 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165916917 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.174095646 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.585474945 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025391472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.290765567 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153333958 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.603302178 seconds)
done (took 6.465383969 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.313130328 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.394657746 seconds)
    (2/2) benchmarking "String"...
    done (took 0.178655829 seconds)
  done (took 1.253525666 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074322686 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188692648 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114102028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.1134802 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.101349169 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114228249 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.113573208 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113068772 seconds)
  done (took 1.528139701 seconds)
done (took 3.845650702 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.563272512 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.925546388 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.577896765 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.173305891 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.203100374 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.180516534 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.326634757 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161075106 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.110240847 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.108034818 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.223667144 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.394639517 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.502255448 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.088807995 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088798407 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125389085 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096917701 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.771863362 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080037552 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139828608 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.597741738 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116687383 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117070407 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124602743 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208128719 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134011655 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168127108 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093300218 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.753045509 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10340459 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233065816 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083280901 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.178583894 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.258532729 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.08015738 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107602331 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.737893106 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183601207 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117113005 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102266278 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.736591366 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08076178 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.245654184 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106464866 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111494414 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.198839624 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103233765 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.100882583 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101875588 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084988386 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.187573842 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.540905526 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109018456 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174790123 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109199326 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.784355871 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0988555 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.160795538 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138926336 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10971781 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082595363 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.110759061 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16847404 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113669357 seconds)
  done (took 20.876793928 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.164052357 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16890377 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09346767 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142779871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144017257 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097098219 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098547153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078208461 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131400411 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239841443 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142078285 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.187557196 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075347382 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.100798767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145407112 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253823801 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107907104 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123428437 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100613469 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090245172 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142447305 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111992187 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108518071 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095110782 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.186975983 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205409541 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111654179 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125730124 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.102911898 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120479993 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14269804 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148648569 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090957377 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082545806 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.205095195 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.1054479 seconds)
  done (took 5.46346714 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.232041054 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117914805 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.242726812 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181223263 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148989296 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18491705 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146303245 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.307780761 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.313434931 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187509556 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131120802 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111929655 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077207826 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096388388 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092915256 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.725210284 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182712441 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152274506 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153283395 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104924935 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097492598 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.763039806 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085290922 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097717909 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08421594 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093989841 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223909965 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085898989 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.401245669 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099264311 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111390248 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131588143 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204929251 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119823473 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143688068 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103566219 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079726916 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.240787855 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110350046 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076370908 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130190779 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132838143 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135186301 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09908857 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095628612 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.249328241 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098847191 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103548914 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.196120296 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.197568528 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.221938002 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140137101 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081773558 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.372404264 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11714216 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105113493 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080291551 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.358621769 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138851919 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080992221 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094721342 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086231575 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095410871 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.814115803 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094911587 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.378812988 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096898176 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.170661809 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100856373 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105703194 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102076222 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083839117 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118116369 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0955378 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078410603 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095978395 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07759671 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103054346 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12030325 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084529173 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095853325 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159759409 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.104591906 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117031536 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124564545 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101074332 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079482681 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128164147 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097293622 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084076194 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.190950576 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088715192 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100033153 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119558172 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098765796 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126308187 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097868306 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.237782739 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100636836 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082123773 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126059693 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101110856 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129681 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122604693 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09898859 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079491603 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10168732 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094697524 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079672579 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163261051 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082517675 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096763529 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100257363 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095652769 seconds)
  done (took 26.019080431 seconds)
done (took 53.026290127 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.548205509 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.123940894 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122330985 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122531532 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.122572138 seconds)
  done (took 1.795167939 seconds)
done (took 2.518372004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.394723187 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190549242 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123200414 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188994985 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106821413 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192636108 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.197231313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.121313058 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208120902 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103181515 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186056013 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104204572 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106453605 seconds)
  done (took 2.979771201 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102467751 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128878692 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085820729 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11706959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079966943 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.12005903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116628304 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130080188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116205634 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106818912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080042784 seconds)
  done (took 1.900699664 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097939984 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120674864 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085962482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11288926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078711147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113722425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109820521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106077117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113465427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090761124 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0981991 seconds)
  done (took 1.846820223 seconds)
done (took 7.436505383 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241153671 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.766721302 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.153802547 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.205566323 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.404541897 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.261172415 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654111832 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169512971 seconds)
  done (took 13.797686492 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.124569572 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104485151 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103395363 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.144848508 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08716696 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101176507 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084708157 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101940693 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100597209 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087105753 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102292509 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085155651 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100756323 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085535755 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101163335 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100662765 seconds)
  done (took 2.410540394 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143610131 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141342116 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093088567 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.115745523 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106797713 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091206443 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109311517 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106772222 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090320089 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105717434 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112620596 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098153195 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111135564 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.104576567 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093893245 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11476717 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106158967 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095441003 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109920689 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110135068 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098738117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106446715 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110173998 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097700896 seconds)
  done (took 3.395098499 seconds)
done (took 20.325803991 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.185615022 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101154395 seconds)
  done (took 1.017558371 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.153454746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155090905 seconds)
  done (took 1.039055356 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117029692 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099853509 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145209856 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120133656 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.100041219 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085695631 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138002778 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100301121 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083492399 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100875989 seconds)
  done (took 1.826785553 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091843621 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104371115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112289817 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.151911178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097663398 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.106552739 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105647441 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089944412 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10717622 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.101490896 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09417148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12505621 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108800321 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130098641 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.213433823 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.110340104 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115115157 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108761975 seconds)
  done (took 2.810946066 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08685637 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101050251 seconds)
  done (took 0.923188114 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091495383 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100912557 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089708975 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10632965 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101609384 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085469033 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101417452 seconds)
  done (took 1.407027974 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.556923133 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276989319 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.384902002 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12342036 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145699454 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.404465329 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149396588 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.118016082 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117824625 seconds)
  done (took 3.055871001 seconds)
done (took 12.812729132 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093235361 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241358801 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.605857518 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124964216 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083683513 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159633106 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.333919716 seconds)
done (took 2.380794421 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368297278 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.160202565 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093085849 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099201201 seconds)
  done (took 1.459037985 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081965696 seconds)
    (2/2) benchmarking "read"...
    done (took 0.108758956 seconds)
  done (took 0.929522699 seconds)
done (took 3.134135048 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082978013 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.134986154 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082263879 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100609861 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.098048784 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081838938 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.098276134 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081508459 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098236263 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082272611 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097806014 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082177935 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.096308932 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.081354885 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096658133 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082228766 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097864572 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081187219 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09669132 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080726417 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097494331 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097702379 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08367739 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09739846 seconds)
  done (took 2.992568161 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109175779 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.104658723 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106597406 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089217742 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107988224 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106900827 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089284889 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10171471 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107485338 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.085074736 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106333946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106069079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086117118 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.107252123 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10124227 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090169462 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.1062079 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10210404 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086186135 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.107015844 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104735939 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086096288 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106723716 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090308621 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107265432 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106894498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085308707 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.103165991 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106365096 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090414475 seconds)
  done (took 3.738610085 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094385276 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095808129 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084142706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107776137 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079252165 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100282381 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078695928 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096182832 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099778201 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082828027 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101337442 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082922419 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096089695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084972082 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100678831 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086710539 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110062339 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097119597 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080044054 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100535197 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086077715 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09602025 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082341934 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.099498538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082715042 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094768332 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082880351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09884948 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083396618 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.098046142 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10066915 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086229182 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098156738 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093693621 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103294117 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083338065 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105546984 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078973796 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101744563 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096176445 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079563705 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098833609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080947368 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105038193 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082378011 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10100358 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081089839 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101496311 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083428104 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.104756175 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094964766 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080126504 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102850693 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085566759 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103141366 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080413508 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.101606809 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078667255 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100834707 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082969452 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096021861 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095869292 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.088869726 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099294628 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098773205 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105444536 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096167368 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.086760593 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100402702 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088526341 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102005454 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092655844 seconds)
  done (took 7.443054933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099620921 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112247491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084529364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101143456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101039173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083267066 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108510375 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084551372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101598016 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109464156 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084827615 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100656308 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085080893 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101384717 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084361902 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101500105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111646729 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084421033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.099341471 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084816591 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100993727 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10877408 seconds)
  done (took 2.885481804 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.269007088 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091396618 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154757833 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119980398 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.126645663 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120342225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087929347 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107499172 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105517651 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095061609 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110366737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105370143 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.125006865 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095792618 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11203287 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115454631 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089299162 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114421679 seconds)
  done (took 2.899761049 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105926261 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104979524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128425111 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086704632 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104676007 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085959618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113560843 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120201196 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10334527 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087808865 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113814524 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103132372 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087088137 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104233835 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086326307 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104143989 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102726317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087962995 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115696784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111895028 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095233801 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1135991 seconds)
  done (took 3.025400405 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107695756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105709701 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.142383407 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091891446 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101798934 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101709281 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093520767 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.105225059 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.1117784 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086384903 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106029393 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0854871 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.112989725 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103809948 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094652928 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105816545 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086108603 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104580443 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105021315 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08607969 seconds)
  done (took 2.79635752 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185017461 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102379717 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119744916 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135389404 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119312504 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103886706 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132137672 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119215045 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101676951 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134913526 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119772578 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118628092 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132804678 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110178326 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11913668 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134571025 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133619166 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133979742 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102672288 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118095935 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136944995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103012618 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132078312 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119941199 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119221994 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102077007 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119024452 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128772381 seconds)
  done (took 4.199575034 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086096117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103495922 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084304759 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100735973 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.084596164 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099807433 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082614064 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099922537 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082901221 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10064702 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083179977 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100950753 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082257184 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099306365 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083570819 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099880657 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083459589 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10032187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099432535 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083848956 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100950775 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083717536 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09918979 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084519451 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100612739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084462228 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101142167 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083327483 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100735434 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083858588 seconds)
  done (took 3.524801424 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100278584 seconds)
    (2/2) benchmarking "in"...
    done (took 0.131444597 seconds)
  done (took 0.99724965 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096292518 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124241684 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084051033 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101745242 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113942069 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084821405 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116100058 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113525053 seconds)
  done (took 1.60015616 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.158056946 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.15449725 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091690743 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116510754 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.154389661 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.146470665 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150714504 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09040402 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10523522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09960457 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.150977106 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081091406 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108992317 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086579307 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107528396 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113415793 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086466211 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.114124746 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.11108418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087308037 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109484669 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096998814 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110937455 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.115978189 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0845294 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11458341 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.12054089 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105051565 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107445989 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113528733 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090822641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.107423134 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094951931 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.109455204 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089207755 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.150666066 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117851208 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105714121 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090489743 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109930364 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114138007 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.087532162 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110734555 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107832764 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094994264 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108323284 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091140012 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.103224066 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0815571 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103545997 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.103892891 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084203398 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.103302673 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09203591 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108199299 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116367924 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087011756 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104731977 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103765143 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084157612 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105960055 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085972593 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110785351 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116650689 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091710569 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109092015 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107362138 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085882214 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.104646782 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086391214 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107967997 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125321553 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093375916 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.109796801 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091688945 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104873926 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104860594 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092075002 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108009705 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10923391 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089807907 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112166932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093164325 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103765635 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103745452 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092601836 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10563383 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088490203 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100643178 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11920954 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088131596 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104605773 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082519541 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10792726 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085470353 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10729077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099964258 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091603396 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.102148611 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.091724327 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111907958 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10844765 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093260104 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110961917 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111147611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091345596 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.150339753 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106266594 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085196434 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.107525291 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093580473 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103168714 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114339014 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.084539296 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106242552 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085623142 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10939843 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108836516 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087662399 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10958466 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094059685 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111138166 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105169074 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08383108 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105763747 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091169817 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114860901 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111829296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088285954 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.105784802 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087425115 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10900929 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108257232 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087517407 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109831267 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087589379 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.102586441 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.104283616 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091586318 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109982989 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085983718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107923541 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110355385 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0897555 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.107868037 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110365481 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08631626 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099955036 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091507382 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104236067 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088115721 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114693677 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104710055 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08764153 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105465445 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114944707 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087146626 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111042705 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088954034 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110219952 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110681757 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082269863 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104951247 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087727567 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112022104 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087286591 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.105518705 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103897572 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092428412 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100920426 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090190417 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10071779 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086069534 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.110536066 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104460515 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089051557 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104309537 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122832962 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100415752 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112453133 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091405805 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109728365 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10910975 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088848889 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.109820676 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0931523 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111987729 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106573032 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089091036 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110792078 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085976957 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.109728917 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106971548 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091638944 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101016272 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087408974 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100873956 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10983837 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09481186 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110305531 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09137739 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106098477 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108648327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09692016 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106178294 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090245704 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100826039 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.1084304 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098039793 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111403069 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093129023 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111415859 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107852656 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088271592 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11660197 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088777848 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109527189 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.10616883 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084015874 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101502448 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094168257 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.108252975 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084689311 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.104566137 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111122423 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09301995 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106911879 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082084308 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.11014127 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114876031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085993574 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109988435 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087114618 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107816612 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119256103 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08152124 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105277995 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113190303 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09209699 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.104199067 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091694348 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.107393855 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.110818009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089820734 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.107475716 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088844752 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112225668 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087631482 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.103790261 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104651386 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08899355 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101955769 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.087650972 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111712606 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087753725 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104849276 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113866832 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093861955 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113534456 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108161362 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091189113 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112946609 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.093510194 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10650208 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.112360036 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085832848 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102245 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087789103 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101264253 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087610895 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104767131 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110680325 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089310245 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108694856 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089171755 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112636027 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106767373 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092260964 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122571372 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103850939 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083991274 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107409667 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109894958 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088123684 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106270543 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087474083 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111526629 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111897898 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093801656 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105297859 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085415583 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110831121 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105013581 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09391449 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.112325706 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.093154975 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104851146 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090680499 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106171015 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115387709 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084486206 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110650089 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108360903 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089907876 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107035109 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088688746 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104908058 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102449731 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087841228 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112977127 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089707568 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.110849816 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109656806 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088133043 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10540386 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086519084 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112823539 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109126058 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094074151 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10582298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083200438 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102993494 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091923181 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110642956 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.113072824 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086094384 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109440311 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094215311 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.109979909 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.105390402 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096366125 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114036999 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093381405 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116931451 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102725429 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087990279 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115839614 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08550524 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.108260253 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107307853 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084156546 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112510876 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093296915 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112341184 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107348452 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082828083 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104941797 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092809534 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109383842 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089887652 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107268348 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111095631 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084954115 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109080054 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093306362 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110290485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113079082 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091526238 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.110392195 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086968433 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.111472378 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105218711 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085047152 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10311459 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088223817 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.112714097 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084223024 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.110727228 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.111153392 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088029764 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107867725 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.092215303 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105869208 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113412731 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090904193 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108122343 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098749407 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.106359839 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108771408 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090966344 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.112399205 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083200606 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10999653 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090297506 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11370616 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108448406 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091375951 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109542488 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111151285 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088702732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111231877 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092289331 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.114073285 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083938532 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113587672 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11428658 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087687117 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108820864 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088412893 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10411438 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10852141 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.094253504 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10771419 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096352133 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.113236496 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108041241 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087745578 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.111331297 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09058131 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113339935 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105986868 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093815077 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103276712 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094230537 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.108264166 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.114284369 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087407967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10511159 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09180324 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.112790661 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109405419 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095148541 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.113658127 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084737159 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104788038 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.109123265 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087705069 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119124155 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096956021 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108933317 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109238241 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.088644415 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.106945858 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093882269 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103505467 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107014465 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091217381 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114007255 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089114523 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105366495 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109795943 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091208982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115326422 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089425247 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105411884 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109855411 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.095106046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10816016 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085900181 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106427042 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114351063 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090414192 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108230667 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083946219 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1173235 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114713343 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094477277 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10727104 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110941809 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087692677 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.108207645 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095047608 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107918341 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110756433 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088779157 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111972678 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098534014 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103644563 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107501997 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101800936 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111800062 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092680617 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.109627033 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109678946 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095093136 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114485799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089291754 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104869585 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103685551 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089353961 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103820652 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.088807066 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119228374 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109676866 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088494439 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110307616 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091285644 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.108795407 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089415062 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103931019 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11418771 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087786048 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115973158 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084465739 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103850271 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088491315 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111797201 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110464314 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091747074 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.108243594 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089682756 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104654956 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10876745 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096184579 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110507814 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092877456 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110610392 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109514451 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089552804 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120204232 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086230184 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110826691 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120174184 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094724306 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111468561 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111670287 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095930113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.115147136 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090713666 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115197588 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10924462 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090598259 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115614802 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096196556 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122528738 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109991634 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085003008 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111920811 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088548138 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.105690186 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11484068 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096759982 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114622129 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111758624 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087293137 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115773318 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097105664 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111304737 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107919959 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089481964 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.112153077 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088215072 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.110783446 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086972546 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114894013 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114359101 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092768034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116204799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085055743 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11975695 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116045775 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.096579832 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.107178388 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084762782 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104842507 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.110003296 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095560344 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.113925893 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090541558 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109558588 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091439273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11221866 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112683497 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089419079 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.116183679 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092842471 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.107557437 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.113525045 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089717316 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112403109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087470416 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.113019312 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.115646775 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09437695 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121141962 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.093867677 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110052147 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108917096 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092932703 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.110028202 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092824219 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110852572 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107731375 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08516222 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112818257 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.096766354 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111436578 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095441928 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118112011 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110153519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0949923 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117554802 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.111708104 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08807576 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113435233 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.090786528 seconds)
  done (took 61.805756908 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.172612565 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097463486 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110129416 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089126198 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139079737 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111457688 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110586235 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092451392 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111013542 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10429621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109417336 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110405401 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133402353 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142211926 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139116165 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104708938 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110048501 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112200379 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089725913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111627252 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132018375 seconds)
  done (took 3.248138926 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117480183 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.128916775 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12782471 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131533795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120468848 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.107497606 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.129314545 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127568905 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.132091724 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123643798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133094824 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12686314 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102359278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122555981 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122797213 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122949832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111101033 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120621001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127743088 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127293735 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122181549 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107320362 seconds)
  done (took 3.505333038 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103108684 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.114828817 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093898497 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.109274061 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.092024356 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.110054482 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.1188535 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08920282 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.118802556 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08927833 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107176676 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089265488 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114330595 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.109101557 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.088027508 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.110691592 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.098783698 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.112742668 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.094293569 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.109750138 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127753136 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.089161101 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.110805738 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086018549 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.124195539 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114317142 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.093038069 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.113730016 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085824011 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.113003863 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088715978 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.111628862 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112324228 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086690268 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105945604 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092558995 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.113299217 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.109237047 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.089068897 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.112935122 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.090611419 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114949041 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118184204 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.089808959 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.109205179 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091283189 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112492705 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088505717 seconds)
  done (took 5.787502856 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.154132369 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.172065211 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.120413003 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.161134448 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136773506 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105879619 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115240494 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.164608742 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.117828305 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.095724053 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138480448 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136986407 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123481654 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.127437655 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095451113 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118319824 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.120612088 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099215323 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128132244 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117835089 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104100204 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125915485 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.136925815 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133846783 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12073508 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096674685 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122917748 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126323364 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133613267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106093492 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122743619 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127870112 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.138256864 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098405538 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117120449 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124869003 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.138999972 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.098887707 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120439974 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.115351522 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103605367 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127048633 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.12037672 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136459438 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097757983 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125270912 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118835749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.093277188 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.136456809 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124054876 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130722897 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.137277711 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099930896 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119985841 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12782224 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.141310848 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.099003357 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.115120689 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118543013 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135498787 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09595937 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120358205 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.140437192 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124509358 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109352083 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135316334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121403294 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121980721 seconds)
  done (took 9.291823031 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12748194 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.122061596 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136730071 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137096372 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120559193 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100779708 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120977773 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120825615 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102166582 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131250395 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121254416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.211769009 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117554841 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129485776 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100228604 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122840671 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121205182 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121992364 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10032444 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122139455 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120835857 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136419543 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101867789 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136308457 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137504506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117512764 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100283031 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12393271 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136132249 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121578926 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139725296 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100581569 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121229576 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136521626 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137996408 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.12237548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092286436 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121201413 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.12182319 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100914862 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117207732 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137167288 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121004274 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096903336 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121385572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122954065 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136193118 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137817985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106884589 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130327545 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121526985 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137886618 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121822401 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100855091 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135425279 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145372926 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136766527 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135379963 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121572376 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136654665 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136725556 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.147552594 seconds)
  done (took 8.547433394 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088976966 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109494747 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090248865 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.110612758 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089353559 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11117298 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089796049 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.110631339 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088922393 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.11303048 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089893023 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111131939 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089816495 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110777139 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089682156 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111356675 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090265915 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111400637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110015639 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090365396 seconds)
  done (took 2.8319376 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102496385 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136496129 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116861491 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103124445 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114758209 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124371188 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093573146 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115515567 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115244171 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094716435 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126787162 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129108644 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095227551 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125073805 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126346737 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123329018 seconds)
  done (took 2.673213199 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117636773 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136785247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.171764547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.118126199 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.116795985 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102863761 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.115507083 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096903582 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.113695507 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121285586 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.097351742 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.118880076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093900259 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.114174488 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.116010473 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.100182507 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.113012359 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.098580324 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.115416051 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.172956184 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121797685 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09696687 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.118219917 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.11813312 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096916911 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12383611 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.123336855 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093787339 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.117329528 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11490572 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098613685 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124701693 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.114354494 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.099963811 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.114943233 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.09615699 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.115608386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.115758257 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099036588 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.115575544 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.095128316 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.118776492 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.117041999 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.098724864 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.11446268 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094652641 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.113335579 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122871118 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097128625 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.11896779 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093398771 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.123016099 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119226098 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105251155 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125610574 seconds)
  done (took 7.057692069 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108021839 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116271986 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131447003 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092306404 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115703081 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096712143 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.117308158 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.118013425 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096911432 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111543586 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096609887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117775496 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118140544 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09691283 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117952977 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095663928 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112140016 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117555401 seconds)
  done (took 2.81231503 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099598173 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114646406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099525385 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.116690415 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093766303 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1160556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112708711 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.092655129 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112686762 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093662405 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114175707 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093571554 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113957106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.114647769 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094187942 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113979061 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093725604 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113013059 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11498625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09315995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11499464 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092254199 seconds)
  done (took 3.15411364 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.107125575 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.172402549 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.125256027 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.183227928 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11558658 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.112556388 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103325718 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.115398479 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132125382 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.091853052 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.112945674 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090842977 seconds)
  done (took 2.299449984 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123753927 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158053993 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116974362 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094152454 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129917899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120667536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121034973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101322999 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133891558 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138499686 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121932311 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134878049 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110984942 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135858229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128455363 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12807373 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122641983 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10093966 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116877355 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147030046 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121580029 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134929382 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101192554 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122428798 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122757207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137405201 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111802332 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139260173 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122381686 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134426504 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129345977 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100875286 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135934251 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137868069 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115898804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134105427 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099730101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167725676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108283242 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137960374 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116275813 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129924364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11334972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13314999 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134249526 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121658984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131440285 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10125541 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122393348 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153720597 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129664617 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137135762 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130146498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135155601 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134790583 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155349006 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140753467 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137149274 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109784033 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140740245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136715091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130390711 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136980434 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139965438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128449339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141260331 seconds)
  done (took 9.266271651 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166301023 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096994635 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123727472 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140124462 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137015814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101834859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1244057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122610043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101273532 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118978838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175786067 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122414724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139181718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136828408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122383706 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101661893 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122602615 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137903895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095978889 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177038219 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102199401 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137444326 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137903588 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136850608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141168835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129371698 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10098648 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125156239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123176572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122685861 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110999134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122848572 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137236482 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117414053 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135985689 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102958382 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122754162 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131537942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101351745 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130141435 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137280814 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148124961 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123102992 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123398039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139928007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101624271 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122862613 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117465009 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1021672 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118231677 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140928756 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140369039 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141006499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138986783 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101097278 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123043512 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124064018 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101025753 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123876032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129679717 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137772952 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101718655 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178269531 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101931779 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123024462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137586334 seconds)
  done (took 9.157098062 seconds)
done (took 168.281533202 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156863654 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177939121 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154723647 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151117418 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109521772 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122829518 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143465435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.155023746 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108887829 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088669246 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.110154083 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092041494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175978787 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087705343 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108816659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11430371 seconds)
  done (took 2.89763232 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211932715 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308048993 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131745346 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115262022 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09825604 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113423057 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092172867 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11656974 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110679574 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103743432 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111938336 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090821591 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12554227 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.113030112 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089294827 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11353637 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12442377 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09229898 seconds)
  done (took 3.109858888 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116345689 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164769921 seconds)
  done (took 1.133690617 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128639667 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.220220643 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300915478 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17366944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.142810794 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137349197 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173056329 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131176382 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.207227732 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137380066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136988614 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09622149 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144921337 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124739953 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.106564232 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117745534 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147676179 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.104811585 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.12790883 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.37328564 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141411366 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097698138 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123572587 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.127008964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19790113 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137309078 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096511609 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118028617 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120176834 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.1041306 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124779701 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136621585 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.136742371 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.18754017 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124169678 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.201747139 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105187142 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115877801 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.125702377 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095696343 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12363315 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122283022 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113227176 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117591333 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116904274 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104611334 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.120728997 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117545401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106135881 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130064684 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.127613022 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125073581 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179781103 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128730586 seconds)
  done (took 8.435897245 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.922884161 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160328612 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093932097 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.063947685 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151904793 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134536648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.93478792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121527574 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.286555246 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.927312671 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13752048 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106116584 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.291183928 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.27616368 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192710364 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.405447692 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.765468989 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131763658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147414847 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.169736433 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125151904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148243791 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115670071 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.470145147 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095994014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116214661 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123867671 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108186051 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.205154551 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093963467 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12081935 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.227976005 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289332583 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234944797 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117683626 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092602785 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114453248 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190230101 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325095807 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.253803006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190255529 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08891827 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114600245 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130945783 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117042154 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114039981 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207298043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196378149 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.218373406 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096814778 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130061169 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127118887 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12877167 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186065914 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112681093 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.383637857 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.382846511 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115731658 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103392278 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136140515 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299022464 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115925796 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263189838 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144952366 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.249552469 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11454655 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821412791 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189493688 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114350485 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104199425 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12580651 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121771869 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129734215 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183390747 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.399541802 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134408786 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098545403 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115019331 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.275667261 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092509959 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114547099 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185837144 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119809686 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126500073 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111334955 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132684076 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.216480054 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.274027188 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133151697 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126409272 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098975817 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131753361 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118036868 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236931648 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.278862604 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.180573977 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.259715311 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108535537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.211077176 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188417982 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13084671 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.215991855 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101934329 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135211762 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130578995 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252583883 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157509939 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.116528683 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099211973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12586472 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160537749 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11860356 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125378519 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191598644 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.51025092 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187335166 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11534206 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096606037 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126387741 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206798188 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101698581 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298243265 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127883122 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190464147 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126834769 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111820111 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102313818 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.212151769 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131626638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126906951 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108377733 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126801756 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.295687914 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256840396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111233258 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271429944 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191756907 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127580115 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226131915 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102997109 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.214977457 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126685785 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1057724 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119578516 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819706566 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131708242 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125164474 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09946419 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205267467 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115945886 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115816805 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092660777 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111613146 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846903609 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096756865 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.113116014 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09335622 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126715877 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126031538 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123362765 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10080716 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207084108 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271160635 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130551221 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100886264 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11735839 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182869599 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120945015 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11659336 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09348278 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116840723 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104598731 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124517458 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117740337 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196662031 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.203950952 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.258474924 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580562474 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093682885 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116682924 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266258493 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115612596 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345138379 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124970167 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262809879 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188878078 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11303734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.377333966 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.216171086 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207654102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096544825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216885686 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089322435 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125673692 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.206172361 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094649096 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12483013 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179362529 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135039692 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132871036 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.202108529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11519097 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25225187 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113957918 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192561598 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119369304 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131713413 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347706901 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092081483 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139529432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.207935065 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097772466 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116057487 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.747856438 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093411305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129155339 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128218072 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.260936159 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.211710344 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102744072 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12584669 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129134034 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184797194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.255527907 seconds)
  done (took 48.628202014 seconds)
done (took 65.051788326 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.333064474 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290687201 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.344730312 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240914436 seconds)
  done (took 2.166945356 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239761201 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167267179 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.221641764 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092199801 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.231336073 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091356008 seconds)
  done (took 1.918265254 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.552766448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.453381805 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.386685951 seconds)
  done (took 2.273760136 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271357051 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.302805607 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.375651253 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.502922196 seconds)
  done (took 2.442679101 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.292746147 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117877607 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.134257826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.187135983 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.261105864 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.288673692 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161937131 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211867088 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120840138 seconds)
  done (took 2.705168074 seconds)
done (took 12.38560426 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.322983477 seconds)
    (2/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.410135652 seconds)
    (3/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.344575 seconds)
    (4/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223280341 seconds)
    (5/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.283004699 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.197527906 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.156043921 seconds)
    (8/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.207120852 seconds)
    (9/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.280877781 seconds)
    (10/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.170363102 seconds)
    (11/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.289382756 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.206436796 seconds)
    (13/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.133840182 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124027157 seconds)
    (15/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.368327647 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101191261 seconds)
    (17/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.212077723 seconds)
    (18/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12170608 seconds)
    (19/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.102708683 seconds)
    (20/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.169230677 seconds)
    (21/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.225467781 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.155910004 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.315006374 seconds)
    (24/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.271623557 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.155824017 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.154538971 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.110618863 seconds)
    (28/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.175150244 seconds)
    (29/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.208878821 seconds)
    (30/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.145212796 seconds)
    (31/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.205396939 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.206895011 seconds)
    (33/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.212595131 seconds)
    (34/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.1730828 seconds)
    (35/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.212058949 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.225626585 seconds)
    (37/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099280659 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137538686 seconds)
    (39/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.183021805 seconds)
    (40/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.126149611 seconds)
    (41/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.120993592 seconds)
    (42/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.148675154 seconds)
    (43/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122542052 seconds)
    (44/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.121041313 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.126610478 seconds)
    (46/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.125014638 seconds)
    (47/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.209699046 seconds)
    (48/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109211778 seconds)
    (49/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.168881793 seconds)
    (50/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.165471424 seconds)
    (51/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176856121 seconds)
    (52/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.192875529 seconds)
    (53/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.146922982 seconds)
    (54/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.191632613 seconds)
    (55/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.098502841 seconds)
    (56/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216440195 seconds)
    (57/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134851469 seconds)
    (58/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.198809613 seconds)
    (59/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.246915361 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097648444 seconds)
    (61/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197558001 seconds)
    (62/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11474294 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.154653461 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132930349 seconds)
    (65/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123760692 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.122179639 seconds)
    (67/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.228251939 seconds)
    (68/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103599097 seconds)
    (69/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137423249 seconds)
    (70/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.203747955 seconds)
    (71/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.08285707 seconds)
    (72/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.190491749 seconds)
    (73/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166633593 seconds)
    (74/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.126002184 seconds)
    (75/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082332454 seconds)
    (76/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.212755524 seconds)
    (77/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.124732517 seconds)
    (78/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085654015 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12272495 seconds)
    (80/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105425867 seconds)
    (81/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.168398394 seconds)
    (82/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122185927 seconds)
    (83/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.090504199 seconds)
    (84/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138253881 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124434871 seconds)
    (86/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.086348211 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135091413 seconds)
    (88/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.237779489 seconds)
    (89/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.139719977 seconds)
    (90/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.108078174 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097772142 seconds)
    (92/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108252709 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.137005074 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099893902 seconds)
    (95/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107976804 seconds)
    (96/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.124972772 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124026351 seconds)
    (98/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15369861 seconds)
    (99/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110587121 seconds)
    (100/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.125846332 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116782249 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.102044897 seconds)
    (103/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.134460478 seconds)
    (104/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.132136076 seconds)
    (105/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.200161047 seconds)
    (106/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.107697277 seconds)
    (107/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092555853 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122813507 seconds)
    (109/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09653448 seconds)
    (110/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.114885102 seconds)
    (111/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.191397178 seconds)
    (112/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109441448 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123861122 seconds)
    (114/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123940026 seconds)
    (115/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092045832 seconds)
    (116/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.275847409 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.109372287 seconds)
    (118/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.121015723 seconds)
    (119/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.221308159 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100075256 seconds)
    (121/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172773891 seconds)
    (122/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.198135148 seconds)
    (123/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.144207405 seconds)
    (124/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.168886404 seconds)
    (125/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109623731 seconds)
    (126/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.108156374 seconds)
    (127/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.101170008 seconds)
    (128/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107808676 seconds)
    (129/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.146929887 seconds)
    (130/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.106997061 seconds)
    (131/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115191897 seconds)
    (132/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.137456381 seconds)
    (133/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.12696604 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098752868 seconds)
    (135/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116691317 seconds)
    (136/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089938086 seconds)
    (137/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129582619 seconds)
    (138/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.108539738 seconds)
    (139/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109833684 seconds)
    (140/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.107970593 seconds)
    (141/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097059593 seconds)
    (142/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114719496 seconds)
    (143/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083789012 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123313301 seconds)
    (145/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.083263433 seconds)
    (146/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.108503572 seconds)
    (147/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083164793 seconds)
    (148/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.088419272 seconds)
    (149/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.270394026 seconds)
    (150/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.113696239 seconds)
    (151/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.140076986 seconds)
    (152/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.136601877 seconds)
    (153/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08637263 seconds)
    (154/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108526298 seconds)
    (155/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.187852451 seconds)
    (156/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090524798 seconds)
    (157/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.090239873 seconds)
    (158/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.16855769 seconds)
    (159/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.164398965 seconds)
    (160/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100648577 seconds)
    (161/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.137722932 seconds)
    (162/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.125695623 seconds)
    (163/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085432908 seconds)
    (164/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.172760422 seconds)
    (165/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.206425008 seconds)
    (166/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101616127 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125098008 seconds)
    (168/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.141852313 seconds)
    (169/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085829236 seconds)
    (170/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106611394 seconds)
    (171/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084969837 seconds)
    (172/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12325321 seconds)
    (173/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.100662429 seconds)
    (174/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116331873 seconds)
    (175/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083040106 seconds)
    (176/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21740738 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116859044 seconds)
    (178/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101321511 seconds)
    (179/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134607427 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.147252707 seconds)
    (181/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085888948 seconds)
    (182/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126991828 seconds)
    (183/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102778382 seconds)
    (184/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.152246446 seconds)
    (185/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.128215224 seconds)
    (186/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.091096994 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116730253 seconds)
    (188/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08670285 seconds)
    (189/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.224137857 seconds)
    (190/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.086298309 seconds)
    (191/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.200923362 seconds)
    (192/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.135800399 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100806465 seconds)
    (194/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.112612169 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085083069 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.139424179 seconds)
    (197/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.134553391 seconds)
    (198/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083640676 seconds)
    (199/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.107279604 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100531315 seconds)
    (201/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136632323 seconds)
    (202/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086108279 seconds)
    (203/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.124340789 seconds)
    (204/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.085568277 seconds)
    (205/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.108143502 seconds)
    (206/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101219518 seconds)
    (207/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.114661135 seconds)
    (208/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.082683848 seconds)
    (209/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.108820673 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114457171 seconds)
    (211/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107625171 seconds)
    (212/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.100757741 seconds)
    (213/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.10839448 seconds)
    (214/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085124284 seconds)
    (215/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.10731712 seconds)
    (216/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102010048 seconds)
    (217/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.108239115 seconds)
    (218/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086390822 seconds)
    (219/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.107033984 seconds)
    (220/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083449094 seconds)
    (221/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.133958704 seconds)
    (222/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.084668587 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.108901028 seconds)
    (224/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.128779547 seconds)
  done (took 32.948619925 seconds)
done (took 33.841936122 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.197184112 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108380086 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.128097148 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128514527 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185955178 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107295551 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.137061214 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13360617 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.108768894 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.125960742 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118143983 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.110059029 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129531266 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186825757 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.133086927 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097203067 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121787114 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.108805061 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.137738315 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.138493558 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.187506554 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0950762 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.135629177 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121541987 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185418937 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095283781 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.129333407 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129852722 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108965053 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.12706941 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128048205 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097455702 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138116378 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111677727 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11859413 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.123903128 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094151403 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116820263 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.101625749 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.127389634 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135268743 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.104418218 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13361964 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.096217621 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.127985931 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.126507287 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094268887 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132914794 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.118676659 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103590976 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121038912 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.112979187 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.125524243 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117883669 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093838227 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120804627 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10976631 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118445193 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134439159 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094116859 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12124377 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09451871 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128484885 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092969714 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.12568739 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120476174 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.101272785 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.129465612 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124982702 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09620702 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117494971 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.101477589 seconds)
done (took 9.723156138 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100441111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181290063 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.188433714 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.19490628 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154126363 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138987126 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.143318694 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152089392 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112607971 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146001008 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159283537 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15049905 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.19411669 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.134377966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112378597 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.128168728 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134367532 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108646928 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.194877198 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147974058 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157348466 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134980969 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159617449 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118272168 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126839358 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150430734 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130066439 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.103782421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126955393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145170696 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121152318 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127596721 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128093334 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122899061 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13838713 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132518029 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113838423 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128648846 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126130215 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099754288 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143662357 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145142449 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100130728 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.139445542 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.129699147 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107815249 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135100595 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134205995 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103780806 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129518051 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128609253 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159104798 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.110520071 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.134567596 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.135350867 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.106958949 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.134459399 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.10742741 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130468042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.133322805 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.09994744 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.127606739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129245579 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154246217 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103968712 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.135348956 seconds)
  done (took 9.793857004 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121370284 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161109361 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136230591 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137650345 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108596012 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11698043 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091781578 seconds)
  done (took 1.810906855 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095459733 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188961899 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18722288 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188225819 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207684831 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.199256032 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142394988 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092673486 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.157322805 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.131674826 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189158544 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.221217331 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.128088369 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.112499705 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.216344533 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092547607 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191323364 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119823799 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131355735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189887492 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110987987 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.152150484 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135371559 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094453089 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210229082 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095844571 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.272208125 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110666921 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126143299 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103988178 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132474004 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204639483 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182808045 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13699723 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124730391 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187403747 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182913488 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133425358 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199211198 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101939806 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.18282525 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.133200519 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.133154778 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107174209 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.13138618 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.170533347 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137427041 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106534509 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.130416734 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.190022198 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.133443334 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185484246 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.10260404 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.134831537 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.132359668 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109115801 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13934907 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.1322718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191802617 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135130986 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183684106 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184681761 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184120954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185646914 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143554294 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184375987 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182180573 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103368269 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129703528 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.134191883 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185914118 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104928325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.133023703 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170686704 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138121517 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.187138347 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184522627 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129089179 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109176844 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124970896 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.104619863 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121368609 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172331092 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.132556466 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102559206 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141054255 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134209794 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106727038 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.124455028 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146762081 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106615223 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133855844 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.137927984 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.10507356 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138910785 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186387239 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.134515407 seconds)
  done (took 15.260516735 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097178807 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120501757 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.102671248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123357731 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095546873 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121797912 seconds)
  done (took 1.618077246 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130266409 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.135322554 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145382011 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.110190569 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192176898 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219887702 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.19499494 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.134250346 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.125216254 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145541822 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.193763459 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.196237371 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218085409 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111819092 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194025316 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137633722 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195566905 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132935301 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.143923535 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103884593 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141890427 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.138662503 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103849265 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.18546468 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.139147473 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.136644387 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134673832 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11732366 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.142550253 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132854838 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110476832 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.136625851 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129762349 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131859591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196756028 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103807815 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13145926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142002787 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11011866 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.139026581 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19617597 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131350656 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.143874732 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.142014492 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106801476 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130131058 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.140973369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107359429 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222142264 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11472587 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.143560765 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.13547515 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111601127 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.141745244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.130506604 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132940098 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.114276181 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.222231463 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111474982 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.130965515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.137206877 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.110801768 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132767358 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.139109615 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138155893 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115844772 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.129350455 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135547516 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104574204 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135614088 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141150857 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109707226 seconds)
  done (took 11.166096823 seconds)
done (took 40.581831037 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.129665352 seconds)
  done (took 2.08497643 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.988153791 seconds)
  done (took 1.943891609 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.237598233 seconds)
  done (took 19.232194406 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.58166621 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.661235298 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.005499307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148485741 seconds)
  done (took 3.353471859 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.026765819 seconds)
  done (took 2.010040604 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.330707623 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.289112664 seconds)
  done (took 1.585288555 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.890788364 seconds)
  done (took 1.862031342 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.474547771 seconds)
  done (took 3.445955197 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386632106 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201678802 seconds)
  done (took 1.569994022 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.682077466 seconds)
  done (took 1.658849477 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.429334851 seconds)
  done (took 37.40668615 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25131295 seconds)
  done (took 1.240044903 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.317627035 seconds)
  done (took 1.296186961 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.809553747 seconds)
  done (took 4.789105136 seconds)
done (took 84.447144097 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106769027 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135869195 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10808634 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.134200075 seconds)
  done (took 1.457991415 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116351934 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.134476122 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.137722306 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107516316 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.144181693 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.108188246 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133325382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140510103 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.107938782 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.134678624 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.13461021 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107930442 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.136274926 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131388262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105933951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.135395693 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.109645885 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.136663408 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.134133238 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108151201 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.13318094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.135325324 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10961707 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.134437695 seconds)
  done (took 3.999297628 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106148261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.126339537 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102057243 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.125111148 seconds)
  done (took 1.444706289 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116102015 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.149622461 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14863515 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114551084 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.151355806 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147117237 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102166206 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.129300181 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104768325 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.142675641 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129709423 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154999901 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122070234 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.135054939 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.144009374 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100147879 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.135634035 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123818692 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.142098225 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.142988167 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.103242967 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.141118917 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129171517 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120358581 seconds)
  done (took 4.116314105 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21800467 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120437581 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.157757431 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.187599608 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.162973934 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10404524 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.161489344 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.139275921 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.139924415 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109307451 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.137002939 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.194435956 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135617191 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110197893 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134882493 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143176924 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.112085251 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.136512991 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138203427 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119506143 seconds)
  done (took 3.850114223 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108516214 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125540861 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09392849 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125949556 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132034529 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101788732 seconds)
  done (took 1.678871589 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094736367 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118771729 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094410952 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119439474 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098455368 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.119974177 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091407308 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11961008 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09385727 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119904173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093239899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118895562 seconds)
  done (took 2.27337335 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.633672948 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098399439 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.131334794 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124975291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130050441 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.097567292 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142445392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096464649 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265068992 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126546217 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115383185 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.230451657 seconds)
  done (took 3.180671362 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234109247 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106919289 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295161368 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403002882 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177218884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185743717 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296474617 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185990418 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.238890141 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127997541 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247278547 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173297333 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142963277 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225855599 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127571404 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.206800802 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222304492 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225995361 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165032842 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231064736 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183506926 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185014776 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200365712 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169112154 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153093586 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177318251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133704697 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11473336 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220147779 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190933645 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198203316 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166434517 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156821787 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226304243 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270739361 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201262622 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.339316403 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150244826 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.212180014 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201483446 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288410838 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157206824 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246921351 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144421101 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146318038 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202124676 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173810388 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.23060682 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121115667 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156549786 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208996865 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2234347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.208744799 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152966149 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322538171 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163895355 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164521497 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19557927 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211944545 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240801456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184430195 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.10749015 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228235764 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204707582 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203029171 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165054007 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192907524 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141528957 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196887121 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217181342 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201020256 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215660046 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210227487 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149179418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181525963 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189228087 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171884247 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199793997 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178215803 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.132509488 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139202945 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151587919 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141343668 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203509603 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107666694 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257051754 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149189352 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209110467 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226567752 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177200977 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181020098 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182817884 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187738478 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162788262 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133555972 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161819586 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.17881288 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14716305 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144772494 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174996873 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161279669 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.144195737 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169731794 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107997618 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176891991 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.150800531 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185319642 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183260184 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.145858953 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182579275 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167913602 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177700712 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191884734 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208150196 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146827541 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117055073 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242860021 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174398662 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126506537 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22508446 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215006286 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185897991 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152088241 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191463581 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218584552 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158809105 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211082817 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158632964 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147173538 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170637871 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176245267 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174522187 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143733726 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143362213 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171023211 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215337549 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.142790514 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150144693 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194338824 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143013801 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113296404 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159290375 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151946584 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.158166649 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170619354 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129514147 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172855602 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17652145 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170500574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177881407 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158754411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249816152 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118191117 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.178628545 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162513625 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132937163 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205394348 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206067409 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14362331 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206600174 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192049972 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243413345 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18341601 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143479793 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202244976 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115545335 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13656344 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185584804 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181312577 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181454344 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205371281 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239650952 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189797538 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.173326509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165463023 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186755653 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195067283 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176043742 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.159812517 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179624535 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189475318 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.135003494 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138713495 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.115144611 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155523159 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145515934 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117965528 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232584598 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183667621 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205458552 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17921203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154765689 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203961348 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.143259971 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183091694 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.195849601 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154061406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209629992 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201172705 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185850307 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159399048 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19253329 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.136351109 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136741865 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122691539 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216686209 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117916216 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151777294 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16136024 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20456471 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195343072 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166209723 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249696023 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190652071 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214824213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.136225572 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.180352807 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190657863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174077331 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177772395 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145432401 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17892413 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198777993 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160810408 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21497679 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182320548 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187915709 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254354485 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173533847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144744838 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165801291 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185694899 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155742648 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153608153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16152937 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151968857 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170787884 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.153104888 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142549956 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204512492 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158013722 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205328059 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175622498 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195181652 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140255458 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160580697 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178333163 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161135076 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104109168 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189612634 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240214275 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162013717 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176713294 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196487087 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141805598 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.333305454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213636184 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206422702 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154361274 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161489962 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179799692 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178454994 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18346797 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202925205 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161501835 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200971155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175362873 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158766366 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148868896 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133967161 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166391961 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173103818 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151910874 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17371512 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.158636797 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207853808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160843959 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177442398 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181553898 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162999469 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144105288 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156620657 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252412041 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175491241 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199504369 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.173193785 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190231038 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210017521 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137793133 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113647721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.143010892 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204290423 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14661572 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177696091 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198774339 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216109384 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177944708 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216591537 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123133712 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.139563569 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17896859 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165715758 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217420253 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157803085 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154514838 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213334215 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.168909565 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144967715 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182483879 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299939801 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159997171 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195307564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104141481 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.318534252 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112630866 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146249571 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177669277 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192593886 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.165529278 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.200292573 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185350773 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15971827 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149632592 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15252714 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235094532 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229566635 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191177314 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195819739 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159158156 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175927248 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181777561 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225797499 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128712398 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162158672 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179436418 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204749003 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.240116188 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.120045875 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179865151 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179333821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176537706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225251176 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119551994 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207582211 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147425369 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187108055 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155971965 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141670358 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175432865 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199301239 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147929616 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195595778 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175010555 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144896873 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114529199 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170154743 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17753801 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160176174 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.143570588 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20260702 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139800576 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181686608 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199515463 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115208747 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175186415 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162292652 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148746048 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158151475 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131043451 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151641978 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.188109937 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205298707 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.149489172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199157283 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193511165 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184011422 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178198103 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161148989 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.682339328 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.143804824 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20340414 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16229704 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214532903 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165540705 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185608973 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180017625 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16432849 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1904686 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166277402 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.239872697 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187030309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180790506 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116677073 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161623819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163525021 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148045252 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168810097 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180012907 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125049313 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155780031 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177897038 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162834571 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.162110616 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151873154 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206406115 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163532334 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207001837 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205718898 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154354743 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186629278 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197585173 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145590551 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18446464 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193029031 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15827986 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170836083 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.148376966 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.124099537 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199230087 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.138631584 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180767241 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177809255 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180824245 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180060048 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151455553 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177258912 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129715185 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177719413 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142444993 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176026818 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177060178 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147841154 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113264422 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177775927 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.175339951 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142871426 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.185799243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204590884 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107052974 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149338887 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303508164 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17452721 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24389726 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141986806 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149079394 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15984371 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17539483 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174714336 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178963204 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115085489 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148020493 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.149157221 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.200719604 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174711729 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173852948 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198517854 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18108836 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210792804 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162001728 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283916188 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122615937 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173163906 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.147096128 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146012619 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127616519 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151529752 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162313 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236127382 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198284246 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.139655712 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.159459635 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144631399 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106089453 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147372324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179848628 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171867814 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177329664 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161538174 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102449336 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161162086 seconds)
  done (took 86.626808775 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166982465 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171285982 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.173469162 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.230098458 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193148483 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290966634 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23689208 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252414601 seconds)
  done (took 2.791320754 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.136592648 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.120123418 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.154329434 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134562561 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135415644 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448764018 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145227235 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106592054 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197565638 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.176124064 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.106411265 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.684772493 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.132660584 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.13393988 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126853342 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133358691 seconds)
  done (took 4.14326814 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.717490373 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.574955512 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.450307767 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.269751648 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247650409 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.193859663 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.797957181 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.20730666 seconds)
  done (took 13.532196774 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13857247 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.156509247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.352933733 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223814302 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.172626791 seconds)
  done (took 2.124935926 seconds)
done (took 132.198819513 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110329586 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.157438687 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110297682 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157601421 seconds)
  done (took 1.606713726 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157758935 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.124552051 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095890294 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.1216106 seconds)
  done (took 1.582902319 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.485406237 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.12422185 seconds)
  done (took 1.721581749 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134160926 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.158797712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.156542531 seconds)
  done (took 1.536383317 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118717444 seconds)
  done (took 1.200586958 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111343935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.142619473 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.195088155 seconds)
  done (took 1.535908701 seconds)
done (took 10.266224679 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132694892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.442180531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.425094757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117843442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735574991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415504572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.057291721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16637965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204764123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097819945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150282459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679983217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04194655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.383285649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995187726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.381817876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.712056983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101321456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136043678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099926811 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.0323097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126721317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101255913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129788573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680347875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.43396215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126904948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.367741267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128509741 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102428267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.419763488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12799818 seconds)
  done (took 17.32920826 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144399471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194971849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137562816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099533007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.134629225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129525403 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.111268065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143579098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204101326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128692117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119510395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128278509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133318629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099586554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152615268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09837633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131698685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129564236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107302182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130368806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11935107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128145018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130355491 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102344354 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127691149 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113646923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130258673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142128706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099360578 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133483941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105129571 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129415955 seconds)
  done (took 5.205708969 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150842157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.205393195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138673721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163667453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184835228 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101907895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221582083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171603882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204335219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128745914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150117947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098688754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.170060639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127310528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124035009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129105682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101961775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130816413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136255444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101216588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150542119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097155511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131349914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131567502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098776099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.145175134 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099750156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.144723669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128811771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104496496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135812744 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128754585 seconds)
  done (took 5.531418138 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112431156 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143704224 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.122194259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.154221224 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.138618483 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.111248933 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.143279995 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.106575363 seconds)
  done (took 2.121301106 seconds)
done (took 31.272477142 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125783085 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.149282132 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118533438 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.143394497 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.202989938 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101491654 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.147140822 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.133018038 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.114409575 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.151892034 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09874194 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.135804568 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.119071323 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.139546301 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.189002936 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.143537485 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.192076591 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187630793 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.105408376 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.143109037 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.105287456 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.193483465 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.141670325 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10368637 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.196751072 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.134796777 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.185075151 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.137530878 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108847279 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131188462 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186869632 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.111421353 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.136323693 seconds)
  done (took 5.798791498 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204215609 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.214693446 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.104133274 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.13582497 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.215265751 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103779259 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.235061705 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.105561381 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.133858917 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.105054855 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.134863262 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.204811047 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.214678668 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.226075878 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.245436869 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.213143729 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.202418675 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.212899916 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.197281675 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.216092669 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.203929747 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.135399493 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.215892288 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.217195427 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102899299 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.134577548 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.239689398 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.21154561 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.240244947 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.20180691 seconds)
  done (took 6.626321876 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114958743 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147757429 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.126444554 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20345763 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.175993578 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144445928 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112129214 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154449716 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155539325 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099823014 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140056112 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.139235738 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150008006 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141079405 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106570647 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.151146158 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.15436455 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.103428569 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.137700003 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12168907 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.150892265 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.148601 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114729694 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141784307 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099672403 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142427487 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.135888306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113965991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138261118 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109050599 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135769095 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.13481023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.105049434 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.140355866 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104859445 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.145746945 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.158765773 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109269492 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143580011 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167541232 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109327978 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.137173045 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152405893 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.148144958 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132850769 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.142526957 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114641428 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141567948 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09851747 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151893647 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.145004006 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.102030735 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.15476071 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099054445 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129827817 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138246678 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102024469 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.134226815 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110672606 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.136026812 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.157761994 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108474936 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137844699 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102741366 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136611975 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.100396046 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.132035266 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.138503372 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125346266 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136386716 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163316517 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10260831 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.142239054 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108183107 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.137014851 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138390197 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.1018064 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137393014 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10912442 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.138573446 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109958769 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.13496018 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13541996 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120936091 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154856998 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.144909798 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.111522716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.143288972 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104339207 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132729918 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144048133 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.10206935 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.136535596 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110179802 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132905181 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133975605 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.114198638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.141601264 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.099258617 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150732944 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.137567124 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100826071 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.149462372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.102491524 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.136378863 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109736638 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1448218 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.131083663 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109879873 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.143391561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099393704 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138468969 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.135670001 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.102055376 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.149721544 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.112236882 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.137683275 seconds)
  done (took 16.373325237 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.307068371 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318725926 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.2118651 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412262064 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126637112 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.233744931 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.282866484 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.232163545 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134304624 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176699362 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193998251 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272353518 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102471119 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.167231091 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313730793 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.381554567 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.166952874 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.178833934 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177394393 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127110565 seconds)
  done (took 5.634125352 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124554873 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175157571 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165669232 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.166806548 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.108235686 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146689213 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.131152782 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.127942175 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.140060194 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13920433 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.100837135 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.147116769 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109478962 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.141809077 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.151173354 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149973926 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.138677526 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.138977785 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.12440405 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.141396519 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.14297429 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.162367102 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113079212 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16106394 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.148427583 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.117169513 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.134410683 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140151444 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10540148 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.138175565 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10849854 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.153860042 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.139016216 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107515701 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.142385786 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.113073927 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.134035434 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.132812755 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.10335708 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.136693638 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.117876555 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.142680422 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105341961 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129873931 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14604383 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.104471101 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.144389944 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.112152887 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.14568188 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11776156 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.143325893 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.144289005 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107927364 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.151518692 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.133855284 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.118711049 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.146717873 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143877823 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109919747 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130649991 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09927609 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135982032 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105354366 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.145842365 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.142005025 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.156243446 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.117386364 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131830099 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109994802 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.138082978 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.134791183 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.120749861 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162224991 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.136604011 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104464871 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15482223 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104785165 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124589278 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112087056 seconds)
  done (took 11.57148485 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132618391 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.138437391 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.123071582 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.171275356 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.154005238 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108397212 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.138024685 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121757945 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.146190506 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.146924206 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114446099 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147498467 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15849641 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114315109 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.137251623 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.147952655 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.112471126 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.178444069 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152655676 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137199887 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.150344235 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.13790971 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115729248 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.146041763 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169056393 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.114875321 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167607675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.142574853 seconds)
  done (took 5.06309374 seconds)
done (took 52.165661067 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.236290243 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431559843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.205714409 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.203645033 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.252269311 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.220858562 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204600408 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.413126519 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.966285793 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.199512969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.20086297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.19837773 seconds)
done (took 27.85561295 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.351299128 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.802903748 seconds)
    (2/2) benchmarking "String"...
    done (took 1.530633011 seconds)
  done (took 4.466591505 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.194148211 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.195854784 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442168949 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.19413052 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.213404777 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.215499319 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.19655569 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.218769236 seconds)
  done (took 15.795840658 seconds)
done (took 25.929895497 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.225302842 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.540223289 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.495606411 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.21686613 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.196560322 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.196453048 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.192203355 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.264294046 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.197586553 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.194217599 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.213774848 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.501557215 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.191215798 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.631466832 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.187634811 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.2089573 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223631451 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.517233318 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.197543154 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.264509502 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.18726948 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.211435212 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.210470414 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.229689095 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.210963251 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.207793597 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.21221309 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.189751566 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.496100477 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.20040379 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.190010705 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.217902799 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.231315823 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.197576446 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330035028 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.219778117 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.478753179 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.204277994 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.19640289 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.201558698 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.476550438 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.626616891 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.198168374 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.191189674 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.221562891 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.268435428 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.190516478 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.952197735 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.208541558 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.200997795 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.2298231 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.632314286 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.213747004 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.204604097 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.22053983 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.543248762 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.207883285 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.28034019 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.241797622 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.206007101 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.217635699 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.210692161 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.234230384 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.202093379 seconds)
  done (took 144.183841421 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.199315866 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.200543021 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.19911929 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.22609531 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.201910769 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.199753781 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.199609193 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.198910763 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.19992397 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.202240185 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.2013152 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.199571948 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.204899216 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.185398709 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20364851 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.221361478 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.204821807 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.219858853 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225593929 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.200299332 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.205690379 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.205982787 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.219294207 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.20135476 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.210579012 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.292095916 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.226399285 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.2273459 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.209675706 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.200268334 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.208717352 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.205869743 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.871221452 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063847707 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.219518478 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.244053741 seconds)
  done (took 80.231231701 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203440901 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201163003 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202447591 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235989311 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201746008 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.830997967 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835379004 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.006352222 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.656363508 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.754590645 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.552843886 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205983155 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299585047 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218428102 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205534617 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219426284 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248290072 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207472116 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203349337 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836097201 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218631715 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.654571238 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.390535121 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221725224 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239230357 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.609425639 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206707342 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240751176 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.545021548 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257052099 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202610081 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.634275726 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.456244534 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322038628 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205858211 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237856049 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20468514 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.493742732 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204161757 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204762963 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206574629 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930907152 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209057148 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834509008 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20992052 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.214388735 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206181291 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204387908 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.579386461 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.232307386 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.923185708 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.222408895 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204649394 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206520347 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.202528618 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203448538 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237917635 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.689361737 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.328032086 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.223341746 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208566682 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240255855 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.204257646 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.67361131 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205092769 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.247661337 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.283254869 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.424766467 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839629035 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210824294 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307047096 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328553267 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205479518 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205111566 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205123605 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205325807 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320115455 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206490251 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.667193779 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390304047 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.224763286 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.74741223 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309837475 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206757282 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643451085 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211930553 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207048444 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.00004188 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308018815 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208094509 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206896408 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205162241 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.206471798 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.666783748 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.83701146 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.528492487 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211501291 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.898891074 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211627851 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206783072 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.677647363 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.808901566 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935854545 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212449241 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208091193 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324745032 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.391988698 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227856494 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208368539 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.759369854 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.213346608 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265330862 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214111695 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610182297 seconds)
  done (took 370.363068418 seconds)
done (took 595.90121112 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.94249415 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.889461467 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.033585843 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.921601959 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.888789693 seconds)
  done (took 10.806545665 seconds)
done (took 11.936762817 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.412207384 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410001962 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273055762 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.41168995 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240075194 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433375004 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389247438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226222322 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.319010985 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.296747403 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318238891 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267224259 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245544301 seconds)
  done (took 18.376694743 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.484872598 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.217528977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298321709 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.481755702 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259605481 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507464439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.536190009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.220462619 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.369323408 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226460802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227457826 seconds)
  done (took 17.964098055 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51245575 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.220260974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300807634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.477920251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260695082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507543404 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.571707136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.218985125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368962895 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225393438 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227774063 seconds)
  done (took 18.027149101 seconds)
done (took 55.501621199 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256367493 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.387162128 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239873707 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228015355 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.221057129 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.223652741 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230828899 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223988011 seconds)
  done (took 11.145176744 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.22342668 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222805058 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220871461 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221311994 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.22176148 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220334977 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220670799 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.221543603 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220991051 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220332935 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223642551 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220917603 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221583404 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.221512208 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221206599 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222530058 seconds)
  done (took 20.680975643 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.225645415 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.222062275 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.22271297 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.222040973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22254322 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223416633 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223169913 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221953508 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.221962544 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221666359 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.222453975 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.221785431 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221756917 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.223571284 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224999902 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226327882 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225196821 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225355219 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.229809428 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224829654 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225754148 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223849387 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.225572282 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227106119 seconds)
  done (took 30.513907294 seconds)
done (took 63.47267071 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.226982095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.233186709 seconds)
  done (took 5.601050535 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288614759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.286396249 seconds)
  done (took 3.71773586 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22570819 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223876496 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223878661 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223541936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224574916 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223166869 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224033627 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224468167 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224956705 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223248094 seconds)
  done (took 13.378359426 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223966118 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223879644 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225367918 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.223693689 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224383479 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224397304 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.226139822 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224872646 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223740575 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22404515 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226263549 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225890789 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.22506046 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.226725081 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224681487 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225823622 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.226526324 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.226176182 seconds)
  done (took 23.188786106 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.238427931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246075366 seconds)
  done (took 3.62277417 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.366483974 seconds)
    (2/7) benchmarking "second"...
    done (took 1.266900286 seconds)
    (3/7) benchmarking "month"...
    done (took 1.341617278 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332286694 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.265769985 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247673199 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.266734745 seconds)
  done (took 10.225826135 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226245061 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.420637024 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.532935335 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.803931885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227153338 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.271592038 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.087948126 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.272633196 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.260550878 seconds)
  done (took 14.240969474 seconds)
done (took 75.112814259 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.216346859 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.262006923 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.24355145 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.254708021 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.563566189 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.267061448 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.220188441 seconds)
done (took 16.165416775 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.219943924 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.214974175 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.224826227 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.225127198 seconds)
  done (took 10.025580652 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.21713035 seconds)
    (2/2) benchmarking "read"...
    done (took 1.577661916 seconds)
  done (took 4.934630889 seconds)
done (took 16.099737955 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228389732 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227331455 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228246344 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.226229423 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.226147913 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228008695 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.226770618 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22704637 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228003419 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.227461922 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227673927 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228083378 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.228678625 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.228496361 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227855721 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22889794 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228289684 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227986177 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.229056834 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228220547 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228710695 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231980319 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228320048 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.228802245 seconds)
  done (took 30.616667211 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22951009 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229430358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229945362 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227659134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229570117 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229134529 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228614001 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229923329 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229558732 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229649167 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230065183 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230422213 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229818983 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229364335 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228386042 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230822357 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230548475 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229186142 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230685324 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229485289 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229904401 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228641188 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2304809 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229702518 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229704634 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230330749 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229890872 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231164271 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231732789 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.230899555 seconds)
  done (took 38.038910607 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237575205 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236503163 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229309736 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231833515 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231072057 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230123516 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231492339 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232296953 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231144393 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.229915229 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230651725 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.231959274 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.2319577 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233054305 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231196847 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230245485 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230802011 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231352314 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.23013996 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231575963 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232572456 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.23036751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.232204866 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231530446 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231934348 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231222191 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231315004 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23279468 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232444653 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231382576 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.231645825 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233431082 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.234460306 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232510346 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232804427 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232859755 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236417701 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.237574932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231363429 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232631213 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234030131 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233190784 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233852682 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233703357 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233411797 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232976169 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233547402 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233888198 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.236109173 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234620619 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233663641 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233237284 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.234370973 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23283479 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235544422 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235157112 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234031072 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235387928 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234892262 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233264036 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234766624 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.23490072 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233233448 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.234394537 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236201769 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234802194 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234407742 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.235446455 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233172752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235341504 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235568408 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235305127 seconds)
  done (took 89.934048575 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23751123 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234749036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.235255315 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235415512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236112801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235576005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235693972 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234745282 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235734672 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235581576 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235432748 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237001782 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235738325 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236339615 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237180204 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235482515 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237300087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236077544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235772521 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23722706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238835558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.236918773 seconds)
  done (took 28.342878496 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236837028 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237898029 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.237095204 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237176433 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238166764 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238598629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236359373 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23844795 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236054193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235936293 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237022962 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23702106 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239136681 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236194854 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237151499 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238615093 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235910128 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238168505 seconds)
  done (took 23.420073628 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.238035214 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.237514795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236590466 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236951552 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236993316 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238416606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239305361 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237931063 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238214678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.237112708 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238733817 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237670356 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.238473537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239468478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238197324 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238984915 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.240258843 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24063268 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239303269 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239772716 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239100784 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238773504 seconds)
  done (took 28.397052193 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241039181 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237839885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239773565 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.239085436 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.240063621 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238105419 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239038495 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.239710914 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23960209 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23877953 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238622046 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239169625 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.241226227 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240294984 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240981207 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238775348 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23979535 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.241381686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241221049 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.239721628 seconds)
  done (took 25.945772735 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243089145 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242368534 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241764252 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243328767 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241536395 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242093783 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242866627 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242233678 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241516505 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241712415 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24178234 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242520312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243062071 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242323438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242884217 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242885084 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244445701 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242520742 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243560369 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242403662 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242436217 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242939323 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24348173 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242108202 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243811918 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241963013 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243374508 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243773783 seconds)
  done (took 35.947969443 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244425748 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242553528 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.242355281 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.244560493 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.242501454 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241523341 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242285076 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.242614968 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243181819 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242507121 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.24392659 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24391053 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243076999 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.244458643 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243589517 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.244270779 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244590035 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.243296105 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244843747 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244460345 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.244726204 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243695109 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.243520015 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24396516 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244337085 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244407998 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244483718 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243837011 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242924437 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24357763 seconds)
  done (took 38.464500253 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.291926736 seconds)
    (2/2) benchmarking "in"...
    done (took 1.286657745 seconds)
  done (took 3.73323663 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.24464318 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245198601 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24479344 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245655717 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245707625 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245590222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245917435 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24485978 seconds)
  done (took 11.118308054 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241002622 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246720917 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24427587 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244816761 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.245959185 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.241990303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25091556 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273090343 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.243006162 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244000323 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248639943 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246975285 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245850544 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243943806 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244129535 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246634557 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248238674 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245972097 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248014857 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247359618 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247598983 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246579777 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248743329 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.250398395 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245642222 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.253623002 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.252068746 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.24989584 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24406409 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248785795 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246454317 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.248620978 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.247809372 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248705343 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.249144771 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.249155249 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255426985 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271948752 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255003467 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254891304 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258714852 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250175931 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245159593 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248152699 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247771847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.249925761 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248442739 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.24888784 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.244306519 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248889375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.256020666 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24448534 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248840019 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25019464 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25076921 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255319814 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275567993 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249546301 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253738324 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.255714146 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.26324892 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261026383 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25078498 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.251813546 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255207246 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267466296 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255725659 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277500844 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.250234309 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.250733462 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.25442631 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263304919 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263128223 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.25252286 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251879633 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.252818738 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247122554 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251673168 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256708864 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.27633013 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.253598626 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25156821 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257427733 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2667693 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248626692 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252661061 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250821618 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251577103 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249415082 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260106235 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278126441 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250346596 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.246774164 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248962183 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.249168245 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.251979072 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.248021647 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250523871 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.253738217 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250947602 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25117511 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251323514 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.256423466 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254156698 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251759111 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255966549 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256175704 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248790282 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257000522 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257151576 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251036608 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251063188 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253567214 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254203438 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250777757 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.256514475 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.255427312 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251119172 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254186085 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.253177344 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257067541 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274907556 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255874764 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252913488 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255245411 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263486096 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25444015 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252838548 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254641069 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.25266308 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.252646649 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.251373244 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257469957 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.25199729 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255499597 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249774278 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254197654 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253874451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255457437 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.253534081 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253586462 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25275857 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25523767 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.256260368 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.257095167 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253172549 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.261085633 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.255788674 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255238234 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25402828 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.256827658 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254731538 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251922896 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256123336 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.252687336 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255343047 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252891779 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254886965 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256187875 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255710894 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255251204 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252170065 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256331927 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255727938 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.255838443 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255503027 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.25565041 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.256141995 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254350468 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251646143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.256467189 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251242249 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255771952 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.2636147 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.256405195 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25605145 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254749042 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259992283 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257899347 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255994599 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255888471 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260460454 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259117532 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.261306946 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261305279 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256689683 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.258052583 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.2549674 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254911614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258591632 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.256192125 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265005911 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267794737 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270228236 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.255431247 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.262036707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25474831 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261314842 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.258798554 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.26105822 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.257715501 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25891503 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254706165 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259147016 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.256261779 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257650688 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254236035 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.26045092 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.260651655 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.260104596 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258724835 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255245237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256293683 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.260279118 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259425077 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258383819 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256027639 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.260069127 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255190372 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258370955 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259781595 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260225246 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262861765 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262449454 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256387033 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260453353 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259003993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25733891 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259642847 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259031088 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259052723 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265892115 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.284040195 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259050551 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267949565 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.283088679 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257535386 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.2616353 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263486679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.261754725 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259509127 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268966659 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.262155575 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.261287686 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.261186623 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256099182 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261336809 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267234793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265536492 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258848806 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.263607836 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259017939 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261652014 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.261070623 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260005004 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260027806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261745439 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264179001 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.261417118 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258882103 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263867798 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26201665 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260875663 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260010696 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.2687473 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263567578 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.261756859 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261047045 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260594899 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267122965 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259438496 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.26311967 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258003044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27289475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280326715 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265532375 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.272670691 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.264074114 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265235301 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.263423988 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262061488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260686055 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261192694 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25977765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261875515 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.263984673 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259927665 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264773607 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262369547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263967455 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267666496 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26581972 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259093621 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263844843 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.263700591 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264183147 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258434293 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264795562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261946605 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265027099 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262467479 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261880799 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269275959 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814786133 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.262898567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262047786 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263008168 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261954695 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264658681 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.266050455 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263082946 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272216363 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26372927 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.269464991 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262816366 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271811066 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267675862 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263419334 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272253824 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.264727238 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260621334 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26189976 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.266846493 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268444161 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291604269 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262755713 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271365324 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266403905 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266029664 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264818008 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.265845238 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266235814 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.267662163 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272482275 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289382822 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266471201 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2670998 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269300978 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.266820956 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266934319 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262505702 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266819107 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269529183 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264858637 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264105475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263228563 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.265977866 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.266999055 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.268108881 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267869785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266227929 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272058511 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29251469 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270099563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267346973 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26960006 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271550728 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270703529 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.293402798 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264720425 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.268643318 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266452099 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266159646 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26695824 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265844995 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.268658512 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264962143 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.273636436 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267039494 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.26653349 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267862072 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.270366087 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264626156 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276132354 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288511395 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.267813532 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27255601 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267513034 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266990096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.274232586 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269131397 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263229636 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.27093282 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273788601 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276860849 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266546776 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270811015 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265474082 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272333951 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27033802 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270328724 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270478253 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.269751676 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.266463727 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.272421698 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26961752 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272445823 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268323955 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271934912 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267605592 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277363856 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.274511232 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267646074 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271673831 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270606071 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267006108 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269714256 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271779818 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268390713 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272627764 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267221894 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273232703 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273507333 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27186799 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.269718981 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271929931 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267050467 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269435308 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271703489 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.270917278 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273845821 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270479841 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.273320165 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268247653 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267019089 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272174866 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.269185552 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273299799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270281734 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274859686 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269364437 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.272350181 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271244773 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272863477 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.2672239 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269931667 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279495758 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275556047 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.277893384 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.277533732 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27576151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269803819 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273979054 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.276319868 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269998981 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270592994 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.275097824 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.269043702 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270963939 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273131821 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275460532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276786152 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.274445234 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269897625 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280718519 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.299569217 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276461032 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271546359 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.27489668 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273507265 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.275972711 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273971652 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.270338202 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280897844 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298781445 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275487158 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272897945 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273497964 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270570617 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277966534 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275969768 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.276074468 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.280386797 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277358592 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278618274 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279142455 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280237089 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27478417 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.276299189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278296541 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.280129013 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279735925 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276843592 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277825837 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275346689 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277492323 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278257791 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275017519 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276214296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27269855 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276236637 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273608206 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276868861 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273962163 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.275094891 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.279567683 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276058165 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27577644 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280960904 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282762392 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277040782 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.272455382 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276139369 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.279608862 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280570493 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.276624134 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274606683 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274564411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278322558 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277313049 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277377727 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27573152 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29014831 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304498154 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273838397 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277103299 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280164987 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280878862 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.278603097 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278080291 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276567561 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278302494 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284137901 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278640126 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283737696 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302431931 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.277354688 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281320044 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.278057213 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.280420142 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.282290268 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281970308 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277852987 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.281293167 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28935436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28296842 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283984407 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302894698 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30371079 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.280122048 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.28099227 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274248815 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280370354 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277364719 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282131694 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.278739342 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280630566 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278559781 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.276623579 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283341281 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.280730775 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283644438 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.280726142 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276587785 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278151441 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279538505 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281731978 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.281838952 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27984727 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280514637 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.281603556 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276237801 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291498243 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.295286023 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.285168007 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280137493 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280005672 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.2829956 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282981451 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285665774 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288290174 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279942666 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279603723 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.279759313 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285414238 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.282999953 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.278350355 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279098468 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279759782 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.28307479 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291272216 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296196134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.283478555 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281031226 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282777158 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282048969 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279651172 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283678777 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282437061 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278811139 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.281749455 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286611614 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.284490874 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282978652 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282267581 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290397741 seconds)
  done (took 756.14788254 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282751017 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282415319 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282742534 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284190515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283568138 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282932985 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283716825 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284093975 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284173455 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285339745 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283907296 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284003825 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284299353 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284116999 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28444125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283625281 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283374394 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284101235 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282466914 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284138571 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285694896 seconds)
  done (took 28.150121305 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284282429 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284290314 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283992854 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285011544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286108181 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284950319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285023617 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284496976 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286833979 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28507265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284028685 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284559678 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.285496507 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285403504 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284658475 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284581681 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285507702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284386491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285775857 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286916205 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285738601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28627784 seconds)
  done (took 29.465397074 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.285573404 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285480386 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.282192493 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.287668016 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286843879 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.285464383 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287232776 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.28688686 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.287898785 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.284990242 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.282609943 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.284355352 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287980901 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.292661405 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.285460977 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.287915692 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.287967065 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286419164 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286958695 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.287373905 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290565517 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.291776323 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.285928384 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.282426133 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.289080127 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286892613 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.287756667 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286828774 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.283941303 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291542765 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.287562183 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.284487187 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287390634 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.286034738 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.28429508 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290837528 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288740411 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.287217523 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.287927106 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293871413 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.308513777 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2890042 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.292024227 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.294385575 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.289018326 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286951698 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.295334377 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.289581397 seconds)
  done (took 63.024977155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.901864045 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.932561747 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.924632363 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.928244291 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.925595151 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.927040337 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.925487336 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.932814428 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.926356475 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.922753959 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.922188134 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.934004984 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.924379339 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.930244178 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.920800158 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.93423615 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.925116821 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.923346677 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.928746076 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.936868847 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.92350162 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.926324558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.927996314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.925979376 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.936338253 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.929841595 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.928149493 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.931487378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.931922972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.928535689 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.933478665 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.930737572 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.937842512 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.932290314 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.933322388 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.934566255 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.942947521 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.932244468 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.925891579 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.931383637 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.935867669 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.933412193 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.937960057 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.940736777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.949349379 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.938425223 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.938992252 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.934366913 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.943221729 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.944979155 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.939099327 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.941525401 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.945934701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.936666671 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.937039059 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.940139057 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.938710173 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.944196799 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.942145113 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.933777887 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.931494307 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.937269227 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.93425058 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.93083801 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.933884718 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.938156961 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.934062108 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.934091717 seconds)
  done (took 132.620208957 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293467109 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.293546642 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292200148 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29226373 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293409648 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294224409 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293897659 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.294507332 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292036212 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293589046 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293748911 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294475459 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.29491742 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294710145 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292366426 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294020539 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294543286 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294808883 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293614382 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29496887 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293861902 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296030956 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293721827 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294614019 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294334676 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294494949 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29523375 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294857443 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297594024 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29708495 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296004577 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294863065 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29495545 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295294025 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29583831 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.296168562 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295890168 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294998949 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.295786902 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295512236 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296075829 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296509034 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296582648 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295779622 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295726031 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296846206 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294348135 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297016302 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297238942 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297067118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296763829 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296773409 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296117097 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297339722 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296553814 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296768149 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299152638 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297216122 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297951354 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298293911 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29756473 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296694983 seconds)
  done (took 81.515316372 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296700075 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297859862 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.299711984 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.296205177 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298072875 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297986199 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299415649 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298131404 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299674202 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.298983458 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298408497 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299263254 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300241564 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298952699 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299215301 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300189806 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29928262 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.300049764 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298422022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298185006 seconds)
  done (took 27.178427775 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.297319752 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297877554 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29846443 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297369792 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.297573921 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298491185 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298263709 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298118346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298105043 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300105726 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299419971 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299819523 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299657645 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298944945 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299680298 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298507821 seconds)
  done (took 21.980646528 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299449811 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300109202 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.300508527 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.300039311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300091301 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299530851 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298696893 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.299837459 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299685556 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299912226 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.300742075 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300896552 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.300377776 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.300647246 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.299308622 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300754472 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.300787757 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299204257 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.300296296 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.301214099 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.300979183 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.300600709 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.30114235 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301904362 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.301294644 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.30222816 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.302864715 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.30145612 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.301785156 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.302814553 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.301542068 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.302981195 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.303510901 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.30141445 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303239155 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301574905 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301753265 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.3012699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.302057658 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301998338 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.301192987 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.302338881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.302522843 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.302513395 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.301413742 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301806592 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303386002 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.302216644 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.30252252 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.302977327 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.304862489 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.302531331 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302263465 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.303235437 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.301756026 seconds)
  done (took 72.78456853 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303400197 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302069573 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302512945 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.303119292 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301663487 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30296298 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303655022 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304376976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303653063 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303175221 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304029582 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304049125 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303435261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305362908 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305749226 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303599509 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.305150109 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305285154 seconds)
  done (took 24.674302333 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.304237767 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304021149 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.304197121 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305090647 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.305091901 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305895307 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304561548 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.305108493 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305369853 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305536129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30579245 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.305599686 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303472347 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.306637927 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305462128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304530463 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305627918 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304459947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30460255 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304986166 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304453795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304736644 seconds)
  done (took 29.917552258 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.298671223 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.298671941 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.300422188 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.316512527 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.318646506 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.301337576 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.300508999 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.300487065 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.323859685 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.375614817 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.368184758 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.319469951 seconds)
  done (took 17.031194825 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308017916 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306864269 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306662791 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307034356 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307107653 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308511012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306478818 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306349226 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307955172 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30849916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308964616 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305799725 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306604807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309058569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306771736 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306665444 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308540047 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307146341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308281347 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308796237 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310565095 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308167029 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30817614 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30774442 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306088851 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307710752 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308837881 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306187534 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307865806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307466099 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30841185 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307485896 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308132277 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308312895 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308323836 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307329306 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308421541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30680446 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308742292 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308205652 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308661096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308716146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309466365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309388246 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308464367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30814673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311079564 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311569491 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308205477 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309574425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308550092 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308797933 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309812464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309526199 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311200997 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309772895 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309593994 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308857075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30956163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309578208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310600319 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310816819 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309224422 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309131802 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310430295 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310772972 seconds)
  done (took 87.57194501 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308917265 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309614765 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310466713 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310383097 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309622198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309199506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309453481 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312117502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310410084 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311197757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310298417 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312537946 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310814193 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311214149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312351002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310931947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311461535 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312201918 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310999512 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31053996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311561627 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311523131 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311581177 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311413869 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312888548 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315194907 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312621499 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313462882 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312766152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312838052 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312461982 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313196785 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312386495 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312386014 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313120635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31206006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313871831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313929313 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312411007 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313668766 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315750396 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312805004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312535487 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312001612 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315224882 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314726645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312055053 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311231183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312059573 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314436251 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313893158 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312762916 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315060316 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313296762 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313930577 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314995483 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314714485 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31502713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312930341 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312240281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313735145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314370482 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313991307 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314481091 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316087107 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314643878 seconds)
  done (took 87.846775903 seconds)
done (took 1815.008518506 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.481910729 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439837195 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.308796334 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.322187176 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.309973338 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.335129237 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.324428826 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311516456 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309730944 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30962988 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.309928627 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.559630426 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.306511917 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30881386 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31028871 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408812557 seconds)
  done (took 26.875199761 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343191409 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317519506 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444415842 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334088556 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.341500661 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.532860072 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377816295 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.315777171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.522069883 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.340558768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.306215604 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340338641 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314006752 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.321365472 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.335768401 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.534603371 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.610070474 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.312593438 seconds)
  done (took 29.165057816 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.843363433 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.354914682 seconds)
  done (took 5.417854521 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337130231 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.315068294 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31614155 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.313157461 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.306390713 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.30755717 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.312593581 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.30844337 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.307136575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465820842 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.321444914 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328451512 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336048409 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.316451116 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.320746026 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.362378388 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.489624066 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319302253 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.3176239 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321379041 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316130728 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.42313069 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.364757723 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319790936 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46102703 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.3125857 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.322990027 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323541443 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.47649125 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.320346222 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.315368224 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.316679102 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318361749 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.310849504 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.831961863 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.330495733 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345412857 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.346038693 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319769775 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.488630601 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.317995226 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32188751 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.31137349 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.827191439 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.476687556 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.453790497 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.334179802 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317557731 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321788313 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389936557 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31862993 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321484424 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.38134482 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.172237972 seconds)
  done (took 84.785573996 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.334967255 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.310456721 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493322433 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.338519792 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310450798 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312775202 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.315050891 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.657646934 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347181748 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310324359 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.6189666 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.957595246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.342689638 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.368194176 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.19031785 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.385268834 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310271826 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.330362454 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.31983899 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.319841954 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906296845 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31695104 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.331481209 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.454003608 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.352943862 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.878497069 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.322014107 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.311763038 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.329890604 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.311472432 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890811559 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.333563449 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.375895436 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.31594933 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60749279 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.741761264 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701593309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.313285709 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334600966 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.313366064 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.322295773 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.861812178 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.721701522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.313637047 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.314146111 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.871713618 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314019015 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.31910285 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.322326691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.571225839 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.3141284 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.313860589 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.347025056 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.314129189 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.312723734 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.405426651 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40605879 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.880048948 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315639945 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.314518708 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.340404424 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316940477 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319975011 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320538269 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.338139167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.727076951 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.465796145 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.323775122 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723850237 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893217627 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337400068 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960700266 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.337666298 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.335898457 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.530716417 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327400551 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.3153313 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.894012766 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.356365603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.317158683 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.705544477 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.316612461 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.629731764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.352100262 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317587939 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92413195 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.326422873 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.329728925 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322761984 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320853731 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31530689 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341262387 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617167518 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.368344139 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.316293896 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.317429052 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.327565297 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318572874 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.317305853 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.321044742 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951479426 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.346400498 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315872961 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318635838 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317656421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.340497068 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.31854824 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318799685 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.592381955 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.31730517 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.347541048 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32163305 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319044293 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.327213639 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.459339191 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.326460287 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.677397956 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322995391 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31791029 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342528818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.3177164 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.331929288 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318228203 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.322830626 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.214575683 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.583578531 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.340831611 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.340607349 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319705194 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337608879 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320230727 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319087434 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.389346289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.319334025 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166346398 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.347117843 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.34265124 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319204758 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.323600002 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320325168 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.340689828 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319494208 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634761955 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.618066007 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.467572458 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329228147 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.328755387 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.130423802 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.353130347 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504610846 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344782882 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320731843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580880414 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.556444424 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.324497329 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.324353181 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.320673247 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589645435 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321944389 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647744755 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924083506 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.341286894 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327426636 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.176508452 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.043375528 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.322962336 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.326128102 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.629235374 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.339149224 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.321474989 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320741559 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322696669 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.341124254 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.347658783 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324964139 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.32168632 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.321859286 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366905918 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514865301 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.344368437 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321186983 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883152002 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.343557061 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323517424 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.350749919 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.326372409 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.322015611 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.397089644 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.323321289 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.336983721 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.325945455 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326138126 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895562524 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322924109 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.326414827 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.518114149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080070883 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.341305196 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.326353556 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.341759596 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.238914006 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904907792 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.371694371 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.683772715 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.330846667 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.365307095 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324873873 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36109818 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.942284813 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326533246 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.343956957 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038455956 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.344328027 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.848211916 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.324034262 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.32444128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99761429 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.343195873 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.328503251 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324602278 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33392071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.630616253 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.324718262 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.365119335 seconds)
  done (took 497.589208061 seconds)
done (took 645.049029073 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.324378575 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330597225 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.321965075 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.331665291 seconds)
  done (took 10.543403942 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.339202151 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.330905702 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.335513657 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.328971213 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337075944 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.33201901 seconds)
  done (took 9.243634517 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325168915 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.331265859 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330693684 seconds)
  done (took 8.223825554 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.565158652 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.354210769 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.705993289 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.353052227 seconds)
  done (took 9.219567466 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336907769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.336830719 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.336870597 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337736235 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341634425 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340169137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338841344 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337602125 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339973655 seconds)
  done (took 13.283920876 seconds)
done (took 51.749124009 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.493305066 seconds)
    (2/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.319708994 seconds)
    (3/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.45062653 seconds)
    (4/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.333272991 seconds)
    (5/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.393789993 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.447395774 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.421389566 seconds)
    (8/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.319985443 seconds)
    (9/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.321944388 seconds)
    (10/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.478037356 seconds)
    (11/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.341118725 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.425408444 seconds)
    (13/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.32780437 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.517992142 seconds)
    (15/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.320747268 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.383734174 seconds)
    (17/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.43487089 seconds)
    (18/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.411879945 seconds)
    (19/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.367276689 seconds)
    (20/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.512508454 seconds)
    (21/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.471772043 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.328818709 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.47190596 seconds)
    (24/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.365998976 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.505710422 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.425535676 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.366111029 seconds)
    (28/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.365410876 seconds)
    (29/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.010765798 seconds)
    (30/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.481321812 seconds)
    (31/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.444498225 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.34951542 seconds)
    (33/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.413211111 seconds)
    (34/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.475778616 seconds)
    (35/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.432964029 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.086684513 seconds)
    (37/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.437210348 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.422954449 seconds)
    (39/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.364128675 seconds)
    (40/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.320082331 seconds)
    (41/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.567034158 seconds)
    (42/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.344971558 seconds)
    (43/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.416554909 seconds)
    (44/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.347973167 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.363070157 seconds)
    (46/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.359692783 seconds)
    (47/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.322439387 seconds)
    (48/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348217654 seconds)
    (49/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.393247782 seconds)
    (50/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.323189055 seconds)
    (51/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.323422101 seconds)
    (52/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.501420599 seconds)
    (53/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.560100421 seconds)
    (54/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.550556246 seconds)
    (55/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.342078764 seconds)
    (56/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.346936203 seconds)
    (57/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.373342313 seconds)
    (58/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.471285668 seconds)
    (59/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992953799 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.425894987 seconds)
    (61/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.18481125 seconds)
    (62/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.323819878 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.48855461 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.56522869 seconds)
    (65/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.330508387 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.42533887 seconds)
    (67/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.144714234 seconds)
    (68/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.579868656 seconds)
    (69/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.413091594 seconds)
    (70/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.116815515 seconds)
    (71/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.413319836 seconds)
    (72/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.350934129 seconds)
    (73/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.323232849 seconds)
    (74/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362911943 seconds)
    (75/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.168909971 seconds)
    (76/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.494795108 seconds)
    (77/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.389314183 seconds)
    (78/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.324358983 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.567246418 seconds)
    (80/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.677652172 seconds)
    (81/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.323603666 seconds)
    (82/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.447351 seconds)
    (83/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.511760189 seconds)
    (84/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.403993596 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.56149372 seconds)
    (86/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.324353797 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.439914835 seconds)
    (88/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.019295239 seconds)
    (89/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.425619334 seconds)
    (90/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.324937795 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.450422115 seconds)
    (92/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.526426009 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.424465484 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.431474351 seconds)
    (95/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.357535048 seconds)
    (96/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.451893827 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.452272745 seconds)
    (98/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.379009467 seconds)
    (99/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.417489744 seconds)
    (100/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.374955647 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.455213929 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36337193 seconds)
    (103/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.455565111 seconds)
    (104/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.379978122 seconds)
    (105/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.132176154 seconds)
    (106/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.375113402 seconds)
    (107/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.410872466 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.490784921 seconds)
    (109/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.348042758 seconds)
    (110/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.530207548 seconds)
    (111/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.329649266 seconds)
    (112/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.372096188 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.420399738 seconds)
    (114/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.348343552 seconds)
    (115/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.437078891 seconds)
    (116/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.3265867 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.540685436 seconds)
    (118/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.268400122 seconds)
    (119/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.167073284 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.362947862 seconds)
    (121/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.387154208 seconds)
    (122/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.99641898 seconds)
    (123/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.567876651 seconds)
    (124/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341048865 seconds)
    (125/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.355628209 seconds)
    (126/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.059224472 seconds)
    (127/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.361027484 seconds)
    (128/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.091404537 seconds)
    (129/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.398030732 seconds)
    (130/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.442695742 seconds)
    (131/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.372980159 seconds)
    (132/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.370399032 seconds)
    (133/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.370817344 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.48388354 seconds)
    (135/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.391201773 seconds)
    (136/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.545017307 seconds)
    (137/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.3450124 seconds)
    (138/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.028557698 seconds)
    (139/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.453860006 seconds)
    (140/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.441267431 seconds)
    (141/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.360194361 seconds)
    (142/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.655581526 seconds)
    (143/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.154087506 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.506759715 seconds)
    (145/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.371618557 seconds)
    (146/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.329975943 seconds)
    (147/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.124587558 seconds)
    (148/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.419747418 seconds)
    (149/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.330517174 seconds)
    (150/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.46519049 seconds)
    (151/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.414426374 seconds)
    (152/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.56198484 seconds)
    (153/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.330052039 seconds)
    (154/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.34727647 seconds)
    (155/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.437014766 seconds)
    (156/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.532077393 seconds)
    (157/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.518673899 seconds)
    (158/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.475290697 seconds)
    (159/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.431039503 seconds)
    (160/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.394563655 seconds)
    (161/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.352986222 seconds)
    (162/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.372937613 seconds)
    (163/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.508097846 seconds)
    (164/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.461799784 seconds)
    (165/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.579735654 seconds)
    (166/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.382188421 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.339219057 seconds)
    (168/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.346201211 seconds)
    (169/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.349225128 seconds)
    (170/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.347548673 seconds)
    (171/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.215379817 seconds)
    (172/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.466419125 seconds)
    (173/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.386566188 seconds)
    (174/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.530770847 seconds)
    (175/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.497538585 seconds)
    (176/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.013184712 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.440123887 seconds)
    (178/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.395455928 seconds)
    (179/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.356170554 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.568421386 seconds)
    (181/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.330922477 seconds)
    (182/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.399731132 seconds)
    (183/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.422725777 seconds)
    (184/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.387576429 seconds)
    (185/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.387375914 seconds)
    (186/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.561572806 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.414912322 seconds)
    (188/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.331093185 seconds)
    (189/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.311136138 seconds)
    (190/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.349835849 seconds)
    (191/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.503960069 seconds)
    (192/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.564335334 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375796052 seconds)
    (194/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.331191983 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.318440347 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.466970729 seconds)
    (197/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.715654259 seconds)
    (198/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.350274308 seconds)
    (199/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.507218742 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.516890396 seconds)
    (201/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.344426283 seconds)
    (202/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.387777472 seconds)
    (203/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.365943597 seconds)
    (204/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.331365269 seconds)
    (205/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.621472524 seconds)
    (206/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.377464209 seconds)
    (207/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.519666858 seconds)
    (208/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.380196765 seconds)
    (209/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.038184713 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.552165809 seconds)
    (211/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.067291684 seconds)
    (212/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.370058855 seconds)
    (213/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.375456698 seconds)
    (214/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.540305793 seconds)
    (215/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.158114989 seconds)
    (216/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.398150131 seconds)
    (217/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.036400717 seconds)
    (218/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.3342964 seconds)
    (219/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.427204613 seconds)
    (220/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.536257108 seconds)
    (221/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.379887979 seconds)
    (222/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.481435804 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.515325557 seconds)
    (224/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.389706085 seconds)
  done (took 390.058911773 seconds)
done (took 391.296893142 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395843299 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.529780023 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.348723991 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348417934 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392287115 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.356068463 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.391421522 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.355640378 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.359816508 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.35967733 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.358109312 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.359527298 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362129395 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.388369596 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.464384896 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.357698825 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.34879842 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.356101123 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.396530653 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.417890192 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394170334 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39459049 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.370408749 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350388334 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396023062 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397382064 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354914914 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.35435814 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356431697 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.399090837 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34294172 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.357754653 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.407286896 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.407598997 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394647957 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.357686417 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394743712 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.533590244 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.394194881 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.389816461 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361293453 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.408418233 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.361583 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362045814 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.407017844 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370264364 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400349962 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.474358433 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.342995033 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.349794282 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399061927 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.41760561 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.362716527 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.34916481 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360680553 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.473767642 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35763124 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400179424 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.359249639 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396281916 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.464481721 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399881224 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.42047817 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399974027 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358734675 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.363359927 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.357166717 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.420304397 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.35942585 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397226541 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395896704 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363201152 seconds)
done (took 109.064763103 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.482468878 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.353037654 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.493910525 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357622337 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.524263548 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.509831426 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358524053 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358941249 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357101839 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.181203246 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358028787 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.395792289 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.354108916 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.356341627 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.488503285 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.357701792 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356465628 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.069484197 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.359258471 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496604401 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.353527162 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.358588565 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.358523513 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.175860951 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.35582184 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.352919531 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.494582149 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360258355 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.070553234 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.349973326 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.353545458 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.070505642 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.501559316 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.378523399 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.370034548 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.369214139 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.527825593 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380574217 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.486911373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.4873167 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.49820845 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400100042 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35090951 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.35472522 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.360981546 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361768403 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360676342 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.389302768 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.355590192 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.359914539 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.072341421 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.370985319 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360272091 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361050218 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360794491 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.388829305 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.360833255 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.362233742 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.5000694 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.361345009 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.48728905 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.179170167 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.186497364 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360583782 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.354547344 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.361293942 seconds)
  done (took 110.204502288 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.422323197 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.431662029 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.480968394 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.376935186 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.4097904 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.481791136 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.378455889 seconds)
  done (took 11.239300688 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364806378 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.361990897 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.407305496 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407619841 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.361800357 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515257134 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362949821 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.370537673 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362169588 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41094066 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362670252 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362464336 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.371801461 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.357781001 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408444051 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369742429 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473964585 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36020025 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365469824 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508761803 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363132882 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37294651 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.411109326 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.371094841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.364068968 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365875396 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.12771694 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36314456 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365355693 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.363583593 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364607535 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.413184312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365367331 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.360221134 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364511199 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476930041 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.364494724 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364144076 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.364787792 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.363233674 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.363403743 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364635959 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.364255115 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364796398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.364978267 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.385062469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364999906 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366402621 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.364459198 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365040827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.412377197 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368708629 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364796008 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364821207 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41569779 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374570151 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363683454 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.364756991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366535454 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365460906 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.513606917 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410095887 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.3677661 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411584333 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366131425 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370027462 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.368503626 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366997439 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454367745 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367149414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41230213 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367697278 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.543551537 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38637432 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368149336 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365412334 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364246338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36509367 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.361318042 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369042588 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366494798 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.365184943 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.369728967 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367021707 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366553264 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521136461 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473971353 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367205425 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.37626701 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370058476 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367669593 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.417712663 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.367230931 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.368655052 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416805132 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478988067 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.418778154 seconds)
  done (took 140.509171751 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.378100029 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376766889 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.369336651 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392886091 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.366236137 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36513035 seconds)
  done (took 9.514413915 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366343827 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.370707913 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.3690392 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.36800118 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369201597 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369012396 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371382158 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367270318 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.373531268 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.36969629 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370506918 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370471246 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371499958 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.370784666 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.36998416 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.369469784 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.371401985 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369976012 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.369983881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370847236 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.365524949 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.368892694 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369674944 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.368797172 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.374833735 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370342086 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387294109 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.369245875 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.37121435 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374380823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.393239924 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.370503411 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368863795 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.372792351 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374476679 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370421592 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375873473 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.374209496 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371474091 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372495195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.374571745 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371461852 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372040576 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.371735065 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370624632 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37276367 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.377986716 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390238526 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.371677932 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.374322547 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.372994209 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372554585 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.373138863 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374856726 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370651944 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394813851 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.378335034 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373904605 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.373425248 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.371146146 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376944921 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375709654 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371346449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375765954 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.374033467 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374514808 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.372003938 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378082095 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375022317 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.374203168 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.373609806 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374409214 seconds)
  done (took 101.133354893 seconds)
done (took 373.855055105 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.39512471 seconds)
  done (took 3.66545345 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.513361359 seconds)
  done (took 3.784912007 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.844131922 seconds)
  done (took 26.125179757 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.418539755 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.449807636 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.395867107 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.365750471 seconds)
  done (took 10.901515383 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.786947098 seconds)
  done (took 4.058177252 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.367826282 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.369831782 seconds)
  done (took 6.014332546 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.693957363 seconds)
  done (took 3.965232415 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.932022115 seconds)
  done (took 4.210273848 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.369088553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.383570797 seconds)
  done (took 6.030791874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.355980683 seconds)
  done (took 3.627997952 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.305327059 seconds)
  done (took 40.577150484 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.377702085 seconds)
  done (took 3.652655282 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.416556804 seconds)
  done (took 3.688032212 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.599978627 seconds)
  done (took 6.871282581 seconds)
done (took 128.444133949 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.365428482 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.373637151 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.371897882 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.371214575 seconds)
  done (took 10.755172869 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.428816856 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.427829817 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.42772748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427657317 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.426902255 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427495782 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.401822475 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402423099 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.427319071 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.427025088 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.429677288 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.427708124 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.429587018 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.402464148 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42785419 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.428772277 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.429687174 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.428947393 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.404177711 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.428376564 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376652694 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.427722735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.427310983 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.378306113 seconds)
  done (took 35.351509113 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.892567523 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448158295 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.529404618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42649134 seconds)
  done (took 7.569375795 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.455965363 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.454508271 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.478306524 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.512919625 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.520043996 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.468056434 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.402399082 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.400352824 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385499972 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.455420859 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.50582371 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.450472303 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.536135873 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377224748 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.583897415 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.376901674 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.378835018 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.456063817 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.508521741 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.522896562 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.378983548 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.456417495 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.456001483 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44765269 seconds)
  done (took 36.243256778 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387442056 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.394834927 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380925249 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396762431 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.382260283 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.382570533 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381626821 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387516289 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.379527717 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.380683089 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.380502607 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393785553 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.384724455 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.381743278 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388571337 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381365278 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.387924585 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385395595 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.380411655 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.387065972 seconds)
  done (took 28.982237833 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.369253843 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.368668124 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.719938812 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.62467372 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.370797453 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.370866032 seconds)
  done (took 14.101204543 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.462396873 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.635355248 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376686537 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.816260142 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.89100597 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.380453106 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.377571245 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.666412674 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.055773714 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.049165723 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452595369 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.457992005 seconds)
  done (took 20.901002136 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.388090809 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.37655898 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.385001095 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.391214738 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.44013839 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.39995463 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383245777 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.372241243 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.45003277 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.466798705 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.399644943 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444145243 seconds)
  done (took 22.176701601 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469576905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37658858 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394249259 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467251815 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374507909 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224495193 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397550315 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149633307 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.403251977 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652823736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391640678 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473232835 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633964909 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395652487 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377995946 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.366206739 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61283176 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930454548 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379734125 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377875576 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414429366 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378455062 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396306252 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637566005 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4053181 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377658816 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639410968 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378038137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708527213 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390966366 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389521497 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379330414 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654022319 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123500825 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502937428 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632344899 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403320529 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380325204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.367543284 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.380036565 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391937449 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379603502 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389758646 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378168941 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377335561 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38068983 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15805914 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.409686986 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.380764334 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378536103 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686419321 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474586057 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.384751776 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381292713 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417900565 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38299631 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384755802 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517296807 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981826088 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378770393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407342755 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.380285023 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377710785 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395301821 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07621062 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.409095203 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386060151 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385415333 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380391901 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381258303 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403973233 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382798037 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406298338 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38262963 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285498368 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422984381 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381970546 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998244694 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385301125 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.386373507 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612857694 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382463771 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381437962 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.38192795 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38279951 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179376282 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389335242 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.368779435 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429882123 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181593327 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661971405 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428408683 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413482993 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607719583 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.368876143 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383394661 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.396398492 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384552022 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403821836 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167872529 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405219711 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.38846359 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642350584 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593595308 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383097763 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415507163 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95554001 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40800038 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403294611 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384154381 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644957501 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.086061154 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419973278 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385280493 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408881517 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384868682 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216374022 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385744404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49235406 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402277229 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703108409 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.282923785 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385974703 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451556227 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388479138 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383990686 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385588031 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392106181 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385134749 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.632605547 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41176841 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.399734734 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.387045324 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385118901 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.397659463 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387747243 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.387535006 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610956104 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390925659 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668942987 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385970845 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383986289 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385401051 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606542376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.404553793 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.723629673 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649675951 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385524354 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39105155 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401672765 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405110176 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489571889 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40780316 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.386560046 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647990385 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392895686 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.391898217 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386837076 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393666577 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387922685 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394302686 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39945019 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068958898 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389691502 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394420618 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278921846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.403603659 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4556845 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395887567 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647436154 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.414178711 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415746564 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395880084 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.403895726 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620287876 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398448325 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.388334019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473799197 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.926319829 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086375537 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424733801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.389499095 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.389644491 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.389572049 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388832132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389448491 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389629207 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648256368 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430410028 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384273903 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073707796 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412115022 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391064335 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.398036194 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401986535 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397026286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389484088 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.389501355 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410940888 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397159683 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.404150115 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534716289 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407030594 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389487127 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909428177 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398480036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38936539 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390818457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423661372 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394535673 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274534506 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675891528 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40631958 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700183117 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39389439 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.407612096 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.390860714 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389449152 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412937864 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.403592262 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418864313 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.401806202 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392045764 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414254657 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965975785 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230913457 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013987874 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42204114 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.392384564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398398445 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174765039 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414772534 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391186042 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671392371 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200177469 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414794476 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933962767 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.415168896 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320683047 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709256284 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626016931 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395682695 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.393900009 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724780736 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604819021 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425415156 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393009223 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398106635 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.381576583 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025433882 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433085609 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476518659 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17795177 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416005911 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416559667 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.454934336 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.42531714 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884821768 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421525513 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393334348 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39405176 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397047042 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29332763 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423768269 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393924721 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092919682 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433000686 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.966673584 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422265094 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650009919 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430127084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.39853222 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.395232201 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410502112 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656576647 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707734141 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397252216 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41066173 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025715549 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.291176765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.402888266 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395942518 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232909485 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402162859 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735693198 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.397413545 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.426398936 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401531583 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395467907 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396529167 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.396629151 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401736737 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379661893 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959356266 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.415898848 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39940398 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437757232 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403138862 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653626466 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413751766 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075549535 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647184189 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39637146 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419033313 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402213089 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398154034 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.386777481 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397927997 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396582265 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422266602 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619919363 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397644386 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.411499908 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403796587 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614288506 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397003598 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397804641 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676197682 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.420218277 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.413764954 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297878978 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455819218 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398619699 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399852306 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397478608 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44191383 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492125484 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651488469 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.434380819 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409951035 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885177008 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425713006 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402574362 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413628889 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495420131 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398539888 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429095805 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.217135486 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083678559 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29228495 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085278889 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733569998 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402653148 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4102776 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400062511 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560700329 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400260255 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675748989 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400128048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.411657733 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424349348 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409111845 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403411625 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638432469 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676324486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400166321 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405396773 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406648128 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.402369255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409619522 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.610420664 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965403459 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026791669 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402957968 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399621033 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197621108 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702304863 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401592265 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401020179 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403295406 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.419756905 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.427960107 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410482514 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406904957 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545861489 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714662843 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130724902 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434097657 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.433580281 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.919598535 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401831826 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663452857 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402289442 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658292376 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110845944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259976575 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674620855 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472966098 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659626461 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.429264024 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564480463 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406872283 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407962294 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402434927 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404114653 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.40364516 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412398508 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094001187 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692737789 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.409754562 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.407953803 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438932841 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.413280633 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625624364 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215723635 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628317995 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413788342 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409005705 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406088289 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100226425 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743250628 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407339738 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407391373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686576559 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42891458 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428026568 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.921044716 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.402745369 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027027362 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.378311133 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425069898 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421600398 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255913513 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100224397 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427218024 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974889415 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40588474 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412191417 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685430086 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.412028799 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423007251 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68746059 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.4095265 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404999551 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693412054 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.114111912 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.348682017 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.429221045 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438171091 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.412205443 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405263144 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427782015 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410263762 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412514187 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.913832184 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433360072 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405437738 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420769014 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.406374221 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409825565 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.412405236 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4068422 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412765483 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.408026184 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.398732425 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407636379 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54914466 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039087813 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431165305 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083889398 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.732911652 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661288568 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405686834 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.399946043 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.412117011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406299023 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404995592 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407274018 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416627826 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032159912 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.409114805 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.42377162 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41560717 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.409694958 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618333639 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410397925 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671293327 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435853642 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429290207 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.394624953 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408370473 seconds)
  done (took 993.558830083 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.452250113 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.426128977 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.43279134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.420383263 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.415906812 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447392901 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.460438137 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.479452969 seconds)
  done (took 20.843321057 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.402979337 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.412641942 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.405251858 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.419203387 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.424878822 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.953583277 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.425799393 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.439328798 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.430889283 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.41101961 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.4199544 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.402507298 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.440939627 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.41237264 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403649236 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.41966728 seconds)
  done (took 33.536108465 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.985566469 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.733038331 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.495019965 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.446298327 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.465300059 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.414941185 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.863809152 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.428643069 seconds)
  done (took 29.140837006 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.415435827 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416258188 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.415702063 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417288737 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418681426 seconds)
  done (took 8.393471305 seconds)
done (took 1262.826708948 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415713136 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.416240936 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415977286 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.421267376 seconds)
  done (took 6.97847352 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.400119822 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.398704139 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.398575791 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410510153 seconds)
  done (took 9.918912107 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.255326884 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149011423 seconds)
  done (took 5.712862017 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.923773035 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.939987245 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.926784437 seconds)
  done (took 7.102454513 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.703465609 seconds)
  done (took 3.015483947 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.334218271 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.411517291 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.117439806 seconds)
  done (took 8.173221937 seconds)
done (took 42.209209302 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419240859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.657237026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.569525949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42269854 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.579292021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.571635009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.149779598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407104404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407340062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419938788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.42468226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.566921204 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.156459391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.658432162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.156233706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.667143941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.569465483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407371938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429354986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418323569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.179998116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409683994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412992801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.409072962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.5746961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.561879016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411237248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.657853094 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407520763 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.408101899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.581571183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419102854 seconds)
  done (took 83.802604013 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41541845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.408559096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430849577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.430572742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430253242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.412839819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.440344695 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413585234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410643297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.449240319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409784312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.430376288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429056515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411143035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.411721071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.431705515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416852505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421397361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409371555 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410122667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.427817405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424638303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424396184 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.424412564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.410295438 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411789723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.431741527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426219615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410515452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410715044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412936587 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.44160397 seconds)
  done (took 78.794812284 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.423023225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.412996521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414513564 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435409722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414655081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.434802773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413532828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412364827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.434916975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423039239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413367045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412502775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.413466274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.426466088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414563147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41189574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.431483497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430190108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412173052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.431125873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415794823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432173233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412643173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.433074273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433873217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.424482099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415215226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.413268597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.444902798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.431660396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.427492526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.413068989 seconds)
  done (took 78.828917022 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.699611822 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421392821 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.425271303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.418170392 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.425620874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422414628 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.417332785 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.704341487 seconds)
  done (took 15.248454937 seconds)
done (took 257.98667978 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.41578461 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.014418018 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.469826519 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.420239302 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448147344 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.444122593 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.675925891 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.468753429 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.678995222 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.464726589 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.441950773 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.418625921 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.429931945 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587421267 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.386925459 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.425300674 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.432254417 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.420689 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.119134288 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.745166429 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448212886 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.421757196 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.37575637 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.453047366 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.410756722 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.539920464 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.541991152 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.665805846 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.59351509 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.513420839 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.037227882 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.425449995 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.449925368 seconds)
  done (took 67.103138449 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.422326943 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.548015335 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.426043557 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.426033021 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.552643441 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.449937104 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.422246529 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.425538245 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.425069872 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.425958638 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.426670964 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.427586138 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.429040403 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.478485642 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.55690064 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.444521575 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.424423963 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.549527701 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.421141519 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.420943845 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.476663007 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.428082284 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.4283585 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.481484009 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.427067047 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.427023042 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.551756622 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.454025171 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.430269575 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.552083391 seconds)
  done (took 45.079299339 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429467924 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.117194205 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.311500993 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.436390251 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.424787698 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.429966275 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.786916775 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434064905 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.4285843 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.429925704 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.000474415 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451499618 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464440103 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.338120278 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434441882 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428260525 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.430701653 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.426242964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.135578612 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442752925 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.80938058 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.435171248 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.7877573 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442812794 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.453484993 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.428147612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.431456286 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.344625519 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.454304969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.025294222 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.438605351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.785823056 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.277053886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.348291815 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.418858719 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43698556 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.431209154 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.02607448 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.455387876 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.427497772 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.789148732 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.433588665 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.323139505 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.167311893 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.450263093 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432394035 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.358696929 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.043130004 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.75120248 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434435909 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.352472807 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.436456088 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.432821012 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430010348 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.725593561 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.430523902 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.428239872 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.393183495 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459287265 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.786253217 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436614343 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.430494383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.131087075 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434682872 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.125627158 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.436644027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.438050981 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.454030076 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.328025779 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438314667 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.181563266 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452928553 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433022016 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.026976234 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.150452791 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.429330306 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.432815403 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134065244 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.308103936 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.805484138 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436052324 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.312384938 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.804700759 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433805733 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.435776407 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437252868 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.434495465 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508802589 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.777926448 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.128592886 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.172645243 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.417465896 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.806873222 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438848644 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.432011149 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.392020005 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.459050471 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.434374155 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.309956486 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.183213579 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454278573 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.441266473 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.19411186 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457191482 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.784211231 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43681716 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.307779603 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434208894 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512032102 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435848437 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.4403928 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.459076299 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.783503978 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437806515 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436308312 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.161242359 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.039731681 seconds)
  done (took 204.804358602 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.445987647 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.427767203 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.439768249 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.427245478 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.426327165 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.435339929 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.42882599 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.427449319 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.432049991 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.427059673 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.428539367 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.435631308 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434130015 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.428519593 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.428433893 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.429576799 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.428411411 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.458642097 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428761628 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.427827931 seconds)
  done (took 45.97736213 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.439110785 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.124372746 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.125793102 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.443946682 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438300445 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.435444115 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.501564364 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.458898456 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.438159607 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.797214727 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.652789577 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.465563668 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.438187222 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.440670274 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.101029338 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.436332384 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.797243994 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.113455917 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.440664782 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.113876151 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.429698132 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439799077 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433733517 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113622093 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.824236974 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.787330016 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.504951032 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.135247769 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.462165459 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.439462614 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.116517092 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440508616 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436686679 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.11236941 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.460406471 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452706907 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.440537125 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.505012561 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.52703636 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.821969496 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.210523159 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.823073106 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454140711 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.624932695 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.44345647 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.430859887 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.122677206 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463188411 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430626588 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442142141 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.447715811 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.112423976 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.463367782 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.11052794 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.468637978 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443338422 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.118438041 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.098406717 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.114260675 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.652562957 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.463438894 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.78772304 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.440877965 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.122736119 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463365147 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443015656 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442036167 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.652223765 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.145891342 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.791366172 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.804286973 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.8040479 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.442369995 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.512764159 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.464897697 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.878717082 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512155035 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.872961929 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.809868166 seconds)
  done (took 133.749596435 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.754079845 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.574117681 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.908410831 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.113511962 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.442543068 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585507655 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.566526796 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.735124035 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462759632 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.516072459 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.200246335 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.57033045 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.291918411 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.542462355 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.578336564 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602339968 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.915712428 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.43597424 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.202613752 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.193956698 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.438885464 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.587520532 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.01841252 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.688646744 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.434857351 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.084624938 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.466103726 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.201406462 seconds)
  done (took 56.447143088 seconds)
done (took 554.475565778 seconds)
SAVING RESULT...
DONE!
