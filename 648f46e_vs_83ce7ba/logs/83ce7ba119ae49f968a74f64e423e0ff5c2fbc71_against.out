cset: moving following pidspec: 7516
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.058749822 seconds)
loading group "string"... done (took 0.610370586 seconds)
loading group "linalg"... done (took 9.785912133 seconds)
loading group "parallel"... done (took 0.185021603 seconds)
loading group "find"... done (took 1.547318354 seconds)
loading group "tuple"... done (took 2.219795733 seconds)
loading group "dates"... done (took 1.534226256 seconds)
loading group "micro"... done (took 0.242003615 seconds)
loading group "io"... done (took 0.602357536 seconds)
loading group "scalar"... done (took 48.51648146 seconds)
loading group "sparse"... done (took 14.548077326 seconds)
loading group "broadcast"... done (took 1.267673105 seconds)
loading group "union"... done (took 13.277472293 seconds)
loading group "simd"... done (took 2.741748095 seconds)
loading group "random"... done (took 11.050435941 seconds)
loading group "problem"... done (took 1833.11786216 seconds)
loading group "array"... done (took 27.799438418 seconds)
loading group "misc"... done (took 1.208949038 seconds)
loading group "sort"... done (took 4.015715164 seconds)
loading group "collection"... done (took 20.295745266 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.771517207 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145765761 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.216627179 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.377377765 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242850938 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163992728 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.176636227 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.589673119 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.079003339 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.29367434 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157046313 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.606015055 seconds)
done (took 6.533153727 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.306518632 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.391046308 seconds)
    (2/2) benchmarking "String"...
    done (took 0.185428584 seconds)
  done (took 1.235247223 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076342277 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188521627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.115524 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.116546724 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.104056042 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115496731 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.117063188 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.117406662 seconds)
  done (took 1.534239317 seconds)
done (took 3.820684716 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.558068815 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880088669 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.53094657 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.17701716 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.209045013 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.187459587 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.327777561 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164398659 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.115410115 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.108443982 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.221967512 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.347619956 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.511620136 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.022750119 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091747911 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128162767 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099608169 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680877945 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083679253 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137510697 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.596997609 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.121910102 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118320646 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126710411 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.215082748 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134070107 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169964748 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092336819 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.678365891 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104032327 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237980297 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08374925 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182564988 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.258867064 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.082549138 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109648063 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675936837 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.184814387 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.120515339 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104969822 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676719577 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083019862 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.252160164 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109765368 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115108242 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196896602 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103900317 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.103425072 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103254015 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085833314 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182090024 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.502002616 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108676629 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.179508765 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110255124 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701606737 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099820272 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158123323 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140776209 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.11288746 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083799119 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112136214 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171872624 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.118004093 seconds)
  done (took 20.357214735 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.159969405 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170927191 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095401812 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143049868 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146863985 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098753906 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10028528 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078854991 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.135396862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241245348 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144960441 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192010468 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076797892 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.104290884 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147139657 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.256390724 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108467058 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125707599 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101549926 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093724226 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144668005 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115812794 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112111168 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098851562 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.188642091 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207009354 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110132619 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124276583 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.103535662 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119831783 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143340381 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150994028 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094260058 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085633343 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.209890253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108327371 seconds)
  done (took 5.520232547 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.229424724 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117699359 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.241455742 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182809454 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152220139 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.211670367 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.172422071 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.164804388 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295511122 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.253548126 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18326303 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11665928 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111899085 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093588914 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081632393 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095420497 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.715799286 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182863795 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156443726 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.173956265 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106873652 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083878204 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386057998 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103131271 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082466699 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106390876 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094988372 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.212157692 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10609897 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.377358619 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11903937 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112556678 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134663897 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196422135 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133877204 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145065065 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089203348 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101135031 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22519702 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110490265 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101134146 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07811284 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131841315 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135581428 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137404684 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100977927 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098214504 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.254071688 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102092908 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105481272 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.158385292 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201291556 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140836692 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080603929 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.394530736 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096782956 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105823424 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098058502 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.308227869 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141734355 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083922251 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097299088 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087742379 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097058573 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455250471 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092787597 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.912913052 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096699726 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.169100299 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103385255 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109367387 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104640745 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086516181 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120870166 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098812086 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08061543 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098973971 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081438036 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104632339 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.123360991 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086894544 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097549792 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161542703 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.104434374 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120255432 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127206405 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104800383 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081673418 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131319905 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098665553 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079180267 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101428248 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172835923 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105213972 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119750457 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098907733 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125836748 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09938349 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104056375 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.233215145 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081454527 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128228842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104115834 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128441747 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123721719 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079173094 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103315029 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094847875 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081346347 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164413572 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081730551 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099364868 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101925397 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097646532 seconds)
  done (took 24.801838954 seconds)
done (took 51.336650857 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.536888348 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.126414262 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.125154601 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.124018515 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.122856224 seconds)
  done (took 1.776324996 seconds)
done (took 2.49127301 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.38834893 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187896835 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122513735 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186429827 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108308759 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192380011 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.194069373 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118935973 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206417584 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101156793 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188316856 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101379922 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106485271 seconds)
  done (took 2.944663851 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099364996 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124877306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086501644 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118417671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079465182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118107512 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114513922 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127432388 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112227754 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107074222 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08048542 seconds)
  done (took 1.878870022 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094984188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122334934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085616454 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114793385 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079620462 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114786579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113840427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108576324 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113764321 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091436384 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098767315 seconds)
  done (took 1.852254643 seconds)
done (took 7.379179891 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.25545518 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.714445863 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154262568 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204823679 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.402866572 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.256656076 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654281406 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167564793 seconds)
  done (took 13.733693147 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.119587824 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.160043542 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086512389 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104617006 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087712539 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105382931 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088300012 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101883151 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101986928 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087776769 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103238269 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087108994 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103886709 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08880612 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102433889 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10210381 seconds)
  done (took 2.415359817 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140730274 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140053184 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093382899 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.118082287 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108673626 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.093155957 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.112124654 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109987395 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091206655 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108251809 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115991666 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09975253 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.113628137 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.105998475 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095614848 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116921359 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107888156 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095317069 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111601494 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111172865 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099225136 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.109037242 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11413192 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099517447 seconds)
  done (took 3.420608525 seconds)
done (took 20.284732491 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182793072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103693247 seconds)
  done (took 1.004666497 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150400283 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15861916 seconds)
  done (took 1.033545362 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115686484 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101608833 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.148102474 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123095101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.10447807 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086517413 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.14127814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102773436 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085714539 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103332129 seconds)
  done (took 1.839546212 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088810748 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10665282 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.115198558 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154173705 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099777928 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108930602 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10951063 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091481151 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109805451 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103775118 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095684651 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127834946 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110955631 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131048232 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092317475 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.233762036 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116947326 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.109977724 seconds)
  done (took 2.836784552 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083120711 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100328374 seconds)
  done (took 0.911013142 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088972797 seconds)
    (2/7) benchmarking "second"...
    done (took 0.103231655 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091755714 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108434923 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.103143392 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086848814 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102597708 seconds)
  done (took 1.411862135 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.553786977 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.284251239 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.390552414 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.127024702 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.149149961 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.407288105 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149371228 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.119894869 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120564097 seconds)
  done (took 3.074680993 seconds)
done (took 12.838691398 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091021468 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.238284837 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611248171 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.126316036 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084620382 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163224004 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.337115378 seconds)
done (took 2.38207202 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362070059 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163565494 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.094501709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100253272 seconds)
  done (took 1.449794878 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078943563 seconds)
    (2/2) benchmarking "read"...
    done (took 0.110081807 seconds)
  done (took 0.92563451 seconds)
done (took 3.117311068 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082592078 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097260296 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119766395 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101650628 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101413919 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083743996 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.100643059 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083691256 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098833134 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085037506 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098741736 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083660536 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098735092 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082727098 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100459118 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082778203 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099983641 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083491046 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09877253 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082957337 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100084432 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098584759 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083709786 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.099619999 seconds)
  done (took 3.024282553 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105883276 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10308913 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1084505 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091388749 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.109065552 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109280818 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091156098 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.103913636 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107663842 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087171339 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108550059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108074218 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08641064 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.108723032 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102866243 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094496836 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107795537 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104026223 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087370694 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.109675621 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106689911 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088817047 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.109768053 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091650161 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111002839 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109152318 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087011351 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104708897 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107464576 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09188915 seconds)
  done (took 3.779305532 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090761375 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094448039 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086069945 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.110296781 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080934155 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101831188 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080707163 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098031728 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.101757313 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085710564 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.103538181 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084202886 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097650619 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087019145 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102390738 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.088155459 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112372994 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097714745 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082674733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102352009 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.088265609 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098464928 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085251941 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101580507 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084312765 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.098882144 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085413016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.100921824 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.086237851 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.10060491 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102234524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.089146659 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.10126587 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096200706 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104262495 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083884315 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107644978 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080998263 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.104725426 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097872313 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081271634 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.100404697 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081515011 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107131142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085526544 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102586813 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082118489 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.102900092 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085026165 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.106770532 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.097511419 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081866269 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.105034122 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087254355 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.105494234 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081516681 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102578966 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.082261501 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10300153 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084475057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098891324 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097951617 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.091485281 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.102829889 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101164737 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107769899 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098297479 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088532021 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103611942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.090883799 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.104637304 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094811735 seconds)
  done (took 7.580084068 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097330918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114217308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087045347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103853632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102401263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086404457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112071991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085359629 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105373864 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111465982 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085849655 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102829542 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088324474 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102963578 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084800544 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106228694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113613252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08546595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.102299239 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087101527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103786991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113596826 seconds)
  done (took 2.929566934 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.268302152 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093155317 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.159461985 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120865033 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.127432178 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121653639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090462323 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110049459 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107923309 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097820823 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114694221 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10848991 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.127060412 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09716077 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114219363 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117410425 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090208389 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116797673 seconds)
  done (took 2.92879327 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101485307 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.105527686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129255573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089946692 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10612827 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088442362 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114843898 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123586488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105241316 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090560136 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.118798878 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104273502 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089110999 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10742489 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089530654 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105625488 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105428776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090635073 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117731385 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117100327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097940194 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116975454 seconds)
  done (took 3.063950435 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10416605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105134914 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.144571223 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093239517 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104036965 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10368396 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.096109742 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.107010624 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11446608 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.090095084 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106439051 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088822554 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.116058063 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107882999 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096854223 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107386185 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090142904 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108328866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105674069 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087183042 seconds)
  done (took 2.827034732 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183771802 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102921348 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123351637 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13578256 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123032963 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105610629 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135815556 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123050091 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104992005 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140564507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122681517 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122529682 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137110456 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114402622 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122359518 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137534985 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136948177 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137004238 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106061941 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121703422 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140486828 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103587769 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136455826 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122245694 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121194678 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104741942 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122016656 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132503647 seconds)
  done (took 4.275275423 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081965085 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100745559 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085747866 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.103151466 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085841809 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.102982105 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.086509082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102814855 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085410945 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103129756 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08594105 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10364406 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085169334 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102378217 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085599178 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102330514 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08633725 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106356495 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103739974 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087194751 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.103385267 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087193869 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102225039 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087321719 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103819962 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086910558 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103621401 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087476112 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103774308 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085852652 seconds)
  done (took 3.593108171 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097728458 seconds)
    (2/2) benchmarking "in"...
    done (took 0.129834349 seconds)
  done (took 0.984413171 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092723043 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123387005 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085372643 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104918354 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116426266 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087374367 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117506583 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11633612 seconds)
  done (took 1.601147479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.153484691 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.155739015 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094160428 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120611093 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160323652 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151012043 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154437123 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.111903031 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090857663 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102220379 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.155254492 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082608319 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112078851 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10550529 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092753906 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116327572 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0886879 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115123817 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.114674192 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090541775 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112883364 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100560638 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114308605 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117816983 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085262972 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112951592 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115800323 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099663832 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107762062 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113302761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089953596 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.105672462 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.092662324 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.111982083 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086950887 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15697342 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122631542 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10861731 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093473501 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113957636 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117177109 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088883145 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113198866 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10823881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096673044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111752445 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095026618 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.107382907 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084432523 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105162158 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.106941486 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088193807 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.104849459 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093726509 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112410502 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121316954 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08963547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107037636 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107550017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088210434 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110391986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088142404 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113193247 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11065349 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095705272 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111788648 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110987393 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098630042 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109230642 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.088775153 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111366015 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127652937 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095656661 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113598407 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094604221 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.10789237 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107915653 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095920047 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110600174 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112101538 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094998846 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114559297 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095559202 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106318236 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106663588 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095324651 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107906381 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091206175 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103338844 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123461061 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091451925 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.108635047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085445155 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110230386 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088226279 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.110825325 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.10388926 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094386655 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.105287804 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094370172 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114483432 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110648786 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095460671 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113733444 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113019527 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093524931 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152615329 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108705885 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08811769 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.110554797 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093873099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10619346 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114509339 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088051093 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112447171 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088234812 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113294292 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113597484 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091713123 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112255852 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095483806 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11537213 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110704475 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087315426 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107896663 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093591819 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118950743 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115870213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091886935 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108215588 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089904092 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112508472 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112413421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089681497 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114181051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09049418 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.10707792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.108330164 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094085476 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113650023 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08782645 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110887253 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115180746 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092713402 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.1120377 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112842033 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088690111 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103293646 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094776125 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108513399 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.089623588 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1192475 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107672631 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090629341 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107364263 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117655427 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090193706 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113873889 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090926412 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.11260767 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113727745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085208317 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109672488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090394389 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11580911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089715479 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10813204 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107190583 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096987603 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105334811 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09264544 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103516708 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089593413 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114848111 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107981255 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092868507 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108612673 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127150337 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104689897 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115888031 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093734437 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112449501 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112260082 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092417485 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.112538465 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096360471 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114922837 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111588423 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092399719 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114174807 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088830858 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.114244508 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110467369 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09602855 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104720467 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.090398187 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103878602 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.112701732 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096760404 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114487795 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095374699 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111378438 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111696958 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10102248 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10987566 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093944802 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105128029 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113667228 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100549727 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115307964 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097791193 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115315418 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111146011 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091117259 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120555174 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092587218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112689875 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.108619245 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087113214 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105039594 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096966957 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112657084 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08961936 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.108090919 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115760347 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0974056 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110534408 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085932111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113110723 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118080957 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08901061 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114437344 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089598743 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111908463 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122676481 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085842712 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108160977 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116779709 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095262807 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.108213083 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094975773 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111488733 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115374775 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09256228 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.110345376 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091521595 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117541835 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092241648 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10821179 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108328563 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.092426146 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105174633 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090439675 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115827293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09058614 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109024094 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119135168 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096407551 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115115984 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112775424 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.094056697 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11735334 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096244214 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110652541 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115575678 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090132813 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107744762 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090265334 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104626988 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090122904 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108554252 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114277699 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092021929 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113132871 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094055607 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116519265 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110785602 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095647684 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125312029 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107594993 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085870824 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110639813 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113091676 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091097207 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109670483 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090493234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115004541 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.114245952 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09661478 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110609018 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088000847 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114872727 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109113156 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09738077 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.116455181 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097031025 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109386503 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093735707 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110378022 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118810157 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085850141 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113150166 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112655046 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093796094 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110514466 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092996566 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108753393 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105450064 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091041449 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117135441 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092677255 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.113336231 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113547219 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092148096 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110748017 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088415855 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116533014 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112609764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096774385 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109952527 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08662383 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106288263 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095902052 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115488389 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115568591 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090143358 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.114795136 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096948613 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113818657 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109375436 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100002958 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118541516 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096811045 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12061386 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105204459 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091382394 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120876835 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088782601 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11344795 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.110482541 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087265451 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117471351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096980369 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116262294 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111706528 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087150421 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.109374779 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09718555 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.113377908 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093228843 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.110456363 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115436432 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088383476 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112631161 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097039903 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114537073 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1176472 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095376937 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114436943 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090713167 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.115760382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.108423119 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087849383 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10635691 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091514413 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116808281 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087952927 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.11410964 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.113898769 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091510602 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113047254 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.094036071 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110984749 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117411338 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094832827 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112293009 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102627698 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109899988 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112377099 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.094998299 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114753784 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087535349 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112550732 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093617667 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118117752 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11336162 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095010857 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114455706 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114275958 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09203713 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.115120741 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.095083965 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117210241 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087378863 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118433619 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11950749 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092088256 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111938888 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092932703 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108295959 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113945891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097723452 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112626886 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101294504 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.117830589 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112443546 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092264778 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116148699 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093612668 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118087855 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110286039 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099509879 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108306441 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099006329 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113029097 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118153322 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090828 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108710483 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096451727 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117402802 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114001819 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097689251 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.11842688 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087687649 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107665607 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.111778696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092532605 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12319582 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0996251 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112696869 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112964613 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.091670289 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.110821277 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098919893 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108502535 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111138627 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096589148 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118539593 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094735324 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110916695 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.116017746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093193152 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118924723 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093364331 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109568952 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114847018 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098624238 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112255484 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089877266 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112346529 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117799532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094669512 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111594895 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08777919 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121075082 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.118454545 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097857545 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111048701 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115914823 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092452633 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113558642 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098331576 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112662976 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115678464 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09322581 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116533934 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102591868 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108076464 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111819841 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104925046 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116355035 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09677025 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.114250921 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113274335 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098743845 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118884723 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092873213 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110233025 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108363624 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093745777 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109670681 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093164559 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121895023 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113905567 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093262207 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115268534 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094755674 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11321263 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094007331 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108274088 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119246556 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092071393 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120536342 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088220513 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109029144 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09270686 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117478234 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114331884 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095755368 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.112247938 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093216707 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109313593 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113103873 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099518998 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115377818 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095908276 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115480774 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114541962 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09270275 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124600219 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.091523926 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114962471 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124921512 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099086606 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116116534 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115750914 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101291366 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119524274 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094440891 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119332146 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113340735 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095530901 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120115752 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100240103 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127485652 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115315666 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088853493 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.116516449 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093822961 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109862053 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121860472 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099319771 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11957077 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115506352 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092590666 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120380211 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10198885 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115782917 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113548953 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09342253 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.116382754 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092878413 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115790709 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091615061 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.121427328 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.119754935 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096509204 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.121043214 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088743904 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125718339 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.120219139 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.099292393 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.111905364 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089376578 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110689876 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.114105285 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09984871 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.117577663 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.095199351 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.11626429 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094829045 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116854748 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116275617 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093439498 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119821816 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098541574 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112894174 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11967752 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095559225 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117779101 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092036299 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118024102 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120203104 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098342066 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125733513 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097912546 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114613563 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.114231576 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096941089 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11436 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097078934 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116106861 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112731707 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090068395 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117832349 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101037278 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116352282 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098983194 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122266234 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115075297 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099226138 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121884934 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.116045044 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.092217469 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119851964 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093661601 seconds)
  done (took 63.977178806 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.169071029 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100596182 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116133091 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093552378 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144739682 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116605233 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114766842 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095817418 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116495372 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108266279 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113673685 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114577804 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.140024946 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149377968 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146024152 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108252063 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113432017 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11614148 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093802813 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118144421 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137247567 seconds)
  done (took 3.333124545 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113855593 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.130426737 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130662341 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.136657371 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125428873 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111050961 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.134886732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132937001 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137545975 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128681743 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136185957 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.131850552 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.107662978 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.128651177 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128399226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127153556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117722946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126244018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132902339 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13434402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.131085311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113709661 seconds)
  done (took 3.600343108 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097246009 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.114830401 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099062136 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114449019 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097403923 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.113866591 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124356134 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093929321 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.124024649 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09470016 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111105449 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093640827 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120206706 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11340565 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09188463 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.11427504 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.103352061 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.118205003 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098997146 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11477105 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.132686098 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093928187 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114789855 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090194466 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.130318715 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.120278746 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096866458 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.118056249 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090547934 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.117902292 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.093184609 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.116771635 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118193895 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091991359 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.112304026 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.097439272 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118995565 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.11424611 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094322585 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.119907771 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.093807369 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120210977 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122950435 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.093679418 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.113551903 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09710657 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.11905855 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.094177899 seconds)
  done (took 6.001240574 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.154282416 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.172648523 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.122153298 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164022241 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138242209 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10667608 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.120368459 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.173167125 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.116362222 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.096338906 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.141755121 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.144050075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.13492634 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.126800474 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098689625 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121652527 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.126223675 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103946501 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.133181079 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123935645 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.129765719 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119633807 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.136713097 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139180738 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126648782 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101736685 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.135790105 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.13175756 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.134742327 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112082494 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128935985 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131886831 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.140493374 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.130575792 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101124012 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.135759903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.138442547 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124519351 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103598224 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.120437276 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.116747709 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133161202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.122537409 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.142823126 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125406648 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109741664 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125594544 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.119770701 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120067251 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.141240707 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.131388631 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.14291491 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128764158 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104209517 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.14172182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.145516278 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123504203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101708234 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124742952 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.141827913 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101805375 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127315041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.142827323 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.134806562 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106788291 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.140008306 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129233047 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12787983 seconds)
  done (took 9.646208998 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126624865 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.122727629 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142240843 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143186317 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126385096 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.106247779 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.127753882 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126560357 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106779376 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.137500796 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126658582 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219099355 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123593351 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.135135849 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106042954 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130480556 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.127102409 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126861791 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106354228 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127441262 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126664093 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.141973746 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106871641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.142125924 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143551907 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124621767 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105794277 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128080721 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.143024178 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127773526 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144046936 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.105363991 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128559713 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.142436764 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.14476073 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.128083176 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098028855 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126759512 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.128460409 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106357279 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123813535 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142643806 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128224597 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103204027 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12804274 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128577307 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.143874246 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.143145761 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113034871 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137073661 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127018821 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142438384 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127683641 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106414039 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142541834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152260336 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141861914 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.143436834 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128016667 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.14342677 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.143191093 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.152257425 seconds)
  done (took 8.897153697 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088277603 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109230317 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095506174 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117370295 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094327549 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117872404 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09598333 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116799654 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095487339 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.11643628 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095198253 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116350297 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095015618 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116825885 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094829014 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115591625 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095029489 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118574874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11638012 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095054185 seconds)
  done (took 2.922665604 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101918301 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.137861421 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121070822 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108572885 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.120948463 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130307875 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098717016 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122264425 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120000827 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100778391 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.13267961 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134349198 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101217708 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.130578143 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133262749 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.130593925 seconds)
  done (took 2.746397362 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117227423 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.138598686 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.179115807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.125195377 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123001427 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108943693 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.122098307 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100732447 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120069439 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128433853 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103698543 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125095544 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09917219 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.122545019 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121671997 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104899727 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.119233029 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104460068 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.124031188 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.17936556 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.129616743 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102526252 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123951054 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.126159641 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102927254 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129640702 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129677199 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100152893 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124345789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122762616 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10451024 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131322846 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120101791 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106243599 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122311813 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102549271 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.122163669 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121938401 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106093116 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121842513 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100996048 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124780365 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121617955 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102892303 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.119695008 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.098894373 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.121061604 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128911481 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103159178 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.126935663 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099658409 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129569223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.127613711 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111463243 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133193658 seconds)
  done (took 7.389546555 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107477285 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115889063 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129710179 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092977343 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120328027 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10358784 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123761481 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125247292 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103858844 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11883102 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10301611 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125176702 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124578954 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102220605 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124359949 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100828305 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119811152 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122359588 seconds)
  done (took 2.889681805 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100096169 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115401977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104323936 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.118666212 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099471901 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122845144 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120219479 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098608776 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119828938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099973437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122093955 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100162538 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119628218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121541124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101199734 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122955817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.099809925 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120406055 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.12188063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098412079 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121984775 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098900184 seconds)
  done (took 3.273297725 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105679689 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181528381 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.133694841 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191363267 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.122145826 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119869924 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110486048 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122691514 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139915089 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098082485 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119103768 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097640557 seconds)
  done (took 2.372680601 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123704632 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162891262 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12296226 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100786653 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136260819 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128916204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128661862 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108749114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141578954 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145350512 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130318978 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141547881 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11965215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143727121 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136199592 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135155105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12997114 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107119064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123543504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15408279 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129896622 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143921169 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109224307 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128994789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130267069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14315322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118823605 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148464711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128995911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141873873 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135594569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107890131 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143234255 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146583703 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123157827 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142760331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10745967 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17722136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114514487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144697771 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122815392 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135790503 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120192469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141102246 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14239496 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12909731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138267377 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10882549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12964045 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163837323 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137789999 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145848207 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133938146 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135687429 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135598382 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158745093 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147960385 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145666366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1147752 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147488851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145138316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137181107 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145234276 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148392275 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136733129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147650595 seconds)
  done (took 9.718943487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164857843 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097411216 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128485311 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148195311 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146937887 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108544058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131363167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130478172 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107202215 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126488895 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184639177 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129364662 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145526599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144790211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129120716 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109549668 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130066132 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14530362 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103176893 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184070205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108324022 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145434019 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143647581 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148901417 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148290909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136465982 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10851412 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132171322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129968727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12989617 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117393746 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131233809 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144515942 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125861065 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144516164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108750173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129867805 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1411712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108360198 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138707551 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145013998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.155991762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130543889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128783831 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145919318 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10548173 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126862956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12131127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101532849 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117547322 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142104012 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139317883 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139931002 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137163696 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104633355 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122784762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122165266 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101485659 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12319599 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128975946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138676258 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100125699 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176346504 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101937023 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124197166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145160799 seconds)
  done (took 9.483348649 seconds)
done (took 173.574867067 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.155245337 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177343867 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.164193169 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157414047 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108932243 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122028602 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143091897 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153609294 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111151245 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0909592 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.111732471 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094583065 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181980346 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087763992 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108000811 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112546495 seconds)
  done (took 2.913750812 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.210132288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308928458 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.139832932 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122601479 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104694967 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.121350375 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.097962368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120302422 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11457213 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110496721 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115472865 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090781711 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124425114 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111468506 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089491176 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110705155 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12360711 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090760074 seconds)
  done (took 3.146414695 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114860203 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163133196 seconds)
  done (took 1.121528323 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129012259 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218724548 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297853708 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172019306 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.141428108 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137053747 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173228723 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129685116 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205670534 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136383356 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13533353 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095507862 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142535519 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123626661 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.105485554 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116305269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146330558 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.104568006 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.125727333 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118744988 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.377259376 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097204333 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123999928 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125153244 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19416379 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136253793 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096380468 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117045305 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118465342 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103808406 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.12249469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135235517 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.134711686 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183990289 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122435301 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.200941429 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104386007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115355329 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124923097 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094415045 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120055604 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12101304 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112682856 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117006605 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116610591 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103276729 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117755283 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116577183 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106004574 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129079935 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126126379 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.124196181 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178474143 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128456977 seconds)
  done (took 8.340898587 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.908979665 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.168682911 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097271663 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.040009354 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148849774 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132312438 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.909306833 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121771825 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.283336012 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.903103916 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132426507 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106716976 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.287783997 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.273109713 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.193391502 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.396863122 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.752318443 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.138756794 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147085007 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.169682517 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123688804 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147577455 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114926978 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.475136989 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095352854 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114870314 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122298157 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105747345 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.204441073 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091907825 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119352127 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.22509843 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286604187 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232036082 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117780134 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091318863 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113065408 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188369117 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323252283 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.250263882 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18832228 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087868391 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112512715 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127728577 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115876657 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110822688 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205975382 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196472535 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.215836223 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097129374 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128565622 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124465517 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127621102 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184098679 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111449744 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374341648 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380629959 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113517602 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102309656 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135066646 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29827394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113785265 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261244506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144515119 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244691092 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112431912 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816210562 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188669801 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113952243 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103481863 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122972618 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120498117 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127495681 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180454033 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396807554 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131872188 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097258408 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113298588 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.281257353 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091569677 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114318551 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184451426 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116552568 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125240958 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1116014 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130745389 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.21430315 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27135439 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131443313 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124818387 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099094072 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12941103 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116298906 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230766946 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.276253695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.180335453 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.257842662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107860679 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207318237 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185678892 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127208647 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.21369135 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101797459 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134385989 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130185642 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251819365 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155033913 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114687921 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098802543 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123355812 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160590713 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116866016 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123461609 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191225118 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.515358808 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185181261 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11257663 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096239905 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124887949 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202107052 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10217265 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292376366 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126099049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189594534 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124833542 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111810227 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101841352 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.207649275 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1322347 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125632472 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106526566 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124386215 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.292186947 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252576508 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10935796 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270853811 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193301223 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126794694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217374039 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103571328 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21456898 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125599364 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105307034 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11733752 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810602503 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13057597 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124031601 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100157289 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20836374 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114896572 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115018341 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091835327 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112382769 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848192801 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095583064 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111984613 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093058009 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126025535 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12562838 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121771064 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09911761 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204763674 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270523908 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128691774 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101725114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115165369 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179930009 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11720281 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11428072 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092867509 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115089014 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103808047 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121507758 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115597623 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193281095 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.201282471 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254885824 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590161056 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091576261 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114934389 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266258167 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115320753 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33963326 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12403972 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.263671483 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189947147 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111799461 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372390244 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.213069119 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.216159473 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095947032 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216047095 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088992611 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124394689 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.207154761 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092138836 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124459907 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17922067 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134798801 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132431631 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.194905443 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115090001 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25183926 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112706381 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190560447 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117999748 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130341184 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344610922 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113659159 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116067477 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.206797418 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097225346 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114645732 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.733819441 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092331426 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128365734 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126038522 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259880653 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.208971269 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102768099 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12477728 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130674602 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182577227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.258706568 seconds)
  done (took 48.210714788 seconds)
done (took 64.572980072 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.33184059 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.285762166 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.342030536 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237050749 seconds)
  done (took 2.14806414 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238608745 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164772574 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.217952911 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091079777 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.228774124 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090500214 seconds)
  done (took 1.90216443 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.547430879 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.447725951 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.380070208 seconds)
  done (took 2.251695937 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26894619 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.299463119 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.36979763 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.500326039 seconds)
  done (took 2.420065796 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287866241 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115354347 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131988803 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.185902387 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.258953289 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.285455561 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160455799 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210310082 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118908406 seconds)
  done (took 2.677703481 seconds)
done (took 12.274971844 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.299205894 seconds)
    (2/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.321882674 seconds)
    (3/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.322492056 seconds)
    (4/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.100155882 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.203864906 seconds)
    (6/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.179094471 seconds)
    (7/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.235039844 seconds)
    (8/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.16929728 seconds)
    (9/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.168882109 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125114883 seconds)
    (11/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100671595 seconds)
    (12/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.27410346 seconds)
    (13/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.205116842 seconds)
    (14/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.273162642 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.154052356 seconds)
    (16/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.266960031 seconds)
    (17/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.130974733 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.200276297 seconds)
    (19/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.196240278 seconds)
    (20/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.168904995 seconds)
    (21/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177039605 seconds)
    (22/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09744371 seconds)
    (23/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.219004904 seconds)
    (24/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.156592588 seconds)
    (25/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.119484949 seconds)
    (26/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.2353162 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.155943074 seconds)
    (28/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.300204857 seconds)
    (29/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.108118425 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099153045 seconds)
    (31/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.252440162 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133808611 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.251125553 seconds)
    (34/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082819271 seconds)
    (35/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.221041892 seconds)
    (36/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123640213 seconds)
    (37/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.208781082 seconds)
    (38/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116395718 seconds)
    (39/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081718813 seconds)
    (40/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.173691084 seconds)
    (41/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.13516533 seconds)
    (42/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192041065 seconds)
    (43/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227959921 seconds)
    (44/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.25908522 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13660691 seconds)
    (46/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.198483573 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.154555303 seconds)
    (48/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.244789936 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.198466031 seconds)
    (50/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.111324222 seconds)
    (51/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.204203108 seconds)
    (52/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083027626 seconds)
    (53/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08324276 seconds)
    (54/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114874229 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121941753 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100941215 seconds)
    (57/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.132157384 seconds)
    (58/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.155468681 seconds)
    (59/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105649009 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.10769324 seconds)
    (61/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083034623 seconds)
    (62/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136169773 seconds)
    (63/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.164232691 seconds)
    (64/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098242981 seconds)
    (65/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114419848 seconds)
    (66/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.221584764 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.153500346 seconds)
    (68/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11584459 seconds)
    (69/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.287470961 seconds)
    (70/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.218827217 seconds)
    (71/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.226947762 seconds)
    (72/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083220913 seconds)
    (73/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.170041512 seconds)
    (74/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.101424163 seconds)
    (75/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.120779762 seconds)
    (76/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.174055451 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109935965 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14344094 seconds)
    (79/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.168722767 seconds)
    (80/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.145129339 seconds)
    (81/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.138287629 seconds)
    (82/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.164247998 seconds)
    (83/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084122781 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136138031 seconds)
    (85/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.16891464 seconds)
    (86/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.146119665 seconds)
    (87/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133309998 seconds)
    (88/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.207727404 seconds)
    (89/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.144244602 seconds)
    (90/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084427964 seconds)
    (91/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.16650631 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12267184 seconds)
    (93/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083800531 seconds)
    (94/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.106889264 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099396633 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.139134266 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121047367 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097781572 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121533789 seconds)
    (100/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095420683 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136169362 seconds)
    (102/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083084183 seconds)
    (103/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106600236 seconds)
    (104/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.122329014 seconds)
    (105/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.106539646 seconds)
    (106/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.162302453 seconds)
    (107/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.177922302 seconds)
    (108/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119835147 seconds)
    (109/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082863538 seconds)
    (110/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.244941981 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.201596692 seconds)
    (112/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.196089121 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114278072 seconds)
    (114/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101670357 seconds)
    (115/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.202504851 seconds)
    (116/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.10641955 seconds)
    (117/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083709314 seconds)
    (118/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.154472186 seconds)
    (119/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084372441 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107608472 seconds)
    (121/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100534776 seconds)
    (122/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.105474266 seconds)
    (123/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147949329 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.133520085 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122347068 seconds)
    (126/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098465075 seconds)
    (127/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.219657354 seconds)
    (128/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126893233 seconds)
    (129/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.123596008 seconds)
    (130/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082899528 seconds)
    (131/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134912777 seconds)
    (132/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100825649 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.126439311 seconds)
    (134/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083910355 seconds)
    (135/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.204871904 seconds)
    (136/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114824256 seconds)
    (137/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.08204073 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.123212776 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100534848 seconds)
    (140/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.108160741 seconds)
    (141/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.082620403 seconds)
    (142/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106170092 seconds)
    (143/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.112552202 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.133686332 seconds)
    (145/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084219425 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12340092 seconds)
    (147/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13465468 seconds)
    (148/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.146172361 seconds)
    (149/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.107905282 seconds)
    (150/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105581998 seconds)
    (151/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.119245917 seconds)
    (152/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.198856577 seconds)
    (153/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.11408077 seconds)
    (154/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134985831 seconds)
    (155/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131981404 seconds)
    (156/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.102261113 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137270415 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.137226604 seconds)
    (159/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099386428 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107652125 seconds)
    (161/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.215078341 seconds)
    (162/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.089067363 seconds)
    (163/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083121294 seconds)
    (164/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116568579 seconds)
    (165/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11993764 seconds)
    (166/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082891221 seconds)
    (167/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.125252393 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098886347 seconds)
    (169/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.129143043 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.126272532 seconds)
    (171/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.139722931 seconds)
    (172/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.108003802 seconds)
    (173/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083302303 seconds)
    (174/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124994073 seconds)
    (175/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196896147 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.085088005 seconds)
    (177/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.089563333 seconds)
    (178/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.107308972 seconds)
    (179/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100583251 seconds)
    (180/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.169097596 seconds)
    (181/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132563048 seconds)
    (182/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122808554 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.11714385 seconds)
    (184/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132281764 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091507639 seconds)
    (186/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.107608248 seconds)
    (187/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.089389582 seconds)
    (188/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.125373454 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099573577 seconds)
    (190/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135720659 seconds)
    (191/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.152123718 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099514054 seconds)
    (193/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.13844424 seconds)
    (194/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.082766801 seconds)
    (195/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115442832 seconds)
    (196/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.082837209 seconds)
    (197/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.114224663 seconds)
    (198/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.111685433 seconds)
    (199/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10723904 seconds)
    (200/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.08462983 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126876198 seconds)
    (202/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083746162 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12373476 seconds)
    (204/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.165723573 seconds)
    (205/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083699947 seconds)
    (206/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.217254975 seconds)
    (207/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138158015 seconds)
    (208/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.102395854 seconds)
    (209/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.10897756 seconds)
    (210/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084761378 seconds)
    (211/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.11388809 seconds)
    (212/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.092589958 seconds)
    (213/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.107009424 seconds)
    (214/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10373067 seconds)
    (215/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.123760783 seconds)
    (216/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.083552426 seconds)
    (217/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.107320175 seconds)
    (218/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099556258 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.123907858 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084324852 seconds)
    (221/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.107466177 seconds)
    (222/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10027332 seconds)
    (223/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.153460718 seconds)
    (224/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.09136841 seconds)
  done (took 32.257699292 seconds)
done (took 33.140623994 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.510872014 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13394502 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103173311 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129203642 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184604585 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131611155 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11150573 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.133078521 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.132793219 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.101112733 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118701063 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.109182902 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127480362 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185166834 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.132286285 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.095758616 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121095731 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.132368138 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.112021534 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.138595027 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183340387 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121167279 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108478706 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121274519 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185882289 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122168256 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.102894535 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128194201 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132666539 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101650262 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127304005 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09568077 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137653511 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136561754 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093303808 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.12558008 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093736514 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116089279 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.125173932 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102484667 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.133977848 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10176463 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.130730892 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121811237 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.10170245 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124475513 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093114365 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132571545 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.118501794 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103767954 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121252343 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.13794044 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.101477728 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117805383 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092638626 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121707852 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.133056996 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093519302 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133421804 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093485615 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121212463 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117031209 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.103733017 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117395148 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.099786527 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120270039 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.12533174 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103131047 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.125406646 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09653542 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117200927 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.100250102 seconds)
done (took 9.986528612 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099730897 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180625211 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.186451282 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.193550775 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154574397 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138756954 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141153866 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151980866 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11189028 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144644487 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157895322 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15059124 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194087145 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.135216322 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113562599 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.127072198 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134246093 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109016003 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.195557572 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146992109 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156115609 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134396212 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159230653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11824028 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126027051 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150316351 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128647369 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102479315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126762102 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142973805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121839971 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128024879 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127501138 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12311115 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.138220892 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131207118 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113524859 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.127341523 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125267235 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100309826 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141327908 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143713202 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100322231 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138509379 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127969043 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106767824 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134275318 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134062131 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103090579 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129372541 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129013572 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132219604 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.134629386 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133795397 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.134198744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107971865 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.133553761 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107314199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129407974 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.133082 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.099842334 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.127634726 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12953919 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155110182 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104540299 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.135396719 seconds)
  done (took 9.757049354 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121509307 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159445106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135694511 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.136482728 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108624478 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.116629797 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091179568 seconds)
  done (took 1.800119451 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093470431 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187945999 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187723244 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187227133 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.205978717 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.197573929 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141399214 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093457828 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.156946073 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129700381 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187890073 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219782574 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.127208478 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111761941 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215500951 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094096302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190454368 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11893994 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131062979 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.188155718 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111548312 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.150945332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135716645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094114872 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207056027 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095174489 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269151612 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110300976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125626271 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.104057274 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133623712 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205182107 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181595452 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135447459 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123505247 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18430713 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182668901 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131737537 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200153331 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098945493 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.181868198 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.132614952 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.132699976 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.108024211 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130349859 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169095313 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137194694 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107630118 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.128563958 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189444374 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.133029628 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18317418 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101782946 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132302052 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131532765 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108796157 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138385547 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.132113877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192314301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133772898 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184428214 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184330686 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18331121 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185105981 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142561031 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.18436992 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.181292223 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103937294 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12917087 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.13263576 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183787645 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105063954 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.133652444 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170574949 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136354147 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185499641 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184440944 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128912126 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.110152281 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124383068 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103595391 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120500898 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171946956 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.131986686 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102960769 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142302419 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133531343 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106300534 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122997737 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.14554158 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106185926 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.132571206 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.136289267 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105750781 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137019066 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185302505 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132149259 seconds)
  done (took 15.182040152 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096423397 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119332085 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101344923 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121384171 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095086753 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121645568 seconds)
  done (took 1.605267579 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130340243 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.134138079 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.143465888 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108592393 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19121716 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217557346 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.193925267 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132635702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.126177358 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1444226 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190366828 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195489814 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216876155 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111490118 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.19461403 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137341603 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195186995 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132788339 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.143318392 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10455747 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141484223 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136498744 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104241094 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.183831705 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.139408305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.135586133 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133899359 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117396644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14274517 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.133930341 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110761609 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135749289 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129118372 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131471888 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.19764989 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102877579 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130729014 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140928067 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109926005 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137191283 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194719069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130761248 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142105171 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14054309 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106531487 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130321999 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.140127234 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107807769 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221000055 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.114753046 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141126625 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.13557473 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.137738011 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.11530483 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129512872 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131956791 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.114586633 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220945682 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111508276 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129655672 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.136397584 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.111705658 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133640069 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.139487652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.136557114 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115424207 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.130322606 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134778615 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105767216 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136574631 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141216432 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11030704 seconds)
  done (took 11.12502925 seconds)
done (took 40.398823138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.169015326 seconds)
  done (took 2.117649418 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.982387133 seconds)
  done (took 1.934547593 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.591896688 seconds)
  done (took 18.576871534 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.574028 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.654129744 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995959702 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150119767 seconds)
  done (took 3.325305577 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.006322477 seconds)
  done (took 1.981215223 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331061856 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.286455504 seconds)
  done (took 1.574811426 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.870097898 seconds)
  done (took 1.83479719 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.474943366 seconds)
  done (took 3.434110566 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.387876051 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.200035587 seconds)
  done (took 1.560948265 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.681968945 seconds)
  done (took 1.65106639 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.216330714 seconds)
  done (took 37.184683427 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250045208 seconds)
  done (took 1.23085616 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.320383809 seconds)
  done (took 1.289965537 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.709407802 seconds)
  done (took 4.68109395 seconds)
done (took 83.341080256 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106045883 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133806722 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108846832 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131315397 seconds)
  done (took 1.444933707 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116988243 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.134394624 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.136904907 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107105746 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.143170051 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.107753741 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133118957 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140429741 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106585589 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.136103156 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132887692 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10813078 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.135285173 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131202146 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105926026 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.135032544 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110198244 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.135471817 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.134097097 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108595529 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131576702 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133416569 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.111521225 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133723742 seconds)
  done (took 3.983593653 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107748971 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125153551 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102245044 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.125140005 seconds)
  done (took 1.435319509 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116546877 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.150598378 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148736958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114727947 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.150954205 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.148518516 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102587076 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.128018555 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104907645 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.141510471 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131464364 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152905971 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.123178617 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.13526404 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.143238386 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.101549002 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.13465192 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123844357 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.141150555 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140391143 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.102657676 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.140650827 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1289574 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120711988 seconds)
  done (took 4.104426756 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218666329 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119152787 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.15864526 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.187447737 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.159318842 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.103474871 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.161693985 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13818862 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.140559176 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.110957704 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.136951765 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.194485611 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.134645344 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.112158406 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134807271 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.140503393 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111400115 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135004533 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.137847494 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.118683225 seconds)
  done (took 3.838805518 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108978828 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125408812 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094046043 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12469452 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.131690981 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102069061 seconds)
  done (took 1.672310417 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095730917 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117976441 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094476398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118300165 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100584036 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118673134 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091410815 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118670361 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093234868 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119348708 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092812441 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117940947 seconds)
  done (took 2.263847495 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.309795167 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.099060237 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129405273 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.12356433 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103051493 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124759673 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140753582 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09688536 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.262212277 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125416606 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11470429 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202128306 seconds)
  done (took 2.811228148 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234741685 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108893013 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292709371 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40200646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181725919 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184901195 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293650739 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186068899 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.235569031 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127588615 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246254109 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172636726 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170115633 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201171862 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154050457 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.15759258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218862067 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223522304 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164873935 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230606842 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183102202 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184724677 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226700136 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142085951 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153424077 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177053872 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132617345 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114905511 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220299764 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188979105 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195527622 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164768211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156687576 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22285903 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274204823 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203849141 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.361726654 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122869345 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.212583649 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.22803932 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261149881 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155227133 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24484798 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14611094 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14591943 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202773833 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173807025 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.229258514 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.122506131 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156572776 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234325682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195773825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207971872 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153020874 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322240277 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169941069 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167384677 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195176465 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21384611 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242334548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18494705 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107182953 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228613158 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209655142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211592621 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163007012 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190935021 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140545129 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196434281 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216541847 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227615211 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185822285 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.206102601 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148498116 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180917154 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187709047 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170204746 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196933668 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177929572 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.131569795 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165848107 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124870129 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141285523 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202027354 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107487031 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255126878 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147724784 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.207662992 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225513 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174197175 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178759148 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182057778 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185433895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161974311 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.132248316 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161197784 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177420276 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175030665 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118770214 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174030904 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159704999 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.14297733 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167604357 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.108193913 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178559958 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.148804207 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184309674 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182175322 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.144643684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180740457 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165443216 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.178815264 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190550763 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206018715 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146030729 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144049812 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217194597 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174496819 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125665234 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221643551 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209778403 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.184926071 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150559367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190244506 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216856753 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157686113 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209373954 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157159624 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149201597 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171011487 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175493017 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1730735 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.169332427 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118232347 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.17041793 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242248427 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.113604268 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14874485 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192498434 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141287992 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113673497 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159193347 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151948186 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.155705095 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.167636285 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129964054 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171639163 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177063518 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17057506 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176876003 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158530019 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247388665 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118712776 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.176655582 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162063829 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131598004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204564869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203608633 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144659371 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206262214 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19231896 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241370793 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18150937 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142184622 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20111964 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113960317 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.134131009 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18657609 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181411511 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1803137 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205424163 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236313034 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188993025 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171470392 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164610366 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186663228 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195149124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176150597 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.159936705 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179142823 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186737273 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134610357 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110030025 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.14333608 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155010985 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143835539 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11809659 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229193185 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182537113 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204418345 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177530398 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154838284 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203356886 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.142023949 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18281933 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.195118052 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152591468 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209379546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200356832 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184572856 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157117457 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190188381 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.134697717 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136547283 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123639029 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186995533 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148607461 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148456987 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158668399 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20403795 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195308185 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166141717 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246983591 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189022349 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215095441 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.135430589 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151499913 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21594223 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172258103 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177506806 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145060773 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179384052 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198574228 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159625568 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214970804 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181165059 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18697497 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251645229 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173642872 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143108348 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138487409 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214032456 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127046831 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182846274 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16231313 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150419261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16943398 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.153423953 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113800667 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231902156 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158145857 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203950538 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174175924 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196364616 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138944781 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161324159 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177540923 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159231037 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103570426 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189757626 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239540727 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160180985 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176863628 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195079379 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11472643 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.354956739 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212878062 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206029937 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152010532 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159076692 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179240196 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177106693 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183829056 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202523299 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158758144 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200978414 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175948477 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158563695 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120922087 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164708738 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168912799 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170747526 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151466569 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172094518 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155364327 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208840444 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158869732 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176478538 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182165223 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.161319385 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144311015 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156674628 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221272126 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174290046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227829981 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.171257738 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188461525 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208644494 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108266555 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141808093 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.141763717 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203363014 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144567039 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175645597 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197909909 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215748024 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175508155 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214862745 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124981498 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.13813335 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178264857 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164312326 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216357277 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162153165 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156420052 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214933405 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167356858 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143341278 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18064832 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297315096 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159476517 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1936176 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104850588 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314416652 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112564311 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146050063 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177232242 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190453787 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.165595273 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198530563 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18697706 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132291774 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177598817 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151873475 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233385965 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229099269 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191298755 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195804995 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159580639 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175978761 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180048734 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221695813 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129821719 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.163148628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178441888 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201346976 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210331884 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.151308593 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180477313 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179734285 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177391674 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225023412 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119966931 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206995503 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145561147 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185676999 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156001661 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138635872 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176865677 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199713374 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147250957 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197528229 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176080952 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144041501 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113659583 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168622631 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17622401 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160539167 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.143662922 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201139329 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139806192 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18075565 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200097493 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114847158 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174676906 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161067125 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147669396 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158556994 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131384605 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149448269 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.185091029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206893297 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.148046735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196491278 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192872493 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1824407 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176709107 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159901475 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679660789 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.142789302 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20250061 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162181837 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214075997 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164465424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183879188 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178778614 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135567762 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18861644 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166664061 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211624595 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215965004 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178450494 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115998896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160403986 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162528154 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147557488 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169347174 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180193793 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126416848 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153965253 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177078878 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162504489 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.161448436 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151338016 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205429148 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161842248 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206838461 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203953441 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155536538 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184844472 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198469454 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144542761 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182714739 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192410533 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158090228 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171204883 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.119213295 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153895012 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197963284 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.137489623 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179548843 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177292831 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179852302 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181129994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150569572 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149614404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157907619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178255024 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141323597 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177311619 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174685926 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145764568 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114609333 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173174808 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177216281 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.176014121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143782918 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16229556 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225710511 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107564377 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148332845 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319684013 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18135057 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216846114 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172302423 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149916761 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158288397 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175003724 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174660702 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177469197 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.116117076 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14522377 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14787694 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.198012244 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174645563 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173663298 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197783991 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179491876 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209346814 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161246071 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284678654 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125152771 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173026072 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.147116824 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.14690746 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126873664 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148769779 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162615328 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207536416 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197817716 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.170737629 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.162472791 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14361806 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.109623451 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145524241 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179298581 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170701494 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176065871 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162879253 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102909422 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159993171 seconds)
  done (took 86.321381704 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162187547 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152465845 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157261808 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.209800845 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177889312 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270250127 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.218996594 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23942279 seconds)
  done (took 2.65777476 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.135956101 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.121450782 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152681934 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134663917 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133633432 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.450813129 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.149860552 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107214243 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.19741749 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.17293669 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104918937 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.683376855 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.135887084 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133424926 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125192888 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134413467 seconds)
  done (took 4.134959379 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.504642217 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.565306437 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.076790692 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.265954123 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.249106883 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.190696526 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.769113629 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206968045 seconds)
  done (took 12.89385407 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137434833 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152232647 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.352726095 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.221842755 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171260013 seconds)
  done (took 2.110650065 seconds)
done (took 130.640735611 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110179343 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.155527972 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109476513 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154957046 seconds)
  done (took 1.592546316 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.15688126 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.122017212 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095496019 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.12081109 seconds)
  done (took 1.571146419 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.540902627 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092390734 seconds)
  done (took 1.737836159 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.136323372 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157373865 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154636227 seconds)
  done (took 1.530022239 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117039479 seconds)
  done (took 1.191845504 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110565902 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.140852638 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.193294997 seconds)
  done (took 1.524300498 seconds)
done (took 10.224072415 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131916027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440858244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423019989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117530321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729996676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415388869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.089233415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168755987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203282657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098170844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14818242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677789649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.039537751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378227328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99444125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374607875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709388131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101569253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134224519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100949449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.065638369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125622354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100651258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1286305 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678292052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.433305891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125919973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.365362404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126468678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129931402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389160864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125944935 seconds)
  done (took 17.338859228 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144616417 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193934425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137058333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099932419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131524655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126854779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11024163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142245019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203306001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127484527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119120316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126853534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131253389 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100335884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151099014 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098276868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13120922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129221874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106992379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12872345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120345248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127637058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12776887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101940577 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12749857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113487722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128212037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139985681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099971937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132441637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104727405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127852025 seconds)
  done (took 5.168993954 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149771976 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203416247 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137298989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161690715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181768968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101506454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219882947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169775326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20355833 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127499431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150013089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098976839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168796065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125754978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124567219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127170715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102621967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130343915 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135177955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103129411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149484187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096847809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129815382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130649804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099602802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143480312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098725237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142710293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12756366 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103858876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1342649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126991799 seconds)
  done (took 5.490896587 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.111475824 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141195488 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121443385 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151837345 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.136144889 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.111956278 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.140841274 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10550883 seconds)
  done (took 2.101810381 seconds)
done (took 31.17724218 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125999034 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146405139 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118502915 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141177459 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.20186711 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100853253 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.145375874 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.129912852 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112682675 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149374794 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.099491436 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.133956363 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118312991 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.137701036 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.185880569 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.14111995 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.190899256 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187862211 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104632844 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142236208 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.104458179 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.191861916 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140880215 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.104568213 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.1966097 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133022709 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183543598 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136530672 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109070573 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129645221 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186568383 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.110293355 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134982975 seconds)
  done (took 5.75096651 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202206267 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.215822271 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103476292 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.133423403 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.21391903 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.104358393 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231046161 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104814975 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132920879 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104179907 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.13298233 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.204065757 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.211915104 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.226444191 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.242636218 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.211512644 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.20016287 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.210974386 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.199286037 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.214574453 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.20130746 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.133550844 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.215079222 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.215998224 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102864039 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.134301111 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.237645875 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.209654078 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.23798982 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199370526 seconds)
  done (took 6.577772418 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113949747 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146023336 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124851466 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200873559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173690457 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.142728233 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112393715 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.153313516 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153633126 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.10011007 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139784934 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.137159839 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147044508 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139904163 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105521609 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.149002832 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.153801861 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102368525 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.136500887 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120940259 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.148315806 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.148157334 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115460109 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139375011 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099603172 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140595912 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133401171 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11382876 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137378216 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108194845 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135019444 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.132732303 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1039676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13934688 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104659768 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.142191768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156789133 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108277113 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141636754 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165780895 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108336834 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134570704 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.15059901 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.14801355 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132610409 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141310189 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113070307 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140898748 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099492531 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150632016 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114478573 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131339332 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.15307933 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09876326 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129172874 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137009886 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101638983 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133704084 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108798654 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133702876 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.156844658 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108352785 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137438554 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.10325606 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136374618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.100006812 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130851417 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.137184032 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.126110369 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135837854 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161779341 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101920663 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.140382728 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10844168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136386101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137937083 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101480655 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135086325 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10847165 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.13690767 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108961275 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.134472044 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133781565 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120483661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.152526407 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.144204501 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.111546207 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141645519 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103661746 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131971845 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143160895 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101750242 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.13495803 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109847141 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.13235215 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133694186 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111755804 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140764709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098604426 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14935922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.135482706 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100387121 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146776914 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.10264398 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134709851 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.11102644 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.143442839 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129673785 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110944569 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.141513046 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099022219 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.135388433 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.132721979 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101576185 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148914352 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110851912 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.135326267 seconds)
  done (took 16.237499754 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.304590036 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315446808 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21156291 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.405925308 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12493015 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.230566767 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.280200472 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.231450852 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132299979 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175995706 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192864412 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272150557 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101045898 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165218633 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.283972736 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.411334785 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163992145 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17702691 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175568801 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127478643 seconds)
  done (took 5.59466193 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126460873 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174713363 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162557324 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.165137053 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.106974426 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145459643 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128490198 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.128535402 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.139352493 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135719568 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.10102932 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.145735023 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108893703 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.140152138 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.149641609 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148830074 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136192634 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136659134 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.124034069 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137506595 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.141331886 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.15972896 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112057281 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161391095 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.148205918 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116401642 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.130682445 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138157218 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.105560467 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.136107988 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106930821 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.15284031 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138030541 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106832054 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.14100864 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112237947 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.133536465 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130917032 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103026336 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.133807415 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118376381 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.140937207 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104814384 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128066304 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114765363 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134797872 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.142538419 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.111894559 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.143886264 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11624202 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142583351 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.142988604 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108503946 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.150762807 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103115859 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.148731845 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145181313 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.142215638 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10937802 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.13013614 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098953707 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134123993 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.106267748 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.143725414 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139876817 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.126681949 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.148275604 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133948938 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108534019 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136641114 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104102911 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151097735 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160110422 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.1364731 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105016926 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154005549 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104822298 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122631667 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111284775 seconds)
  done (took 11.485526492 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133200153 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.136704468 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122602106 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.170111165 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.15329517 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107336349 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.136084149 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.12210874 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.144885688 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.146505742 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114015725 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145074832 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157263767 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114028858 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.135829572 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14576593 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111803691 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.176397791 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151383765 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136738287 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.149184883 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135958581 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116359795 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.145086094 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166455762 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.114186517 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165887276 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.142710661 seconds)
  done (took 5.024843254 seconds)
done (took 51.760482596 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.221193337 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422263297 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.196093795 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.190637822 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.254187059 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.215272052 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195183239 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.38436289 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.008089593 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.192192391 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.192418145 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.190440946 seconds)
done (took 27.777879161 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.245391812 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.7862426 seconds)
    (2/2) benchmarking "String"...
    done (took 1.543955146 seconds)
  done (took 4.444201165 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.185907923 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.187750919 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433592004 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.188958417 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.209322598 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.210515262 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.187879059 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.204910383 seconds)
  done (took 15.73650266 seconds)
done (took 25.725824376 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.256502373 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.405380175 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.454878955 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.208824301 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.210718491 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.198336518 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.185353342 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.226892113 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.188389519 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.185953851 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.190345199 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.473971094 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.191420945 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.587842806 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.188255041 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.194535635 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.206892755 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.430979477 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.202875888 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.239075787 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.180638728 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204200831 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.197568579 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.216428707 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.197416108 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.191601017 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.221852569 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.190726741 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.381483759 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.216754799 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.242591314 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.192683683 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.233872501 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.199093869 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301264218 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.218123487 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.383984117 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.190860877 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.188947972 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.195693952 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.386575193 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.597104889 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.190935508 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.183231264 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.214348805 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.255435923 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.188447013 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.921541913 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.201997043 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.182736155 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.281896 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.590681232 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.202238017 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.199626627 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.205485619 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.437662142 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.202162572 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.244526748 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.221386167 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.197956689 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.193202515 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.192088769 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.209903291 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.193661487 seconds)
  done (took 142.984620471 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.194168524 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.1969315 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.196177894 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.218346166 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198895734 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.19768022 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.191513608 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191098424 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.197137542 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.220422641 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.19913049 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.19367117 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.198992733 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161385254 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197289831 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.21121581 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.202178953 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.193644931 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.203259269 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.194078641 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.201125977 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.199787938 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.217729328 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.198628493 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.198134464 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.267133501 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.244454237 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.205461753 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.202534991 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.193248996 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.194456496 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.203151105 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819403889 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055489692 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.199102442 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.227870869 seconds)
  done (took 79.903378115 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195587321 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194137715 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195925776 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229607416 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19529017 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195790721 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784157253 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787487864 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.93161523 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.440854535 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.594760997 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508508351 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204917647 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289356459 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210019762 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200517261 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210799452 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.237674879 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198714644 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194846989 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785370282 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212893156 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.317632501 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376675965 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212780665 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228132334 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599682117 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19612618 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228438876 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531297601 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.24697515 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195761961 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.603804546 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.402537142 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31466524 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198141332 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230592997 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195621198 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479535874 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195456512 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197081758 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195563546 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199678042 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907432964 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199858518 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.787976273 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203785808 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.185291548 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205235263 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196792927 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.69426572 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.936466518 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218742886 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197269197 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199787635 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197682975 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19632868 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229526278 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.691432964 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.321594201 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215300303 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.2006534 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230886104 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198429777 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.381037112 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204522243 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.26052742 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264932609 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310652426 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787515091 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204924913 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295614155 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317906316 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198702609 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197671635 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19814238 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197995444 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.3078298 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196923088 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.621834275 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376320528 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216278739 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.635764823 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30420534 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198795142 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61293386 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20203768 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198669483 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.022969027 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20275216 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296856313 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198475108 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197622983 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198160177 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624193229 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791312452 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474865352 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205223395 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.199295324 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.087792381 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209325229 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.63041548 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.766801086 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915691706 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207563864 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31407343 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.379170802 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217844535 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200482484 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.611312702 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208154778 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255489873 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204533675 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59976487 seconds)
  done (took 366.798546284 seconds)
done (took 590.80037605 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.929936742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.882681342 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.019671508 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.911900344 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.882033566 seconds)
  done (took 10.749320446 seconds)
done (took 11.871944137 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400394 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.404056596 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268694184 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.403687248 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237825981 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418574759 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385422614 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22985203 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309315527 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.292280902 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.31138581 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259750835 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240364009 seconds)
  done (took 18.287244778 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47897618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.211592486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290633692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461506611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250343264 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486203213 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517422867 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.212126729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.35256262 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223697189 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216023151 seconds)
  done (took 17.82789058 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.477183183 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.211969078 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275949972 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.470815266 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250622131 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497326222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.528912919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.212892285 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346676384 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218803348 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219118585 seconds)
  done (took 17.836830129 seconds)
done (took 55.077249951 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246104464 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.373982947 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240453813 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220756739 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214001927 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217608842 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222594959 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21559885 seconds)
  done (took 11.078066755 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214895151 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211911747 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213178359 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.214093351 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213337433 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214830304 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212750745 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211799415 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.212806662 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.212299963 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.213983657 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214165717 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.213462785 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213927441 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211051602 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213873489 seconds)
  done (took 20.539642052 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.215235519 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213987771 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214142855 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.213498856 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213801937 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215792407 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216130244 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.214299748 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214154293 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.215148889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21391581 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.214832658 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215778183 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215213753 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215144324 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216114011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215074473 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.214784131 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.219622378 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214987979 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21514996 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21579949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213913918 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213907488 seconds)
  done (took 30.289555167 seconds)
done (took 63.033159822 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.220129612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.220278935 seconds)
  done (took 5.569986673 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.276974054 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.274949636 seconds)
  done (took 3.682956259 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.216487879 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21559621 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.216257335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215494757 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216361253 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216111737 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215352003 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216044976 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.2154305 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217596145 seconds)
  done (took 13.291027531 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.216841065 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215929383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216975483 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216477125 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216865609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217152913 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216981826 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217899986 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21774941 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215519235 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216131946 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217006813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218390986 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216673274 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.216661571 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21742456 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217056453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.21661054 seconds)
  done (took 23.035509258 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230950338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.237710281 seconds)
  done (took 3.599341245 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.356594292 seconds)
    (2/7) benchmarking "second"...
    done (took 1.260580838 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333272023 seconds)
    (4/7) benchmarking "year"...
    done (took 1.32362543 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.260063846 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.239177547 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.25884839 seconds)
  done (took 10.161823552 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219196651 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.411169106 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.525209815 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.787832685 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219389973 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.266126353 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.123961303 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.26510148 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.253066004 seconds)
  done (took 14.202292447 seconds)
done (took 74.672033627 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.207595106 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.267600224 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.236702855 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.237069901 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.557239554 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.232426659 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.215905514 seconds)
done (took 16.086583083 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.215030396 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.216017684 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.217350715 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.214717718 seconds)
  done (took 9.996196857 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.212285043 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581274568 seconds)
  done (took 4.926986471 seconds)
done (took 16.05483202 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222879827 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222611614 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221602033 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.223815728 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222312593 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.222784517 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.221733348 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22242667 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224463762 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219722534 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.219735714 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.219577005 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218781605 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22054698 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220347778 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219968521 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21964747 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218656745 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219977378 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219504154 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220463019 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220144009 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219104654 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221813529 seconds)
  done (took 30.438854719 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221088316 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219017378 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220399456 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220892896 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220494664 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218710915 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.2211046 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21948722 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221500041 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219207333 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220577758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220709477 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221705204 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219908324 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220187251 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221781055 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221180343 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220927249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220785339 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220357218 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221056119 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221114697 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.220641359 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220484233 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220469355 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222269001 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222073472 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221422678 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222217931 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221940793 seconds)
  done (took 37.758843703 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226449882 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228224721 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222378126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.221000894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223177782 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.222320877 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.221764115 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221695786 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222098931 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.221780189 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22216642 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221155984 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221644431 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222543791 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222522288 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222106035 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.223127406 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223267401 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221699646 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222539955 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222676556 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.224333076 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224607271 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223150313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223321803 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223169073 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225296633 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226232239 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223338177 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223580736 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224672038 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223504158 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223996289 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223356974 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.222791554 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224311388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228211664 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229591661 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221814296 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222439039 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22485966 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223025942 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223101618 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225509041 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223920357 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224426083 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225004326 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224597383 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225023644 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224262594 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224567805 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223498718 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.224780664 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224873648 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.224624989 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225184375 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223992634 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224396671 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22567655 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225381338 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226327782 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223530809 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225638654 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225867824 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226000895 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.226008233 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224486115 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225610428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225651406 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225605868 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226037808 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227454387 seconds)
  done (took 89.276105977 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227789235 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226395976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226084993 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22675283 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227108007 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226659182 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226367317 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226835395 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226868322 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.226320603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227957178 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227262033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225841241 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227957178 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226427461 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226772308 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226971229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226280395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227822793 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227686038 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227567915 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227161076 seconds)
  done (took 28.132155262 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229199384 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229246382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227512 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227156954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230319486 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228653531 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229166015 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228827992 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227898498 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227377251 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228601418 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228297387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230764385 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228171926 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229330268 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230067005 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229663808 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230052356 seconds)
  done (took 23.261190543 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229821531 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229794098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228979569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229226756 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230391572 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22905002 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229250422 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229203628 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.229700671 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22934559 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229796316 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228309676 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228862185 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229770972 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228518872 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230672808 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228547541 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230856816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230635171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229128039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230321087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22926728 seconds)
  done (took 28.191682688 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232796937 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229719503 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229649953 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229927472 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229992744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.230762483 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229578714 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230388015 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233139104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.230521019 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230159901 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23113461 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232563172 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230039384 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230085401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231070004 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230527659 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231085238 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230558936 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229766903 seconds)
  done (took 25.756528022 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233249326 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233144765 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232991894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232417602 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233631413 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233105099 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233557471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233067959 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233420877 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233623297 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234256116 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234284788 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233265218 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233161792 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233367273 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233598879 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232970955 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234451901 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233241948 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233016175 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233735503 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234563475 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23444037 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233924825 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234146578 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233860858 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235314172 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234166325 seconds)
  done (took 35.686639732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233627932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232861977 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233595138 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232799887 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232722571 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233048929 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.234916002 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.232919488 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233059562 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234389649 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235102671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233647794 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233826069 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232889186 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234969383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.234844746 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23511808 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235128815 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23410078 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235013868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235142535 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234470561 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236376588 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235003207 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235183654 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235031789 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234916844 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235157618 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235617994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235244426 seconds)
  done (took 38.177751344 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283040216 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281643824 seconds)
  done (took 3.710585591 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.233840008 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234776839 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.234769754 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234726861 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236570523 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234611085 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235014427 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236305743 seconds)
  done (took 11.026702237 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232227656 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23775259 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233859737 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234865307 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234822591 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233613932 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242363232 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.262058145 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233534983 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.235251448 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238593833 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.238396235 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236464416 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236492276 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235202275 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238556302 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238911989 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.23737138 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239443459 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238308819 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237532335 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236120426 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238729439 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.239020244 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234453921 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243529072 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.243157181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.241944681 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233791465 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.239850299 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.238020814 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.238728854 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238753623 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239239463 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239866172 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23960161 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246188934 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261899084 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242894935 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242708915 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239815289 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23856273 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237780435 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240051584 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240386846 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241761423 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241197897 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239364987 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235447202 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2396874 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245589713 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235133515 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239659789 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240389662 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239978808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246616553 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265836476 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239763632 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.244486375 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245776367 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254469515 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.249934201 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240649229 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242919132 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246694799 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255865379 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246501033 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265833783 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24317811 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240711483 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.244487806 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254328067 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.252230011 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243229203 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240582242 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241234655 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239143684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242286393 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245363136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266066253 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243535766 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241379595 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247763611 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253769882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239000538 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24421742 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241502818 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241407375 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240220854 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250582127 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26677978 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.243003611 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238588858 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239779472 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240280185 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242564951 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240499437 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245510585 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.24940069 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.248278051 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246709711 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243611251 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.248346423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244790335 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243727632 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.246332227 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247941393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239108303 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.247062054 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.248152748 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243360878 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24114897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.244499273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.245635915 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241863008 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246733552 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2450066 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24244446 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245711728 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244628859 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247709216 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262327445 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246059145 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244345417 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244284463 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252079718 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242885047 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245115037 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246169546 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243085559 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24409774 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242956857 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.245839799 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24238689 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24592175 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24265779 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.247040796 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.245129885 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.245154879 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.242880531 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246097457 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.2434397 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243792714 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247916273 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247080783 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244831347 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252266541 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246965276 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244519941 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245815146 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248838231 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246501994 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.2435917 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248006897 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243048199 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246861859 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242511514 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247718942 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247187525 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246549209 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245912822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243751715 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24751352 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248451267 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247141975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246507733 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247726555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245614266 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246371161 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243006427 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.248280523 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242422197 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247505251 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252593947 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.247078543 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248826015 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24732678 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249758938 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247337463 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248171266 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247256411 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250698974 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24905537 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.250917456 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250416833 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247336881 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249664781 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244406636 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.245361193 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247580098 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247860678 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255058112 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255753386 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260255186 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248034319 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251877941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245637946 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251351681 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250452291 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.252320761 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248574478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249136572 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246138814 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251156468 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.247755692 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250337803 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246089204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.250003816 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251031822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248664347 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250892172 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247810907 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248777943 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.250871027 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249130359 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250438365 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247967813 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250602814 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245366625 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246653891 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251597086 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249243274 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.253755132 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254520133 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249582535 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252507908 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248523285 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24751537 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25255352 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250233243 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250227128 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255528226 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271419274 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248907455 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256724499 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272289267 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249345181 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251876811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.254630708 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251232585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249942335 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257802136 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.253002732 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250881353 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251124324 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249115225 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252820374 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255449347 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255305323 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24874192 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25181478 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249691873 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252656835 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249990237 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251414368 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251316214 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253709134 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25435376 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251899911 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249954238 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.252711765 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251979675 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250638977 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250671199 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257901865 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254657926 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.25245884 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253372557 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25222697 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256833546 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248747485 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253738203 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.249917668 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262315223 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.266097872 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255905345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.254734992 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254250785 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256399467 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.255849498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.251927636 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251138828 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252158953 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251064926 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.253350435 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254254535 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250152726 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255476927 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252239201 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253654004 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264058922 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253959451 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25204464 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254707893 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25561858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25543128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250118291 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255453466 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252743764 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255159992 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.253575827 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25272778 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261453699 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277111422 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253082005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.254169436 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253168569 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.754821138 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254586029 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256585441 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255941672 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260599453 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255423492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258080022 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25453443 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260277702 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258373857 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255585776 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261624123 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254859298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.250802347 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253813469 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255432367 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259384047 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28050244 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251275492 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257806515 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256179429 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.256634079 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.257312316 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256780116 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254784912 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.25500169 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261807629 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279306747 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254885157 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257912054 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258101815 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.253385756 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254343255 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251031511 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256857092 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.256594458 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.252244649 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252755937 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.253379417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.255843729 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.253806418 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.256142897 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255686963 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254747674 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258673912 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277774585 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259138598 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255355265 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260206858 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25991348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261107591 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.280903371 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253676259 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.257545768 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256387263 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253441331 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253868404 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.254784467 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257691276 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253640277 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.261515112 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256371616 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.255728442 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257178452 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.259749169 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253003275 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262470797 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274070139 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254669342 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260259693 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256829407 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253888527 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.26002782 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257578196 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253276703 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257190379 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261816683 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261853622 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.254740538 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257763801 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253769641 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259299169 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25704293 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258430042 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258895021 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257259737 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.255837911 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258043359 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258690446 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261028674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255269832 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2581265 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256472773 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26516885 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263343971 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258070001 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259294583 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260559749 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25476485 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259041798 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261079676 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255363083 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261555231 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257297353 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260709286 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260838201 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.260941253 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260328468 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.261494684 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25729213 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.258822842 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260562572 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258605109 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259565892 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257997274 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261622906 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256159005 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255096181 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.261994696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257365578 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26268687 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259884375 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260915331 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25907087 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.259719048 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260792622 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260940173 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255501398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256750247 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26491073 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264820307 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265024824 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263478181 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263666774 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258269521 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262593674 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26466514 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.258247522 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.260263876 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263915942 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258870901 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259871811 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261223256 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262196572 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.265656396 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26220457 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259979537 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270655572 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285764965 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263704104 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260565196 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262159558 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259859592 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262899241 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.262178537 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25948488 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267991148 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286169008 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264735709 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261545057 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.26171527 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258817662 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266733066 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262488967 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.260784663 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265631724 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26104285 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26457675 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262585641 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262743051 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261047479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.259310778 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263528204 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26478885 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.263853444 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262890632 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.264038942 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.263678321 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265214395 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262717797 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264052602 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.263614461 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.260861667 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263125195 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260657742 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.263748813 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.262182612 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.262642048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266038029 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264624467 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264038616 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.267884093 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.270445039 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.264539007 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260429747 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.264224057 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26678762 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267725827 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.264230265 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260876264 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263461279 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.266473736 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265033343 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.264800304 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263924934 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275889554 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.292540656 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261754673 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.264312251 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268219538 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.268472847 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266469698 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266456506 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.265225355 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.26716724 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271939069 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.265881972 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27127503 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289088735 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264974378 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269494906 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265394062 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269064064 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266245709 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269424346 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.265979172 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267281321 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276935489 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270656801 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272893683 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288498973 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.28995092 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267191093 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.268087013 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262445573 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269256189 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.266285671 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268481291 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26685498 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267555491 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.26592127 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263606305 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269118992 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268867331 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272700672 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.268654046 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264623216 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.266330954 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268468126 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268366638 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.269551632 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.267757262 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266948555 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268271051 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26375118 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278531254 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.280589326 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.270087045 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.268745572 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269062224 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269910877 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.26929479 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273172756 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273361057 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268164833 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.268753719 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.26750994 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272392428 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270372542 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.267154352 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266460114 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267662985 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270706991 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280360546 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283321998 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271215797 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269897706 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2707483 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.270706737 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267759685 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270926612 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269711416 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266274727 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.270485395 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273612235 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272384239 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270544705 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.269606444 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275380747 seconds)
  done (took 749.763578971 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270240546 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270421411 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270161304 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273320011 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272317075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270977658 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271800797 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271194091 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270830029 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272605583 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27300581 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272284692 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271479971 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270864398 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272109825 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271310525 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271123931 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271622516 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271435957 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271613083 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271635648 seconds)
  done (took 27.879909084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.270912724 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270866704 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270627569 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271510263 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272629212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271392002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.27234752 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272119837 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271149172 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271074432 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.272814435 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271286139 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271896959 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273131552 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273096757 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273074938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272798397 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274102679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.272967128 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272430565 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273557875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272508906 seconds)
  done (took 29.169286348 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.272351141 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273325872 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269474129 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.275368328 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274227778 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.272729266 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.273780014 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.274224643 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.273922592 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.271613162 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.270422679 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.2720073 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.273663006 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.277970767 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.27151245 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.276437606 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274158695 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274297716 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274704427 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.274408011 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.278254036 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.278789322 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.275676531 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.269951585 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275422451 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275184622 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.273709748 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27590147 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.27181312 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277161548 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.275099826 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.273580127 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.276216464 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.273596231 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.27279084 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277469556 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276323912 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.27580138 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.276129474 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281964067 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.293590055 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.276355837 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278381726 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.28081744 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.275898888 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276813106 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.280416509 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.27557001 seconds)
  done (took 62.401948331 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.874365267 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.900557643 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.898545911 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.90233998 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.9017644 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.904719732 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.901151323 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905711467 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.898233368 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.900119776 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.899516595 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.908858117 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.90815438 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.901172543 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.901260587 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.904658437 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.900417562 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.902697742 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.902077356 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.913039973 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.905094375 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.89986682 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.900068991 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.901715518 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.910415608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.905279055 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.905382865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.904654211 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.903689343 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.901250818 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.906995424 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.899113981 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.909668152 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.899383506 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.899805197 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.901558789 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.906997191 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.90148998 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.901993217 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.906050625 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.908981109 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.910443217 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.903314996 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.905087375 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.909333296 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.904569353 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.911966742 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.908430308 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.906487791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.911913832 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.909505316 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.912831998 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.910598827 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.907415237 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.905672124 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.908691927 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.90691799 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.913615144 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.901711122 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.906621836 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.904854275 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.912657116 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.906195734 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.903688151 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.902493872 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.90779906 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.904492864 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.903344428 seconds)
  done (took 130.696535814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280762037 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.27964097 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280745054 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28158509 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280527369 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.280429849 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280629659 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280261448 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279911316 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280373569 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282291305 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2805588 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.281575887 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280981577 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281992197 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281260484 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281351749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28130382 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281642111 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282306214 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281152008 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28270252 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282106586 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283091196 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282682805 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281711377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282674486 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282837659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281200065 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282760139 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282671961 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.281707537 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28332877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283373421 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.283223975 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.282277387 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282674659 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282936003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282444002 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283396207 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282749995 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285417671 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283509728 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282796074 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285061411 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284302552 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284468472 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2841631 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284474262 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283656349 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283953452 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28469819 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284454326 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284119969 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284501898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.284808427 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283446322 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284780818 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284580114 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285368473 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283845233 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28424944 seconds)
  done (took 80.71690019 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284376757 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284638555 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.285347524 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.2846108 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284642411 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285583454 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285229503 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.284761387 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2840883 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285085536 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284704831 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286851834 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287621129 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286293431 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286728424 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287789136 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286754105 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285919914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287649211 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286506572 seconds)
  done (took 26.906606825 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.285466576 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286273536 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286862722 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287011174 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.286217933 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286119132 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285692016 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286232932 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286878433 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285769577 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285935465 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286952394 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285811818 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286922914 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288030028 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286580261 seconds)
  done (took 21.774353431 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287641073 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.287032189 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286606021 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.287340511 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287384064 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.287687536 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.288510465 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287193817 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287118896 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.288796892 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.2879195 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.287462298 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.28730842 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287084725 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.287169057 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.288149283 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288519211 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286906433 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.289228729 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.287572873 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288552544 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288314991 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286871802 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286943245 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.287928826 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290650431 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288494318 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.288166464 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289029258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288898709 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289206006 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.28969475 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.287622231 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289236754 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.289082906 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289256314 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.289998506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289344525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.289739764 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.288762196 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288501367 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288917161 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.289544522 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289614455 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289549086 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289845194 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289586056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289843074 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289516082 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289321231 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.290906624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289019407 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.290218113 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.29204157 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289844857 seconds)
  done (took 72.069051125 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291511266 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289603977 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289250155 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291259956 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290960245 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290116094 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.290606322 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291441349 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290586657 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291344883 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291893484 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291892986 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289989613 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290548465 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29135291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291819407 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291390968 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291466241 seconds)
  done (took 24.432736791 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.292339375 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291791708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.291850858 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.290816605 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.292221735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290722489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292871084 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.293309005 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290382361 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290810099 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291970189 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.292673003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291935735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.29215574 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292639393 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292680607 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29270071 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292638912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29222006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293297747 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294189856 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292977944 seconds)
  done (took 29.624980262 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.287019085 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288839255 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.287032678 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.302689309 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.304242451 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.287834016 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.288395326 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.288900185 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.309366415 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.35592526 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.349423389 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.303977278 seconds)
  done (took 16.849735543 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291982584 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293566984 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293888673 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293334668 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294378572 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294180985 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294822386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294249164 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293656511 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295036506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294285985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294396648 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296069855 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29493007 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294493616 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294325654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29363795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293659935 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293234675 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294527304 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296078826 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294376682 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295308156 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295018937 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295613811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294361322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294667269 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295770316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295287833 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296158174 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296019802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294600852 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295473268 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296778304 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294708908 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2953168 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295364619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297781642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29720296 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295894302 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295271498 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295242043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296364451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296618173 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297371466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296289519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29666971 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29666998 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295931301 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296772833 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296319973 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296617434 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297966018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29694881 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295553781 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297096221 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297555874 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296553154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297565707 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298245174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298541325 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298322158 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299303432 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298231701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297988284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299663667 seconds)
  done (took 86.721345372 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298064685 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298618579 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297268306 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298410754 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297766725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298003189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298793853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297764426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298110732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299085694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297881859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300121152 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298520132 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298309871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298198219 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298239505 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297412562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299427028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29927302 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299425949 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298615287 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299103876 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297133586 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298982238 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300132171 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299548068 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299035589 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299022238 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299240118 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298072954 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29943341 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30049567 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29957021 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299594138 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299823158 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299965532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299281583 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297838755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299031492 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299970453 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300070303 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299785061 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298416937 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299974281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299302498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301200414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299745014 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30039516 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300175966 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300851466 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302017252 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30024863 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301705478 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302166896 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300136896 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301634281 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301696901 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300669599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299798086 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302379651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30225221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301790653 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301128738 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300606944 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301749436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301718641 seconds)
  done (took 86.980435368 seconds)
done (took 1798.541160258 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.4666454 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.419275601 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.297345011 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.316821189 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296840324 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.290929704 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.313552977 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298647856 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299259378 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299142649 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299697415 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501200359 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.29352163 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296849143 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298284296 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394915965 seconds)
  done (took 26.588419843 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327430042 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304835288 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423936245 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322820118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.32648174 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.505017772 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.358936772 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.304147978 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.49194021 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.327687374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.306646801 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.325552159 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30250341 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.296908471 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.323725459 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50497801 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574952454 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.311880217 seconds)
  done (took 28.846073427 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795013205 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.323974117 seconds)
  done (took 5.325255897 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321747826 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302341807 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.303495622 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302324063 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.293947302 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.312422001 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302027277 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.300519635 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.297833619 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442509077 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.309443532 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315657626 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320974149 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.30391451 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305037937 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348661492 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461099648 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307967585 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305183704 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30763155 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303549933 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426654944 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347975773 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306104505 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439334235 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.305578014 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310095688 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311600651 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.432189694 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308207968 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304648995 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.30466857 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.307122529 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.314860412 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766445796 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316751158 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31257809 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.331894755 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.308259133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.48530694 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305013886 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.311901393 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.310672059 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756454163 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448048944 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434196357 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.332511533 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304211086 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307247069 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.374925889 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307299794 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307927561 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.364802067 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.127059711 seconds)
  done (took 83.920539509 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.360628769 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.299977627 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479622671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.329513534 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299287788 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297916546 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.300690101 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.61240744 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333591937 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301722619 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599069229 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901804519 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323512787 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.357038302 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.185937686 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.37785704 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302089614 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.317500609 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.302031724 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.30455921 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867232066 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301688501 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.319631977 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.470427637 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339780732 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846118792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.303359888 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.306407301 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.324896676 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.300595142 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853954411 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.331409283 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.365565546 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.301539075 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.583950954 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705391405 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.668245215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.303334404 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330344004 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305482739 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.304679505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826302808 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686176706 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.301601385 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.302879325 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.834863648 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.302029931 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.307269171 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.303032038 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554228491 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.302115217 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.303561518 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321180625 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.303241863 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.300736216 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.388363881 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391344467 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845661001 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302571769 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.303242058 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337367781 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300598923 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308147416 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307718758 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.323811583 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690266649 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.449263895 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.307435354 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688984084 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849790355 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321421728 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919128959 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321425795 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.330344361 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.51801577 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303582497 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.303245882 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.854416714 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.340563184 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.302494179 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.669360156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.310157143 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606026798 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.324892006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305589933 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885731348 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.30981579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.306035244 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.304451221 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.303641707 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.303753918 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324378671 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.612237434 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.331055545 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305608754 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.304857936 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.357213884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305540587 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.30606394 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.306329667 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923421845 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.334465644 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304053276 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305249854 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305119521 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.306487437 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.305317132 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306328727 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574725219 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.305010366 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.327569009 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.307877569 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.304924258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.316916019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.486208372 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.314114045 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.640564725 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306296369 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306379025 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.325264751 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306910175 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.307011293 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307288637 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.314177451 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18281189 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.568486142 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.329064639 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.324307067 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305298156 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324847361 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324885896 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330311173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.369860398 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.306379089 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128942685 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.369168305 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.34303995 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.306062297 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.30693232 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318287263 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.309792679 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305761157 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605905113 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593770251 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.451816648 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.315756033 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.31142614 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.099702769 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.358414059 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4903169 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327678855 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.3078697 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561672551 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.534222168 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307402386 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.307269535 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.308876685 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569492631 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308216389 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636027647 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88511752 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.326344974 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31361739 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.129110041 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.018929488 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.309679154 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.314478903 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.604077056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.326907276 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.308182945 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.308970226 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.309177998 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.328502675 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.330469416 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.31370306 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.309429317 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.310114378 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38667078 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50242101 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.332331431 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320222149 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845210211 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331393909 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309817736 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.314791126 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312420988 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310345708 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383885831 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.310033047 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.321232601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.312105242 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.317099275 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859945266 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.311141494 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.311654346 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503713706 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051155481 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.334767861 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.311999909 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326553222 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.224092965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877652069 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.358636598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648124821 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.31746836 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349489233 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311231061 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326932749 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871397768 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311753813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331044833 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.010765145 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.335171952 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.855952176 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.310821618 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.312098961 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960717277 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.335209861 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.314653077 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312127877 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.335197015 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616300511 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.312904203 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337615011 seconds)
  done (took 493.927464704 seconds)
done (took 639.810841626 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.312654718 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.312294118 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.30856382 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312690079 seconds)
  done (took 10.470566547 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321070411 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313842515 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319775462 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31389905 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319904875 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.314903212 seconds)
  done (took 9.124526057 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.309527956 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.307958229 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312741269 seconds)
  done (took 8.150304784 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532066647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.332101469 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.668822209 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.34493929 seconds)
  done (took 9.099536511 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.319692949 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318211942 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321449249 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320490079 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.323075119 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.324815155 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.321247226 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320647758 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.323999928 seconds)
  done (took 13.111067914 seconds)
done (took 51.179441458 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.396866077 seconds)
    (2/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.301473727 seconds)
    (3/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.481371652 seconds)
    (4/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.006291694 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.400296569 seconds)
    (6/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.531108587 seconds)
    (7/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.420942497 seconds)
    (8/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.427277955 seconds)
    (9/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.406788899 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341196595 seconds)
    (11/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350673468 seconds)
    (12/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.423926489 seconds)
    (13/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.500258649 seconds)
    (14/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.476043213 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.403714604 seconds)
    (16/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.996866508 seconds)
    (17/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.351069194 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.471393086 seconds)
    (19/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.972617492 seconds)
    (20/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.427817431 seconds)
    (21/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.603266279 seconds)
    (22/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.437998596 seconds)
    (23/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.306521489 seconds)
    (24/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.372896373 seconds)
    (25/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.308310974 seconds)
    (26/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.154379716 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.537225402 seconds)
    (28/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.396995383 seconds)
    (29/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.390283272 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.56098278 seconds)
    (31/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.120194225 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.377721776 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.526440374 seconds)
    (34/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.362814065 seconds)
    (35/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.411830743 seconds)
    (36/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.357136716 seconds)
    (37/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.364468265 seconds)
    (38/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.41612941 seconds)
    (39/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.420335201 seconds)
    (40/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.478913962 seconds)
    (41/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.45963185 seconds)
    (42/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.491982484 seconds)
    (43/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.716077557 seconds)
    (44/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.432707604 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.390384141 seconds)
    (46/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.234113674 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.443019872 seconds)
    (48/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.056134092 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.470550481 seconds)
    (50/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.543490911 seconds)
    (51/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.358164991 seconds)
    (52/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.702131312 seconds)
    (53/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.430641951 seconds)
    (54/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.388352729 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.463797639 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.347043294 seconds)
    (57/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.509139642 seconds)
    (58/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.319309487 seconds)
    (59/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.351669046 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.120359738 seconds)
    (61/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.588885611 seconds)
    (62/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.365317625 seconds)
    (63/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.349614536 seconds)
    (64/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.511271479 seconds)
    (65/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.502101306 seconds)
    (66/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.311065367 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.466452036 seconds)
    (68/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334443018 seconds)
    (69/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325322943 seconds)
    (70/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.311679574 seconds)
    (71/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.510458416 seconds)
    (72/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.497297958 seconds)
    (73/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.379739145 seconds)
    (74/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.113493141 seconds)
    (75/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.398512235 seconds)
    (76/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.433376841 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.337385717 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.334370064 seconds)
    (79/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.482559414 seconds)
    (80/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.509745907 seconds)
    (81/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.334266319 seconds)
    (82/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.351918837 seconds)
    (83/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.505362901 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.407556092 seconds)
    (85/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.380294993 seconds)
    (86/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.370157397 seconds)
    (87/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.35191571 seconds)
    (88/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.531247138 seconds)
    (89/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.560169658 seconds)
    (90/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.005782631 seconds)
    (91/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.48955281 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.341793415 seconds)
    (93/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.543918507 seconds)
    (94/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.495498159 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.413848591 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.391160981 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.467932214 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.428994715 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.474673056 seconds)
    (100/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.4305183 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.398859468 seconds)
    (102/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.53274349 seconds)
    (103/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.549881848 seconds)
    (104/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.488096004 seconds)
    (105/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.084026084 seconds)
    (106/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.406410234 seconds)
    (107/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.469731088 seconds)
    (108/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.337018254 seconds)
    (109/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.437494367 seconds)
    (110/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.587839436 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.458163487 seconds)
    (112/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.09441301 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457875373 seconds)
    (114/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35404495 seconds)
    (115/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.220498721 seconds)
    (116/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.47124343 seconds)
    (117/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.276834106 seconds)
    (118/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.357227421 seconds)
    (119/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.327303963 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.346201102 seconds)
    (121/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.360753353 seconds)
    (122/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.407191473 seconds)
    (123/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.461306725 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.372909228 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.433508602 seconds)
    (126/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.321306459 seconds)
    (127/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.471674318 seconds)
    (128/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.515852055 seconds)
    (129/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.350899872 seconds)
    (130/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.41900113 seconds)
    (131/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.377700723 seconds)
    (132/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.353845517 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.549805206 seconds)
    (134/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.454790297 seconds)
    (135/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.316493669 seconds)
    (136/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.378636621 seconds)
    (137/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.409027592 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.433506136 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.355321822 seconds)
    (140/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.269312276 seconds)
    (141/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.448024166 seconds)
    (142/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.097859606 seconds)
    (143/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.424577668 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.336847421 seconds)
    (145/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.311317846 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.425397797 seconds)
    (147/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.353794871 seconds)
    (148/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.446887394 seconds)
    (149/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.0922421 seconds)
    (150/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.677604432 seconds)
    (151/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.491188804 seconds)
    (152/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.045165495 seconds)
    (153/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.537621637 seconds)
    (154/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.443817312 seconds)
    (155/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.434760275 seconds)
    (156/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357935479 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.449830671 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.398427392 seconds)
    (159/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.347158959 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.122631832 seconds)
    (161/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005894845 seconds)
    (162/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.384051543 seconds)
    (163/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.980039151 seconds)
    (164/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.439142944 seconds)
    (165/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.33748536 seconds)
    (166/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.068951801 seconds)
    (167/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355699261 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.46347185 seconds)
    (169/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.546703855 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.353685932 seconds)
    (171/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.360545035 seconds)
    (172/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.460760169 seconds)
    (173/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.103728118 seconds)
    (174/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.377849625 seconds)
    (175/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.490739796 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.476190693 seconds)
    (177/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.40566058 seconds)
    (178/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.464932431 seconds)
    (179/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354136971 seconds)
    (180/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.367915547 seconds)
    (181/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33712831 seconds)
    (182/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.337126203 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.325450693 seconds)
    (184/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.550767591 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.376926134 seconds)
    (186/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.491373004 seconds)
    (187/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.393192859 seconds)
    (188/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363955745 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357133119 seconds)
    (190/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.338996666 seconds)
    (191/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.37331229 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.438518992 seconds)
    (193/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.430142485 seconds)
    (194/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.37855734 seconds)
    (195/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.441588209 seconds)
    (196/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.365616967 seconds)
    (197/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.493562111 seconds)
    (198/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.705474523 seconds)
    (199/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.190096475 seconds)
    (200/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.321152397 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.436594268 seconds)
    (202/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.325448421 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.327946916 seconds)
    (204/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.355813202 seconds)
    (205/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.005450692 seconds)
    (206/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.336849461 seconds)
    (207/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.518660604 seconds)
    (208/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.358726166 seconds)
    (209/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.315998704 seconds)
    (210/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.320459914 seconds)
    (211/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.499917308 seconds)
    (212/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.349008128 seconds)
    (213/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.564530489 seconds)
    (214/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.377022945 seconds)
    (215/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355248365 seconds)
    (216/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.379925538 seconds)
    (217/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.350002875 seconds)
    (218/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356110459 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.421758698 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.025479937 seconds)
    (221/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.319982925 seconds)
    (222/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364542477 seconds)
    (223/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.371669504 seconds)
    (224/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.539551535 seconds)
  done (took 371.104803896 seconds)
done (took 372.32611092 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379452248 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.513053973 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.331768899 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.33100278 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374856929 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.324832857 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.379757494 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.33945281 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.342465634 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342694723 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.324676266 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.349836694 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.344077911 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370445895 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.446543702 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.350807365 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.332000337 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340318341 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.380145279 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.400440651 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376319195 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377788925 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352851994 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.332025864 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380734669 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380829682 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.339730944 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.32927296 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.340176371 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.382184475 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.337125198 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.338573278 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.391072926 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.389719998 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378332727 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.339142351 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377019621 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.515385243 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376573747 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.373732486 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.345432386 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.392549474 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.344370255 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347611533 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.390578876 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353050893 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382232812 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.457594657 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.337383212 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.341013093 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385798271 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.401284258 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345470756 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343081914 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.334864998 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457931648 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.340942826 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382994018 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341182776 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380130045 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.448152933 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382039386 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.402392834 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381180808 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.341453647 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.347075326 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.34100855 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402659252 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.342067913 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379908574 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381265624 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346961714 seconds)
done (took 107.84638851 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.461149437 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.334849304 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.474119513 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33909175 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.498802225 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.482394252 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337353926 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339653257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338994185 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.132385947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.340030982 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339540253 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.33642287 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339583336 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.461622717 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.340639992 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339870285 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.035819958 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34058143 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.477266049 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.334245739 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341201899 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.340422408 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.131708739 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.370645193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.335027865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.479959395 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.343389585 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.032214468 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.333683508 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.335084194 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.035776881 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.479293991 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.361762138 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352025234 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.352392262 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.50287065 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360893853 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.463758831 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461494079 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.476747572 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.379178276 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.333128378 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.339002523 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343190306 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.342769866 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342500622 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.372243845 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.338457391 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.342443509 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.041840317 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.352467261 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35304795 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.342456044 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343068539 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.363030082 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343451411 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.342025702 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.481658387 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.343163151 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.466675247 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.132611901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.13865498 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.343855379 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.336369177 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343614872 seconds)
  done (took 108.757105534 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.405651326 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414911927 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457250556 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358241125 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391243452 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463895586 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361434055 seconds)
  done (took 11.095829641 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.344992094 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34492019 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389162938 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389571715 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.344218926 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.494913427 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343210415 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352664531 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.34399071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.392514419 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343546126 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345369947 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.352914146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.340258585 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38930465 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353172731 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.455775763 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342516227 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344552701 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493428889 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346726463 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.353559643 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.39394891 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.353351107 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345667798 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.348062551 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.110345404 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34501302 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345673904 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.346236662 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347073012 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.396369284 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346454116 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.341680831 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34699449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.45922935 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345264501 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347311872 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346806574 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.344753334 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346363013 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.346698496 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.347325121 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.346869527 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.347209448 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366829796 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.347836026 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.346873657 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.346442376 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346022303 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.39300724 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345549384 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347171503 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.346740433 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.398998531 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356443133 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347874385 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.346725602 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349160535 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347290294 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.49395752 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391902553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347703661 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391818171 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348361811 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348518438 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348671394 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.348690255 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436790192 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348463679 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39287685 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348753034 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525212729 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.369289755 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349457626 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347320687 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348971601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350430264 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.342487213 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351551648 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349144738 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.346641537 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.352132121 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34995619 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349142783 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503969399 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455076384 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350004515 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.358719612 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353410231 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.3490301 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.399348916 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.349242764 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.350524779 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399233981 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461024464 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.400133286 seconds)
  done (took 138.733913068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359096103 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357458036 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350549101 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374573313 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348053409 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347361662 seconds)
  done (took 9.384206594 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348212514 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353894527 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.348996698 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350096293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.35092816 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.350801337 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.350270774 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347963193 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.354707735 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.349946223 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.352121863 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.352834239 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353910547 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.352349131 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.352523972 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352521794 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.351852675 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350863857 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351972496 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3520086 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.346718261 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.351856471 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35378803 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.348768318 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356353665 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35292359 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369340537 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.351792226 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353040744 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.356865821 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373535895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354083689 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.350736758 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.354881926 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356671412 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.351546032 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355338406 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.354912873 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35382662 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353766433 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354890263 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354078555 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.353712502 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.355338995 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.349676486 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.353682082 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.359721673 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37133556 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.354311347 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.356267293 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.355914507 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.354575088 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.354007 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.356363958 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.353769985 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374743922 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358996233 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.355931928 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.354788695 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352584319 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.358540581 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357051182 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353085544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359847694 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.356686923 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356737469 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354098861 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360317098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355723733 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355717472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.358161083 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.356631799 seconds)
  done (took 99.800223242 seconds)
done (took 369.008349584 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.351326114 seconds)
  done (took 3.60444898 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.496997285 seconds)
  done (took 3.752768942 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.418204904 seconds)
  done (took 25.680436092 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.450218713 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.371110707 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.37543089 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.357184707 seconds)
  done (took 10.808023112 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.70409628 seconds)
  done (took 3.958017806 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.363763057 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.358211508 seconds)
  done (took 5.978921529 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.646272185 seconds)
  done (took 3.898918479 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.907658754 seconds)
  done (took 4.171211172 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.367013232 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.366657529 seconds)
  done (took 5.993568918 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.353597242 seconds)
  done (took 3.607695599 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.432427054 seconds)
  done (took 40.68753895 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.364445134 seconds)
  done (took 3.622566732 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.39476203 seconds)
  done (took 3.648850601 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.43211389 seconds)
  done (took 6.685283314 seconds)
done (took 127.35123094 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.347657697 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.353996745 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.3520932 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.353325887 seconds)
  done (took 10.662443033 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40956425 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410767552 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411059624 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409970224 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409638871 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410116298 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.382877485 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.384191759 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409252326 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.409740609 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.410040378 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40973342 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410740544 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.398404216 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41030511 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411976949 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41124607 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412744569 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386245051 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409872176 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.360599553 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.412681717 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411282217 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.360920168 seconds)
  done (took 34.920440277 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.848464566 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.426794199 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510364639 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.40813927 seconds)
  done (took 7.450320982 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.43642221 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438792815 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.454907822 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490209634 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502256496 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45064995 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.385788244 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.383255814 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.368491591 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.437639681 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494256489 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428625423 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519168518 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.362175513 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.567755498 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.359655259 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.360260456 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.439687711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488922311 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506562684 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.362967307 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436803928 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43926206 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430177773 seconds)
  done (took 35.802530963 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.369885476 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375212617 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361844067 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378032586 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363049503 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.361689889 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.36480752 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.369734584 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.361046221 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.363587852 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.361813996 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376341203 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.365870849 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.362204772 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369947166 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.363386295 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369139282 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.367657074 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.363736271 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369375017 seconds)
  done (took 28.596593211 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.353829153 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.352939996 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702749754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632780867 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.354550012 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.354044742 seconds)
  done (took 14.009978746 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438200518 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612669747 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.362807833 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.75677915 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.837027387 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.359078996 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358800211 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.634414604 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.006042888 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988382654 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.423112553 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.439030696 seconds)
  done (took 20.476324294 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.361729744 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.359493369 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.360954777 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374238302 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420407289 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.380725698 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.366164757 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.354503895 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.426304346 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.443540136 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.383402002 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42161781 seconds)
  done (took 21.915380412 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452761294 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360149785 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375024017 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437040379 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36319872 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202527292 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41915676 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113139807 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385183617 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635601475 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359320686 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461906501 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615092287 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366567519 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364405532 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.354943501 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596754927 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882868624 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362136051 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374709032 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397145169 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36429796 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380116066 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603091414 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380228902 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358892853 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621379083 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358262118 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668610094 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380770726 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370222021 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361012479 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635739986 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051660678 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479925216 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592692939 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398076564 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362687754 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.352121069 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.367313125 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403921365 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369763606 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370533411 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361173383 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361800888 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365456482 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124605126 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.3910967 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.362419588 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361410741 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648945179 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465018783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.369870601 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362299556 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411362526 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368409771 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.367476799 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499167101 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96668924 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36200648 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373477989 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.369027842 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368456965 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367820721 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055936343 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394258986 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.367341339 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367435903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362137895 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363859456 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406078963 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362880522 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.38628884 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363421196 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220446765 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394943288 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370680343 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950192186 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371991692 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.367467126 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595953728 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363086045 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363769503 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.362409757 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363935133 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141121739 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375925126 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.352532874 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408931918 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136608604 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623004661 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404325261 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394542247 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588599362 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.351725686 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364957388 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.364220002 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372335676 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385883946 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12535673 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386387904 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.369513794 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623806061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.575304823 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367116397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363431172 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889892026 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38633932 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.388388249 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369080608 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611040363 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.023259144 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406967619 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371802029 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388193611 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365942599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188642296 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379071799 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.472837858 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374430217 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66619413 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.247998308 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371419044 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433704235 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371799475 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367064023 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366357443 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373113165 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366379858 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.597953737 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398806298 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.382151104 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.367875963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367039277 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.365409478 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383566884 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.375157151 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589693814 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366578119 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650414651 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367000208 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366980043 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368327194 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.59018534 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.367850577 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.711469586 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63260379 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370595497 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377229122 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384288134 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388026163 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471866316 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389418328 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.37262375 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630706351 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.37361828 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375792255 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369859371 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377195431 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373800506 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376430052 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370710133 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024754526 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395344348 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376925773 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263306948 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385492407 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437413426 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378372006 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611019648 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.396799129 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374811841 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401293821 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.369962928 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618351243 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379585829 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.37042638 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455556233 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.886298028 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025035536 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41217266 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.37090037 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.370358092 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.369976466 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37060407 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369636764 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371014815 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610714278 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409001106 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374403695 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03458148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39869955 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371054879 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384697932 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385727085 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.37910385 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373941888 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.372282091 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377929516 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395882327 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.381936451 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51601613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38842118 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372203155 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890116816 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379180233 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373827541 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373195036 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406215744 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373494816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237699445 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656355415 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369375733 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687093248 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380385568 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396288742 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.373279226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38356866 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395051362 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.391794306 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386212514 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.382724897 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374666148 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382417055 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952825583 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207723941 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967897891 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403429845 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.39456845 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373187274 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135528675 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394782454 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375012449 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629718101 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151089138 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397398526 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89383634 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.398425494 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234200274 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671277345 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613193071 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378833857 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.392034341 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675338592 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594024479 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409654969 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390711902 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375521797 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.363274167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988434625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40061054 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464462135 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137146826 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407692302 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385231817 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.3883157 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385520738 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830588231 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403928915 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376190006 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392769095 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390471421 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26540453 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403636585 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377576753 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056515426 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414257134 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.893250886 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398530452 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619938537 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.410489028 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.381739257 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.384605727 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.392397141 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637089801 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668083834 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383632232 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388319336 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965874811 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.276588017 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.384421399 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377447196 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197905614 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386463789 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692508528 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.402157913 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.388495951 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384646731 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379235796 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379170762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.377534308 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385269964 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375865894 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910956872 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.388422821 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383975241 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40189635 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379002334 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635058661 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.394777777 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019507311 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635044239 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381561819 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428243178 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384315432 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396637887 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.374318724 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379008402 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379733853 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394022754 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610085349 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379765357 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.367785201 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44001337 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59839065 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380352562 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378726733 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667794585 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.400196933 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.408443361 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219403418 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435996535 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380258208 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387881292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387503307 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423953962 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469574629 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621475666 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.412243293 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.390497129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828079806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402790734 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390233762 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.396418625 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47631885 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38103837 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415674065 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.157421885 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031261253 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284714475 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.037596029 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702105756 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389696522 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390576433 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381437456 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54411322 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383122194 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658736891 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382637016 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.391371024 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412923977 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380964091 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407879811 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592462304 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659551774 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383575851 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387909957 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382544082 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.382428256 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392403439 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.63005637 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915224756 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978956601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386056279 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398066439 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145944576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682844056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385133368 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385744328 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385666339 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.387253395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.420001195 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.392839119 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387286215 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53599225 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678021408 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094881314 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417054986 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.41604118 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.907518641 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396844564 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648125391 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394127182 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630981663 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056339821 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191138503 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659560282 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456881338 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628445136 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.407910442 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548933508 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.402807203 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387897623 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388021399 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386627942 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.388350507 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396447354 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038641502 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680508275 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.392627566 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.403111774 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417637066 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.396614409 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609960503 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184948959 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616011225 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397132349 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393485912 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388133298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039406285 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709555224 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395032495 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.3939619 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653547081 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413461973 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413454127 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.078042704 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.38843409 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980860268 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.363295159 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41100291 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388850534 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176350649 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046265313 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.417117813 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948577037 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39240801 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395637347 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669162002 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.394615079 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393931618 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672600717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.394344249 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388384995 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640709189 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.055112968 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27145339 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.39061784 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416569817 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.41985607 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390870992 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471712457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395650929 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393282279 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.864089726 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418431025 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391253686 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404603293 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.404919462 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399767228 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.396324723 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390453173 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.398232863 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.405484477 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.385685944 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400744371 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527779788 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004292182 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413851153 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.069589781 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.717210292 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648266703 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392342401 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.384010869 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.395971136 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391831787 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391826809 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391887474 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393333704 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992973791 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.394648712 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.408692233 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399133105 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.393329533 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602958018 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394017314 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647729606 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42322071 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415000542 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379374089 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391805497 seconds)
  done (took 983.416502112 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.394968158 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.403837698 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.398963228 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.402594133 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422204933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.480565093 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.444482595 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.515730798 seconds)
  done (took 20.754819318 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.399522178 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.398274754 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.397724048 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.399103441 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.406979414 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.903491619 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.407757977 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396937407 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.412483033 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.39292474 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.389139568 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.380185606 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.404531467 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401355477 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.39332866 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.398268439 seconds)
  done (took 33.179380525 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.607001747 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.641579298 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.773069518 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.454362058 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.424332877 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.388321177 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.771898864 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.411536283 seconds)
  done (took 27.764714118 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.398591224 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.399502065 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.39913122 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399553229 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399395419 seconds)
  done (took 8.286545411 seconds)
done (took 1248.490092105 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.3977895 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.39690931 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.39867136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.398322775 seconds)
  done (took 6.881679503 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.381544652 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.38405939 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.386952803 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.399957862 seconds)
  done (took 9.842743246 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.182537304 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.088155708 seconds)
  done (took 5.562312222 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.894880326 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.909798577 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.902298597 seconds)
  done (took 7.000725556 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.676058349 seconds)
  done (took 2.969068579 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.30999697 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.396566403 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.086941343 seconds)
  done (took 8.088806497 seconds)
done (took 41.634781718 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390284995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.645118995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.549252769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39069499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.556340451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.548850896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.220008012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406447476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.391166047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.39152361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.389281602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.55701715 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.134080447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.64394703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.132956532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.642886616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.557648882 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398033749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39347486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406187559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.22112477 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397876702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39491318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399655105 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.559665392 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.568272108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.392792605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.663916172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403609514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39200574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.540931384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392523892 seconds)
  done (took 83.366105158 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405783948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391003279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.39152205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415568788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39223965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394237319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.427860497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392636866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401131139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396949764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394917122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.393700355 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.401859216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403847567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.403799679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.406068411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.39346269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393390007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424786014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.393235888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.413396444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.427613595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393465596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405725491 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393232196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.393400045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419435396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393578918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393803395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424119386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.393718754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412533477 seconds)
  done (took 78.17770097 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39508317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.393981466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422050046 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399197837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.395303288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402828827 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.397893951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.395683442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395024142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431208221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.395465888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394854244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.397208647 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.39917623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.39819604 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396032378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.414141001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404081592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407450435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396563825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.397540776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397090452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395740003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.398344456 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.396223193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.401163903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.396932839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395702264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.414142805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413091231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.401259706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395219109 seconds)
  done (took 78.133132542 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.679414497 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406079232 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.408625145 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.401674097 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.409577877 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406743197 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.399090568 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.684647392 seconds)
  done (took 15.092850847 seconds)
done (took 256.06368127 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.400326563 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.967611148 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.446319398 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.400921723 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.425832628 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.427300044 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.638453952 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445995218 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647774635 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42646301 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.423658474 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.402779108 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.29021298 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.5578912 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.305350058 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.412367757 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.378406788 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.400731446 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.024442487 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.706867875 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.432110636 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.39814166 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.289429478 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.401017776 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.403261225 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490222799 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.510935301 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.634638616 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.568466025 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.488817846 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.965649112 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.41954696 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.402963198 seconds)
  done (took 65.834316373 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.403266328 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.529584057 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.408872342 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.408999653 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.556374589 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.429132282 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.404265142 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.410018061 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.408721883 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.407684848 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.408785693 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.410001563 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.409817971 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.460554956 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.534540114 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.424686234 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.405967887 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.525802286 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.406310144 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.40389245 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.458204913 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.409936314 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.411004123 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.460764486 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.411234025 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.410760908 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.532255599 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.433679548 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.414345608 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.529152965 seconds)
  done (took 44.530624966 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411293629 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.042419486 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.21570273 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.414214784 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.408119781 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412457656 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.731146128 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.412094639 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412064161 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412172627 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.949284211 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.433089923 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446283019 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.252742564 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411442571 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411474445 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.412549412 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409035368 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.052697554 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419623843 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.75512218 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.413228799 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.730993212 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419538134 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435570791 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410437327 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416084842 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.283471897 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.433754275 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.951343504 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.317981091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.73467954 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.223440991 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.260687209 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.301784239 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.422048323 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.413327137 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.956989689 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432884332 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410894549 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.732318447 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.410750466 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.243897831 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.144294561 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439032756 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.4157273 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.306030224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.975222728 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.702385355 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417517572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.264808416 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.420495012 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41577127 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413317481 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.684278299 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.414074811 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.411911354 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.335335483 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.439738952 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.734364275 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416002101 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411125743 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.058360777 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.412680562 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.04717533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414296781 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421813011 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433396123 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.232799699 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.415983768 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.160050782 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.43753858 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.415748964 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.954121091 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.068110848 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.37139029 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.415659325 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.056255947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.259195739 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.755219216 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.41805105 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.261633561 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.761298848 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41616819 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417350046 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418834547 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.417195843 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.494336332 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.734162155 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.079534331 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149175417 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.36242643 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.759824519 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.422109949 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415129217 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.337802473 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439552843 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417307369 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.228829769 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.160836334 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.439992084 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.422234123 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.167416354 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443690081 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.739110856 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419907371 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.23645521 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.416414721 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494070611 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.418153548 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422339955 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.440484571 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.740083106 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419684628 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.420253056 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.137080961 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.989611812 seconds)
  done (took 200.459644821 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.40997972 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429804926 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.410431621 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.431384082 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.409333644 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419036534 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410429855 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.410400744 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415931892 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.410436092 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.410832578 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.418137806 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417004509 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.410682506 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.410442502 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432000196 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.425081233 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.412067684 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.433493991 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.411787939 seconds)
  done (took 45.649313893 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.420126445 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.042100649 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.036841781 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.420767334 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.421074973 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.417257006 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.479910925 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440491117 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.420699603 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.75022188 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.611365703 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.439352551 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.421469481 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.421413851 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.019033965 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.412218329 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751311187 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.043245467 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.421145715 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.043479132 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412980858 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.42200159 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.416602713 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.046161391 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.776315672 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.741600531 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.481942544 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.064992118 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.441223091 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.423710138 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.045736375 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.422770824 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419421099 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.044835558 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443382284 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434956023 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.422444412 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.482229052 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503072505 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.774237474 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.135580598 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.767462866 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.435233164 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.609231502 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.432081467 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.414068961 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.054536281 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.4447269 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414318268 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424618893 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428439903 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.027448719 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437578421 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.02752994 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.443058653 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423930144 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.047968047 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.02810011 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.042846973 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614679133 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.438813517 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.745306712 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.423396768 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.05414766 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.443042268 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.424210601 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.425001408 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618003572 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.075040517 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.744373418 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.755896283 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.757445719 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.42523069 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.490173418 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.443956317 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.835023444 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488366325 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.854522823 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.765654953 seconds)
  done (took 130.829936452 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.731355955 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.546706501 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.863449247 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.068345372 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.419219202 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.566670512 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.540092308 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.700082358 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.43378988 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.507612991 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.12900699 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.543509596 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.270597869 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.523978184 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.554332344 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.581669771 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.869784862 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.418753325 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.154085431 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.117794053 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.423117791 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.569610355 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.015739938 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.662000261 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.427318735 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.052259136 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.457452207 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.141902241 seconds)
  done (took 55.605445379 seconds)
done (took 544.20648669 seconds)
SAVING RESULT...
DONE!
