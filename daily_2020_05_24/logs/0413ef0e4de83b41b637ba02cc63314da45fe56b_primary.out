cset: moving following pidspec: 5858
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.241833629 seconds)
loading group "string"... done (took 0.586091639 seconds)
loading group "linalg"... done (took 8.142543885 seconds)
loading group "parallel"... done (took 0.168460342 seconds)
loading group "find"... done (took 1.318289997 seconds)
loading group "tuple"... done (took 1.976189863 seconds)
loading group "dates"... done (took 1.350417427 seconds)
loading group "micro"... done (took 0.204874848 seconds)
loading group "io"... done (took 0.942396548 seconds)
loading group "scalar"... done (took 40.853308165 seconds)
loading group "sparse"... done (took 12.867656539 seconds)
loading group "broadcast"... done (took 1.024271142 seconds)
loading group "union"... done (took 14.798866184 seconds)
loading group "simd"... done (took 5.178785406 seconds)
loading group "random"... done (took 10.004100796 seconds)
loading group "problem"... done (took 1.646341129 seconds)
loading group "array"... done (took 23.304251083 seconds)
loading group "misc"... done (took 1.847410165 seconds)
loading group "sort"... done (took 3.576069827 seconds)
loading group "collection"... done (took 19.774822291 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54409536 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126735151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139849324 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121789205 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151668299 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11988441 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127525285 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086357362 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.883901897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153774987 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11719189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421397166 seconds)
done (took 5.39595117 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172542236 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087684404 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08002986 seconds)
  done (took 1.232994362 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067329871 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127448868 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068688145 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068822346 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071948704 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068899829 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068860289 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068398202 seconds)
  done (took 1.608155503 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073505787 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069251556 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067142634 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069680517 seconds)
  done (took 1.346204177 seconds)
done (took 5.503890416 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802696554 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214503637 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189170712 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415542526 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138846061 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183430906 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646050824 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318764339 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193582076 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096323578 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116448458 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398074021 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12746449 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650709771 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078103758 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096039873 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146652754 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430903539 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071282372 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08540096 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093298976 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131634824 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080510418 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076971701 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149049653 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070788952 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144318003 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084375106 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069435008 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.260368898 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177998952 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660951052 seconds)
  done (took 10.504040622 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102230132 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10230278 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071443797 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128446709 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098863222 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072651528 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077911561 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069962671 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092177401 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130088908 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092122266 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109262328 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067064931 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070188192 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083825634 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199941728 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080833019 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086149659 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071104951 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079786376 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110659728 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078664083 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080675804 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08076175 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13091097 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171833923 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097110407 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09816814 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067935376 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082144921 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116792008 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131426494 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067051713 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066737046 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126011698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09516232 seconds)
  done (took 4.593890376 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.016121943 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152789942 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093387476 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13922185 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067016464 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113793196 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06777582 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08637091 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241804357 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.39518151 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636520753 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152301535 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120352201 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107174795 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073444125 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071639814 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072898477 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.28207922 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106030077 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111986013 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086197587 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072903742 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072804963 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067200408 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074262967 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066282759 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071232919 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.092005933 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079107839 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33470413 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127756348 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070682303 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.960015813 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167307589 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069231864 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107843514 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169774723 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09425013 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094967541 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064327769 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142138135 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068099473 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064220726 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.297834517 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067489786 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074195444 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066489826 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068995537 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087433324 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111997557 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123154959 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067523332 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068888204 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172483972 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068163595 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08404338 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.21984047 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153705556 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066730985 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302874476 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095575362 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074521156 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067095126 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067041042 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199585227 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120182749 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069300256 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068723939 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071479103 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07150086 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369220742 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066615583 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.892678371 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071384467 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07969001 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072600313 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072106316 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081931086 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081481566 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092473723 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069622808 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076629351 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069132488 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068113707 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069038403 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095522473 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.391134871 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068160505 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074450744 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067114993 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097359597 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101340097 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067127328 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066127923 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104374091 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071051909 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066899393 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069202697 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121717139 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071427628 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11289684 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.170667147 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.057146581 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097703077 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070033491 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102827132 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07859567 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072322268 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466104543 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066434564 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074788056 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068068746 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070045764 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068741411 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080659035 seconds)
  done (took 22.017932899 seconds)
done (took 39.199460892 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246747754 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08571892 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086349172 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086794658 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086673306 seconds)
  done (took 1.74773765 seconds)
done (took 2.885548921 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127517663 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101608936 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0664838 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100544899 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066482391 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109957444 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103147131 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08586029 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102374918 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066415346 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100554661 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066872862 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066660028 seconds)
  done (took 2.320159912 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082728847 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084930297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07111488 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083828763 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064367849 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08392243 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082571182 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090816057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082926355 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074295695 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064429677 seconds)
  done (took 1.998914678 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081775603 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084836796 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070793406 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083775254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063953564 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083268263 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083360885 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08742161 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083490008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075406473 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064724227 seconds)
  done (took 1.99110441 seconds)
done (took 7.438490033 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076471244 seconds)
  done (took 1.194512703 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541932061 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.599132034 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079255145 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100904209 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197249144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111948015 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241121987 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086302947 seconds)
  done (took 8.24868886 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109578945 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070682028 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072174349 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070948603 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070636994 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071856955 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072576123 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071517565 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07114542 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072729347 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071495243 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070936634 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07299237 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072324773 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072002402 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071723472 seconds)
  done (took 2.389453309 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098696867 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097600266 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075803612 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077400842 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074780709 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07449116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077087119 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076094861 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073454323 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075088353 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078906066 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076052716 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075201361 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066407466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076254009 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078778311 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074018154 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076522487 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07738641 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078332948 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077994957 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066251018 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075538778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077414703 seconds)
  done (took 3.088415608 seconds)
done (took 16.049064174 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105062538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067946501 seconds)
  done (took 1.298372231 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078528457 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079727576 seconds)
  done (took 1.29282248 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077625472 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06267946 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08457481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074829458 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065372312 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065515163 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085311627 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066176266 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065300101 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066148297 seconds)
  done (took 1.849456985 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065399386 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072807727 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0693182 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080630025 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073445779 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066924076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07124685 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068005067 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076704961 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065730737 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070199484 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085971776 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070574394 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088050958 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071167688 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070663215 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072220169 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06904386 seconds)
  done (took 2.446513195 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06288726 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06400207 seconds)
  done (took 1.268615441 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066718883 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064011232 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067741025 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068035528 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065977207 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064812658 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065328082 seconds)
  done (took 1.599481292 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404535654 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125266836 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33808299 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072557109 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082971368 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258585684 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066354105 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072117828 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071605471 seconds)
  done (took 2.67347017 seconds)
done (took 13.571931188 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080439155 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086404088 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100171634 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416494651 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095502806 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069779429 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11566707 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181863267 seconds)
done (took 2.297036662 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207519971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.819280965 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.485651032 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212622789 seconds)
  done (took 2.659834451 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.462319659 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082954813 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078398016 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069119145 seconds)
  done (took 1.843302622 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067368518 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071906863 seconds)
  done (took 1.28690927 seconds)
done (took 7.148028328 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064902834 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091402538 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065705247 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066265121 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066680158 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066146433 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066613356 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066822712 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066492772 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066873515 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066366212 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066192487 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066168001 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066715523 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066460194 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066439644 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066361671 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066363701 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066416486 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066857592 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066635504 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066385373 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066682659 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066151374 seconds)
  done (took 2.798755428 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081348026 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067590709 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069041198 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069786557 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070996881 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070506932 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070496057 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069037302 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070647318 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068570585 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071151506 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071085341 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068157243 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071298736 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068466378 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070927499 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070524167 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069389009 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068270287 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070510795 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070416336 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068885057 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070147282 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069250204 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069521571 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070318701 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068314834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06904384 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070710209 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071309225 seconds)
  done (took 3.264519346 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065400443 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060889459 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061521716 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070560724 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062654175 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063550083 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062964273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062769875 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063524915 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062453547 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064216241 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062486053 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062655829 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063279144 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063825868 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067270398 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080782258 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063269255 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06287259 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063535214 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066886805 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062588104 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063398205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062756228 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065578371 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063152249 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063138159 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062015979 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062555154 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061387122 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065309705 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065562995 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061131654 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06997771 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067341616 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062737129 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066882424 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062362125 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063719163 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062490223 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062557423 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062464454 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062612264 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072151299 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062869419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063940274 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062889022 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063999599 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063139026 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064891499 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062597866 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062804663 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065001942 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063790957 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06836019 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062192987 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062431837 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060818756 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062599538 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061551046 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061018121 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062431378 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065903953 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063407301 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080084842 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071602901 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062877359 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063836755 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063350047 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06607943 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064170401 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078110018 seconds)
  done (took 5.807769417 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085059707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087900135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067364424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067898485 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064149149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06346577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071642135 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063687662 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068965033 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083732177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063700989 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067898383 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068078527 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067703265 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064092261 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068065656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07306312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063772165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063460414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068206486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063647725 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072384282 seconds)
  done (took 2.699708451 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146520123 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069725431 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108505661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07442454 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072477409 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074558077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070482509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069902789 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070117617 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070371676 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070078374 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069589732 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072259103 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069963088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070382647 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070141569 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069465585 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07009628 seconds)
  done (took 2.551354587 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07788352 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068857156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088733318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068944805 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069224855 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068415446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073340948 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074054235 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068707181 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068867662 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074061558 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06863518 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068616103 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069265638 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069047563 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069020969 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068567157 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069125295 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073928652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07332851 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073298359 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074027523 seconds)
  done (took 2.74173837 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087091813 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066237245 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083600202 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070052728 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063811886 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06319851 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06981014 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06791828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069848883 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067535416 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068735304 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063500872 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070660826 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068469312 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070878697 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068303856 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06812639 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068799336 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067913707 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063734985 seconds)
  done (took 2.554575822 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083158729 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066140784 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065194255 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071611161 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06501596 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065293626 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072086901 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065096747 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065200193 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085969847 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065397863 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065867071 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072784549 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070024473 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065139061 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071709507 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074509025 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07160439 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064921088 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065882535 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087114444 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066686625 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073490705 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0672195 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067043039 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067090181 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066940174 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070718563 seconds)
  done (took 3.12535873 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064874398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064629683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064520437 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064850683 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066069934 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066096593 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066667724 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06696631 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06615509 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067479204 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066430456 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066466337 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066315283 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066249499 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066464945 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066663845 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066666117 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067027816 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06640012 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066727486 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066470189 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066469182 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066377149 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066258982 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066385319 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066695125 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066958681 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06678031 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06612606 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066318184 seconds)
  done (took 3.161870791 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074912376 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073484381 seconds)
  done (took 1.319775609 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06343196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079025647 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0626294 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074353444 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072100656 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066814286 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073123445 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072647726 seconds)
  done (took 1.730404895 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085545017 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075342881 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064417705 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076916869 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074979258 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08601217 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128922162 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066011164 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075918948 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066193688 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084665265 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067506243 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075838929 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070598267 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075953973 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079201833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063206625 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07071098 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067261914 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064203177 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065973398 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079468636 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075042243 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064248706 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070605246 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092622947 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082124885 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064974468 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073010084 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077872594 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075667969 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062568101 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065273364 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065673433 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063586627 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076783133 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084932417 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072485217 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078414885 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065781756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074454393 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062841789 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074155475 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07632179 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081704702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065430516 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064949536 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062903547 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066351762 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071581566 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063707762 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069031564 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062280925 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076425011 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072321693 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080286116 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063807117 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071287656 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071974165 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07258327 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076745937 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071652103 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074703109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064756581 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080936182 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075164926 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07741496 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062667072 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062114809 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063434567 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079193244 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094580718 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075206104 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065683599 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066328608 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063122175 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072591256 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066171984 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074506136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076812177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065319413 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069845864 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077424223 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069934309 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072051241 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072115985 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063426288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068586132 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065891744 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085078752 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064056638 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062834579 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066137796 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080938475 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074749001 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064635479 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065894205 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076840104 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062172962 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065139179 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066105891 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070942391 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079536542 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069814939 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069843935 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078937353 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074794907 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070602774 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071887133 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06204039 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065874622 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067218528 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076890551 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062621854 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071738994 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068448718 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064530463 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07622452 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062918595 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064101904 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077314871 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076121373 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062817606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061752745 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071211938 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063886779 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066154522 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077750509 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06278733 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062149633 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062147858 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072320768 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063683917 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07233793 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067817956 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070106383 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060231405 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.188320504 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071361826 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079079954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070082008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072579691 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076004745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07159799 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064998302 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078153491 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072999311 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068188512 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075354023 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069737004 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063626333 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068035641 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072194678 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064315597 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073014542 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067709569 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072310146 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065544419 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064339396 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071760667 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065560282 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067554669 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070118901 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064334567 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080816303 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071726516 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062975699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062817132 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072389499 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066485644 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064662205 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068652092 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071977396 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065790975 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063867898 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065343728 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071708768 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073680061 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068549662 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066204313 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075252685 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082727487 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064892297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072927641 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064696629 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066683368 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066328231 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080062578 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076399037 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069795731 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072785814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062686158 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075133777 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078223138 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067458792 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063240594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067801295 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069489633 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077425074 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069296408 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065769932 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063712055 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071383288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06862562 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072709573 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065174719 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068098836 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071028155 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063416672 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071281686 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066427744 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079997462 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073002259 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063558813 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067802007 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063925921 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076601506 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063941665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066701025 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0682602 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066076231 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064444972 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07194211 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062398476 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078255506 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078233857 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071501507 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067795415 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065305818 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077662923 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070988247 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073308997 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072701848 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074984357 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08057488 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067808984 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071866435 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080983063 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0651853 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062385381 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07460162 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066842573 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064384796 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064411448 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063989682 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072568405 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072691627 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07559605 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06237004 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072029232 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063528612 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067386332 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063795923 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073792343 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072149632 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068973523 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077246437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065886237 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065076853 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071802362 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06395431 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065230432 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065629543 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071181031 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065117805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070328617 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066948394 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069949583 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066351174 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062104269 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069842394 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063991091 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069742286 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073338852 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06359605 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069762267 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070822796 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064529922 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070375047 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067910399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.200334144 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074679177 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072034536 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070886301 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072750297 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06407241 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077936167 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064840831 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078117914 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070642744 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062640907 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071243151 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07234791 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069916805 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065979337 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065922711 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071188372 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06454297 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07202939 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077578443 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066693515 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081692664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077205074 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071564063 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072073998 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070361233 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071472697 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068537132 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069629183 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065915221 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070583658 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064972101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07353171 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072045947 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070051785 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071251865 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065930221 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070962658 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066178717 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062592054 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068379106 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068682948 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064998627 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078631158 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065761184 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068428114 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064470727 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066022527 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064427102 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062570805 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072650981 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073465112 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066153463 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07648841 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067757155 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071899156 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081624975 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062697072 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063946668 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063339421 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066673688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078261197 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065567495 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079148965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070939405 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067827512 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062962798 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065889331 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064132994 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063818036 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063634052 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07382851 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067501634 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064371293 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065436139 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072565342 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065770992 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078519414 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064848314 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070196024 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065882197 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063176696 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06818522 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067730353 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072341362 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065973793 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066330068 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062784224 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065235442 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069456848 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071661047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064995299 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071315906 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077540658 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065477143 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072505172 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067970237 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063422673 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072386248 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065015851 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064703888 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067657018 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073123005 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072574518 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06599095 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080123894 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065390928 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073801012 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065430277 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063857074 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064840938 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064665523 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064754153 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067694204 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066092241 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078227516 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063318181 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071601208 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071051441 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069090101 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075457223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066276579 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071560217 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070554687 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066133135 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070930624 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07768045 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068149188 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071741893 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064789845 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070017955 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07444436 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067155441 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076013558 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069499555 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064461172 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070247239 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065648555 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06348712 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064326532 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063068341 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074094976 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063831345 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065398201 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064621098 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.196238853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070993767 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06932383 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079814615 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072693983 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073215388 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063906256 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063086046 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066408783 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066293554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07102073 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07210748 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075027841 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071890639 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068765698 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064589324 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079799193 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075709428 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073082806 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066671547 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073312833 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066208347 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072239586 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069982377 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069889752 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065385394 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073030739 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069828145 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066266355 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074335151 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072620305 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064504521 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069708307 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070052921 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070444224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062985465 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064298113 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070131002 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07342851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070766253 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065180038 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081009845 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066506886 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070528614 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068429576 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064684992 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07441807 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063377613 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072073891 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066183111 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066285741 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063842061 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068290056 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066585511 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072670632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.0683574 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063938877 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081847208 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080527673 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072949093 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065025228 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065174933 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063913266 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063788177 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068438111 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06656039 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071240434 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079927348 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066977058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067569209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06357617 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065607559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072962257 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074061694 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063236507 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063656279 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067931157 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072139895 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077248934 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064068191 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065028195 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073079488 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071683056 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063760498 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068603249 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063335356 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073541946 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082662091 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065741969 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071838052 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075765495 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078733251 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066219849 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063737892 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065764873 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071769638 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071147863 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066269577 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066548708 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085438205 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072991825 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067702154 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064332012 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07235316 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068045713 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079660884 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066381971 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065622201 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073737372 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074654001 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073252923 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075634462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076353992 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070786037 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070418832 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064707762 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070449739 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06395617 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067486437 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065996935 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064496145 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068241053 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072321827 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066172483 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078753488 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076696454 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066339883 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061540958 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067465774 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067786845 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063067714 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065593479 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063032559 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063143626 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063399498 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0636551 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070787082 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073931704 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.0687664 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065119948 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063911428 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061434488 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073297092 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070207748 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069613262 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06088522 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.198880456 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067062453 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075219186 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069391954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0678285 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072779876 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071588618 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071301885 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063564364 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077630659 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064922664 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072260342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068389825 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065791626 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066417927 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073341227 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069764353 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067116133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072096931 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072422453 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066952986 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063203516 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062848531 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075070044 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064008413 seconds)
  done (took 43.266257445 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099834101 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064975308 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063593824 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063952126 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073927476 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06476233 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064021574 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065230236 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065338357 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067310144 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063800136 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063871799 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071709491 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07976278 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074965345 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06862448 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06404046 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06561723 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063381881 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063779461 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070697762 seconds)
  done (took 2.69774277 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069854098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077314914 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074483658 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079407482 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071112444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067449071 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074669556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067477371 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075408662 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072332904 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07621515 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067504666 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07272273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072908233 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073652647 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068368248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075692607 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071739754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067766864 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07525776 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069674377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076135378 seconds)
  done (took 2.839694461 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063986273 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063417988 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069711956 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06135858 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063060219 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061772124 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06643533 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061616957 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066189942 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066247034 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065911844 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06575989 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070188942 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061972596 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067069287 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063413666 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109778128 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068374287 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065183285 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06638313 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063440879 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071106505 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062022184 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06246139 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06645756 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067298287 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0652008 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061942801 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063526026 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066981909 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063951997 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061813778 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069713453 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069703607 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065510397 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065639196 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062986553 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063444219 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061766336 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062100455 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069588846 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06262073 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068223747 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072360228 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063613107 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063168704 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071947679 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064829011 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063530496 seconds)
  done (took 4.492376113 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074896536 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111108088 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069155058 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090943535 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076911355 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069197209 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067913715 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110747101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065369211 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065998316 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079680929 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080124162 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067303938 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069271171 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070819782 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065373704 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066636949 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064708053 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068480031 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064936045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068657003 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069366025 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076153506 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07712754 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066528465 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064307532 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066034625 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06754225 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077843137 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070268301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068948635 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06929609 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.0789963 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069805794 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066368867 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06666826 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080360633 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067297387 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066800748 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064853826 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066259012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068413836 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071272636 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080219887 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067364495 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072187398 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066995637 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064425202 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07918022 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065973081 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070738763 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078743603 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066400509 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065840724 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068303501 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078609284 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066821557 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065454612 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067269425 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077696319 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064187923 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067242912 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079652081 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06664023 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071094328 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079749457 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07215714 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067783191 seconds)
  done (took 6.263756857 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072380773 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093656045 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079217912 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080567145 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073777812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074976247 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07506998 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075154619 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075348798 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07921697 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075151703 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11677136 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070769251 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077529733 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075275834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07526307 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075584084 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07534724 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075132869 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075016136 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075444099 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081385513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075244655 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081389554 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078507324 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070516631 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075007201 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07514463 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081497221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075144324 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078207406 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075254287 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075067906 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081626925 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078526278 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074792545 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064682454 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075006573 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075220192 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075040315 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070903275 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081749284 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07477724 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07085697 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075465075 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074703644 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08152701 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078291951 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077176534 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079137878 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075248168 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08146118 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074588756 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075222506 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081817687 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084115277 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080471823 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081763439 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075443383 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081039292 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081337408 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084227999 seconds)
  done (took 6.106309619 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077752469 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069565089 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081235169 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061792008 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061902237 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073438329 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06329216 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064009691 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072740762 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075605511 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074718311 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074161066 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076601083 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075070576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074093551 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076629232 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074155187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074385072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071939334 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073830841 seconds)
  done (took 2.735162852 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075790729 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080855994 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067334881 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071822911 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067584613 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072074791 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066942026 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0674478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067732682 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067566722 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073812021 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07354312 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067915172 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072402349 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075091688 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074083884 seconds)
  done (took 2.41915067 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083261628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069707769 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077265766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063581115 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066783276 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063225952 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064278802 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06324769 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063963191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078104354 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064837855 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076246791 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065264788 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063921425 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064352304 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070740195 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064311977 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064801277 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064692342 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077568988 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072145677 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066415833 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068651484 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06511976 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070435407 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073068191 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066546084 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06866911 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064736651 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065524044 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070968437 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072236687 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064691124 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065493419 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064144783 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065327807 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065375881 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065375237 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088816264 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064751882 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063144356 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070086202 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064761222 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066112474 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064140283 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065708045 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064157435 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07119311 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065370332 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070862899 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06557471 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067631106 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06568506 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073346294 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067680254 seconds)
  done (took 5.022292921 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078403771 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068305419 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063327147 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062972597 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068828261 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069624944 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069085831 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069311531 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070514965 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063834137 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07000553 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069174009 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070210428 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069188578 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070430303 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069862015 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063914397 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070067263 seconds)
  done (took 2.529424074 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072375715 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067044131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07171224 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067521383 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067106921 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067369596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06207569 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062574299 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062829715 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068571096 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069015584 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06873192 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064095092 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068357803 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068866774 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068995549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068714214 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064427823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069068306 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064944977 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068082421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063897895 seconds)
  done (took 2.760091266 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095896586 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083559023 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140971563 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081278713 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088715379 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07377405 seconds)
  done (took 1.849653362 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09275853 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097622779 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066946684 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067542794 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074484599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072578656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072540605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073067951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077367007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077928638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073385161 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077942489 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077269123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079482454 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075030262 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074334648 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071811193 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073637286 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06757695 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080735145 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071377834 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075567128 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072168883 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071720498 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071519231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077399538 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075293193 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075940897 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071353794 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075466641 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074429637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073798839 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077635035 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077767723 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069340092 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077157611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072607468 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082793574 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075317697 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079325891 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068979522 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07531653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077342627 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076572479 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077522496 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07270093 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076869558 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072741905 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073279503 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083690825 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073825741 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076609253 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074742179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077363194 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077035366 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083818567 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077489066 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078627448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074719238 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07734938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078763944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074536617 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078948361 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077492741 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075243404 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078256082 seconds)
  done (took 6.301849336 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104232815 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067883593 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070873257 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075717552 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076762774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070619308 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070944893 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070947386 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070730857 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068247671 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105340379 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071209613 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077572587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077391755 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071343041 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07080391 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070913444 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077450583 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068425052 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082706772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070724352 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077083915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077320685 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077208666 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075500559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074575457 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072546294 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072642288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072477613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072705084 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07631563 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072623726 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079019968 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069404132 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079001957 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073026708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072693245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076658091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072559537 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075384221 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079669557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082585332 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072521992 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072484005 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077572537 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072648045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072278171 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069464279 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072325239 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069418435 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077108374 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077326839 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07737809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078993567 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072421237 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072496639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072039522 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072140724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072604678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074222748 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080512936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071847958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083434732 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071953952 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07218355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078951489 seconds)
  done (took 6.26413784 seconds)
done (took 128.453498831 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207084789 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184635264 seconds)
  done (took 1.665404098 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073453026 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104267286 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082329421 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133363872 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071431524 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10515168 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10457022 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083784674 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07116452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071450104 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070879969 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073999399 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13944247 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071620531 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072573442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076272316 seconds)
  done (took 2.698227949 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10440652 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170406541 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110684513 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070607725 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106225356 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079340295 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070728435 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0843088 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077152436 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070761689 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078291538 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075461819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072208273 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080189417 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078483219 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079149768 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072378623 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079244248 seconds)
  done (took 2.858134947 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102142939 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095672683 seconds)
  done (took 1.498648913 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17254993 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133722882 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201075496 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344485102 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153591245 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.424701255 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140849362 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138905396 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112624233 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136214189 seconds)
  done (took 3.253576235 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103513946 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170640017 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295945601 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123372048 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078295663 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093719013 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125144524 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083961086 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08685078 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085337824 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084627889 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079087227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102671375 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077686961 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077582786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079608395 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108271787 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076023908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077451004 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081195164 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108873331 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071796924 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078851453 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07674604 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083242825 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083907575 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073166378 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071527335 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080532711 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077858281 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082325356 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090293008 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082308215 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109414897 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075951322 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108810422 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079398874 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07678684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076814248 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078078468 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082838152 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082358423 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080624117 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080304674 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072814577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081086402 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072662258 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071040238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082013429 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072163447 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081527476 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081729221 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109053815 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073531997 seconds)
  done (took 6.201967948 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107624085 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107125373 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070741674 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113412677 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104274285 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072861063 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108849713 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101404706 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110942929 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073116917 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071093226 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072913543 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082627761 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085110603 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121547232 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108742979 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073242191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072209488 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110575402 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109931166 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071826048 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104376174 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099697123 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109752549 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068947366 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071740051 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071252938 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073439839 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078433484 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080945997 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071874734 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081863184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088104682 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077303091 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068523522 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070031997 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070409593 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080895404 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081389528 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081051679 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079041427 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070177966 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070701188 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072072683 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071693567 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070176774 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079536791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08120308 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079878909 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071253653 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072455291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070991188 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071948217 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08062291 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078495675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082222862 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08121919 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071210237 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070651899 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073517755 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082411001 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080739482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080394826 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071709668 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080698037 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070868455 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083009244 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083423029 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069624898 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073267465 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070029922 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070173147 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071833267 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078707796 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.0789526 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07217581 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070933351 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071222183 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080820307 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079354513 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070677722 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078323566 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069802784 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070499769 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072362087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072041631 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07829246 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080287766 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072663332 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071253128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070905688 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07080797 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070028866 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078566319 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08073847 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080687756 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079925766 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071913753 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08072416 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080085233 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07257652 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080199117 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070884928 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072443079 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071966249 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079053074 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076959009 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07780322 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068202837 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067961954 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075284593 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077237115 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068123541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074459558 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078175167 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076825179 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067020264 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078294097 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068573797 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076699473 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067554624 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076785056 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20565812 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080950631 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072799996 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071289413 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072183291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080364475 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072331842 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071530182 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07260437 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071248041 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080221669 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084333801 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073314725 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078977483 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079814352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073071927 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080088631 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071501915 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081110894 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070914259 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072424702 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07029647 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083250513 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071263117 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07078424 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071669742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081802773 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069370172 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078669773 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076997402 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068366766 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080659177 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079148298 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076199043 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079507344 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070555724 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069047635 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069428889 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069472539 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076101411 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077848708 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070866499 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069526015 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076450418 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078919554 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068669435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077606927 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078602077 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078192024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070209197 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070162835 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081661441 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081951458 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078500045 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079091455 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079597962 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071917792 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07913146 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079238082 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070305969 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084042884 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069472254 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081654849 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078303942 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077486569 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080505958 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081759159 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082530759 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082466352 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08421293 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070930733 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071818139 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080071665 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071731312 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071358468 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079205707 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072766585 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072701996 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086486472 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06965538 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079987422 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069028006 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079964688 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070786129 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072545744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085390798 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071722679 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072785156 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080195171 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071319636 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078875193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082415904 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076833474 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069102258 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075265321 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080977023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080760453 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071274951 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07133011 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072582551 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079182564 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078069687 seconds)
  done (took 18.816318069 seconds)
done (took 38.303150716 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206050761 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156842217 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189005875 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118950284 seconds)
  done (took 2.068271463 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107809297 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097831732 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089066547 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067208307 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097147087 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067857077 seconds)
  done (took 1.859260467 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284413927 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198696085 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179241588 seconds)
  done (took 1.990223759 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211580399 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193303163 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465023495 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28580139 seconds)
  done (took 2.580132419 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141233045 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083961671 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065264915 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082501917 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126731841 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153656037 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095172196 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118593729 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077220731 seconds)
  done (took 2.326902728 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14842984 seconds)
done (took 12.324306741 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111678488 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077344013 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076412876 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077333563 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074545207 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070801756 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.205222693 seconds)
    (8/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.181752309 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.185535843 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.184777724 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.23263034 seconds)
    (12/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098942445 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079213026 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161392402 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068478537 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077438219 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.328624438 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077064734 seconds)
    (19/309) benchmarking ("sort", Float64, false)...
    done (took 0.134078654 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093707697 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119148682 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07644183 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202004407 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091749389 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227472782 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103053289 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068781213 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129749173 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077833901 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087071801 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.160060016 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170923708 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091181028 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236483212 seconds)
    (35/309) benchmarking ("sort", Int8, false)...
    done (took 0.161173938 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.130568102 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102915585 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105641951 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176549283 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076363218 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18506191 seconds)
    (42/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142329737 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066985646 seconds)
    (44/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07646299 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.180327485 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071903699 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138764128 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20200402 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067754747 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.159665585 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172952576 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08163085 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079335447 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069889911 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138671829 seconds)
    (56/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166571604 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.068351156 seconds)
    (58/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078437534 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.239671819 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075488686 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080161725 seconds)
    (62/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.141562387 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067208353 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07654896 seconds)
    (65/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069000734 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081975222 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.174463631 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066430558 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073846411 seconds)
    (70/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.080545117 seconds)
    (71/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.176656345 seconds)
    (72/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088742527 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078900386 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08793639 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067183105 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076646062 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089834561 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078628915 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173542585 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.080553777 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119501265 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199881581 seconds)
    (83/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.13021098 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14679059 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067762676 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09177765 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066234513 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182022006 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075662697 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088470211 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.235788989 seconds)
    (92/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135580975 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.340411662 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072714143 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080877778 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068225319 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173010204 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078919702 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073137001 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088633793 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068252404 seconds)
    (102/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070218721 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172338975 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077922729 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068253052 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078792641 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078002219 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.129069699 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076693261 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074342888 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120482112 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068523557 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125398857 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180057517 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12425997 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067773394 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129185282 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177085264 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14602482 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135172104 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.242068501 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074970424 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069967475 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195412275 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069048173 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075761089 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07671607 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176464804 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095696231 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.208235744 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068468163 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068905815 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094054463 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076240811 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142319922 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105207183 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220307164 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096224523 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.0917922 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17262513 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0777633 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074684125 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068518099 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068641293 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075468986 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174489215 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093461076 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076900222 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182745602 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090063845 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070881683 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221710918 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075274987 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067870876 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181949455 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068993255 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075567694 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.180917007 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215997402 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066921943 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06782665 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067863532 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083531572 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172384216 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.14043986 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06915685 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068402815 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143787818 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076162786 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077525483 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069097963 seconds)
    (172/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.221705455 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.200676594 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069253624 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075125281 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093786271 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078579492 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079172561 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067812869 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068308412 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075919477 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090613667 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069782593 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110308406 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069158514 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180701384 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078221105 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068670525 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073628935 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1071367 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066636856 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17192032 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067849362 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067845497 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125627598 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069074408 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067811016 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132451644 seconds)
    (199/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082295809 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075097408 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089333036 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067627104 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068539903 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118846746 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066480319 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088498044 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066432127 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.231936038 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076802324 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077707712 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078735577 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11808585 seconds)
    (213/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075678209 seconds)
    (214/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.141047862 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070456115 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.070249436 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076046519 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077084969 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079030729 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077668677 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08995318 seconds)
    (222/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069379926 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068880506 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139575524 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069067712 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068159964 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068866794 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068240695 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067611799 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068302291 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075940402 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090647849 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074298906 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068140905 seconds)
    (235/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094065692 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070235076 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072193281 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068832327 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067441343 seconds)
    (240/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089649445 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06809297 seconds)
    (242/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183627497 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080373954 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.071464154 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076448211 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068412664 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076333486 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089948548 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06673318 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0712161 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06866932 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145359706 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069206601 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067440738 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070216684 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09367831 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069078467 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070092868 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075371753 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175166665 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069038063 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068183391 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077736203 seconds)
    (264/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082020105 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068982772 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069447377 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074865104 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072543237 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074990886 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068818257 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068536216 seconds)
    (272/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069524328 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091579963 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068426588 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06834828 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088227384 seconds)
    (277/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067217298 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065718942 seconds)
    (279/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.07808726 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068533856 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131543539 seconds)
    (282/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066742839 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126320355 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.0682878 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069491042 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080254385 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074634554 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09110058 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068367992 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068239295 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.07158737 seconds)
    (292/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068738777 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 0.135059787 seconds)
    (294/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071541372 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069026416 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.079209883 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134383342 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07482614 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067696959 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092485071 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06912756 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.068870651 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08040826 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067346873 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173481836 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067579123 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067737906 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072407736 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066781204 seconds)
  done (took 33.560363298 seconds)
done (took 34.900735228 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086517174 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099194122 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075601118 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096949832 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084038089 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098715032 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076636455 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082291052 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084466463 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083202979 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082336073 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074546067 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076882528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077464901 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076489094 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101476468 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083163175 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077080426 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077235779 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069027029 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077720379 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068761434 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068619519 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075185239 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080071344 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076633164 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07860149 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078033586 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068818484 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069031418 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07413245 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077989238 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068945333 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081552854 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078126599 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078045547 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078760889 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081476294 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068298633 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069215051 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078652368 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068227944 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076284087 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074464673 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073713502 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075665699 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077122336 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081433369 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100565575 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072987863 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077819289 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079834767 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080818563 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074228966 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0737642 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077084316 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074769922 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100916983 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07713894 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073820674 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078869149 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077934923 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074765672 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077031022 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076912119 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079493784 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081078973 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075565241 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079594222 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075369343 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068375327 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076873512 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.0736581 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068471996 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079622158 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081494558 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068028882 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073067698 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077421737 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077772737 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068468909 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076769016 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068049379 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07356307 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073754335 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074993328 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073423067 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076061056 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068516952 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076868026 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07596762 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07618129 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067877003 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081573741 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068886317 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074619134 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068955196 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069049901 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067697367 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073790239 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068640335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073460872 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077184728 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067921967 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073025153 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08181902 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068687778 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075500975 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.0676142 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068422494 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079745893 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078668993 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068020995 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072520522 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067384228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073201067 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067787944 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067670906 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067484208 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067878675 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072429412 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068267068 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073024427 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073615494 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080678496 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067897026 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07284974 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073109469 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067520824 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074615501 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068200841 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067437432 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066974581 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082128799 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07219056 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067369806 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072624998 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072657535 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075858719 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.0667666 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075953206 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072999464 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071648771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07393175 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066847294 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077715366 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071370338 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071369855 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06684446 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067152702 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06693587 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066805668 seconds)
done (took 12.891569128 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07000212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117641594 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094594727 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095074045 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08479339 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068940034 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076854292 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095634122 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071066412 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099248324 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091532164 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.09211036 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112028537 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068173937 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069217594 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069973367 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07075137 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081647448 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096299791 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091069306 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107741221 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067746133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08666892 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08733087 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085193151 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089034663 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068432158 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068726713 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070009289 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090075619 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092390973 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071691278 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070060551 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093258448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.08806237 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083099294 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069264582 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078866053 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070466224 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069149429 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070947512 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090772267 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077386342 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078600754 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071021368 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077331041 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071185193 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085749204 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091175988 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077882467 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083772002 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091229737 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071016407 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083855972 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066331126 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082872811 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077582671 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067780819 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069442965 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074562002 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06974629 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072548692 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081447677 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078574078 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073683733 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08486941 seconds)
  done (took 6.740398384 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084597732 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095435557 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086433473 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086825508 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068862873 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069547286 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069560328 seconds)
  done (took 1.996278237 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067527622 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092843999 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093851396 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093958871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08385145 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09446087 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077642612 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069688916 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099567483 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068521035 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090334869 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100980053 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074409309 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081961372 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095468819 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069259 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094388005 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069574596 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070140633 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094437272 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074650432 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097113745 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081114448 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069664156 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083272744 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069893783 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102922197 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077597083 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071269009 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070896 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070854674 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.095969303 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082145767 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084019155 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071377166 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084929851 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083551328 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072990286 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080727359 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079586993 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082979092 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070639407 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068374474 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070931527 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072770056 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081515827 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068362317 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070798726 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070605685 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089640302 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068432741 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082156315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073612039 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076079739 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076152969 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075359981 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078259318 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071184751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089985277 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070820854 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08709301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086623097 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083041367 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086676508 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069984861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081976791 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083081203 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070484626 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071612755 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071183634 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086849274 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073056723 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071442453 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081795776 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069735073 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095053929 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094601941 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069360422 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083060309 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070443645 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071223022 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081340641 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094766297 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076352735 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071071667 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073935626 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071643393 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072749023 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068265017 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073361899 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070464245 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074457032 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070308397 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072955541 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071763802 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086311342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068301647 seconds)
  done (took 9.07273063 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07001247 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069731049 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072112116 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070323145 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070482919 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070981901 seconds)
  done (took 1.885782543 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090728502 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070569926 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083529542 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070377676 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106233132 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087536505 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087093223 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080930267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08457113 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082761985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086552625 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089630196 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091389967 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073126949 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086493834 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071559167 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086999973 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075486294 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082036257 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073440826 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083344143 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073360854 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073705423 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090089009 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074903355 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071823878 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080050544 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082618113 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081697637 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079591104 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070362619 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071896198 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075374558 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078172762 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083956598 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075333619 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068455638 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074787253 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071380759 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07192623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086393489 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071044184 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070947016 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074711034 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077443488 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078138839 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074431872 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077215167 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083519518 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07460572 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074601185 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069574194 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073066741 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076054377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075278475 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077731512 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075360288 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086765633 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072568167 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078156118 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070624763 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073866245 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080414609 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074070363 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079533296 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077463582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077477891 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073246785 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073224387 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070651761 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076850282 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070753666 seconds)
  done (took 7.051288476 seconds)
done (took 28.204894214 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.52005749 seconds)
  done (took 1.939156972 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627107449 seconds)
  done (took 2.076049791 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.703149305 seconds)
  done (took 8.146606502 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.382585516 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.456903347 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755918459 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136618556 seconds)
  done (took 3.213132945 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706481491 seconds)
  done (took 2.159656892 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235816032 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229948593 seconds)
  done (took 1.930512317 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347579029 seconds)
  done (took 1.793101685 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.06487276 seconds)
  done (took 2.513092502 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234328168 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16051865 seconds)
  done (took 1.846280614 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.449326317 seconds)
  done (took 1.89674976 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.196915963 seconds)
  done (took 5.649056931 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224462336 seconds)
  done (took 1.710495262 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234118108 seconds)
  done (took 1.685157993 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.723013299 seconds)
  done (took 3.177166518 seconds)
done (took 41.196294052 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083081433 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085262435 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085566071 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081474286 seconds)
  done (took 1.770099317 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074986884 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071992569 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076333716 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072713843 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077061919 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073021428 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074714376 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075782948 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072884638 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07360758 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073179337 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07307568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076530863 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07489736 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072031852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076089557 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077200056 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073175963 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076266506 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07315385 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071274061 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076074172 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076565729 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072576491 seconds)
  done (took 3.24083278 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078206518 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073393572 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075795107 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072075744 seconds)
  done (took 1.759910869 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076682456 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087703288 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086349004 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077825598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090397933 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085427025 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068350263 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068009863 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070218957 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078076389 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068201786 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094643524 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087035015 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078050461 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080988334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066007064 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068468525 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087257183 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079364796 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079465497 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069989714 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078619294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067832687 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087578923 seconds)
  done (took 3.338304369 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081304749 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066491369 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080421584 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091661954 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095001366 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068391311 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082443368 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096708967 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138160579 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068771782 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07456109 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068582843 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108228716 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068619574 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084193101 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112833519 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11585064 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072282139 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100640707 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068485503 seconds)
  done (took 3.208274901 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083671633 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072622415 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071310146 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066927559 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077963229 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07575728 seconds)
  done (took 1.916220775 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069128593 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068633942 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06891323 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069249007 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075129241 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069794399 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068394295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069926769 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070504138 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06970927 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069678153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06850818 seconds)
  done (took 2.301357786 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19131388 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068351308 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068874633 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06640132 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070744362 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067011298 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082222973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068228376 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093540616 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067272572 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067231441 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069293898 seconds)
  done (took 2.446116574 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189996945 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074175644 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221008382 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144877185 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103894315 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109587711 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111810978 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109218689 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133168915 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097729102 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152706546 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16050904 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103706657 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128325055 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08717067 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119640741 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1465312 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159616339 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102226562 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157384296 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136926289 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124278416 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145115439 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099703872 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103465944 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113703735 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071700422 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077182034 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158001474 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123065282 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13475155 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104319548 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089535746 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169235615 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156035751 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13084605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141588056 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083269026 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.119054666 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.12821513 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193307473 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088742513 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150436782 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102141288 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077024896 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123472549 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10883853 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113484626 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099322377 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085393927 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276952892 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176064805 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.12879908 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085106953 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117679544 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106649697 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109619687 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114967799 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169914486 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151233995 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123981124 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071973928 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109095129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143759248 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128208238 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105918586 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.11983936 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091082487 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125618064 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150444379 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120106386 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136824544 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112007952 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084583675 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114566035 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129637425 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120053093 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160941877 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118380055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070632945 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115091808 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094984302 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07785583 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143748844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075926391 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16608895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096612937 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120750326 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127000784 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108091751 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106077913 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149020088 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133807317 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101381635 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084808052 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099485541 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113591758 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135932852 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083956977 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103099349 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109312698 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07700678 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125758142 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074950798 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117567307 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09433537 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114791776 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120589863 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078583132 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116333497 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248473583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102785914 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124224081 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151657062 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088408333 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081528719 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157835278 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119745455 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103034373 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137992258 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152326322 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121081641 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09714695 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139143447 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163349519 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088984878 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154018095 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101575402 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08442517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104415422 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120534823 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107944574 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120133682 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081730459 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118340215 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157632277 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075199497 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095300131 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126268988 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078903136 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078183104 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10067951 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099497315 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093152756 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097562815 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101023217 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129933634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116854942 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101167631 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118457495 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093875775 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155411229 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084521257 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101760948 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101606411 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070977089 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127507532 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148071801 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079595566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153948661 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118806297 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11231856 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115278308 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082167855 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1296618 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077713889 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070755023 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132497839 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107766696 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104201882 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140783732 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258703915 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121817155 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116213288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124106226 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121358054 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122440966 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103145569 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086635307 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110094783 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123576476 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071232664 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09004388 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081008692 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100124727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091851149 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081364976 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130460967 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114897714 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106184902 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110138977 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093681569 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14010195 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077770631 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118864579 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116579737 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093536993 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146209284 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145135944 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127274348 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099024254 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129395569 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072884049 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073717363 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087957517 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118290961 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082340874 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082498783 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112101315 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143555334 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121597676 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130648941 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118772842 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113321818 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15211955 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07320537 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119003631 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137283712 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116491793 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100635148 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088296176 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094046728 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134377996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09985213 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169898347 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108352179 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116550823 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146372067 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097026872 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075768214 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098424263 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122633865 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096039569 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.284833074 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095479861 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084060367 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103033619 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07756927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095729866 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11977897 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111480558 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13088596 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107370505 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124106712 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075242453 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106880828 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117661451 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116298101 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081826674 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111129753 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155534046 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09389838 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110119413 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140742676 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077698067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135787398 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164122487 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138838788 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084882998 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104204617 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118890112 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122981997 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115460514 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133512085 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102004667 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130236359 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110572205 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084808883 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086427819 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093718733 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1019562 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.111453431 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102018705 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109631361 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092501443 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122847128 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098747216 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10623631 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112553258 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096521651 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093033769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092910713 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163266618 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112650664 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158305115 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096946965 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133441846 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14884919 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07270088 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075874021 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078260233 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128927056 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081018972 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120699656 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105548667 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260669448 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118547257 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130238791 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093023301 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070101197 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105769409 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127097051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117259514 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092908271 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099812023 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147801494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115058806 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076226942 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107425395 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110660417 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10006982 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16206803 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078854562 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104530882 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074508106 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077990254 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11870115 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141355741 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080527388 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100311653 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114995095 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106630156 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119702141 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095356178 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106684422 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124918544 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13837208 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120958345 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088751164 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108071156 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12328167 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145910286 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099967286 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096992661 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163659933 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142892055 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152469674 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086295804 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113094399 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109105745 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105822826 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130682111 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081904052 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151547281 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082004907 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129442651 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099331565 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086896006 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120034628 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107354984 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085794531 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135139567 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110554148 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078731407 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077030487 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258211823 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118228837 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102093608 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074239421 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132399356 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074442824 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129940539 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161851093 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08050794 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102826334 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094783382 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082893474 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101936193 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100077219 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084273448 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096410994 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158788021 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085632267 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137668164 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124783371 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105790015 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129148701 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099873961 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639318491 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077762099 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143173872 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111431771 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166087913 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095797675 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113183265 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106347766 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114970969 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134785374 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099266862 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176675948 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126045251 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115913805 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078978976 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100960451 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100763749 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086725299 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102246963 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111688046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110713465 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09212133 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112814947 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11649722 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081367257 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095202158 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146756665 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112848452 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137509712 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132589241 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081663079 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111253917 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127739103 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0793918 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113183137 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140758175 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252666618 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099680127 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080966022 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098300466 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161574685 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071895107 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148081276 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114905734 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105700045 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110827917 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105698269 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122925477 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099511267 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11532893 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090283716 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10461784 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144233962 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082056415 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077536104 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100760673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105769015 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09495954 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093873293 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096104455 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141997727 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072737605 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097013742 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11274123 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139113729 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164950995 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105243873 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084201458 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114968764 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113839408 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111282043 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117970235 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081901318 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081463381 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080987872 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.100535316 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.123551534 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112403226 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116365711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108228459 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153440748 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082688501 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225721376 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096381771 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104426783 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088959347 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080666466 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095071787 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095502783 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101561027 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10926099 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165044889 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095033438 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090452666 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091787319 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073578608 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080707734 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118614907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103863715 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111196793 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099353588 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079848647 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099652607 seconds)
  done (took 56.855602523 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106041913 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077440045 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097504032 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143696859 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121349194 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199389684 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151050659 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188790669 seconds)
  done (took 2.682902907 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068072825 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09393857 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104209223 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084481888 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069422321 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070486619 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228315429 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083608773 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069075883 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09410925 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079914361 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068711968 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.447430501 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071362684 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069998963 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079529653 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068018717 seconds)
  done (took 3.404869739 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382412325 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61241759 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.34619392 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07744454 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.976086652 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092156552 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.204457139 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140309389 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081524106 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537959258 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367008836 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134864612 seconds)
  done (took 18.519511535 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083520863 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076718863 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090985443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091641694 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080344365 seconds)
  done (took 2.066981062 seconds)
done (took 104.98735373 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082346162 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.433771413 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071723723 seconds)
  done (took 2.097257439 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092267353 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089684063 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089699897 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087741661 seconds)
  done (took 1.942354705 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075395166 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077491293 seconds)
  done (took 1.725607823 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230496744 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181747204 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099758137 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083906769 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081262653 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081677347 seconds)
  done (took 1.820376141 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073069091 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073272236 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073645903 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075184705 seconds)
  done (took 1.862733839 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06875098 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06735749 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069720501 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074322077 seconds)
  done (took 1.845437544 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085009465 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08648594 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081851966 seconds)
  done (took 1.819495998 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101432574 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091678016 seconds)
  done (took 1.759379286 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081909066 seconds)
  done (took 1.648738592 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091508611 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102898183 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135512333 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116566588 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141242381 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11737082 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086663703 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087059252 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079939577 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087103407 seconds)
  done (took 2.609807401 seconds)
done (took 21.28570804 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079918558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37125574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362370575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092362601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673742425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360030425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991829772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097574563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146370584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071429891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088189836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65305018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981865652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32879955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964909771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331954991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65090866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06958054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069126999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068874039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97582365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069410499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069027061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069784782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650308598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37463728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072488898 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332509636 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07083701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071728148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357231592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070354255 seconds)
  done (took 16.185116762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071059656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122058433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076900978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089039996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074700725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073173802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074361992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070320933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12555871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072264959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089277171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070715229 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074025464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069591769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089139499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069946964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070578912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070800356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070098874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070575747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089364642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070233459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070549211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071172889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070899867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083095344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073440507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071384206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071100974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072519585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073354884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071265156 seconds)
  done (took 4.065267491 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117876505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128740231 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077017925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108970364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115184516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072765001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148556204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097953745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131170601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071710958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087576184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069981413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104023736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071318692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09047343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070593811 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071947763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07169042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071492828 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070415119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090241697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069998051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070055474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071616284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071367925 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084129655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07077665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070593887 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070933475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072383857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073919807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070965779 seconds)
  done (took 4.322734128 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071296725 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07454479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081918626 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083452207 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06967664 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072924445 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073501861 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068852959 seconds)
  done (took 2.184221801 seconds)
done (took 28.330013879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079160521 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069322322 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073264349 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090326016 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077272183 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082390796 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06820454 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078419631 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07498078 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07547119 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076803522 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069499487 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072960217 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067931193 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074059366 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068630527 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08306089 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072397921 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082049208 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081857572 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070927011 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074343369 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075892928 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081462406 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081745671 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08119653 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077517451 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073373882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069121348 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071491908 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071315298 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079758415 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082546333 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082377646 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068282841 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067982165 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072948279 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069998547 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083137243 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077209684 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070065965 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077567526 seconds)
  done (took 4.735791586 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085706171 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089738588 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082593586 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079994728 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090627131 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083247396 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087054645 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078729067 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078855631 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086617397 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074915294 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08187978 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079341724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073657562 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078031926 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075236836 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080157328 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074631706 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078013905 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078583523 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088290446 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073398159 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088792138 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080378322 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075718391 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081252264 seconds)
  done (took 3.698835624 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074157606 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08663332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093422989 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144620643 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112402776 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08107185 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082504329 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093202691 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097427534 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069342424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073551429 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093479246 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094722626 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076782546 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070118124 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085240389 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085321015 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072097204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077222738 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099066024 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090885805 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086269172 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09480885 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085256805 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068621619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071254224 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074087658 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085172926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072116027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081968605 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072821837 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076917844 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071558724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082314315 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073629538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070580716 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096288127 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082420761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082730505 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071192381 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079975003 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07058936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09433566 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12970006 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069989383 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075734214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074866302 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082647822 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070432243 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099252696 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083265321 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070685108 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071870243 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070507878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07065878 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0737868 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073115051 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074378991 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081517014 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078026658 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093566423 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076638724 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089560656 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070693893 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081684661 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070665831 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072336001 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070452399 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100893568 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072519077 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116667881 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071742272 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070152339 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082285018 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081697593 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077678051 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071701462 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089633199 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083020536 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075729583 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079696241 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074481482 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074816227 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102415633 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071936436 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070666364 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070265441 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075320515 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074654493 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071779203 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084150678 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070528018 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073727126 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088336041 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070775135 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072164361 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075072853 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074014065 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070886609 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082588407 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075220895 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072597893 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08219729 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072004648 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075086502 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083942212 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07823751 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069682341 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072390669 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073527371 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070140883 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070011335 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072563351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070924824 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076225576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077550086 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077042982 seconds)
  done (took 10.959562938 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166039393 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160408335 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072768953 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149325043 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078793912 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080925111 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152648974 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099078054 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07202029 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073663381 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071896145 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114580918 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110540214 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124379136 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083803488 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072222051 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093907526 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116693042 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155614915 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148820494 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091876351 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077386683 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071999211 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070749174 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071030164 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079055491 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085926589 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077919364 seconds)
  done (took 4.452868765 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078455162 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10352659 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075955217 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093951224 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091325347 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072404825 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073848846 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073550151 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088371732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081078678 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072012981 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077004453 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075368296 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075104474 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072493847 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078896101 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079361772 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07107615 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076311373 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077774555 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082418992 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096240092 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075427827 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072002816 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074823495 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071857604 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080943425 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084721408 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072558713 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108508776 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06764161 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074139704 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086501471 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07017006 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069143216 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069695877 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069644907 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06964466 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07075736 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068123899 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068168328 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073837242 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068942352 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07765143 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082434975 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071375694 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07167892 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074423059 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074695671 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069434915 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074522755 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074031489 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074913743 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079199904 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075339751 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073026384 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072555933 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099231442 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076865719 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07013972 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069410707 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069110197 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073167547 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081279484 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087685044 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074125434 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070716201 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072095979 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085051767 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084854356 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071019929 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076816063 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.07004104 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074057072 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074530818 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074608171 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072660916 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074553192 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07143156 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071940908 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072557344 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07137815 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071185988 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075058747 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06998825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070394299 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07138352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072620932 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079675113 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070128043 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074581659 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070531663 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069343785 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074490027 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076877626 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07502608 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082681322 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083508103 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07181283 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069778165 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08425369 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072586633 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068833966 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077183636 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075490936 seconds)
  done (took 9.591902059 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092577027 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07129263 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08839499 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095583789 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082035214 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077868744 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081964149 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071529673 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088244894 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076838637 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080261071 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070594051 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082542057 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.0816317 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072387097 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082698412 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075037232 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088758173 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08690088 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070373057 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081214575 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084576661 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083514438 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086422123 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086180762 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087238365 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084460552 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081249192 seconds)
  done (took 3.932918688 seconds)
done (took 38.951892616 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.687325351 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.840600792 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.660178861 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.848334415 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.707493415 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.886762696 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.755192264 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.658794505 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.972703739 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.704844185 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.965027054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.885116129 seconds)
done (took 64.305438304 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.707532493 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.80930892 seconds)
    (2/2) benchmarking "String"...
    done (took 1.904550968 seconds)
  done (took 5.308346099 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.930918084 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.321191579 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.890032066 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.653711103 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.664186059 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.909596288 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.4280243 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.100581985 seconds)
  done (took 29.563299076 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.843849341 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.878659652 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.357467751 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.392307149 seconds)
  done (took 15.115016766 seconds)
done (took 61.313448367 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.666169711 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.664780115 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.694215823 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.652411953 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.747811383 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.66165666 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.93854554 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.674439849 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.655494128 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.65793684 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.657935322 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.144561886 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.662705954 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.875430071 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.654641633 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.654582999 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.733639276 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.134233801 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.807562169 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.676013226 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.660534172 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.709776664 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.66026012 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.801289327 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.672051435 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.655433532 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.072074275 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.65632348 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.267012604 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.660713785 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.692801096 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.995813551 seconds)
  done (took 200.114395822 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.653560572 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.745609058 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.810876074 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.658412212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.256763997 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.848337101 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.759938997 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.293447085 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.656746991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.658561553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.943249793 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.655292225 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.952797792 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.635402892 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.693208379 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.67072479 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.910366268 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.947341432 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.695060533 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.80308233 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.668465065 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.798460916 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.744478587 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.904412763 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.659761443 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.73735841 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.656172421 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.669358354 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.836160731 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.890962866 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.667864974 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.684887839 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.845582284 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.526026424 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.660048221 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.681653832 seconds)
  done (took 166.476453409 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.834572654 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.656746336 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.655682391 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.657927752 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.661685377 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.657132753 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783266749 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782793835 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.324152598 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.124576032 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715469253 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.65831188 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.421239858 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.656361025 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722610166 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.670382222 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.658115988 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671099387 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.682958355 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.656451252 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.659408362 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782725699 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.675127351 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.65839268 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.666012466 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.658259401 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.663566118 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.044152801 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.658692541 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.681531043 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.659934778 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.662926554 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.899286898 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.660204604 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.660168586 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.488540506 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.792346607 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.658900964 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739312171 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.659253204 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.659870385 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.664356709 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.659060463 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.876119779 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.659218774 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.659644941 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.657728454 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.659566526 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.659227451 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.773427566 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.663261675 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78733445 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.661814908 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.14179052 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.657622063 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66041769 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.881065022 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.495194773 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.661156578 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.662885099 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.658492566 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.660492081 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.658744533 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.671517542 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.93749038 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.736779138 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.660676107 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.660298664 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.665649028 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.65883908 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.891273709 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.663002839 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.114611941 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.676076496 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.787696394 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786311166 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.665019398 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724319531 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.751252863 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.66175175 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.66094787 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.662095694 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.661151105 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.740369912 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.660564293 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.792020509 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.670615607 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.660774465 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.716424708 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.729642394 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.662316102 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491383563 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.664493587 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.658869271 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916324217 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724745973 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.659988024 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.663021194 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.757218146 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784744061 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.394234697 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.665240583 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.857175433 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.754952572 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.662437042 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773410574 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.662984323 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742116073 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.669597921 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.662182975 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.695577649 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.663242634 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.673501105 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.662248384 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.036142018 seconds)
  done (took 387.86551291 seconds)
done (took 757.946020628 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.262697888 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.226595295 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.332435177 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.244424997 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.218285756 seconds)
  done (took 12.886276963 seconds)
done (took 14.488368097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.743374784 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.745679964 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.681072872 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.741342386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.678842939 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.740631122 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.725445436 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.684170296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.710019378 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.686709505 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.713203057 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.68503498 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.669778116 seconds)
  done (took 23.808548374 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.886890883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.892965703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.727761055 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.88358363 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.705315804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.887045271 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.815361448 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.807013989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803005725 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.673829894 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.671247647 seconds)
  done (took 21.358011346 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.891959445 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.897700335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.733986517 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.889142732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.707486202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.888605277 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822511661 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812483163 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806574051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.673350049 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.672358494 seconds)
  done (took 21.399944454 seconds)
done (took 68.167895251 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.668133962 seconds)
  done (took 3.271857323 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.684739598 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.841107769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.669788326 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.668044817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.667253978 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.666627158 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.667874508 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.668062638 seconds)
  done (took 15.138181265 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.669576904 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.668561568 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.667932135 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.667309893 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.668773186 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.667734737 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.668039611 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.666286209 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.667300806 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.668451888 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.667048815 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.666838935 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.668281659 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.668428777 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.667393434 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.6686503 seconds)
  done (took 28.290362042 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.669584916 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.666363725 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.667266492 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.668318363 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.667497306 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.668852511 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.667394171 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.669637482 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.668863891 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.668533505 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.668600189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.667867621 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.666557331 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.668066916 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.669145096 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.668328932 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.668918483 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.66740845 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.674227135 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.667606243 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.669240525 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.668560111 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.668722307 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.668472617 seconds)
  done (took 41.650680571 seconds)
done (took 89.955366371 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.409789503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.277423378 seconds)
  done (took 9.291925882 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.674810641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.670819008 seconds)
  done (took 5.026030719 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.669223889 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.670125617 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.670939182 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.669537672 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.670846613 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.671271502 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.670087308 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.670416135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.669330656 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.669392141 seconds)
  done (took 18.307943551 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.669917016 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.669942037 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.669508055 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.670060288 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.670102574 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.670974104 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.671796071 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.670859562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.670443928 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.669281934 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.670781775 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.671479454 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.670545002 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.671177305 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.671354231 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.670381161 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.670724951 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.670750204 seconds)
  done (took 31.676695153 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.670666347 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.670432721 seconds)
  done (took 4.94728644 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.671631613 seconds)
    (2/7) benchmarking "second"...
    done (took 1.67072494 seconds)
    (3/7) benchmarking "month"...
    done (took 1.670096679 seconds)
    (4/7) benchmarking "year"...
    done (took 1.669855194 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.671053991 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.670377382 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.670053651 seconds)
  done (took 13.300584804 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.672334554 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.829249726 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.891830185 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.316078595 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.672857043 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.67346879 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.581881264 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.673015124 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.674925938 seconds)
  done (took 18.593291988 seconds)
done (took 102.751538774 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.528783912 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.672836991 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.928769996 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.734007019 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.692153384 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.965971066 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.706415365 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.946674645 seconds)
done (took 41.782656235 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.696763649 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.376825256 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.419965179 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.74114354 seconds)
  done (took 15.147573017 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.682848166 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.985708571 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.693433831 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.568230557 seconds)
  done (took 21.543683748 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.032661563 seconds)
    (2/2) benchmarking "read"...
    done (took 2.019127741 seconds)
  done (took 5.664865759 seconds)
done (took 50.662555612 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.672862324 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.673705678 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.673273278 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.674297359 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.673578709 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.673666889 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.673778262 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.674161297 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.673034692 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.672809508 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.673184731 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.674175571 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.673608766 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673518829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.673488285 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673970712 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.673236457 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673764745 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.675387137 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.67339635 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.674101905 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.673832481 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.673717491 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.673686613 seconds)
  done (took 41.779129894 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.67441609 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.67466621 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.674295743 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.675094968 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.674774049 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.675284078 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.674376999 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674224741 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.67449811 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.675163924 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.674960818 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.675432797 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.674549013 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.675663517 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674857112 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.675246723 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.675662265 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.676370482 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.675822189 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.67508582 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.674539882 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674836838 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.675209285 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.676261023 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.675764537 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.675712013 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.675450087 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.675164095 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.675311643 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.67623816 seconds)
  done (took 51.86775078 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.675775692 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.675467945 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.675806987 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.674845219 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.675763297 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.676003697 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.67551689 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.675610678 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.675533309 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.676134538 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.676679185 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.676565858 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.676066615 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.675291422 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.676984306 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.676208848 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.676719324 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.676561996 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.676560383 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.675518378 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.676933128 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.676755768 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.676447619 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.677442245 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.676349655 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.677533283 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.676794895 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.677004187 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.67729735 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.68005188 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.676723561 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.676743076 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.675930675 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.676688512 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.676573482 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.676735097 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.678326242 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.676971393 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.676945734 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.67722971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.676901732 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.677356049 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.677065258 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.677281933 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.6769761 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.677309681 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.677493082 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.677368907 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.677569865 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.677508384 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.67703409 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.677430257 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.678412627 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.677380813 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.677754863 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.677875712 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.677733875 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.67727623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.678666366 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.67755627 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.678113494 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.677468561 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.677699383 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.678412139 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.679599972 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.678500103 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.678032552 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.679309045 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.679251874 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.678856399 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.67914674 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.679014129 seconds)
  done (took 122.369071029 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.679633323 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.679495304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.678775266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.678946275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679240212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.678456451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.679305697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678437526 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679723916 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.6787217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679741683 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.679507081 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678301413 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.679623614 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.679061741 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.67913481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.678971045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.678929034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.68025462 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.679492753 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.679599545 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.68065911 seconds)
  done (took 38.560592899 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.679446374 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.680086691 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.679752838 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.67964627 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.679689013 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.679609587 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.679552532 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.680104941 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680545019 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.680859501 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680455361 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680254612 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.679871181 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680171763 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.680221425 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.680563498 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681156169 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.680377525 seconds)
  done (took 31.859171477 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.680416544 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.681446822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.681195103 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.680248406 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.681848421 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.680686048 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.681321378 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.681469681 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.680567089 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.680929712 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.680490606 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681037903 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.680873703 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680929209 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.681008041 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.682797689 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.682485022 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.681072578 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.681279905 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.681557697 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.682629748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.682876246 seconds)
  done (took 38.607368717 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.682692037 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.681373699 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.682980306 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.682011861 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.681787099 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.682251813 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.683031119 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.682047833 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.683324747 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.68269243 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.682274078 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.681554656 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.681819158 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.681571347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.681372268 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.682211108 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.682312072 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.682369638 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682432361 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.682249235 seconds)
  done (took 35.263351237 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.681921417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683240457 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.682989773 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683555283 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683330904 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.683204837 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.682285134 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.683048264 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682869139 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.682690391 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.682623588 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.683031172 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.682867786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.683814318 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.681986632 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683541566 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.683632621 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683185237 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.684294483 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.683397144 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.684173869 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.683784555 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.683012735 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.683066386 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.683459312 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.684288005 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683124289 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.683882312 seconds)
  done (took 48.750398818 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.684011283 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.682892141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.68343132 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.684545731 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.684582681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.683742912 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.685312409 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.683463508 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.684678867 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.684094016 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.685973755 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.684105854 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.685134399 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.6849155 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.684843689 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.685290811 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684250324 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.684719003 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684268417 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683965928 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.685351236 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684215566 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.684863194 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.684785925 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685272558 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.684860549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685331343 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.685499429 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.684610596 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.686156179 seconds)
  done (took 52.160732474 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.706480655 seconds)
    (2/2) benchmarking "in"...
    done (took 1.704433567 seconds)
  done (took 5.032536061 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.685085891 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685179393 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.684739189 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.684417359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.686206595 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.685935358 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.685365291 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68558689 seconds)
  done (took 15.104843512 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.685999023 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.686132809 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.685103362 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.685189238 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.687376339 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.686212913 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.693233342 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.686333879 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.688170514 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.686738892 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.694434672 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.693829057 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.689105387 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.687246723 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.68749719 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.688008024 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.686879393 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.687606212 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.687447134 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.686976821 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.687580639 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.689399438 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.691206171 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.687868812 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.689951835 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.697658859 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.691869944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.686634207 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.687992848 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.692361065 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.689187224 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.687195663 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.688288296 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.688003232 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.687046952 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.688036925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.696805321 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.689421797 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.694521884 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.687673168 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.687876251 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.687327036 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.691089243 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.689229928 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690609235 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.68779359 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.688110623 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.687952126 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.687923076 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.69199833 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.696299923 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.689009461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.688399804 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.693639776 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.690930185 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.695935298 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.68923042 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.69219295 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.698437981 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.698246437 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.700683119 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.697683038 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.691687079 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.689567256 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.699004731 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.714937302 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.69660077 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.689009707 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.689043471 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.688605114 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.697060161 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.70180353 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.700249065 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.68945047 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.688885446 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.689834305 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.692215867 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.689738129 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69697897 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.693678365 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.690220396 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.690919475 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.700294773 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713902375 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.690858553 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.690969364 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.691334065 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.690425288 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.691115109 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.701867502 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.691915646 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.691089942 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.690827212 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.692616624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.69257954 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.691048535 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.691276811 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.6919408 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.690193638 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.690788645 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.690543592 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.694563288 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.701021174 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.69080857 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.691633651 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.698458516 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.690976475 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.691728935 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.697372589 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.691181206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.69081197 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.691467639 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.698139737 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.692209456 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.695735306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.700376728 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.691763443 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.69442093 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.691659714 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.691199412 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701684798 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.719640058 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.692081191 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.692152519 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.698070991 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.70313807 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.692854283 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.696321983 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.692737463 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.691796932 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.691967672 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.695021495 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.692102092 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.693909396 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692990905 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69596376 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.692487927 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.69279575 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.693149508 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.694544865 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.694163579 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.695227168 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.695138014 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.696325145 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.693522787 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.694490954 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.699370597 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.692743408 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.694535901 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.693915343 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.692496611 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.692611391 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.694840826 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.693703307 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.694176008 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692359229 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.694701832 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.693209444 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.695893587 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.693133622 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.693951589 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.694113378 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.698982303 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.695472023 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.698266924 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.694010812 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.694631581 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.693203529 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.694390142 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.693332871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.694132058 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.693776684 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.696811399 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.701875602 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.693153487 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.694583591 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.697790166 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.695659207 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.694898549 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.695289594 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.698006417 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.704060377 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.69526927 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.7014579 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.696082394 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.694552924 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.694721813 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.696368322 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.696483077 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.695561815 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.699230608 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.70242075 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.706877389 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.704874461 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.69674478 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.699286768 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.697252874 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.700290767 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.700326512 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.696138059 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.696173009 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695754457 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.697143256 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.695779076 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.698218043 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.695929978 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.696366907 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.697163487 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.696340206 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.695805853 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.696721691 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.69849517 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.698763289 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.696246871 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.694810771 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.696540162 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.696670653 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.695735782 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.695574286 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.696145318 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.69642298 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.697893241 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.70383919 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.696806749 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.699575359 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699494459 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.697335297 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.695925985 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.696472436 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.699677238 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.697699123 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703937376 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.697942326 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.699104978 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.703507625 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.697467057 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.696711612 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.700717431 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.697591326 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.696485044 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.700302609 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.704890754 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.698238906 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.698036693 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.697941464 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.698737455 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697953604 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.705499125 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.69749428 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.69878537 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.697193988 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.698953456 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.697710831 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.70103292 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.699887876 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.700024318 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.701027614 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698091198 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.698653423 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.701163771 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.69832346 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.699137172 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.698785465 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.703210774 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.706665077 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.705123046 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.699715786 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.701830076 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.700874463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.703738099 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.700135943 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.700227969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.700046822 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.71103393 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.708455889 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705531186 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.702652675 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.699741388 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705452324 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.700782162 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.704201187 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.701332433 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.701226153 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.700346029 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.699945437 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.69987876 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.701420954 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.699698199 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.702399992 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.702160506 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.703875914 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.699593448 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.700888111 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.699568701 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.699825644 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.700191528 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.700396189 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.699895631 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.703658501 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702998643 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.700729469 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.702339615 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708693775 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.704141578 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.703535891 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.704069766 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.703305224 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.701933358 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.704402496 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.701819821 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.70489912 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.709119244 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.704532757 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.710856594 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.702628233 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710864534 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.701672311 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.705770432 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.710307868 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.701287044 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.700485044 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.701651772 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.702363524 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710131533 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.703098629 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.702070549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.706256554 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70186657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.702796405 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.701875117 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.702425111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.701849417 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.701938285 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.710726765 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.703159268 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.708100157 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.704160735 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.700953486 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.702067548 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.701856352 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.701512291 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.70686081 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.702744187 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.704385132 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.702890158 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.703317415 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.702484328 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.702442717 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.702865824 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.702250722 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.702238627 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.710505356 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.703822391 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.707331902 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.702509179 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.711644794 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703942886 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.71097173 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.704151306 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.702786626 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.703641285 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.702998788 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.70505715 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.703128996 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.7060354 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.703393635 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.705009744 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.707949586 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.703526024 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.70563017 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.706541599 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.70519163 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.705738471 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.714043618 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728943181 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.706406564 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.707613453 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.704724612 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.706595331 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.708794631 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.70480358 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.704142285 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.708135632 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716404368 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.713048087 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.706059442 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.704711514 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.706536195 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705830629 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.704532107 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.70515611 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.704409919 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.704708769 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.705585122 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.704177121 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.708897079 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.704882929 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.706034671 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.70710147 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.705673588 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.716418295 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.70564845 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.705424177 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705896388 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.70529193 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.706701925 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.706529471 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.704608272 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.707181199 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705905672 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.707969861 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.712975608 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.713010013 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.709061444 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.707201941 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.70653997 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.708019899 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.706158081 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.706532947 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.705574991 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.706640623 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.707759508 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.706595441 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.707372207 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.704814773 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.705698905 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.706265967 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705925721 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.710155078 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.71550694 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708337918 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.706974206 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.707263931 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.70617506 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.70630537 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.708429051 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.715407417 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71091204 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.717841736 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.715692313 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.711467799 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.708591415 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71103851 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.716687829 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.706818316 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.709546427 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.707208379 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.709869831 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.708011371 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.713016997 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708402285 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.714543493 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.709785426 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.70700474 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715877958 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.710536714 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707709946 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.709814959 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.713132455 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.70927764 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.707544619 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.708536074 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.70893288 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715504461 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.711066643 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.70883677 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711925999 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.707374379 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.710218295 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.712599728 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708462644 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.710808417 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.708268116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.709727528 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709648089 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.708242148 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.708386482 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.708500901 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.708328959 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.712990777 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.717665259 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.707901027 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.712287983 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.710306546 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.709683072 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709961596 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708676281 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.709618101 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.708680422 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.709398943 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.708707909 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.711284771 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.712992299 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.709895661 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.7104729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.714038652 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.71085883 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.713548253 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.720780708 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.719303106 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.709953789 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.709391643 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.711288843 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.713797869 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710399276 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.710387773 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711694179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.712762676 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.711049801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710244784 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.7128824 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.714644054 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726750405 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.710819668 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71184164 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.711706561 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715228452 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.710818537 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.711298119 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.711549799 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.713079248 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.714346968 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.719106082 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.711463603 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717146841 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.712703355 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.712199795 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.715615014 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.714492344 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.720078605 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.714877789 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710613382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.711661108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.716058196 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.728895316 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.711195792 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.72114031 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742931883 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.712843006 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.712527605 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.712040699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711829474 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.712683611 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.713040556 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.712142865 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.711964612 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712427339 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.713258032 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.71278972 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719117501 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.714702447 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.712348398 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.712378397 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.71354446 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.715614624 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.712181439 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.712761971 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.712453805 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.713446188 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.713288691 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.713262202 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.714605501 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.724573682 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.723263406 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.712897658 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.713180551 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.712562607 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.715675464 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.716615843 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724880367 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.720619273 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.713723182 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.713209608 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.715217082 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.71333308 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.713171387 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.715160335 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.714170799 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714257335 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.713323603 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.725527329 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.722973592 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.719182936 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.713481472 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.714009129 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.713165495 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.71697367 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71452822 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.71463733 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.716792605 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.714989098 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718694358 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.714674384 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.714503016 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.717968283 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.723344822 seconds)
  done (took 1016.46203214 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.714894412 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714028149 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.714205509 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.714490066 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713674677 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714351896 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715921179 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.715050314 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.714497073 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.714885129 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.715527042 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.715028801 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.715089584 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.715283933 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715650419 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.714942235 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714919163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.714897869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715202222 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716017105 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.715712834 seconds)
  done (took 37.664934673 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.715278659 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.716436357 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.716285535 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.715632147 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716240868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71676339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.716530758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716079239 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.715946687 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715334757 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.715597988 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715723 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.715807822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.71503721 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716946646 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715896101 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.716013082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715931979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.716061733 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.716855169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716292527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.715937753 seconds)
  done (took 39.404203764 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.717134329 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.716764172 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.717764109 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.716019386 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.716533997 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.716544066 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.716250594 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.716192093 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.716615138 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.717848264 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.716811807 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.718002998 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.724685824 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.72467613 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.718655413 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.71767403 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.863798674 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.717897476 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.717183875 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.717395815 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.71725515 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.723404956 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.717189004 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.718295178 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.717483452 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.718623017 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.717802077 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.717979551 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.718742806 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.719162656 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.721568497 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.718348703 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.719580968 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.720203836 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.717833296 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.719731421 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.723069776 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.719038104 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.71841593 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.718978416 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.727860603 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.741716069 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.719433988 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.726032726 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.719449177 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.717441114 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.722368402 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.727097213 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.718275347 seconds)
  done (took 86.060157412 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.718711373 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.718082309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.718569358 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.718415215 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.720006596 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.720177798 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.718977112 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.719654709 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.717612849 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.718873763 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.719938341 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.719577614 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.718425537 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.718661792 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.719071083 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.718984686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.719970293 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.719876458 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.720245253 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.717528251 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.71851954 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.718210006 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.717552693 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.719166829 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.718182477 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.716673846 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.717495246 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.716500037 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.717909931 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.716425958 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.71824939 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.717784774 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.717629435 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.71716363 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.717986354 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.718391209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.718194745 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.717651463 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.718394877 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.717528943 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.718165211 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.719148108 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.717615665 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.717866246 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.717367369 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.717992066 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.717621813 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.716559888 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.717223066 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.717096743 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.717640583 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.718910298 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.718418658 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.718075813 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.716079396 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.716748844 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.716559881 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.717587333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.717301451 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.71707717 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.715922713 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.715252096 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.715727225 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.715928424 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.716293508 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.714841094 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.713193763 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.712811887 seconds)
  done (took 118.463748567 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.713004475 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.715732845 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710800631 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710124648 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710254743 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.710675551 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.710744517 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.711755399 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.710368818 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.709519992 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710279686 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.709951661 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.710320786 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.71008271 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.709059839 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.708624388 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.708965565 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709015093 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.709349478 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709308399 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.710203155 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.709376433 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.709789424 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.709806321 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.710209342 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.709991045 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.708725617 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.710024749 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71063735 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710105998 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.710254922 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.710356168 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.710308937 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.709689046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.710594106 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.709599309 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.710014295 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.709540353 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.710769961 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.710825537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.709934932 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710773709 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.710541531 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.70992281 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.709747706 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.710444498 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.710219254 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.711080854 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.710937627 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.709811961 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.709711314 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.70974012 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710435906 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.709384224 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.711492486 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.710015725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710282554 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710318942 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.709230475 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.709953339 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710264356 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.709789822 seconds)
  done (took 107.684658514 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709036202 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.71050902 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.710475718 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.711208561 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.710066542 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.709421725 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.709405976 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.709277573 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.709431244 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.711481952 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70967261 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710408092 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710964746 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709571131 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.709891119 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711433113 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710146672 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.710593873 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.710657213 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710876097 seconds)
  done (took 35.851826278 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.709802143 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.710298678 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.711958062 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.711058827 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.709830062 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.711989561 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.710496873 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710470353 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710550358 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7102872 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.710687159 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711126367 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709982294 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.71101128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.711376446 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.710876528 seconds)
  done (took 29.021003235 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.711876533 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.709910167 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.710309219 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.709587086 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.711032313 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.709921916 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.727570221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.708992144 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.708730652 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.708444696 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.70836415 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.706332576 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.707679824 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.706675099 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.707038306 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.707362128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.706864705 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.707861802 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.707920164 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.706140851 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.706833645 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.705858846 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.704143724 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.707058296 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.707051874 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.708680885 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.709265474 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.70899897 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.708651642 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.709973764 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.708970885 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.710251566 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.70640512 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.706190017 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.708287601 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.706254307 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.704486089 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.705336158 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.706350043 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.706041704 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.706752762 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.7086794 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.706499208 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.708359899 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.707248736 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.706298478 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.709219632 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.708845469 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.708513217 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.707158268 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.70767739 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.706406946 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.708966105 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.708843106 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.706157135 seconds)
  done (took 95.597962073 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708460462 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.708425485 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.706105453 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.70902226 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.708437664 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.705893821 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.709425029 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.708376004 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70777432 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.705178419 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.706623793 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.704982804 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707349338 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.708312727 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.705713207 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.703720381 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.709238012 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.706590207 seconds)
  done (took 32.37099573 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.70837195 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.710071524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.706488923 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.707958902 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.707437272 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.70943451 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709101863 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.710979079 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710982806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.706658414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708278718 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.709408064 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708162754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.708309455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.707293075 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708265071 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.706089281 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707452988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.707896731 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700625929 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.698167091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700527699 seconds)
  done (took 39.20098383 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.697712778 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.697185505 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.714723316 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.717250964 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.716557229 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.730101837 seconds)
  done (took 11.904320066 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696047859 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698882313 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.696839924 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696310197 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69723206 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696239777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7007039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695398337 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69396284 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694518239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693808157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69634363 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696308233 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694447643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693514369 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694283086 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694551661 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695390916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695721471 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694479487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694931094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.6937895 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694040288 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693177213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69893654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694045278 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695935601 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697127037 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694187645 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694339559 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697866985 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69270684 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69316485 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69397164 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.691480828 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692713148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694411362 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695167371 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694002069 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693264819 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.695748617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693041646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694687154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696594359 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.691467752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691509815 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694669503 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693414925 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693942262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693099268 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692503078 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693414262 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695855736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693600821 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696834432 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695283158 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691920596 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691981147 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693123593 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693674123 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694929578 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694436163 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692566819 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693043065 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695185696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694054045 seconds)
  done (took 113.476084755 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693441302 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.69571301 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695501941 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693622446 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696984273 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69454406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692089204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693984104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692613335 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693965016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692548747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695685846 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693185188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69124535 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6922622 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692398919 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696086598 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693410395 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690392774 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693875147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693910771 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693902118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692824902 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691423986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692314561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690815173 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692138925 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692838504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697429508 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690954748 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691678058 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690596934 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687654203 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.692996803 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694962449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69212752 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694616629 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692535748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689486369 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692285571 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694023447 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692677398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690509005 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69192484 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693933519 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695956124 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69511305 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691739324 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689632564 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689642047 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695628758 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695092826 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696338795 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692387024 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.6916828 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691235234 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693431172 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69149467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693231343 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693353402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697884689 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693141033 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694616953 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694170223 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.690967724 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691966078 seconds)
  done (took 113.375250379 seconds)
done (took 2359.506683348 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.757614985 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.802835028 seconds)
  done (took 15.187879567 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.857371916 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.80404221 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.698376475 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.734057011 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.694514692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.728850758 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.712510154 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.697873144 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.695112678 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.69614881 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.694688207 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.88045403 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.712457293 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.693946385 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.700176823 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.787293294 seconds)
  done (took 49.416904376 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.701453605 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.70086498 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.706240763 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.70126635 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.698599502 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.713365414 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.731117586 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.702215455 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.731851193 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.709941279 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.761080084 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.710288927 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.698026115 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.746649531 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.712470355 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.714748552 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.796876944 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.773309212 seconds)
  done (took 32.640153492 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.774949703 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.701155737 seconds)
  done (took 10.109090524 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.711491879 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.708729827 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.724601685 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.704800374 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.699360998 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.705885901 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.746000334 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.736126185 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.705994287 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.709235244 seconds)
  done (took 68.783810243 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.698224883 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.699781171 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.698068837 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.696006196 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.696478116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.697081557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.692501564 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.696359066 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.343027249 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.737295828 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.706771389 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.700643789 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.700242516 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.700494948 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.698135248 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.716401849 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.811395389 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.695452855 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.695800766 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.702423636 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.697797645 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.750271517 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.711016481 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.699867261 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.730281467 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.35201558 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.708664182 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.703173223 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.830526518 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.699326292 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.693879588 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880893032 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.697264778 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158501796 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.964462134 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.69936903 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.707305786 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.699547137 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.693422615 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.814457959 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.698529877 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.701317262 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.597567727 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.942355139 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.786395177 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.739082193 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.002977976 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.712420566 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.693694011 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.728947999 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.698838068 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.698090546 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.709346895 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.200458703 seconds)
  done (took 123.217050582 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.693913982 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.040707003 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.858915789 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.697574516 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977215212 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900310804 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.694923063 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.740726343 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.695025216 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.923500396 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.944533703 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796774235 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.698411052 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.69478379 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.699080314 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.697523524 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.848866864 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.76111288 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.696384021 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.692422757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720637924 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939599961 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.819132634 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.695055911 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.722811788 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.905134586 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.814796439 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.793065559 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.467659639 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.696079229 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.755862834 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.696706874 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.693679722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.697447781 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848236336 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.790018658 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781769032 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.699419617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.691450482 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.691238992 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.35233037 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.892764533 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.787334907 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.825044482 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.947180515 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.895478722 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.474175605 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.695689231 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42683401 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.859974909 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.921796175 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.923541942 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.816519529 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.696823398 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.032116987 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.69117114 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.695377968 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.940859152 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9127751 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.789389239 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.696919131 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.701168148 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.695818878 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.932083215 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.698241696 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787153394 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.699316492 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.693876866 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.793058742 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795105042 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.930313494 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905058797 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.727044767 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.046602578 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.19389365 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939926738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.759139042 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944974958 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.700867202 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.699956159 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771337279 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.538529299 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.951478251 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.94134131 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943189014 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732346845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.42342079 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.696664914 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.923579524 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.916848329 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.957925351 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.946435317 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.934771035 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.992791342 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.700526362 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.699478182 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.020218175 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.821475815 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.703507475 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.043428571 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928539021 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.220824018 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.723864318 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.999749201 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.826548768 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.702777304 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.326390735 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.702164921 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928225142 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.74063273 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.703958351 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701098208 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.918433472 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.690123701 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.6998353 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.356508825 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.763849078 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.706140183 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934529295 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.707987859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9723383 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70434798 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934965742 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.161551868 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.730667169 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.878436788 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.953222773 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.706072853 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.941762348 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945298251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.821995426 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.919572218 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.415347695 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.704738499 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983640385 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.705105445 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.705229387 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.873589948 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.701026747 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.839925329 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.702230642 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991931387 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721361083 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92722185 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701516733 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.949336381 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.730244179 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.747988259 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.701905868 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.82390276 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.116461946 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.61697891 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.853013722 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.703370923 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.699662307 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.259227608 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.700881767 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.846815524 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.925754283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718958398 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.770235141 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.361189699 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.699788477 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779836655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.722948106 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.087008836 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.699111466 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.947744062 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.701417651 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.702102894 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.700398981 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.931916645 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.88199711 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.702750012 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.700725322 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.607714073 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.701448822 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.701280298 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.880253895 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.039291228 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.701786485 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905307134 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.705488436 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.828074941 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.705463529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.772034812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.033979598 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.701366478 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.701081183 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.701214902 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.701685681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.701766176 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906419604 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.725932735 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.189950427 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.836356781 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973347342 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.008518739 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940160992 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.743243321 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.702888532 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954262201 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.706002457 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.762775517 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.704098245 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.721589683 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929905407 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.704758234 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.965587742 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.968991864 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.545879485 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.749265586 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.705237041 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702020346 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.703572563 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.845074645 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784617671 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.705126735 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.703330352 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.817470956 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.824301546 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911198484 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.705755206 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.757334569 seconds)
  done (took 864.5933647 seconds)
done (took 1165.577482244 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.703091056 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.706511402 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.704438482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.706855167 seconds)
  done (took 28.458533674 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.709469161 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.704564695 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.704877816 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.704224417 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.704988055 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.706433692 seconds)
  done (took 11.872685772 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.754057105 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.701839432 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.705113665 seconds)
  done (took 20.801130935 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.775214371 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.085868463 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.835405673 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.116518012 seconds)
  done (took 9.450592074 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.706541608 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.703787129 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.705824709 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.705396792 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.713652973 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.711459513 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.705588367 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.706974742 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.711797105 seconds)
  done (took 17.010390534 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.691448238 seconds)
done (took 92.92425809 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.84208552 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.718952721 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.879818108 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.86613568 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.779918049 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.848179481 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.858445771 seconds)
    (8/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.016456381 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.719378026 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.918829199 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.101142817 seconds)
    (12/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.73396404 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.730529167 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.810047186 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.897397176 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.738540067 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.376076635 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.882498993 seconds)
    (19/309) benchmarking ("sort", Float64, false)...
    done (took 5.472851433 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.062979056 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.386106276 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.755332742 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.080589784 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.021630561 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.039125157 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.051797009 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.087305032 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.721961585 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.837012156 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.803143156 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.616259694 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.960397359 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.687616162 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.019611724 seconds)
    (35/309) benchmarking ("sort", Int8, false)...
    done (took 4.595024209 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.822260214 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.114059196 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.719799543 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.216340191 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.889604826 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.716410374 seconds)
    (42/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.721091909 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.821444227 seconds)
    (44/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.739374131 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.715727261 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.808446728 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.739638747 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.460732948 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.064667634 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 1.938387214 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.829830961 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.71980545 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.790291671 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.284787189 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.190414879 seconds)
    (56/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.004832861 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.406405044 seconds)
    (58/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.16347787 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.72177135 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.07901353 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.394902402 seconds)
    (62/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.916086302 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.883388987 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.738912933 seconds)
    (65/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.79631759 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.213692869 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.960985655 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.809459477 seconds)
    (69/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.730769983 seconds)
    (70/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.958652016 seconds)
    (71/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.862145807 seconds)
    (72/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.087747305 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.725389533 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.893989014 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.044634655 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.802830122 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.728911994 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.73291541 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.916305533 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.972636751 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.728132042 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.119589279 seconds)
    (83/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.830200158 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.722983122 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.960493486 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.7360247 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.815736028 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.719266102 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.720107145 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.449309983 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.045825923 seconds)
    (92/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.88080678 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.727858612 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.511766664 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.84931608 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.024297547 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.874699896 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.731419176 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.797532084 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.859853386 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.47389662 seconds)
    (102/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.721791899 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.674200981 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.725561588 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.073734403 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.744069367 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.730362434 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.794082972 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.744917617 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.733963315 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.85310135 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.826864898 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.723665254 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.254366428 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.847738773 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.018219174 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.831888798 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.719374843 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.723519591 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.849377623 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.717924372 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.635980038 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.722507936 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 6.8906237 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.807468932 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.919046682 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.742935061 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.831910036 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.749042611 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.889525819 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.209214673 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.016799678 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.350466013 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.757259602 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.853181959 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.393869551 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.72334059 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.759099433 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.605640557 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.914144214 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.75976133 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.095030781 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.758600127 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.891622084 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.984423019 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.913781383 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.72841831 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.970464625 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.756847358 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.511271993 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.783235503 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.054886378 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.974229948 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.400091498 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.939022532 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.941425496 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.749031682 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.724129677 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.826824656 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.175269696 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.971438928 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.075649854 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.539601049 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.651538205 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.964448892 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.682963485 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.850072121 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.726178741 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.752824574 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.727490377 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.731327347 seconds)
    (172/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.072023399 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.048150702 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.728110142 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.091028997 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.72599734 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.953303781 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.724961765 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.116496821 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.024719593 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.882529123 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.692999191 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.536250465 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.848759781 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.104600871 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.730706955 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.726559431 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.046182122 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.730682489 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.70899263 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.879294937 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.973906022 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.908734913 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.048063579 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.859806055 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.724057816 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.266600442 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.76607288 seconds)
    (199/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.602487985 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.79719842 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.623111834 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.809508265 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.738500211 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.825633859 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.474782436 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.076309453 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.890743418 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.722686534 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.063847913 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.80729018 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.804172292 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.857405468 seconds)
    (213/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.821868098 seconds)
    (214/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.186895046 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.838699713 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.828913327 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.743788312 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.046336869 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.372123945 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.928444391 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.610860915 seconds)
    (222/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.729809506 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.264434002 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.729327147 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.734112467 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.452132075 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.728751071 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.2864051 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.127428858 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.177703185 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.757243906 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.736300345 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.75067529 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.731036854 seconds)
    (235/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.844184676 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.80723731 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.785198341 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.832861352 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.734611887 seconds)
    (240/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.119237023 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.730771916 seconds)
    (242/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.50473448 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.323061978 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.05162265 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.757195477 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.833243474 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.753934504 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.852910144 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.837217853 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.885600904 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.849449378 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.240085113 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.726762732 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.981834239 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.730193312 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.658597336 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.131857791 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.730212091 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.155071661 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.731074261 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.918323979 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.97868007 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.060544406 seconds)
    (264/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.219328597 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.931226996 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.08043523 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.759600624 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.982660336 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.745550486 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.726822451 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.1273468 seconds)
    (272/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.048117445 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.638403777 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.034439232 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.110359744 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.642043053 seconds)
    (277/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.905227717 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.823425878 seconds)
    (279/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.867715152 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.736563638 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.814174665 seconds)
    (282/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.009996287 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.826550493 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.861687503 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.789868458 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.550231488 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.532144283 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.063693486 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.732848505 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.041098202 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.94024203 seconds)
    (292/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.825464194 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 5.430209886 seconds)
    (294/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.042141605 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.734504815 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.544563104 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.735689769 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.76140431 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.016348209 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.356528537 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.735688628 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.71093028 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.731222609 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.301241221 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.841588951 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.999240569 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.816626908 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.82551474 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.861108717 seconds)
  done (took 960.667223942 seconds)
done (took 962.588508365 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.75541361 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.749683897 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.73191388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.753361243 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.846014966 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.778600065 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.747090858 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.737425736 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.782309846 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.780495353 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.729399134 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.775747584 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.73290486 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.734243891 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.733353568 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.747462771 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.041900976 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.763266335 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.751163435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.745892816 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.752196204 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.728307483 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.781458886 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.778460679 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.737562199 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.736496501 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.736730754 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.75089626 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.84281407 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.73635208 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.738204196 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.745791124 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.046241422 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.759811609 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.728969378 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.751459046 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.745096614 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.744554947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.736763166 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.766789462 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.131158592 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.772230229 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.733919219 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.733079988 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.734376863 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.740730309 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.733173473 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.744386243 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.749143981 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.749232711 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.124574023 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.78823337 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.73601663 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.733754924 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.747073804 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.734160792 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.738020568 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.749899598 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.753401323 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.750138428 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.029250658 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.769726729 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.738474268 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.75303167 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.743237646 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.159339446 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.771182129 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.740877605 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.132270847 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.779961984 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.161700419 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.785308819 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.737198821 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.74974008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.768586232 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.045708062 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.763727836 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.735153863 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.744863533 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.733561899 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.750776716 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750168318 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.740005642 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.736125536 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.751106974 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.781369705 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.7497998 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.73596641 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.747540672 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.756575345 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.746213212 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.750837174 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.743497199 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.737826311 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.750036143 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.740543261 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.739101926 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.738936399 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.740498268 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.749785106 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.130513614 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.790890961 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.73504804 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.736779197 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.73661816 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.752589183 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.130799038 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.775746341 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.761688079 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.787805262 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.738755644 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.032027874 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.769698645 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.754084017 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.748756349 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.739133691 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.735349066 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.03136498 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.157573882 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.791601112 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.738171724 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.735806044 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.753125578 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.740107096 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.733777439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.048299089 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.769763221 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756410439 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.859126869 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.751855808 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.771825509 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.734655946 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.741811618 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.786235492 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.753124624 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.770763339 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.745003496 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754194905 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.755995088 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.735080154 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.750789246 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.751764293 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.738369735 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.748826615 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.735051802 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.786768342 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.754825094 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.75646358 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.760661883 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.861201896 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.737697419 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.034261681 seconds)
done (took 273.576791928 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.816550153 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.736315683 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.827782676 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.735667714 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.829861679 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.812054215 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.738388228 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.738316272 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.736885966 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.222150138 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.73786543 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.743805179 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.735581897 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.736836255 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.808635756 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.739397772 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.735663309 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.170063819 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.73736295 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.814327633 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.737036317 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.738123896 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.738206336 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.24317346 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.735883568 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.737348168 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.817330936 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.741398055 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.221346351 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.740258968 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.736748883 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.219706741 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.817992578 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.76531634 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.745742165 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.744487074 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.829948352 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.74962187 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.805606723 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.808700575 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.836358967 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.770180589 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.737305588 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.737720543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.740955716 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.739147287 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.738378107 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.770130808 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.737449833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.745696264 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.170930102 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.744128381 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.74409904 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.739614222 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.738597869 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.769326612 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.738734581 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.738435449 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.818758599 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.741107822 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.80838228 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.243477919 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.225583365 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.738909393 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.737803012 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.740903966 seconds)
  done (took 176.491143941 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.803749904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.817077086 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.80347395 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.745953494 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.787787233 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.806633159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.743966068 seconds)
  done (took 14.178265781 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.744690479 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.737683823 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.78692796 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.788179059 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.739650917 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.895276264 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.739151803 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.750710381 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.744357303 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.765073981 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.742038255 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.738250324 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.749055459 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.739176716 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.789980119 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.751058288 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.856373293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.74092152 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.740919257 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.888242082 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.745258632 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.748977866 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.763093537 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.751994796 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.738735275 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.745577579 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.307425773 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.740182 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.739186195 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.739329837 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.740168612 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.779849914 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.738121696 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.74005754 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.740544306 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854063067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.740159924 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.739515301 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.73940189 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.740306394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.741733772 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.740884755 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.742788091 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.743067813 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.743584238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.766064778 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.742132586 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.741026118 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.740991126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.741241423 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.763366757 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.739452707 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.741142808 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.745023979 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.784107888 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.748673261 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.742038217 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.741157196 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.741750364 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.742652236 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.889272006 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.791175164 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.74264807 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.790778927 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.741798299 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.739673795 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.74096323 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.742234574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.829264889 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.740603725 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.790723501 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.74041742 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.899348923 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.764581433 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.742038358 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.747481394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.746999674 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.742913531 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.743300363 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.752185696 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.744034384 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.745772522 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.752679609 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.753166225 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.744018056 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856985106 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885467549 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.747137252 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.746432192 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.755316826 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.742836294 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.78902517 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.743728889 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.745752123 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.802186353 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.859897032 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.774470386 seconds)
  done (took 193.212450509 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.754525132 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.748813439 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.747473454 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.760908394 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.746421002 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.74525763 seconds)
  done (took 12.179119368 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.750653829 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.748317345 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.744650772 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.745886916 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.747219509 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.744487271 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.744385665 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.746011432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.749241342 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.744621038 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.746269087 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.745832412 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.746926158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.746154202 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.744155173 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.744558917 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.746026671 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.747938631 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.748192462 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.74484809 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.996577575 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.744757008 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748474135 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.751568523 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.751236726 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.743699125 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.758943704 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.746699454 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.746274533 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.755283283 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.750264653 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.749766194 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.750400368 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.749988732 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.749898412 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.749243922 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.751871769 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.74692542 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.747832909 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.746755732 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.748558817 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.747118561 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.746273921 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.747788129 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.747543293 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.75483507 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.750740239 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.758758255 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.747572291 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.746813455 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.74698834 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.745375108 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.746390791 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.745582513 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.751993411 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.752929722 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.753601236 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.748523072 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.748173758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.751862575 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.754486316 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.748969539 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.748518491 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.754545094 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.757275827 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.748568378 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.750040808 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.752560571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749032213 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.750680653 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.750165288 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.747008132 seconds)
  done (took 128.840703372 seconds)
done (took 526.589590976 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.005836435 seconds)
  done (took 8.682381168 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.831175225 seconds)
  done (took 8.571548688 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.189773756 seconds)
  done (took 9.871134721 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.769804274 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.778227228 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.760086363 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.751599775 seconds)
  done (took 28.762440033 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.009376336 seconds)
  done (took 8.687692817 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.770287328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.747370278 seconds)
  done (took 15.266321201 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.771086901 seconds)
  done (took 8.449799129 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.045170636 seconds)
  done (took 8.731515524 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.752712797 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.779365381 seconds)
  done (took 15.235605077 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.74688566 seconds)
  done (took 8.426064035 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.878859935 seconds)
  done (took 9.663233048 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.763550464 seconds)
  done (took 8.514114281 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.777362439 seconds)
  done (took 8.456157782 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.773522419 seconds)
  done (took 8.451702967 seconds)
done (took 157.450046491 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.748030007 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.743898605 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.744850327 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.743275233 seconds)
  done (took 28.658737049 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.778428256 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.778957236 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.781021332 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.789806325 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.78122786 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.777954681 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.773170065 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.770824 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.789810805 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.780970398 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.781945255 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.781839912 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.777905249 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.77289296 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.783376319 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.781233466 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.790149161 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.780707811 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.773159368 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.7818978 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.748764466 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.790564001 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.781057038 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.747084679 seconds)
  done (took 44.354014208 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.940203678 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.818512107 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.900614903 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.801314089 seconds)
  done (took 9.141224085 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.799888272 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.802259996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.810278308 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.850370015 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.874574237 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.809619015 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.772417531 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.767617263 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.754676439 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.799402108 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.875712556 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.796377912 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.889200569 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.749073244 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.973519484 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.747660478 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.749461509 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.799161336 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.851951769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.864166564 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.747246755 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.798912944 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.803075941 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.796596745 seconds)
  done (took 45.162863298 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.749012937 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.75595885 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.756417486 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.747550774 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.749880502 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.751967701 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.756084728 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.754535104 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.772664814 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.752150439 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.749111271 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.75161748 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.756210806 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.74983421 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.748805207 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.763600076 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.764369509 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.751050632 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.754528954 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.757603569 seconds)
  done (took 36.774285331 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.749329647 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.595871913 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.094617921 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.00044246 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.748953112 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.747675394 seconds)
  done (took 30.621792453 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.761886947 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.757411311 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.750406021 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.804883814 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.889674599 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.760469372 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.75257934 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.760941458 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.795406643 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.815355627 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.770513939 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.777717859 seconds)
  done (took 23.081389285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.751013697 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.754508143 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.751445073 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.763198822 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.758771494 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.761592716 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.756552787 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.749479191 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.762774635 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.772344302 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.758007007 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.759669915 seconds)
  done (took 42.787176348 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827905712 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.625338108 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201580849 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214912193 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274441862 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951827953 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.748467212 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.837474986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.750827335 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021367239 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.15126236 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960238222 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.994837152 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443812592 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.754305181 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.230913559 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042589486 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974706695 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782315608 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397290723 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861017897 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.222738627 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.449207307 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.865273943 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955126579 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.875704466 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.010196857 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.706534156 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802550403 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759318 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762227259 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.755249343 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025138161 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874839079 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826197963 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759242864 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.167558543 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.459063104 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.763909657 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.451237016 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.311121803 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877070935 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758459084 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753173437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.681592634 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.21705771 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844163387 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.759665968 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.459371995 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.754832641 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.762800657 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829759158 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.758585162 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.563909107 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441577999 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022485077 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.753841675 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757541971 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318633801 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775835857 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315765238 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.690079487 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.846754734 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.446477904 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217299537 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.913349759 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.756776558 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758198551 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680696357 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.448405681 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871996463 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889879266 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.772948641 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395631216 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051797378 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.206109788 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811063651 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035676262 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50150015 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.688204609 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970538374 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712612582 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68436147 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.588472692 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.682344684 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974929625 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788717967 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.35950315 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790840834 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.839693153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.761242269 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767968237 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757902539 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970575372 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.652933088 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757927468 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.071497584 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011449319 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774513161 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843464292 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.688790599 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.759418662 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001981421 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.961915812 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.944642854 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.239021438 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846960398 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.651922147 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.77040476 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.639189039 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.76763344 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031450072 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822890899 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781415005 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877965736 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.699269214 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009818761 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.678405376 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.857619556 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.141134607 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997027476 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.103714905 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005771389 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819340624 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.764463012 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.758896441 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.460856233 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368622755 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.973615416 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.772628243 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.19904357 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.765439263 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.760938913 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691117571 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.378751929 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.150564414 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.84458304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97360482 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.670546087 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033207774 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685574851 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895922811 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.756699858 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.971567656 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.411797982 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.845622066 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006892896 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949011428 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.940364954 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768753809 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773204211 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852961418 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777218993 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.128565728 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006701585 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.760530884 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.762758919 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.464277907 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.816592252 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763206894 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.761815889 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288069158 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038956178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.784235704 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.764190873 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635370443 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.776117584 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822869852 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763286061 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762065848 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.274674348 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261140105 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.765214167 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.401761494 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974733716 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761828896 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.443716582 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947731691 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.76820904 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030896854 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824790783 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.68371498 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.456458458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.458191295 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760560218 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.683628206 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.759395447 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760683009 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763002401 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.945724268 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040040704 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814313146 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.398663959 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.867579704 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76418082 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.760459776 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759066416 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.273386088 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791847874 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.211271739 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.865647866 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887307788 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.770624363 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.683850488 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.761838338 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76019663 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.760679536 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.706508519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810376529 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.403551638 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967617889 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00831043 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.163867519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767970815 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.408685481 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.87994657 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.775133028 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.086307667 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.242793499 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.857578294 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829086524 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.767030881 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.399278123 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493148101 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3246639 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057655795 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084066687 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113501749 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.107265952 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077159233 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.848281024 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98693694 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.283909032 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818562927 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849336744 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696497799 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776779776 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.41589386 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114852204 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772619505 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979448209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052874141 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.156830076 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897788992 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965425003 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791020961 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.520149881 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779563831 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.297797889 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778573975 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.231543117 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968413111 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844678613 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.09165936 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844926715 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.762289445 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106432006 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805483934 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.46624651 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113141516 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.163746163 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.265685539 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989030771 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.766140308 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.204467902 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119240745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.904549518 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.877501997 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690201549 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.76771912 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.769156643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.775416583 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.734140197 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.604284786 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.006407268 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768412312 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989550496 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.830020599 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126286806 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.69152689 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.76545547 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764335118 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014561039 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395022791 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912464224 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.016662043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.332968939 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771158755 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.690189464 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690148366 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.464298012 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.765699839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728780139 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981696625 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.867960538 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441680074 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.093388183 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065661083 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005869934 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.775087198 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038404719 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040594726 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.25548464 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783654639 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.861537861 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.101748142 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.493386194 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.977968567 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990998255 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295143289 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.981636306 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215294693 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.737265651 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.764656722 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970701294 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.979971692 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.165665545 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940003885 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.475286714 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.776909387 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131857662 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827061877 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.167232809 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954845783 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.850877396 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772273377 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842751096 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768301625 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.770427732 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.77059367 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77743542 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.169804303 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890622048 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.779912102 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843345826 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811591767 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.342711757 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.774051071 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040215275 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127718175 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104439146 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83136269 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.765769486 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774833187 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692453929 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898703616 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.205583488 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041681659 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.887105029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.901295665 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788897653 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.142018196 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.993651719 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068098578 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040311654 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.651445626 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354701006 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.881004061 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.982877939 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772299586 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.970269257 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990568264 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077249938 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327828145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.843625186 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94880449 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039329569 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126825562 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768525159 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348174738 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.775979353 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173010254 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.80243211 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.173909609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024453743 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771642958 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88712643 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770759128 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.96624205 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.218078483 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416318633 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115325918 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628033095 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771380597 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04568908 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102159219 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07546916 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845603684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773917058 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.458555033 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900267002 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.662140606 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.983784662 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.769099147 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972381852 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.478681158 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.773062896 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046055465 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074055425 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.770226498 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.681375703 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80205224 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.772285696 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983021308 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98793398 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015534569 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773366464 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.770676409 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.577712645 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047597559 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832763196 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697243293 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.771610796 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814368212 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996802164 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788042476 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.284913196 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.470788856 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061809876 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.677966332 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787164235 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.125151235 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144363424 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108885903 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.297013524 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994955965 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.323249474 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.556849804 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137819092 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.77293678 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.114691328 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142771688 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.771767683 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.222212819 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87285938 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.045180693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096083748 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.780176451 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4910102 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.805379319 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985737647 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.129510385 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700742277 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777438839 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.818862599 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.772604832 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.791042945 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781537427 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.715226509 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.163800626 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.603608106 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32812081 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.774491159 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.841655175 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.162675131 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.254814039 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870504406 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788555757 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780868591 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.485040688 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.05932819 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015115873 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.228160792 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.861694021 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.774532649 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772271909 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691628413 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.9555252 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.959613466 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069239337 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.067370677 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.873738689 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774356675 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.980532547 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978546324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.189999359 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908923424 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846940117 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879620786 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.712726493 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478297411 seconds)
  done (took 1608.645042064 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798744882 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.801347417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.788299631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.849677482 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.790597935 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.794197851 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.822958517 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87196936 seconds)
  done (took 56.224876551 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.780211357 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.941100633 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.783889512 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.778301692 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.783104221 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.781825548 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.938372893 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.790989188 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.78346257 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.784261978 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.780255502 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.778538006 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.063080494 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.800917584 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.778737844 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.235912245 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.783008048 seconds)
  done (took 73.08798275 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.797147627 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.221611824 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.816729387 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.782658454 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.849437324 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.795937961 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.864271972 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.8414367 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.784824689 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.031974612 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.082790177 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.807710716 seconds)
  done (took 89.390110489 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.794174421 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.783222436 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.782676525 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.784341197 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.783063817 seconds)
  done (took 10.649598815 seconds)
done (took 2100.277260907 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.012175173 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.972916525 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.02965615 seconds)
  done (took 5.716642482 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.925989596 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.984015825 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.091600473 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.09506918 seconds)
  done (took 9.818087004 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.088307679 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.155946671 seconds)
  done (took 5.958840439 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.107263131 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.803499163 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.16076906 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.788122383 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.789024193 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.790444754 seconds)
  done (took 22.089144556 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.78677787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.787072913 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.787123776 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.786488073 seconds)
  done (took 8.865074207 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.785213419 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.488463096 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.786580165 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.796968908 seconds)
  done (took 20.574817586 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.934356811 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.902811966 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.929515465 seconds)
  done (took 7.483837695 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.007280144 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.583250355 seconds)
  done (took 6.30661219 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.944582211 seconds)
  done (took 3.661034257 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.815160754 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.055277311 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.272757432 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.304007601 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372030302 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.603663739 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.113234368 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.006803461 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.223850505 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.232914522 seconds)
  done (took 23.717304927 seconds)
done (took 128.989860533 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.126482497 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.816245187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.990232231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.138686333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.031161963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.987970402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.994616029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.12696159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.819969756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.806121947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.138408605 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.029455874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.941678019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.806684379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.945547143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.810014111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.028554581 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.15123452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.826362568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.042869704 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.001933553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.784917416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.979835682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.799659802 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.026376918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940651621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.329773661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.81351086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.963710913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.341906176 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947382371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.180368574 seconds)
  done (took 165.388523469 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.786606548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.786253056 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.787383554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.787666628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.251605972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.788289677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.789590731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.787035573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.183092547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.182363656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.788518456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.233782896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.789319882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.787919441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.790578769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.787901396 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.33582796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.789218048 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.784839336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.78748527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.789329137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.08109825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.789171441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.084981765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.332065493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790425922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.786950262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.787818614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.789742886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.786332991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.789778193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.786717369 seconds)
  done (took 206.320764457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.784189573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790478664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.787923891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.788423509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.787867956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.786741018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.789811318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.785584012 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404201398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393327738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.789370154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.789032387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.792560642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.78900242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.788451671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.787337685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.786813362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.785388107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.790256409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.790800578 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.792744933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.489914396 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.787505195 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.494306849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.790143224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.786238394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.788513653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790497506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.79018577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.789873316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.78918789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.788354419 seconds)
  done (took 217.584568959 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.034460504 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.789177164 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.790688445 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.700267 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.790978898 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.788006611 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.778970434 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.0363155 seconds)
  done (took 18.429367602 seconds)
done (took 609.450187436 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.138347458 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.979905626 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.962387379 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.814766395 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.057096016 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.858973622 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.811980584 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.873716518 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.636072469 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.884473817 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48710786 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.833776187 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.576810888 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.836565566 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.933437574 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.864291998 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.415628489 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.521471584 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.985671127 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.876436943 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.986618459 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.718184817 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.888704658 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.64851059 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.60232285 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.771049392 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.840694023 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.417156035 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.821445449 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.966186565 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.462371482 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.078522537 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.826990999 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.809608951 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.863411035 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.841094966 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.025972372 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.822969679 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.933503405 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.510871895 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.868249292 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.529976186 seconds)
  done (took 99.303386154 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.802561821 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.798013074 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.798702441 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.799281766 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.806456174 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.798997726 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.798322627 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.797494447 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.79863341 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.796904239 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.796276057 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.805196748 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.794555452 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.806125924 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.797061782 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.796041736 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.796331347 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.806316994 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.79846094 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.796843317 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.798026222 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.799666136 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.796166458 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.799893671 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.798658943 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.799734436 seconds)
  done (took 48.517878962 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.793520246 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.961945538 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.032702903 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.81552086 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.795224859 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.79832548 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.813784238 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.79943479 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.799159698 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.79715344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.901979072 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.801171574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.814637588 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.037563465 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.814484537 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.794857032 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.793887314 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.796140821 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.971879134 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.812371179 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.815611509 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.797993165 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.812146115 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.808494557 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.795886443 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.794413109 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.79989843 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.239972588 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.802372947 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.900987667 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.842468815 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.824497515 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.187925556 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.044415228 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.851450089 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.807070071 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.7965219 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904262101 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.801682926 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.79569086 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.81360054 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.801322686 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.036661645 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.324301526 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.811680399 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.79522258 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.251587098 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.912811369 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.838099988 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.807716737 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038208019 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.815190077 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.79703503 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.796573331 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.834638399 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.803950778 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.797355155 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.107493793 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.809430283 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.815615552 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.799482426 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.796611521 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.978860955 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.807027471 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.962977766 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.80720958 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.803443453 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.797357039 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.037331631 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.81503272 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.337108315 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.811890668 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.794403835 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.904545231 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.970139943 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.277743976 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.809713236 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975761732 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.203357323 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.822002858 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.804578191 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.231026518 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.826980182 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.804361837 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.797310633 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.799444903 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.798019378 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.841885314 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.811104012 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.245879979 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.341569556 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.124867412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.824311641 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.811297473 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.79655054 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.105647901 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.804559933 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.795771083 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.028352102 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.343817779 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.813880369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.804432058 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.317363846 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.817584888 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.81766517 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.808545169 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.041487564 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.816560036 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.839531367 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.796644766 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.805354713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.799401635 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.815218039 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.803682601 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.797155824 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.310788514 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.924795526 seconds)
  done (took 223.681528442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.79943215 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.801665841 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.801028774 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.798806726 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.797166534 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.799843402 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.796633646 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.796852745 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.795601383 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.7956733 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.796121922 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.795577971 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.799152123 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.797491476 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.805400502 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.798409983 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.401561459 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.796332698 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.799561483 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.795924081 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.447366501 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.803449412 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.799013337 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.800896356 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.798714783 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.800520465 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.797255848 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.806427773 seconds)
  done (took 165.350248509 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.799857067 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.909870944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.817220471 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.82774515 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.807857896 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.799150623 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.895431433 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.816405501 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.80463906 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.798381168 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.799090848 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.859983545 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.80903375 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.898284718 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.829788215 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.907301601 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.902579152 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.806639514 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.80064296 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.798881163 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.828343443 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.807504629 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.860321235 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.919607803 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.817770514 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.91040779 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.816831365 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.800238303 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.798755815 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.912017327 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.815920485 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.861103713 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.830722066 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.817704159 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.917344166 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.916004305 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.904484825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.904629149 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.807173504 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.800789241 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.800227626 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.802198756 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.913086335 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.819545964 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.801988743 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.915569494 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.81890922 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.799406735 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.802234938 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.799313591 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.814903225 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.818294458 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.863839754 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.92840256 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.836343297 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.825796594 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.900082589 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.930485923 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.8019455 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.897811804 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.806727744 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.913629011 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.819711537 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.800960991 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.801026415 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.805352699 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.830421133 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.907994681 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.905238764 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.808385288 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.899420137 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.837871306 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.81042798 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.804586207 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.804233627 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.914933863 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.917084448 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.835696307 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.838263519 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.833183078 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.813001156 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.803950413 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.803409255 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.821889897 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.805846239 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.917679121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.919890581 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.80904391 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.8034117 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.802571792 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.80315688 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.82762141 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.924987066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.83765412 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.90987883 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.870346197 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.87744528 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.819089689 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.81715328 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.805846197 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.864686967 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.814704176 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.816284218 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.101152074 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.862550981 seconds)
  done (took 195.506814261 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.169711938 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.853909613 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.85835335 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.117387804 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.159233624 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.726015695 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.850417808 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.850395118 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.873545674 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.035374055 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.934898896 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.875065032 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.840089647 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.827182292 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.850736608 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.87623939 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.863141175 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.191583657 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.07179111 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.991644115 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.839125932 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.152285345 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.17075153 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.455976508 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.898961976 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.247296614 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.414422467 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.994397984 seconds)
  done (took 59.729289616 seconds)
done (took 793.810156289 seconds)
SAVING RESULT...
DONE!
